Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:6476
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 39493 invoked from network); 5 Jul 2001 03:43:32 -0000
Received: from dubravka.kbx.de (HELO pause.perl.org) (root@212.40.160.59)
  by onion.valueclick.com with SMTP; 5 Jul 2001 03:43:32 -0000
Received: (from nobody@localhost)
	by pause.perl.org (8.9.3/8.9.3) id FAA01582;
	Thu, 5 Jul 2001 05:40:38 +0200
Date: Thu, 5 Jul 2001 05:40:38 +0200
Message-ID: <200107050340.FAA01582@pause.perl.org>
Reply-To: modules@perl.org
Subject: Module submission Tie::Concurrent
To: modules@perl.org
X-Spam-Rating: onion.valueclick.com 1.6.2 0/1000/N
Approved: news@nntp.perl.org
From: upload@p11.speed-link.de ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Tie::Concurrent
  DSLIP:       bdprp
  description: Retie a hash when reading/writing.
  userid:      GWYN (Philip Gwyn)
  chapterid:    6 (Data_Type_Utilities)
  communities:

  similar:

  rationale:

    GDBM_File et al lock the file they tie to when they do their work.
    While this is a Good Thing, it also means that only one process can
    keep a tied hash going at once. This module solves the problem by
    doing a READER tie when a FETCH is done and a WRITER tie when a
    STORE is done. The rest of the time, the hash isn't tied to the
    file, so no locks are set. Yes, it makes it MUCH MUCH slower. So
    only use it on infrequently accessed hashes.

    -Philip

  enteredby:   GWYN (Philip Gwyn)
  enteredon:   Thu Jul  5 03:40:38 2001 GMT

The resulting entry would be:

Tie::
::Concurrent      bdprp Retie a hash when reading/writing.           GWYN


Thanks for registering,
The Pause Team

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=e0000000_332755d87d4378f9&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=e0000000_332755d87d4378f9&SUBMIT_pause99_add_mod_insertit=1
