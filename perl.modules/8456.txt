Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:8456
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 81492 invoked from network); 24 Oct 2001 22:02:51 -0000
Received: from dubravka.kbx.de (HELO pause.perl.org) (root@212.40.160.59)
  by onion.valueclick.com with SMTP; 24 Oct 2001 22:02:51 -0000
Received: (from nobody@localhost)
	by pause.perl.org (8.9.3/8.9.3) id AAA08916;
	Thu, 25 Oct 2001 00:02:49 +0200
Date: Thu, 25 Oct 2001 00:02:49 +0200
Message-ID: <200110242202.AAA08916@pause.perl.org>
Reply-To: modules@perl.org
Subject: Module submission Tie::Restore
To: modules@perl.org, robwalker@cpan.org
X-Spam-Rating: onion.valueclick.com 1.6.2 0/1000/N
Approved: news@nntp.perl.org
From: upload@p11.speed-link.de ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Tie::Restore
  DSLIP:       bdprp
  description: allows for restoration of ties
  userid:      ROBWALKER (Robby Walker)
  chapterid:    6 (Data_Type_Utilities)
  communities:
    comp.lang.perl.modules

  similar:

  rationale:

    Tie::Restore provides the opposite of the 'tied' function. That is,
    given a %hash tied to $object, we can retrieve $object by saying:

    $object = tied %hash;

    To do the opposite is not possible, however, without Tie::Restore.
    With Tie::Restore it is simple:

    tie %hash, 'Tie::Restore', $object;

    Note: Although I use hashes in the above example, Tie::Restore can
    be used to restore ties to any tieable type (scalar, array, hash,
    filehandle)

    Though this module is very simple, I find that I use it very
    frequently.

  enteredby:   ROBWALKER (Robby Walker)
  enteredon:   Wed Oct 24 22:02:48 2001 GMT

The resulting entry would be:

Tie::
::Restore         bdprp allows for restoration of ties               ROBWALKER


Thanks for registering,
The Pause Team

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=6d100000_e557aa3d15cf8897&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=6d100000_e557aa3d15cf8897&SUBMIT_pause99_add_mod_insertit=1
