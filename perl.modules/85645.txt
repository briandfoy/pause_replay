Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:85645
Return-Path: <john@washburnresearch.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Delivered-To: moderator for modules@perl.org
Received: (qmail 761 invoked from network); 14 Apr 2013 23:11:33 -0000
Received: from x1.develooper.com (207.171.7.70)
  by x6.develooper.com with SMTP; 14 Apr 2013 23:11:33 -0000
Received: (qmail 13497 invoked by uid 225); 14 Apr 2013 23:11:33 -0000
Delivered-To: modules@perl.org
Received: (qmail 13493 invoked by alias); 14 Apr 2013 23:11:33 -0000
X-Spam-Status: No, hits=0.1 required=8.0
	tests=BAYES_00,DEAR_SOMETHING,HTML_MESSAGE,SPF_HELO_PASS
X-Spam-Check-By: la.mx.develooper.com
Received: from sunshine.wznoc.com (HELO sunshine.wznoc.com) (184.171.247.137)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Sun, 14 Apr 2013 16:11:20 -0700
Received: from cpe-72-135-250-37.wi.res.rr.com ([72.135.250.37]:1732 helo=WashburnMain)
	by sunshine.wznoc.com with esmtpa (Exim 4.80)
	(envelope-from <john@washburnresearch.org>)
	id 1URW4n-0001jm-LD; Sun, 14 Apr 2013 19:11:14 -0400
Reply-To: <john@washburnresearch.org>
To: <modules@perl.org>
Cc: <limaone@cpan.org>,
	<ron@savage.net.au>
Subject: Adoption of CPAN String::LCSS namespace by someone
Date: Sun, 14 Apr 2013 18:11:32 -0500
Organization: John Washburn
Message-ID: <000001ce3965$67afaed0$370f0c70$@org>
MIME-Version: 1.0
Content-Type: multipart/alternative;
	boundary="----=_NextPart_000_0001_01CE393B.7ED9A6D0"
X-Mailer: Microsoft Office Outlook 12.0
Thread-Index: Ac3oN8M8iNLhWCncRQSzpqRqS6FwcwAB+T1QAA8celAUOJgT0A==
Content-Language: en-us
X-AntiAbuse: This header was added to track abuse, please include it with any abuse report
X-AntiAbuse: Primary Hostname - sunshine.wznoc.com
X-AntiAbuse: Original Domain - perl.org
X-AntiAbuse: Originator/Caller UID/GID - [47 12] / [47 12]
X-AntiAbuse: Sender Address Domain - washburnresearch.org
X-Source: 
X-Source-Args: 
X-Source-Dir: 
X-Virus-Checked: Checked
Approved: news@nntp.perl.org
From: john@washburnresearch.org ("John Washburn")

------=_NextPart_000_0001_01CE393B.7ED9A6D0
Content-Type: text/plain;
	charset="us-ascii"
Content-Transfer-Encoding: 7bit

Dear Sir/Madam:

 

How do I or Markus Riester go about adopting the namespace: String::LCSS
<http://search.cpan.org/~dyacob/String-LCSS-0.12/lib/String/LCSS.pm> , so
that the name space can be 

1)      Populated with working code

2)      Managed by someone not lost in the wind.

 

The most humorous defect against the code in this namespace is:

35736 lcss('b', 'ab') fails
<https://rt.cpan.org/Public/Bug/Display.html?id=35736> .

 

The candidates for adoption of this name space are either myself or Markus
Riester, author of: String::LCSS_XS
<http://search.cpan.org/~limaone/String-LCSS_XS-1.2/lib/String/LCSS_XS.pm> .

 

More generally, there needs to be some framework similar to the Dutch legal
concept from the water boards "The Law of the Shovel" for CPAN name spaces.
People could lose their property interest in a polder if they did not
maintain the dike that kept the polder dry.  The water board had the
authority to transfer title of a polder to the person(s) putting in the
spade work to keep the dike  sound and the polder dry.  By design, this is
slow process similar to adverse possession in English law, but the concept
is applicable to CPAN name spaces.  Interest in the property (e.g. the
polder or the CPAN namespace) involves on-going efforts to maintain the
property (the land in polder or the code in the CPAN namespace).

 

The name space, String::LCSS
<http://search.cpan.org/~dyacob/String-LCSS-0.12/lib/String/LCSS.pm> , has
become abandoned.  Please begin some proceedings remedy this.  At a minimum
there should be a process that does the following:

1)      Attempt to find Daniel Yacob

2)      If found, request that he relinquish the name space to someone
willing to maintain the space.

3)      If, after a long time of diligent searching, Daniel Yacob is still
not found, then proceeding for transferring the CPAN name space should begin

4)      Publish on String::LCSS that the namespace has been declared
abandoned.

5)      Request of the CPAN community volunteers who are willing t maintain
the name space.

6)      If more than one volunteer emerges, then create some mechanism so
the PERL community can decide which volunteer has the better candidate code
for the name space.

7)      Re-assign the namespace to the new author.

 

 

From: John Washburn [mailto:john@washburnresearch.org] 
Sent: Tuesday, January 01, 2013 6:03 PM
To: 'ron@savage.net.au'
Subject: CPAN namespace question for String::LCSS

 

Dear Mr. Savage:

 

Below is the email I sent to Stephen Woodbridge on my web-crawler.  I wanted
to ask you a question regarding my post script (highlighted in brick red
below) and this statement you made in a in a parallel email:

As for a namespace, there is a long history in Perl (i.e. on CPAN) to add an
X to the primary module's name, giving GedcomX::* as the prefix for all such
modules. There's no doubt in my mind this is the best course.

 

And since I've recently become one of the admins for CPAN itself, I do take
module naming very seriously.

 

Of course this is a bit confusing because we've just been discussing GEDCOM
X. Sigh.

 

So - what to do?

 

Here's what I suggest: Last year I registered the new namespace
Genealogy::*, so:

 

1) For modules using, or already based on, Gedcom.pm, I'd call them
GedcomX::*.

 

2) For brand new modules, e.g. implementing GEDCOM X, or not using
Gedcom.pm, e.g. me new parser we discussed on this list last year, I'd call
them Genealogy::* or (for GEDCOM X) Genealogy::GedcomX::*.

 

That way, we'd keep separate things separate.

 

Would an acceptable alternative to my problem with String::LCSS
<http://search.cpan.org/~dyacob/String-LCSS-0.12/lib/String/LCSS.pm>  be to
register the StringX::LCSS namespace and upload my pure perl LCSS
implementation to that namespace?  As you can see this particular name space
has been a problem for more than 7 years. See: Bug reports in RT
<https://rt.cpan.org/Public/Dist/Display.html?Name=String-LCSS>  and this
notice at the PerlMonks: Does String::LCSS work?
<http://www.perlmonks.org/?node_id=819398> .  All my efforts over the last 3
years to contact either Yacob or PAUSE
<http://www.cpan.org/misc/cpan-faq.html#How_adopt_module>  have been in
vain.  

 

Now that this irritant as returned to my attention I will make another
effort to adopt this name space as described on the PAUSE
<http://www.cpan.org/misc/cpan-faq.html#How_adopt_module>  section of the
CPAN FAQs <http://www.cpan.org/misc/cpan-faq.html>  before going the route
of creating a new StringX::LCSS namespace.

 

But I was looking for some guidance on this namespace issue.

1.  Should I pursue creating the StringX::LCSS namespace as a stop gap to
have working code in the CPAN while the longer term solution (i.e. adopt
String::LCSS) proceeds?

2.  If I create StringX::LCSS and then I (or Lima One) get to adopt
String::LCSS, then can I (we) collapse StringX::LCSS into String:LCSS so
future references to StringX:LCSS redirect to String::LCSS?

 

Thanks for any time you might give to this non-GEDCOM issue.

 

John Washburn

 

-----Original Message-----
From: John Washburn [mailto:john@washburnresearch.org] 
Sent: Tuesday, January 01, 2013 11:15 AM
To: 'Stephen Woodbridge'
Subject: e-FamilyTreeSpider perl programming

 

Dear Stephen:

 

The promised code is attached.

 

The perl program, e-FamilyTreeSpider-GedCom.pl, reads the INI file,
e-FamilyTreeSpider.ini, for direction of how to walk the HTML files of the
site.  The INI file designates such things as:

1. Where to store the work in progress files.

2. Where to store the GECOM

3. Append or re-create the GEDCOM upon execution.  This is used for
debugging 4. Where to store the local copies of the HTML files.  The local
copying speeds execution as any given HTML page may be read several times as
parents, children and sibling pages are processed.

 

The whole INI file is read into a hash that is then used by the perl
programming proper.

 

String::LCSS stands for Longest Common Sub-Sequence (or Longest Common
Sub-String) is in the CPAN. But what is in the CPAN in this namespace is a
broken piece of crap.  Included in the attached archive is a working version
of the LCSS for either subsequences or substrings.  It is installable, but
just be careful that your local working copy (installed from this archive)
is not overwritten with the broken non-working copy from the CPAN.

 

The LCSS algorithm is used when the HTML page is used to "improve" the
current GEDCOM entry.  The idea is to take the string version with the
longest common subsequence as the "better" version of the field data.  This
"improvement" approach may be unnecessary for your application.

 

Have fun.

 

John Washburn

 

P.S.

As an aside if you know how to replace this namespace, String::LCSS, with a
working version?  There are two of us that have been trying to get working
code into that namespace.  All emails to the perl foundation go unanswered
as have all the defect reports against Sting::LCSS.  Is there a way to have
the perl foundation declare a namespace "abandoned" and thus open it up to
people who actually want to share working code in the name space?

 

 

-----Original Message-----

From: Stephen Woodbridge [ <mailto:woodbri@swoodbridge.com>
mailto:woodbri@swoodbridge.com]

Sent: Tuesday, January 01, 2013 9:49 AM

To:  <mailto:john@washburnresearch.org> john@washburnresearch.org

Cc:  <mailto:perl-gedcom@perl.org> perl-gedcom@perl.org; 'Ron Savage'

Subject: Re: Gedcom.pm 1.17 released

 

Hi John,

 

Yes, I would love to get that and I'm willing to share my code once I have
time to fix the most critical issues.

 

Maybe Paul would like to create a "contrib" directory in the repository that
could be used to make code like this available. I guess we could all make
public repos on github if we have code to contribute but I think that makes
it harder to find it. And/or we could create wiki

page(s) that describes these contrib items and how to use them.

 

Anyway, please send your code when you get a chance. It might be a month 

+- before I get to look at it and give it a try.

 

Thanks,

   -Steve

 

On 1/1/2013 10:37 AM, John Washburn wrote:

> Dear Stephen:

> 

> I have a perl program that walks the HTML pages of e-FamilyTree.net 

> and pipes it out to a GEDCOM file.  It is also interruptible in that 

> you can run the program for a while, stop it and upon restart it will 

> pick up where the search left off.

> 

> It uses the HTML:Tree builder and the wonderful look-down 

> functionality mentioned by Ron.  It also used Date::Manip quite heavily.

> 

> I would be happy to zip up the code and send the archive to you if you 

> are interested.  The code is a bit bloated because the code grew over 

> time and I had to add special cases for some of the errors in the 

> e-familynet HTML structure and to implement the 1-generation look ahead.

> 

> 

> -----Original Message-----

> From: Ron Savage [ <mailto:ron@savage.net.au> mailto:ron@savage.net.au]

> Sent: Saturday, December 29, 2012 10:06 PM

> To:  <mailto:perl-gedcom@perl.org> perl-gedcom@perl.org

> Subject: Re: Gedcom.pm 1.17 released

> 

> Hi Stephen

> 

> On 30/12/12 11:03, Stephen Woodbridge wrote:

>> On 12/29/2012 5:26 PM, Paul Johnson wrote:

> 

>> What I noticed was that the data way nicely tag in the HTML so I am 

>> writing a parser to read the HTML can generate a Gedcom file. I have 

>> the basics working, but I have to do more work on it to fix bugs and 

>> collect more of the data than I current am. I'm side tracked with 

>> work at the moment so it is on hold. When I'm done it will have 

>> generated a

>> 40K+ person Gedcom file. This should be able able to create a gedcom

>> from any "Second Site" generated website assuming it is similar to 

>> the link above. Or you can ask the site owner for a copy of the 

>> gedcom :), but this seemed like a worth challenge at the time.

> 

> Are you using HTML::TreeBuilder and the v-e-r-y nice look_down() method?

> 

> --

> Ron Savage

>  <http://savage.net.au/> http://savage.net.au/

> Ph: 0421 920 622

> -----

> No virus found in this message.

> Checked by AVG -  <http://www.avg.com> www.avg.com

> Version: 2013.0.2805 / Virus Database: 2637/5997 - Release Date: 

> 12/30/12

> 

 

-----

No virus found in this message.

Checked by AVG -  <http://www.avg.com> www.avg.com

Version: 2013.0.2805 / Virus Database: 2637/6001 - Release Date: 01/01/13


------=_NextPart_000_0001_01CE393B.7ED9A6D0
Content-Type: text/html;
	charset="us-ascii"
Content-Transfer-Encoding: quoted-printable

<html xmlns:v=3D"urn:schemas-microsoft-com:vml" =
xmlns:o=3D"urn:schemas-microsoft-com:office:office" =
xmlns:w=3D"urn:schemas-microsoft-com:office:word" =
xmlns:m=3D"http://schemas.microsoft.com/office/2004/12/omml" =
xmlns=3D"http://www.w3.org/TR/REC-html40"><head><meta =
http-equiv=3DContent-Type content=3D"text/html; =
charset=3Dus-ascii"><meta name=3DGenerator content=3D"Microsoft Word 12 =
(filtered medium)"><style><!--
/* Font Definitions */
@font-face
	{font-family:"Cambria Math";
	panose-1:2 4 5 3 5 4 6 3 2 4;}
@font-face
	{font-family:Calibri;
	panose-1:2 15 5 2 2 2 4 3 2 4;}
@font-face
	{font-family:Tahoma;
	panose-1:2 11 6 4 3 5 4 4 2 4;}
@font-face
	{font-family:Consolas;
	panose-1:2 11 6 9 2 2 4 3 2 4;}
/* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin:0in;
	margin-bottom:.0001pt;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
a:link, span.MsoHyperlink
	{mso-style-priority:99;
	color:blue;
	text-decoration:underline;}
a:visited, span.MsoHyperlinkFollowed
	{mso-style-priority:99;
	color:purple;
	text-decoration:underline;}
p.MsoPlainText, li.MsoPlainText, div.MsoPlainText
	{mso-style-priority:99;
	mso-style-link:"Plain Text Char";
	margin:0in;
	margin-bottom:.0001pt;
	font-size:10.5pt;
	font-family:Consolas;}
p.MsoAcetate, li.MsoAcetate, div.MsoAcetate
	{mso-style-priority:99;
	mso-style-link:"Balloon Text Char";
	margin:0in;
	margin-bottom:.0001pt;
	font-size:8.0pt;
	font-family:"Tahoma","sans-serif";}
p.MsoListParagraph, li.MsoListParagraph, div.MsoListParagraph
	{mso-style-priority:34;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:.5in;
	margin-bottom:.0001pt;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
span.PlainTextChar
	{mso-style-name:"Plain Text Char";
	mso-style-priority:99;
	mso-style-link:"Plain Text";
	font-family:Consolas;}
span.BalloonTextChar
	{mso-style-name:"Balloon Text Char";
	mso-style-priority:99;
	mso-style-link:"Balloon Text";
	font-family:"Tahoma","sans-serif";}
span.EmailStyle21
	{mso-style-type:personal-reply;
	font-family:"Calibri","sans-serif";
	color:#1F497D;}
.MsoChpDefault
	{mso-style-type:export-only;
	font-size:10.0pt;}
@page WordSection1
	{size:8.5in 11.0in;
	margin:1.0in 1.0in 1.0in 1.0in;}
div.WordSection1
	{page:WordSection1;}
/* List Definitions */
@list l0
	{mso-list-id:509679933;
	mso-list-type:hybrid;
	mso-list-template-ids:1779227982 67698705 67698713 67698715 67698703 =
67698713 67698715 67698703 67698713 67698715;}
@list l0:level1
	{mso-level-text:"%1\)";
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l1
	{mso-list-id:1041245876;
	mso-list-type:hybrid;
	mso-list-template-ids:-249021346 67698703 67698713 67698715 67698703 =
67698713 67698715 67698703 67698713 67698715;}
@list l1:level1
	{mso-level-tab-stop:none;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l1:level2
	{mso-level-tab-stop:1.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l1:level3
	{mso-level-tab-stop:1.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l1:level4
	{mso-level-tab-stop:2.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l1:level5
	{mso-level-tab-stop:2.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l1:level6
	{mso-level-tab-stop:3.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l1:level7
	{mso-level-tab-stop:3.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l1:level8
	{mso-level-tab-stop:4.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l1:level9
	{mso-level-tab-stop:4.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l2
	{mso-list-id:1517114899;
	mso-list-type:hybrid;
	mso-list-template-ids:1633304352 67698705 67698713 67698715 67698703 =
67698713 67698715 67698703 67698713 67698715;}
@list l2:level1
	{mso-level-text:"%1\)";
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	text-indent:-.25in;}
ol
	{margin-bottom:0in;}
ul
	{margin-bottom:0in;}
--></style><!--[if gte mso 9]><xml>
<o:shapedefaults v:ext=3D"edit" spidmax=3D"1026" />
</xml><![endif]--><!--[if gte mso 9]><xml>
<o:shapelayout v:ext=3D"edit">
<o:idmap v:ext=3D"edit" data=3D"1" />
</o:shapelayout></xml><![endif]--></head><body lang=3DEN-US link=3Dblue =
vlink=3Dpurple><div class=3DWordSection1><p class=3DMsoNormal><span =
style=3D'color:#1F497D'>Dear Sir/Madam:<o:p></o:p></span></p><p =
class=3DMsoNormal><span =
style=3D'color:#1F497D'><o:p>&nbsp;</o:p></span></p><p =
class=3DMsoNormal><span style=3D'color:#1F497D'>How do I or Markus =
Riester go about adopting the namespace: <a =
href=3D"http://search.cpan.org/~dyacob/String-LCSS-0.12/lib/String/LCSS.p=
m">String::LCSS</a>, so that the name space can be =
<o:p></o:p></span></p><p class=3DMsoListParagraph =
style=3D'text-indent:-.25in;mso-list:l0 level1 lfo3'><![if =
!supportLists]><span style=3D'color:#1F497D'><span =
style=3D'mso-list:Ignore'>1)<span style=3D'font:7.0pt "Times New =
Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =
</span></span></span><![endif]><span style=3D'color:#1F497D'>Populated =
with working code<o:p></o:p></span></p><p class=3DMsoListParagraph =
style=3D'text-indent:-.25in;mso-list:l0 level1 lfo3'><![if =
!supportLists]><span style=3D'color:#1F497D'><span =
style=3D'mso-list:Ignore'>2)<span style=3D'font:7.0pt "Times New =
Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =
</span></span></span><![endif]><span style=3D'color:#1F497D'>Managed by =
someone not lost in the wind.<o:p></o:p></span></p><p =
class=3DMsoNormal><span =
style=3D'color:#1F497D'><o:p>&nbsp;</o:p></span></p><p =
class=3DMsoNormal><span style=3D'color:#1F497D'>The most humorous defect =
against the code in this namespace is:<o:p></o:p></span></p><p =
class=3DMsoNormal><span style=3D'color:#1F497D'><a =
href=3D"https://rt.cpan.org/Public/Bug/Display.html?id=3D35736">35736 =
lcss('b', 'ab') fails</a>.<o:p></o:p></span></p><p =
class=3DMsoNormal><span =
style=3D'color:#1F497D'><o:p>&nbsp;</o:p></span></p><p =
class=3DMsoNormal><span style=3D'color:#1F497D'>The candidates for =
adoption of this name space are either myself or Markus Riester, author =
of: <a =
href=3D"http://search.cpan.org/~limaone/String-LCSS_XS-1.2/lib/String/LCS=
S_XS.pm">String::LCSS_XS</a>.<o:p></o:p></span></p><p =
class=3DMsoNormal><span =
style=3D'color:#1F497D'><o:p>&nbsp;</o:p></span></p><p =
class=3DMsoNormal><span style=3D'color:#1F497D'>More generally, there =
needs to be some framework similar to the Dutch legal concept from the =
water boards &#8220;The Law of the Shovel&#8221; for CPAN name =
spaces.&nbsp; People could lose their property interest in a polder if =
they did not maintain the dike that kept the polder dry.&nbsp; The water =
board had the authority to transfer title of a polder to the person(s) =
putting in the spade work to keep the dike&nbsp; sound and the polder =
dry.&nbsp; By design, this is slow process similar to adverse possession =
in English law, but the concept is applicable to CPAN name spaces.&nbsp; =
Interest in the property (e.g. the polder or the CPAN namespace) =
involves on-going efforts to maintain the property (the land in polder =
or the code in the CPAN namespace).<o:p></o:p></span></p><p =
class=3DMsoNormal><span =
style=3D'color:#1F497D'><o:p>&nbsp;</o:p></span></p><p =
class=3DMsoNormal><span style=3D'color:#1F497D'>The name space, <a =
href=3D"http://search.cpan.org/~dyacob/String-LCSS-0.12/lib/String/LCSS.p=
m">String::LCSS</a>, has become abandoned.&nbsp; Please begin some =
proceedings remedy this.&nbsp; At a minimum there should be a process =
that does the following:<o:p></o:p></span></p><p =
class=3DMsoListParagraph style=3D'text-indent:-.25in;mso-list:l2 level1 =
lfo4'><![if !supportLists]><span style=3D'color:#1F497D'><span =
style=3D'mso-list:Ignore'>1)<span style=3D'font:7.0pt "Times New =
Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =
</span></span></span><![endif]><span style=3D'color:#1F497D'>Attempt to =
find Daniel Yacob<o:p></o:p></span></p><p class=3DMsoListParagraph =
style=3D'text-indent:-.25in;mso-list:l2 level1 lfo4'><![if =
!supportLists]><span style=3D'color:#1F497D'><span =
style=3D'mso-list:Ignore'>2)<span style=3D'font:7.0pt "Times New =
Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =
</span></span></span><![endif]><span style=3D'color:#1F497D'>If found, =
request that he relinquish the name space to someone willing to maintain =
the space.<o:p></o:p></span></p><p class=3DMsoListParagraph =
style=3D'text-indent:-.25in;mso-list:l2 level1 lfo4'><![if =
!supportLists]><span style=3D'color:#1F497D'><span =
style=3D'mso-list:Ignore'>3)<span style=3D'font:7.0pt "Times New =
Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =
</span></span></span><![endif]><span style=3D'color:#1F497D'>If, after a =
long time of diligent searching, Daniel Yacob is still not found, then =
proceeding for transferring the CPAN name space should =
begin<o:p></o:p></span></p><p class=3DMsoListParagraph =
style=3D'text-indent:-.25in;mso-list:l2 level1 lfo4'><![if =
!supportLists]><span style=3D'color:#1F497D'><span =
style=3D'mso-list:Ignore'>4)<span style=3D'font:7.0pt "Times New =
Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =
</span></span></span><![endif]><span style=3D'color:#1F497D'>Publish on =
String::LCSS that the namespace has been declared =
abandoned.<o:p></o:p></span></p><p class=3DMsoListParagraph =
style=3D'text-indent:-.25in;mso-list:l2 level1 lfo4'><![if =
!supportLists]><span style=3D'color:#1F497D'><span =
style=3D'mso-list:Ignore'>5)<span style=3D'font:7.0pt "Times New =
Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =
</span></span></span><![endif]><span style=3D'color:#1F497D'>Request of =
the CPAN community volunteers who are willing t maintain the name =
space.<o:p></o:p></span></p><p class=3DMsoListParagraph =
style=3D'text-indent:-.25in;mso-list:l2 level1 lfo4'><![if =
!supportLists]><span style=3D'color:#1F497D'><span =
style=3D'mso-list:Ignore'>6)<span style=3D'font:7.0pt "Times New =
Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =
</span></span></span><![endif]><span style=3D'color:#1F497D'>If more =
than one volunteer emerges, then create some mechanism so the PERL =
community can decide which volunteer has the better candidate code for =
the name space.<o:p></o:p></span></p><p class=3DMsoListParagraph =
style=3D'text-indent:-.25in;mso-list:l2 level1 lfo4'><![if =
!supportLists]><span style=3D'color:#1F497D'><span =
style=3D'mso-list:Ignore'>7)<span style=3D'font:7.0pt "Times New =
Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =
</span></span></span><![endif]><span style=3D'color:#1F497D'>Re-assign =
the namespace to the new author.<o:p></o:p></span></p><p =
class=3DMsoNormal><span =
style=3D'color:#1F497D'><o:p>&nbsp;</o:p></span></p><p =
class=3DMsoNormal><span =
style=3D'color:#1F497D'><o:p>&nbsp;</o:p></span></p><div><div =
style=3D'border:none;border-top:solid #B5C4DF 1.0pt;padding:3.0pt 0in =
0in 0in'><p class=3DMsoNormal><b><span =
style=3D'font-size:10.0pt;font-family:"Tahoma","sans-serif"'>From:</span>=
</b><span style=3D'font-size:10.0pt;font-family:"Tahoma","sans-serif"'> =
John Washburn [mailto:john@washburnresearch.org] <br><b>Sent:</b> =
Tuesday, January 01, 2013 6:03 PM<br><b>To:</b> =
'ron@savage.net.au'<br><b>Subject:</b> CPAN namespace question for =
String::LCSS<o:p></o:p></span></p></div></div><p =
class=3DMsoNormal><o:p>&nbsp;</o:p></p><p class=3DMsoPlainText>Dear Mr. =
Savage:<o:p></o:p></p><p class=3DMsoPlainText><o:p>&nbsp;</o:p></p><p =
class=3DMsoPlainText>Below is the email I sent to Stephen Woodbridge on =
my web-crawler.&nbsp; I wanted to ask you a question regarding my post =
script (highlighted in brick red below) and this statement you made in a =
in a parallel email:<o:p></o:p></p><p class=3DMsoPlainText =
style=3D'margin-left:.5in'><i>As for a namespace, there is a long =
history in Perl (i.e. on CPAN) to add an X to the primary module's name, =
giving GedcomX::* as the prefix for all such modules. There's no doubt =
in my mind this is the best course.<o:p></o:p></i></p><p =
class=3DMsoPlainText =
style=3D'margin-left:.5in'><i><o:p>&nbsp;</o:p></i></p><p =
class=3DMsoPlainText style=3D'margin-left:.5in'><i>And since I've =
recently become one of the admins for CPAN itself, I do take module =
naming very seriously.<o:p></o:p></i></p><p class=3DMsoPlainText =
style=3D'margin-left:.5in'><i><o:p>&nbsp;</o:p></i></p><p =
class=3DMsoPlainText style=3D'margin-left:.5in'><i>Of course this is a =
bit confusing because we've just been discussing GEDCOM X. =
Sigh.<o:p></o:p></i></p><p class=3DMsoPlainText =
style=3D'margin-left:.5in'><i><o:p>&nbsp;</o:p></i></p><p =
class=3DMsoPlainText style=3D'margin-left:.5in'><i>So - what to =
do?<o:p></o:p></i></p><p class=3DMsoPlainText =
style=3D'margin-left:.5in'><i><o:p>&nbsp;</o:p></i></p><p =
class=3DMsoPlainText style=3D'margin-left:.5in'><i>Here's what I =
suggest: Last year I registered the new namespace Genealogy::*, =
so:<o:p></o:p></i></p><p class=3DMsoPlainText =
style=3D'margin-left:.5in'><i><o:p>&nbsp;</o:p></i></p><p =
class=3DMsoPlainText style=3D'margin-left:.5in'><i>1) For modules using, =
or already based on, Gedcom.pm, I'd call them =
GedcomX::*.<o:p></o:p></i></p><p class=3DMsoPlainText =
style=3D'margin-left:.5in'><i><o:p>&nbsp;</o:p></i></p><p =
class=3DMsoPlainText style=3D'margin-left:.5in'><i>2) For brand new =
modules, e.g. implementing GEDCOM X, or not using Gedcom.pm, e.g. me new =
parser we discussed on this list last year, I'd call them Genealogy::* =
or (for GEDCOM X) Genealogy::GedcomX::*.<o:p></o:p></i></p><p =
class=3DMsoPlainText =
style=3D'margin-left:.5in'><i><o:p>&nbsp;</o:p></i></p><p =
class=3DMsoPlainText style=3D'margin-left:.5in'><i>That way, we'd keep =
separate things separate.<o:p></o:p></i></p><p =
class=3DMsoPlainText><o:p>&nbsp;</o:p></p><p class=3DMsoPlainText>Would =
an acceptable alternative to my problem with <a =
href=3D"http://search.cpan.org/~dyacob/String-LCSS-0.12/lib/String/LCSS.p=
m">String::LCSS</a> be to register the StringX::LCSS namespace and =
upload my pure perl LCSS implementation to that namespace?&nbsp; As you =
can see this particular name space has been a problem for more than 7 =
years. See: <a =
href=3D"https://rt.cpan.org/Public/Dist/Display.html?Name=3DString-LCSS">=
Bug reports in RT</a> and this notice at the PerlMonks: <a =
href=3D"http://www.perlmonks.org/?node_id=3D819398">Does String::LCSS =
work?</a>.&nbsp; All my efforts over the last 3 years to contact either =
Yacob or <a =
href=3D"http://www.cpan.org/misc/cpan-faq.html#How_adopt_module">PAUSE</a=
> have been in vain.&nbsp; <o:p></o:p></p><p =
class=3DMsoPlainText><o:p>&nbsp;</o:p></p><p class=3DMsoPlainText>Now =
that this irritant as returned to my attention I will make another =
effort to adopt this name space as described on the <a =
href=3D"http://www.cpan.org/misc/cpan-faq.html#How_adopt_module">PAUSE</a=
> section of the <a href=3D"http://www.cpan.org/misc/cpan-faq.html">CPAN =
FAQs</a> before going the route of creating a new StringX::LCSS =
namespace.<o:p></o:p></p><p class=3DMsoPlainText><o:p>&nbsp;</o:p></p><p =
class=3DMsoPlainText>But I was looking for some guidance on this =
namespace issue.<o:p></o:p></p><p class=3DMsoPlainText =
style=3D'margin-left:.5in;text-indent:-.25in;mso-list:l1 level1 =
lfo2'><![if !supportLists]><span style=3D'mso-list:Ignore'>1.<span =
style=3D'font:7.0pt "Times New Roman"'>&nbsp; =
</span></span><![endif]>Should I pursue creating the StringX::LCSS =
namespace as a stop gap to have working code in the CPAN while the =
longer term solution (i.e. adopt String::LCSS) =
proceeds?<o:p></o:p></p><p class=3DMsoPlainText =
style=3D'margin-left:.5in;text-indent:-.25in;mso-list:l1 level1 =
lfo2'><![if !supportLists]><span style=3D'mso-list:Ignore'>2.<span =
style=3D'font:7.0pt "Times New Roman"'>&nbsp; </span></span><![endif]>If =
I create StringX::LCSS and then I (or Lima One) get to adopt =
String::LCSS, then can I (we) collapse StringX::LCSS into String:LCSS so =
future references to StringX:LCSS redirect to =
String::LCSS?<o:p></o:p></p><p =
class=3DMsoPlainText><o:p>&nbsp;</o:p></p><p class=3DMsoPlainText>Thanks =
for any time you might give to this non-GEDCOM issue.<o:p></o:p></p><p =
class=3DMsoPlainText><o:p>&nbsp;</o:p></p><p class=3DMsoPlainText>John =
Washburn<o:p></o:p></p><p class=3DMsoPlainText><o:p>&nbsp;</o:p></p><p =
class=3DMsoPlainText>-----Original Message-----<br>From: John Washburn =
[<a =
href=3D"mailto:john@washburnresearch.org">mailto:john@washburnresearch.or=
g</a>] <br>Sent: Tuesday, January 01, 2013 11:15 AM<br>To: 'Stephen =
Woodbridge'<br>Subject: e-FamilyTreeSpider perl =
programming<o:p></o:p></p><p =
class=3DMsoPlainText><o:p>&nbsp;</o:p></p><p class=3DMsoPlainText>Dear =
Stephen:<o:p></o:p></p><p class=3DMsoPlainText><o:p>&nbsp;</o:p></p><p =
class=3DMsoPlainText>The promised code is attached.<o:p></o:p></p><p =
class=3DMsoPlainText><o:p>&nbsp;</o:p></p><p class=3DMsoPlainText>The =
perl program, e-FamilyTreeSpider-GedCom.pl, reads the INI file, =
e-FamilyTreeSpider.ini, for direction of how to walk the HTML files of =
the site.&nbsp; The INI file designates such things as:<o:p></o:p></p><p =
class=3DMsoPlainText>1. Where to store the work in progress =
files.<o:p></o:p></p><p class=3DMsoPlainText>2. Where to store the =
GECOM<o:p></o:p></p><p class=3DMsoPlainText>3. Append or re-create the =
GEDCOM upon execution.&nbsp; This is used for debugging 4. Where to =
store the local copies of the HTML files.&nbsp; The local copying speeds =
execution as any given HTML page may be read several times as parents, =
children and sibling pages are processed.<o:p></o:p></p><p =
class=3DMsoPlainText><o:p>&nbsp;</o:p></p><p class=3DMsoPlainText>The =
whole INI file is read into a hash that is then used by the perl =
programming proper.<o:p></o:p></p><p =
class=3DMsoPlainText><o:p>&nbsp;</o:p></p><p =
class=3DMsoPlainText><b><span style=3D'color:#C00000'>String::LCSS =
stands for Longest Common Sub-Sequence (or Longest Common Sub-String) is =
in the CPAN. But what is in the CPAN in this namespace is a broken piece =
of crap.&nbsp; Included in the attached archive is a working version of =
the LCSS for either subsequences or substrings.&nbsp; It is installable, =
but just be careful that your local working copy (installed from this =
archive) is not overwritten with the broken non-working copy from the =
CPAN.<o:p></o:p></span></b></p><p =
class=3DMsoPlainText><o:p>&nbsp;</o:p></p><p class=3DMsoPlainText>The =
LCSS algorithm is used when the HTML page is used to &quot;improve&quot; =
the current GEDCOM entry.&nbsp; The idea is to take the string version =
with the longest common subsequence as the &quot;better&quot; version of =
the field data.&nbsp; This &quot;improvement&quot; approach may be =
unnecessary for your application.<o:p></o:p></p><p =
class=3DMsoPlainText><o:p>&nbsp;</o:p></p><p class=3DMsoPlainText>Have =
fun.<o:p></o:p></p><p class=3DMsoPlainText><o:p>&nbsp;</o:p></p><p =
class=3DMsoPlainText>John Washburn<o:p></o:p></p><p =
class=3DMsoPlainText><o:p>&nbsp;</o:p></p><p =
class=3DMsoPlainText><b><span =
style=3D'color:#C00000'>P.S.<o:p></o:p></span></b></p><p =
class=3DMsoPlainText><b><span style=3D'color:#C00000'>As an aside if you =
know how to replace this namespace, String::LCSS, with a working =
version?&nbsp; There are two of us that have been trying to get working =
code into that namespace.&nbsp; All emails to the perl foundation go =
unanswered as have all the defect reports against Sting::LCSS.&nbsp; Is =
there a way to have the perl foundation declare a namespace =
&quot;abandoned&quot; and thus open it up to people who actually want to =
share working code in the name space?</span><o:p></o:p></b></p><p =
class=3DMsoPlainText><o:p>&nbsp;</o:p></p><p =
class=3DMsoPlainText><o:p>&nbsp;</o:p></p><p =
class=3DMsoPlainText>-----Original Message-----<o:p></o:p></p><p =
class=3DMsoPlainText>From: Stephen Woodbridge [<a =
href=3D"mailto:woodbri@swoodbridge.com"><span =
style=3D'color:windowtext;text-decoration:none'>mailto:woodbri@swoodbridg=
e.com</span></a>]<o:p></o:p></p><p class=3DMsoPlainText>Sent: Tuesday, =
January 01, 2013 9:49 AM<o:p></o:p></p><p class=3DMsoPlainText>To: <a =
href=3D"mailto:john@washburnresearch.org"><span =
style=3D'color:windowtext;text-decoration:none'>john@washburnresearch.org=
</span></a><o:p></o:p></p><p class=3DMsoPlainText>Cc: <a =
href=3D"mailto:perl-gedcom@perl.org"><span =
style=3D'color:windowtext;text-decoration:none'>perl-gedcom@perl.org</spa=
n></a>; 'Ron Savage'<o:p></o:p></p><p class=3DMsoPlainText>Subject: Re: =
Gedcom.pm 1.17 released<o:p></o:p></p><p =
class=3DMsoPlainText><o:p>&nbsp;</o:p></p><p class=3DMsoPlainText>Hi =
John,<o:p></o:p></p><p class=3DMsoPlainText><o:p>&nbsp;</o:p></p><p =
class=3DMsoPlainText>Yes, I would love to get that and I'm willing to =
share my code once I have time to fix the most critical =
issues.<o:p></o:p></p><p class=3DMsoPlainText><o:p>&nbsp;</o:p></p><p =
class=3DMsoPlainText>Maybe Paul would like to create a =
&quot;contrib&quot; directory in the repository that could be used to =
make code like this available. I guess we could all make public repos on =
github if we have code to contribute but I think that makes it harder to =
find it. And/or we could create wiki<o:p></o:p></p><p =
class=3DMsoPlainText>page(s) that describes these contrib items and how =
to use them.<o:p></o:p></p><p =
class=3DMsoPlainText><o:p>&nbsp;</o:p></p><p =
class=3DMsoPlainText>Anyway, please send your code when you get a =
chance. It might be a month <o:p></o:p></p><p class=3DMsoPlainText>+- =
before I get to look at it and give it a try.<o:p></o:p></p><p =
class=3DMsoPlainText><o:p>&nbsp;</o:p></p><p =
class=3DMsoPlainText>Thanks,<o:p></o:p></p><p =
class=3DMsoPlainText>&nbsp;&nbsp; -Steve<o:p></o:p></p><p =
class=3DMsoPlainText><o:p>&nbsp;</o:p></p><p class=3DMsoPlainText>On =
1/1/2013 10:37 AM, John Washburn wrote:<o:p></o:p></p><p =
class=3DMsoPlainText>&gt; Dear Stephen:<o:p></o:p></p><p =
class=3DMsoPlainText>&gt;<o:p>&nbsp;</o:p></p><p =
class=3DMsoPlainText>&gt; I have a perl program that walks the HTML =
pages of e-FamilyTree.net <o:p></o:p></p><p class=3DMsoPlainText>&gt; =
and pipes it out to a GEDCOM file.&nbsp; It is also interruptible in =
that <o:p></o:p></p><p class=3DMsoPlainText>&gt; you can run the program =
for a while, stop it and upon restart it will <o:p></o:p></p><p =
class=3DMsoPlainText>&gt; pick up where the search left =
off.<o:p></o:p></p><p class=3DMsoPlainText>&gt;<o:p>&nbsp;</o:p></p><p =
class=3DMsoPlainText>&gt; It uses the HTML:Tree builder and the =
wonderful look-down <o:p></o:p></p><p class=3DMsoPlainText>&gt; =
functionality mentioned by Ron.&nbsp; It also used Date::Manip quite =
heavily.<o:p></o:p></p><p =
class=3DMsoPlainText>&gt;<o:p>&nbsp;</o:p></p><p =
class=3DMsoPlainText>&gt; I would be happy to zip up the code and send =
the archive to you if you <o:p></o:p></p><p class=3DMsoPlainText>&gt; =
are interested.&nbsp; The code is a bit bloated because the code grew =
over <o:p></o:p></p><p class=3DMsoPlainText>&gt; time and I had to add =
special cases for some of the errors in the <o:p></o:p></p><p =
class=3DMsoPlainText>&gt; e-familynet HTML structure and to implement =
the 1-generation look ahead.<o:p></o:p></p><p =
class=3DMsoPlainText>&gt;<o:p>&nbsp;</o:p></p><p =
class=3DMsoPlainText>&gt;<o:p>&nbsp;</o:p></p><p =
class=3DMsoPlainText>&gt; -----Original Message-----<o:p></o:p></p><p =
class=3DMsoPlainText>&gt; From: Ron Savage [<a =
href=3D"mailto:ron@savage.net.au"><span =
style=3D'color:windowtext;text-decoration:none'>mailto:ron@savage.net.au<=
/span></a>]<o:p></o:p></p><p class=3DMsoPlainText>&gt; Sent: Saturday, =
December 29, 2012 10:06 PM<o:p></o:p></p><p class=3DMsoPlainText>&gt; =
To: <a href=3D"mailto:perl-gedcom@perl.org"><span =
style=3D'color:windowtext;text-decoration:none'>perl-gedcom@perl.org</spa=
n></a><o:p></o:p></p><p class=3DMsoPlainText>&gt; Subject: Re: Gedcom.pm =
1.17 released<o:p></o:p></p><p =
class=3DMsoPlainText>&gt;<o:p>&nbsp;</o:p></p><p =
class=3DMsoPlainText>&gt; Hi Stephen<o:p></o:p></p><p =
class=3DMsoPlainText>&gt;<o:p>&nbsp;</o:p></p><p =
class=3DMsoPlainText>&gt; On 30/12/12 11:03, Stephen Woodbridge =
wrote:<o:p></o:p></p><p class=3DMsoPlainText>&gt;&gt; On 12/29/2012 5:26 =
PM, Paul Johnson wrote:<o:p></o:p></p><p =
class=3DMsoPlainText>&gt;<o:p>&nbsp;</o:p></p><p =
class=3DMsoPlainText>&gt;&gt; What I noticed was that the data way =
nicely tag in the HTML so I am <o:p></o:p></p><p =
class=3DMsoPlainText>&gt;&gt; writing a parser to read the HTML can =
generate a Gedcom file. I have <o:p></o:p></p><p =
class=3DMsoPlainText>&gt;&gt; the basics working, but I have to do more =
work on it to fix bugs and <o:p></o:p></p><p =
class=3DMsoPlainText>&gt;&gt; collect more of the data than I current =
am. I'm side tracked with <o:p></o:p></p><p =
class=3DMsoPlainText>&gt;&gt; work at the moment so it is on hold. When =
I'm done it will have <o:p></o:p></p><p class=3DMsoPlainText>&gt;&gt; =
generated a<o:p></o:p></p><p class=3DMsoPlainText>&gt;&gt; 40K+ person =
Gedcom file. This should be able able to create a =
gedcom<o:p></o:p></p><p class=3DMsoPlainText>&gt;&gt; from any =
&quot;Second Site&quot; generated website assuming it is similar to =
<o:p></o:p></p><p class=3DMsoPlainText>&gt;&gt; the link above. Or you =
can ask the site owner for a copy of the <o:p></o:p></p><p =
class=3DMsoPlainText>&gt;&gt; gedcom :), but this seemed like a worth =
challenge at the time.<o:p></o:p></p><p =
class=3DMsoPlainText>&gt;<o:p>&nbsp;</o:p></p><p =
class=3DMsoPlainText>&gt; Are you using HTML::TreeBuilder and the =
v-e-r-y nice look_down() method?<o:p></o:p></p><p =
class=3DMsoPlainText>&gt;<o:p>&nbsp;</o:p></p><p =
class=3DMsoPlainText>&gt; --<o:p></o:p></p><p class=3DMsoPlainText>&gt; =
Ron Savage<o:p></o:p></p><p class=3DMsoPlainText>&gt; <a =
href=3D"http://savage.net.au/"><span =
style=3D'color:windowtext;text-decoration:none'>http://savage.net.au/</sp=
an></a><o:p></o:p></p><p class=3DMsoPlainText>&gt; Ph: 0421 920 =
622<o:p></o:p></p><p class=3DMsoPlainText>&gt; -----<o:p></o:p></p><p =
class=3DMsoPlainText>&gt; No virus found in this =
message.<o:p></o:p></p><p class=3DMsoPlainText>&gt; Checked by AVG - <a =
href=3D"http://www.avg.com"><span =
style=3D'color:windowtext;text-decoration:none'>www.avg.com</span></a><o:=
p></o:p></p><p class=3DMsoPlainText>&gt; Version: 2013.0.2805 / Virus =
Database: 2637/5997 - Release Date: <o:p></o:p></p><p =
class=3DMsoPlainText>&gt; 12/30/12<o:p></o:p></p><p =
class=3DMsoPlainText>&gt;<o:p>&nbsp;</o:p></p><p =
class=3DMsoPlainText><o:p>&nbsp;</o:p></p><p =
class=3DMsoPlainText>-----<o:p></o:p></p><p class=3DMsoPlainText>No =
virus found in this message.<o:p></o:p></p><p =
class=3DMsoPlainText>Checked by AVG - <a =
href=3D"http://www.avg.com"><span =
style=3D'color:windowtext;text-decoration:none'>www.avg.com</span></a><o:=
p></o:p></p><p class=3DMsoPlainText>Version: 2013.0.2805 / Virus =
Database: 2637/6001 - Release Date: =
01/01/13<o:p></o:p></p></div></body></html>
------=_NextPart_000_0001_01CE393B.7ED9A6D0--

