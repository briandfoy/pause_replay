Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:3722
Return-Path: <briani@ActiveState.com>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 5988 invoked from network); 30 Nov 2000 22:39:29 -0000
Received: from gw.activestate.com (HELO ActiveState.com) (209.17.183.249)
  by tmtowtdi.perl.org with SMTP; 30 Nov 2000 22:39:29 -0000
Received: from smtp3.ActiveState.com (smtp3.ActiveState.com [192.168.3.19])
	by ActiveState.com (8.11.1/8.11.0) with ESMTP id eAUMd2w09884
	for <modules@perl.org>; Thu, 30 Nov 2000 14:39:02 -0800
Received: from activestate.com (ingy@thebrain.activestate.com [192.168.3.113])
	by smtp3.ActiveState.com (8.11.1/8.11.0) with ESMTP id eAUMd2P25867
	for <modules@perl.org>; Thu, 30 Nov 2000 14:39:02 -0800
Sender: ingy@ActiveState.com
Message-ID: <3A26D7C8.3785D516@activestate.com>
Date: Thu, 30 Nov 2000 14:42:16 -0800
X-Mailer: Mozilla 4.7 [en] (X11; I; Linux 2.2.13 i686)
X-Accept-Language: en
MIME-Version: 1.0
To: modules@perl.org
Subject: RFC for new module Inline::C
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
X-Filtered-By: PerlMx makes it fast and easy.  See http://www.ActiveState.com/Products/PerlMx/Header
Approved: news@nntp.perl.org
From: briani@ActiveState.com (Brian Ingerson)

I am preparing the next major release of Inline.pm. One important
features of this release is to provide support for easily adding new
languages to Inline. In doing so, I needed to separate the rather
hard-wired workings of C support from the generic Inline code. 

This has left me with a new module Inline::C. There is a simple API
between Inline and Inline::C which allows for the addition of new
language support from other programmers, without needing to change the
base Inline.pm module. Inline::CPP and Inline::Python have already been
written by Neil Watkiss. Also there is nothing preventing others from
reimplementing the C, C++ or Python modules to suit their own needs.

Inline::C will be distributed along with Inline.pm (in the Inline-0.30
distribution) to prevent any confusion. I think this makes the more
sense than distributing Inline::C as its own package, because C is so
closely tied to Perl, and will probably be the most popular language by
far.

I am writing this to make sure that Inline::C still gets added to the
big modules list. It will look strange if people see Inline::Python and
not Inline::C.

Brian


-- 
perl -le 'use Inline C=>q{SV*JAxH(char*x){return newSVpvf
("Just Another %s Hacker",x);}};print JAxH+Perl'
