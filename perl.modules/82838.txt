Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:82838
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 25137 invoked from network); 22 Oct 2012 10:34:21 -0000
Received: from x1.develooper.com (207.171.7.70)
  by x6.develooper.com with SMTP; 22 Oct 2012 10:34:21 -0000
Received: (qmail 24290 invoked by uid 225); 22 Oct 2012 10:34:20 -0000
Delivered-To: modules@perl.org
Received: (qmail 24285 invoked by alias); 22 Oct 2012 10:34:20 -0000
X-Spam-Status: No, hits=-1.9 required=8.0
	tests=BAYES_00
X-Spam-Check-By: la.mx.develooper.com
Received: from pause.fiz-chemie.de (HELO pause.fiz-chemie.de) (195.37.231.65)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Mon, 22 Oct 2012 03:34:14 -0700
Received: from pause.fiz-chemie.de (localhost.localdomain [127.0.0.1])
	by pause.fiz-chemie.de (8.13.8/8.13.8/Debian-3) with ESMTP id q9MAY72x007702;
	Mon, 22 Oct 2012 12:34:07 +0200
Received: (from nobody@localhost)
	by pause.fiz-chemie.de (8.13.8/8.13.8/Submit) id q9MAY7W0007701;
	Mon, 22 Oct 2012 12:34:07 +0200
Date: Mon, 22 Oct 2012 12:34:07 +0200
Message-ID: <201210221034.q9MAY7W0007701@pause.fiz-chemie.de>
Subject: Module submission Excel::Table
Reply-To: modules@perl.org
To: modules@perl.org, tmcmeeki@cpan.org
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Excel::Table
  DSLIP:       bdpOg
  description: Process Excel sheets as structured arrays
  userid:      TMCMEEKI (Tom McMeekin)
  chapterid:   11 (String_Lang_Text_Proc)
  communities:

  similar:
    Spreadsheet::ParseExcel Spreadsheet::XLSX DBD::Excel

  rationale:

    Many spreadsheets are used to store semi-structured lists, such as
    catalogues, manifests, etc. in a table-like structure. These files
    typically evolve over time, and come to resemble databases,
    particularly in the case of Excel workbooks, where multiple
    worksheets are used in unison.

    Whilst DBD::Excel can be used to provide an SQL-like interface to
    such sheets, it may not be practical to do so, and certainly for
    programmers not familiar or comfortable with SQL. This is
    particularly true for spreadsheets which have evolved over time and
    may not exhibit good database design, such as normalisation or
    consistent "column" naming.

    This module allows sheet data (assumed to be similarly structured
    to tables) to be processed as arrays (or hashes if desired) of rows
    with the ability to retrieve meta-data such as maximum value length,
    titles, etc. It also allows for duplicate column naming which often
    occur in such sheets which don't lend themselves well to handling
    via DBD.

    It leverages existing Excel parsing modules and as such caters to
    older and newer Excel formats.

    Some example code fragments: my $xs1 = Excel::Table->new;

    $xs1->open('mybook.xls');

    my @data = $xs1->extract('Sheet1');

    @data = $xs1->select("column1,column2,column3", 'Sheet1');

    printf "columns %d rows %d title_row %d\n", $xs1->columns,
    $xs1->rows, $xs1->title_row;

  enteredby:   TMCMEEKI (Tom McMeekin)
  enteredon:   Mon Oct 22 10:34:07 2012 GMT

The resulting entry would be:

Excel::
::Table           bdpOg Process Excel sheets as structured arrays    TMCMEEKI


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=96a00000_818bb0f0bcff34cd&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=96a00000_818bb0f0bcff34cd&SUBMIT_pause99_add_mod_insertit=1
Peek at the current permissions:
  https://pause.perl.org/pause/authenquery?pause99_peek_perms_by=me&pause99_peek_perms_query=Excel%3A%3ATable
