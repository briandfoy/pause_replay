Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:21082
Return-Path: <nobody@pause.x.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 15339 invoked by uid 76); 13 May 2003 19:05:10 -0000
Received: from qmailr@one.develooper.com (HELO ran-out.mx.develooper.com) (64.81.84.115) by onion.perl.org (qpsmtpd/0.26-dev) with SMTP; Tue, 13 May 2003 12:05:10 -0700
Received: (qmail 21983 invoked by uid 225); 13 May 2003 19:05:09 -0000
Delivered-To: modules@perl.org
Received: (qmail 21974 invoked by uid 507); 13 May 2003 19:05:08 -0000
Received: from pause.perl.org (HELO pause.perl.org) (212.40.160.59) by one.develooper.com (qpsmtpd/0.26-dev) with SMTP; Tue, 13 May 2003 12:05:08 -0700
Received: from pause.perl.org (IDENT:nobody@localhost [127.0.0.1])	by pause.perl.org (8.12.9/8.12.9) with ESMTP id h4DJ54I3022529;	Tue, 13 May 2003 21:05:04 +0200
Received: (from nobody@localhost)	by pause.perl.org (8.12.9/8.12.9/Submit) id h4DJ54jM022528;	Tue, 13 May 2003 21:05:04 +0200
Date: Tue, 13 May 2003 21:05:04 +0200
Message-ID: <200305131905.h4DJ54jM022528@pause.perl.org>
Subject: Module submission Heap::String
Reply-To: modules@perl.org
To: modules@perl.org, thospel@cpan.org
X-SMTPD: qpsmtpd/0.26-dev, http://develooper.com/code/qpsmtpd/
X-Spam-Check-By: one.develooper.com
X-Spam-Status: No, hits=1.1 required=7.0 tests=CARRIAGE_RETURNS,SPAM_PHRASE_00_01 version=2.44
X-SMTPD: qpsmtpd/0.26-dev, http://develooper.com/code/qpsmtpd/
Approved: news@nntp.perl.org
From: upload@pause.x.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Heap::String
  DSLIP:       RdpOp
  description: Heap of elements ordered by strings
  userid:      THOSPEL (Ton Hospel)
  chapterid:    6 (Data_Type_Utilities)
  communities:
    modules@perl.org

  similar:
    Heap, Heap::Number

  rationale:

    Heap::String is meant as a basename for several submodules
    depending on what kind of element you want to store in the
    heap(Arrayreference, Hashreference, just the keys).

    All of these will keep the heap ordered by some string value in the
    element with low values being extracted first.

    The interface is simpler than that of the standard Heap module
    since you don't have to transform the elements first. It doesn't
    support general sorting functions though.

    For these reasons it's also substantially faster (about 3 times)

    Here's a simple example if the elements are just the keys:

    use Heap::String;

    my $heap = Heap::String->new; $heap->insert($_) for @array; print
    $heap->extract_min, "\n" for 1..$heap->count;

    Here's another example sorting a hash based object providing a
    print method) by some key:

    use Heap::String::Hash;

    my $heap = Heap::String::Hash->new(key_name => "foo");
    $heap->insert($_) for @objects; extract_min->print, "\n" for
    1..$heap->count;

    Simple, fast.

  enteredby:   THOSPEL (Ton Hospel)
  enteredon:   Tue May 13 19:05:04 2003 GMT

The resulting entry would be:

Heap::
::String          RdpOp Heap of elements ordered by strings          THOSPEL


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=8e300000_ed24633b0884fc61&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=8e300000_ed24633b0884fc61&SUBMIT_pause99_add_mod_insertit=1
