Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:12256
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 77984 invoked by uid 76); 19 Jun 2002 02:48:51 -0000
Received: from root@dubravka.kbx.de (HELO pause.perl.org) (212.40.160.59)
  by onion.perl.org (qpsmtpd/0.07b) with SMTP; Wed Jun 19 02:48:51 2002 -0000
Received: (from nobody@localhost)
	by pause.perl.org (8.11.6/8.11.6) id g5J2kIY15100;
	Wed, 19 Jun 2002 04:46:18 +0200
Date: Wed, 19 Jun 2002 04:46:18 +0200
Message-ID: <200206190246.g5J2kIY15100@pause.perl.org>
Reply-To: modules@perl.org
Subject: Module submission Test::Class
To: modules@perl.org, adie@cpan.org
Approved: news@nntp.perl.org
From: upload@p11.speed-link.de ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Test::Class
  DSLIP:       bdpOp
  description: Easily create test classes in an xUnit style
  userid:      ADIE (Adrian Howard)
  chapterid:    3 (Development_Support)
  communities:
    perl-qa@perl.org

  similar:
    Test::Unit Test::SimpleUnit

  rationale:

    It's for creating test classes, so it's fairly descriptive :-)

    Since there are already Test::Unit and Test::SimpleUnit another
    *Unit* varient would probably just confuse.

    Differences from Test::SimpleUnit - class based, allowing you to
    easily create and extend test classes. If you made Test::SimpleUnit
    do the stuff Test::Class does it wouldn't be simple.

    Different from Test::Unit - tightly integrated into Test::Builder
    (and therefore Test::Builder). Easy to learn for users of Test::More
    et al. Easy to refactor *.t scripts into Test::Class classes.

  enteredby:   ADIE (Adrian Howard)
  enteredon:   Wed Jun 19 02:46:17 2002 GMT

The resulting entry would be:

Test::
::Class           bdpOp Easily create test classes in an xUnit style ADIE


Thanks for registering,
The Pause Team

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=a1200000_50d6027b804c6433&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=a1200000_50d6027b804c6433&SUBMIT_pause99_add_mod_insertit=1
