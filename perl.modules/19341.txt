Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:19341
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 57535 invoked by uid 76); 9 Mar 2003 20:46:46 -0000
Received: from qmailr@one.develooper.com (HELO ran-out.mx.develooper.com) (64.81.84.115) by onion.perl.org (qpsmtpd/0.20) with SMTP; 2003-03-09 20:46:46Z
Received: (qmail 8999 invoked by uid 225); 9 Mar 2003 20:46:45 -0000
Delivered-To: modules@perl.org
Received: (qmail 8990 invoked by uid 507); 9 Mar 2003 20:46:45 -0000
Received: from root@[212.40.160.59] (HELO pause.perl.org) (212.40.160.59) by one.develooper.com (qpsmtpd/0.21-dev) with SMTP; Sun, 09 Mar 2003 12:46:44 -0800
Received: (from nobody@localhost)	by pause.perl.org (8.11.6/8.11.6) id h29Kke925725;	Sun, 9 Mar 2003 21:46:40 +0100
Date: Sun, 9 Mar 2003 21:46:40 +0100
Message-ID: <200303092046.h29Kke925725@pause.perl.org>
Subject: Module submission Hash::MultiKey
Reply-To: modules@perl.org
To: modules@perl.org, fxn@cpan.org
X-SMTPD: qpsmtpd/0.21-dev, http://develooper.com/code/qpsmtpd/
X-Spam-Check-By: one.develooper.com
X-Spam-Status: No, hits=1.1 required=7.0 tests=CARRIAGE_RETURNS,SPAM_PHRASE_00_01 version=2.44
X-SMTPD: qpsmtpd/0.20, http://develooper.com/code/qpsmtpd/
Approved: news@nntp.perl.org
From: upload@pause.x.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Hash::MultiKey
  DSLIP:       bdprp
  description: hashes whose keys can be multiple
  userid:      FXN (Xavier Noria)
  chapterid:    6 (Data_Type_Utilities)
  communities:
    module-authors@perl.org,comp.lang.perl.modules,freenode#Perl

  similar:
    Tie::ListKeyedHash

  rationale:

    Rationale for name: On the one hand I'd seach for "multikey" myself
    if I was looking for such a module. On the other hand I see Tie:: as
    putting an implementation detail in the name. I prefer the name of
    my module just suggests what is about. But this can of course be
    discussed to conform to any naming policy in CPAN.

    Rationale for approach: Tie::ListKeyedHash uses a hard-coded nested
    hash created with eval() when needed behind the scenes. As a
    consequence you cannot set $hash{'foo'} = 1 and $hash{'foo','bar'} =
    3, because perl tries to assign the key 'bar' to the hashref '1',
    which results in an error.

    In Hash::MultiKey keys can be truly multiple. For instance, in

    $hash{foo} = 1; $hash{"foo", "bar"} = [0..7];
    $hash{"foo","bar","baz","zoo"} = { key => "value" };

    %hash has just three keys. It also accepts arrayrefs for a better
    performance and to allow keys containing $;.

    Since values in the internal structure are just a slot in the
    corresponding tree node, the last example does NOT result in a new
    key ["foo","bar","baz","zoo", "key"], %hash is standard in that
    regard, it just assigns multiple-keys to scalars, as usual.

    Best regards to all!

    -- fxn

  enteredby:   FXN (Xavier Noria)
  enteredon:   Sun Mar  9 20:46:40 2003 GMT

The resulting entry would be:

Hash::
::MultiKey        bdprp hashes whose keys can be multiple            FXN


Thanks for registering,
The Pause Team

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=49300000_4bd80e5c48439901&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=49300000_4bd80e5c48439901&SUBMIT_pause99_add_mod_insertit=1
