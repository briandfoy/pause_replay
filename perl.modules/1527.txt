Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:1527
Return-Path: <nate@wiger.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 20195 invoked from network); 2 Apr 2000 22:28:00 -0000
Received: from 24-25-210-65.san.rr.com (HELO noname.nodomain.nowhere) (24.25.210.65)
  by tmtowtdi.perl.org with SMTP; 2 Apr 2000 22:28:00 -0000
Received: from wiger.org (localhost [127.0.0.1])
	by noname.nodomain.nowhere (8.9.1a/8.9.1) with ESMTP id OAA02385
	for <modules@perl.org>; Sun, 2 Apr 2000 14:20:16 -0700
Sender: nwiger@noname.nodomain.nowhere
Message-ID: <38E7B98F.7E4F270@wiger.org>
Date: Sun, 02 Apr 2000 14:20:15 -0700
X-Mailer: Mozilla 4.51C-Caldera [en] (X11; I; Linux 2.2.5 i686)
X-Accept-Language: en
MIME-Version: 1.0
To: modules@perl.org
Subject: Request to register as a CPAN contributor
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Approved: news@nntp.perl.org
From: nate@wiger.org (Nathan Wiger)

Howdy-

I'd like to register with PAUSE (finally!):

Name     =  Nathan Wiger
Email    =  nate@wiger.org
Homepage =  http://nate.wiger.org 
UserID   =  NWIGER

Description of contributions:

As a UNIX System and Network Admin, I've written a set of 
modules aimed at sysadmin tasks. By and large I write modules
aimed at UNIX or Web stuff, since I do a ton of web authoring
as well.

DSLI Entries:

These are the modules which I feel are CPAN-worthy:

Name             DSLI  Description                                  
-------------    ----  --------------------------------------------
Term::CLI        Rdph  User-friendly prompt and debug methods
File::Remote     bdph  Read/write files either locally or remotely
Unix::Cron       adph  Interface to UNIX cron and at
CGI::JavaScript  cdph  Interact with and embed JavaScript easily
Foundry::Conf    idph  Foundry router/switch administration


Note that Term::CLI is different from Term::TUI, which provides
an interactive interface. Term::CLI provides a set of member
functions to easily prompt the user for input and validate it.
I'm also working on several Solaris:: mods but want to check
w/ Alan Burlison before listing them as I may be able to wrap
them into existing modules.

It could be argued that CGI::JavaScript should really be under
HTML::JavaScript, which I'm open to. I put it under CGI:: at
least preliminarily since most of the stuff under HTML:: deals
stricly with HTML tags and parsing.

All of my mods are "polite" and provide object as well as
function methods. :-)

Cheers!
-Nate
