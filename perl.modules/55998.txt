Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:55998
Return-Path: <uber.spaced@gmail.com>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Delivered-To: moderator for modules@perl.org
Received: (qmail 19685 invoked from network); 24 Aug 2007 15:22:42 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 24 Aug 2007 15:22:42 -0000
Received: (qmail 18343 invoked by uid 225); 24 Aug 2007 15:22:40 -0000
Delivered-To: modules@perl.org
Received: (qmail 18287 invoked by alias); 24 Aug 2007 15:22:35 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_SIGNED,HTML_MESSAGE,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received: from nf-out-0910.google.com (HELO nf-out-0910.google.com) (64.233.182.186)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Fri, 24 Aug 2007 08:22:27 -0700
Received: by nf-out-0910.google.com with SMTP id b21so622357nfd
        for <modules@perl.org>; Fri, 24 Aug 2007 08:22:20 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:mime-version:content-type;
        b=iddRZa2+B3d30U8Ai3AuYG/QBlRLpm2UtR0WMeSNW5/XizIQlwstoe6S8HM6fToDpd2dimTQoNEheD9+Y7RlEKZF3a9zNXihFWKVsnPThybKrYbeK119euPMy2YRZ86A8m4Ar9jV3Im4xxHKJ9A5wOXBODjgCRC1OY++3ormkYQ=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:to:subject:mime-version:content-type;
        b=XbBudNuyOm7F+cOm7nzNuGKOO/X5TwwRYDaYe+YOsGZFQfEwKl2WWUiutBHlpyOWDMrf9kV0zO4PFdsK41NWel0JHApm+T+x1liiafVZCLuiJuH4RuIBcR0XzqSdzZ0Y+klUIlrT21SvmeCthxLTzoEeBj0cRvKD25pSs1lH85w=
Received: by 10.78.172.20 with SMTP id u20mr2060324hue.1187968939629;
        Fri, 24 Aug 2007 08:22:19 -0700 (PDT)
Received: by 10.78.150.17 with HTTP; Fri, 24 Aug 2007 08:22:19 -0700 (PDT)
Message-ID: <fb6e3c030708240822p59fa262am85d55f687c5b9e7c@mail.gmail.com>
Date: Fri, 24 Aug 2007 11:22:19 -0400
To: modules@perl.org
Subject: Saving a database statement handle to a file and opening it later
MIME-Version: 1.0
Content-Type: multipart/mixed; 
	boundary="----=_Part_13389_15084206.1187968939577"
X-Virus-Checked: Checked
Approved: news@nntp.perl.org
From: uber.spaced@gmail.com ("uber spaced")

------=_Part_13389_15084206.1187968939577
Content-Type: multipart/alternative; 
	boundary="----=_Part_13390_16528942.1187968939577"

------=_Part_13390_16528942.1187968939577
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

Greetings.

A module is attached which simply saves some database statement handle to a
file so it can be opened later.

It makes an attempt to save the output of $sth->rows, and provides a
subroutine wrapper for getting it back again.

I have a could of questions:

1.  Does anything else just save a statement handle to a file so it can be
opened up later as some sort of 'cursor' that can only fetch the next rows?

2.  I know this type of thing would be very useful to me.  It basically
allows for saving a sort of temporary table on disk that can be accessed
without a database connection by any program.  If you think it's useful
enough to be included on CPAN, then what should its name be?  I'm thinking
that it could be called DBI::SthFile.

3.  How can I find a way to make sure that all of the meta information
provided by different database drivers in statement handles can easily be
saved and retrieved?

Thanks.

Martin VanWinkle

------=_Part_13390_16528942.1187968939577
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

Greetings.<br><br>A module is attached which simply saves some database statement handle to a file so it can be opened later.<br><br>It makes an attempt to save the output of $sth-&gt;rows, and provides a subroutine wrapper for getting it back again.
<br><br>I have a could of questions:<br><br>1.&nbsp; Does anything else just save a statement handle to a file so it can be opened up later as some sort of &#39;cursor&#39; that can only fetch the next rows?<br><br>2.&nbsp; I know this type of thing would be very useful to me.&nbsp; It basically allows for saving a sort of temporary table on disk that can be accessed without a database connection by any program.&nbsp; If you think it&#39;s useful enough to be included on CPAN, then what should its name be?&nbsp; I&#39;m thinking that it could be called DBI::SthFile.
<br><br>3.&nbsp; How can I find a way to make sure that all of the meta information provided by different database drivers in statement handles can easily be saved and retrieved?<br><br>Thanks.<br><br>Martin VanWinkle<br>

------=_Part_13390_16528942.1187968939577--

------=_Part_13389_15084206.1187968939577
Content-Type: text/x-perl; name=SthFile.pm; charset=ANSI_X3.4-1968
Content-Transfer-Encoding: base64
X-Attachment-Id: f_f5qtv0yt
Content-Disposition: attachment; filename="SthFile.pm"

cGFja2FnZSBTdGhGaWxlOwoKdXNlIHN0cmljdDsKdXNlIHdhcm5pbmdzOwoKdXNlIFN0b3JhYmxl
IHF3KHN0b3JlX2ZkIGZkX3JldHJpZXZlKTsKdXNlIElPOjpGaWxlOwoKdXNlIERhdGE6OkR1bXBl
cjsKCj1wb2QKCj1oZWFkMSBTeW5vcHNpcwoKICB1c2UgU3RoRmlsZTsKICBteSAkcXVlcnkgPSBx
cXsgU0VMRUNUICogRlJPTSBUQUJMRX07CiAgbXkgJHN0aCA9ICRkYmgtPnByZXBhcmUoJHF1ZXJ5
KQogICAgb3IgZGllICJDYW50IHByZXBhcmUgcXVlcnk6ICRxdWVyeVxuICREQkk6OmVycnN0ciI7
CiAgJHN0aC0+ZXhlY3V0ZSgpCiAgICBvciBkaWUgIkNhbnQgZXhlY3V0ZSBxdWVyeTogJHF1ZXJ5
XG4gJERCSTo6ZXJyc3RyIjsKCiAgU3RoRmlsZTo6c3RoX3RvX2ZpbGUoewogICAgc3RoID0+ICRz
dGgsCiAgICBmaWxlX25hbWUgPT4gIi90bXAvbXlfcXVlcnkuc3RvcmUiLAogIH0pOwoKICAjIEFu
ZCBsYXRlciwgaW4gc29tZSBvdGhlciBwcm9ncmFtIG9yIHBsYWNlCgogIG15ICRzdGhfZnJvbV9m
aWxlID0gbmV3IFN0aEZpbGUoIi90bXAvbXlfcXVlcnkuc3RvcmUiKQogICAgb3IgZGllICJDYW50
IGdldCBzb21lIGdhcmJhZ2UuIjsKCj1oZWFkMSBNaW1pa2luZyBTdHVmZgoKVGhpcyBtb2R1bGUg
bWFrZXMgYW4gYXR0ZW1wdCB0byBtaW1pYyB0aGUgYmVoYWl2b3JzCm9mIGEgc3RhdGVtZW50IGhh
bmRsZSBhcyBzdGF0ZWQgaW4gdGhlIGRvY3VtZW50YXRpb24uCmZldGNocm93X2FycmF5LCBmZXRj
aHJvd19hcnJheXJlZiwgZmV0Y2hyb3dfaGFzaHJlZiwKZmV0Y2hhbGxfYXJyYXlyZWYsIGZldGNo
YWxsX2hhc2hyZWYgaGF2ZSBiZWVuIGltcGxlbWVudGVkLgpJJ20gYXdhcmUgdGhvc2Ugc3VicyBt
YXkgYmUgZGVmaW5lZCBzb21ld2hlcmUgZWxzZSBhbmQgTUFZCmJlIHdyaXR0ZW4gYmV0dGVyLCBi
dXQgaXQgd2FzIGZ1biB0byBqdXN0IHdyaXRlIHRoZW0uCgo9aGVhZDEgUmFpc29uIGQnRXRyZQoK
SSB3YW50ZWQgdG8gdGFrZSBhIHF1ZXJ5IGZyb20gYSBkYXRhYmFzZSBhbmQgc2F2ZSBpdCBmb3Ig
bGF0ZXIsIHdpdGhvdXQKaGF2aW5nIHRvIG1vZGlmeSBpdCBpbiBzb21lIHdheSBpbiBvcmRlciB0
byBzdG9yZSBpdCBvciB3b3JyeSBhYm91dApob3cgdG8gc3RvcmUgdW5kZWZzLgoKPWhlYWQxIFRv
IERvcwoKSGF2ZSB0aGUgYWJpbGl0eSB0byB0YWtlIGEgaGFuZGxlIGFuZCB3cml0ZSB0byB0aGF0
IGhhbmRsZQphcyBvcHBvc2VkIHRvIGp1c3Qgd3JpdGluZyB0byB0aGUgZmlsZW5hbWUgc3BlY2lm
aWVkLgoKWWVhaCwgSSB0aHJldyBpbiB0aGUgJ2FjdGl2ZScgc3R1ZmYgZm9yIGZ1bi4gIERvbid0
IGtub3cKd2hhdCB0byBkbyB3aXRoIGl0LgoKSSBoYXZlbid0IGZ1bGx5IHRlc3RlZCBmZXRjaGFs
bF9oYXNocmVmIG9yIGZldGNoYWxsX2FycmF5cmVmLgoKPWhlYWQxIFZlcnNpb24gMQoKRmlsZSBm
b3JtYXQKCgoKICAlbWV0YV9kYXRhICgKICAgIHZlcnNpb24gPT4gMQogICAgc3RoID0+IHsgTkFN
RSA9PiAkc3RoLT57TkFNRX0KCXN0aF9zdWJzID0+IHsgcm93cyA9PiAkc3RoLT5yb3dzKCl9CiAg
ICByb3dzID0+ICRzdGgtPnJvd3MsCiAgICBtYXliZSBhIGRhdGUgb3IgdGhlIHF1ZXJ5IG9yIHNv
bWV0aGluZy4KICApCiAgXEBkYXRhCgoKPWN1dAoKc3ViIHN0aF90b19maWxlCnsKCW15ICgkcGFy
YW1fcmVmKSA9IEBfOwoKCWRpZSAiZmlsZV9uYW1lIG11c3QgYmUgc3BlY2lmaWVkIgoJCWlmICEg
JHBhcmFtX3JlZi0+e2ZpbGVfbmFtZX07CgoJZGllICJObyBzdGggZ2l2ZW4uLi4iCgkJaWYgISAk
cGFyYW1fcmVmLT57c3RofTsKCgkKCW15ICRmaCA9IG5ldyBJTzo6RmlsZSAiPiRwYXJhbV9yZWYt
PntmaWxlX25hbWV9IgoJCW9yIGRpZSAiQ2FudCBvcGVuICRwYXJhbV9yZWYtPntmaWxlX25hbWV9
IGZvciB3cml0aW5nOiAkISI7CgoJc3RvcmVfZmQoewoJCXN0aCA9PiB7CgkJCU5BTUUgPT4gJHBh
cmFtX3JlZi0+e3N0aH0tPntOQU1FfSwKCQl9LAoJCXZlcnNpb24gPT4gMSwKCQlzdGhfc3VicyA9
PiB7CgkJCXJvd3MgPT4gJHBhcmFtX3JlZi0+e3N0aH0tPnJvd3MoKSwKCQl9LAoJfSwgJGZoKTsK
CQoJc3RvcmVfc3RoX2RhdGEoJHBhcmFtX3JlZiwgJGZoKTsKCQoJJGZoLT5jbG9zZSgpIG9yIGRp
ZSAiQ291bGRudCBjbG9zZSAkcGFyYW1fcmVmLT57ZmlsZV9uYW1lfTogJCEiOwp9CgpzdWIgc3Rv
cmVfc3RoX2RhdGEKewoJbXkgKCRwYXJhbV9yZWYsICRmaCkgPSBAXzsKCQoJbXkgJGFycmF5X3Jl
ZjsKCXdoaWxlICgkYXJyYXlfcmVmID0gJHBhcmFtX3JlZi0+e3N0aH0tPmZldGNocm93X2FycmF5
cmVmKCkpCgl7CgkJc3RvcmVfZmQoJGFycmF5X3JlZiwkZmgpOwoJfQp9CgpzdWIgbmV3CnsKCW15
ICgkY2xhc3MsICRmaWxlX25hbWUpID0gQF87CgoJbXkgJGZoID0gbmV3IElPOjpGaWxlICI8JGZp
bGVfbmFtZSIKCQlvciBkaWUgIkNhbnQgb3BlbiAkZmlsZV9uYW1lIGZvciByZWFkaW5nOiAkISI7
CgkKCW15ICRtZXRhX3JlZiA9IGZkX3JldHJpZXZlKCRmaCk7CgkKCWRpZSAiU29tZXRoaW5ncyB3
cm9uZyB3aXRoICwgbWV0YSBkb2Vzbid0IGhhdmUgdmVyc2lvbiBzZXQuLi4iCgkJaWYgKCFkZWZp
bmVkICRtZXRhX3JlZi0+e3ZlcnNpb259KTsKCQoJbXkgJHN0aCA9ICRtZXRhX3JlZi0+e3N0aH07
CgoJZGVsZXRlICRtZXRhX3JlZi0+e3N0aH07CgkKCSRzdGgtPntmaH0gPSAkZmg7Cgkkc3RoLT57
bWV0YV9yZWZ9ID0gJG1ldGFfcmVmOwoJJHN0aC0+e2FjdGl2ZX0gPSAxOwoJCglibGVzcyAkc3Ro
OwoJCglyZXR1cm4gJHN0aDsKfQoKc3ViIGZpbmlzaAp7CglteSAoJHNlbGYpID0gQF87CgoJJHNl
bGYtPntmaH0tPmNsb3NlKCkKCQlpZiAoJHNlbGYtPnthY3RpdmV9KTsKCSRzZWxmLT57YWN0aXZl
fQk9IDA7Cn0KCnN1YiBmZXRjaHJvd19hcnJheXJlZgp7CglteSAoJHNlbGYpID0gQF87CgoJaWYg
KGVvZigkc2VsZi0+e2ZofSkpCgl7CgkJJHNlbGYtPmZpbmlzaCgpOwoJCXJldHVybiB1bmRlZjsK
CX0KCglyZXR1cm4gZmRfcmV0cmlldmUoCgkJJHNlbGYtPntmaH0KCSk7Cn0KCnN1YiBmZXRjaHJv
d19hcnJheQp7CglteSAoJHNlbGYpID0gQF87CgkKCW15ICRhciA9ICRzZWxmLT5mZXRjaHJvd19h
cnJheXJlZigpOwoJcmV0dXJuIEB7JGFyfSBpZiBkZWZpbmVkICRhcjsKCXJldHVybiAoKTsKfQoK
c3ViIGZldGNocm93X2hhc2hyZWYKewoJbXkgKCRzZWxmKSA9IEBfOwoJCglteSAlaGFzaDsKCW15
IEBhcnJheSA9ICRzZWxmLT5mZXRjaHJvd19hcnJheSgpOwoKCUBoYXNoewoJCUB7JHNlbGYtPntO
QU1FfX0KCX0gPSBAYXJyYXk7CgoJcmV0dXJuIFwlaGFzaCBpZiBzY2FsYXIoQGFycmF5KTsKCXJl
dHVybiB1bmRlZjsKfQoKc3ViIGZldGNoYWxsX2FycmF5cmVmCnsKCW15ICgkc2VsZiwgJHNsaWNl
LCAkbWF4X3Jvd3MgKSA9IEBfOwoKCW15ICRyb3dfY291bnQgPSAwOwoJbXkgJGFyID0gW107Cglt
eSAkdGhpbmdfdG9fcHVzaDsKCgl3aGlsZSAoCgkJJHRoaW5nX3RvX3B1c2ggPSAkc2VsZi0+ZmV0
Y2hhbGxfYXJyYXlyZWZfaGVscGVyKCRzbGljZSkKCSkKCXsKCQlsYXN0IGlmIChkZWZpbmVkICRt
YXhfcm93cyAmJiAkcm93X2NvdW50IDwgJG1heF9yb3dzKTsKCQkKCQkkcm93X2NvdW50Kys7CgkJ
cHVzaCBAJGFyLCAkdGhpbmdfdG9fcHVzaAoJfQoJcmV0dXJuICRhcjsKCn0KCnN1YiBmZXRjaGFs
bF9hcnJheXJlZl9oZWxwZXIKewoJbXkgKCRzZWxmLCAkc2xpY2UpID0gQF87CglpZiAocmVmKCRz
bGljZSkgZXEgJ0hBU0gnKQoJewoJCW15ICRociA9ICRzZWxmLT5mZXRjaHJvd19oYXNocmVmKCk7
CgkJcmV0dXJuIHVuZGVmIGlmICFkZWZpbmVkICRocjsKCQkKCQlpZiAoISBzY2FsYXIoa2V5cyAl
JHNsaWNlKSkKCQl7CgkJCXJldHVybiAkaHI7CgkJfQoJCWVsc2UKCQl7CgkJCW15ICVpX2hhc2g7
CgkJCUBpX2hhc2h7a2V5cyAlJHNsaWNlfSA9IAoJCQkJQHslJGhyfXtrZXlzICUkc2xpY2V9OwoJ
CQlyZXR1cm4gXCVpX2hhc2g7CgkJfQoJfQoJZWxzaWYgKHJlZigkc2xpY2UpIGVxICdBUlJBWScg
fHwgISRzbGljZSkKCXsKCQlteSAkYXIgPSAkc2VsZi0+ZmV0Y2hyb3dfYXJyYXlyZWYoKTsKCQly
ZXR1cm4gdW5kZWYgaWYgIWRlZmluZWQgJGFyOwoJCQoJCWlmICghIHNjYWxhcihAJHNsaWNlKSkK
CQl7CgkJCXJldHVybiAkYXI7CgkJfQoJCWVsc2UKCQl7CgkJCW15IEBzbGljZWQgPSBAJGFyW0Ak
c2xpY2VdOwoJCQlyZXR1cm4gXEBzbGljZWQ7CgkJfQoJfQoJZWxzZSB7CgkJZGllICJJIGhhdmUg
bm8gaWRlYSB3aGF0IHlvdSB3YW50IG1lIHRvIGRvLiI7Cgl9Cn0KCnN1YiBmZXRjaGFsbF9oYXNo
cmVmCnsKCW15ICggJHNlbGYsICRrZXlfZmllbGQgKSA9IEBfOwoJCglkaWUgIjJuZCBhcmcgdG8g
ZmV0Y2hhbGxfaGFzaHJlZiBtdXN0IGJlIGEgZmllbGQgdG8ga2V5IG9uLiIKCQlpZiAoIWRlZmlu
ZWQgJGtleV9maWVsZCk7CgkJCglteSAlaGFzaDsKCQoJbXkgJGhyOwoJd2hpbGUgKCRociA9ICRz
ZWxmLT5mZXRjaHJvd19oYXNocmVmKCkpCgl7CgkJJGhhc2h7JGhyLT57JGtleV9maWVsZH19ID0g
JGhyOwoJfQoJCglyZXR1cm4gXCVoYXNoOwp9CgpzdWIgcm93cwp7CglteSAoJHNlbGYpID0gQF87
CglyZXR1cm4gJHNlbGYtPnttZXRhX3JlZn17c3RoX3N1YnN9LT57cm93c307Cn0KCjE7Cgo=
------=_Part_13389_15084206.1187968939577--
