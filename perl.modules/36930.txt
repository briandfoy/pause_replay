Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:36930
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 10054 invoked from network); 8 Dec 2004 06:41:14 -0000
Received: from x1.develooper.com (63.251.223.170)
  by lists.develooper.com with SMTP; 8 Dec 2004 06:41:14 -0000
Received: (qmail 15760 invoked by uid 225); 8 Dec 2004 06:41:14 -0000
Delivered-To: modules@perl.org
Received: (qmail 15755 invoked by alias); 8 Dec 2004 06:41:13 -0000
X-Spam-Status: No, hits=-4.9 required=8.0
	tests=BAYES_00
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
Received: from pause.fiz-chemie.de (HELO pause.perl.org) (195.149.117.110)
  by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Tue, 07 Dec 2004 22:41:11 -0800
Received: from pause.perl.org (localhost [127.0.0.1])
	by pause.perl.org (8.12.3/8.12.3/Debian-7.1) with ESMTP id iB86ex64024630;
	Wed, 8 Dec 2004 07:41:00 +0100
Received: (from nobody@localhost)
	by pause.perl.org (8.12.3/8.12.3/Debian-7.1) id iB86ewdl024627;
	Wed, 8 Dec 2004 07:40:58 +0100
Date: Wed, 8 Dec 2004 07:40:58 +0100
Message-ID: <200412080640.iB86ewdl024627@pause.perl.org>
Subject: Module submission POE::Component::Pool::Thread
Reply-To: modules@perl.org
To: modules@perl.org, tag@cpan.org
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       POE::Component::Pool::Thread
  DSLIP:       bdpOo
  description: Boss session for managing Worker threads
  userid:      TAG (Scott McCoy)
  chapterid:    5 (Networking_Devices_IPC)
  communities:
    #poe@magnet

  similar:
    Thread::Pool

  rationale:

    This is a thread pool managed by a POE Session, it allows POE to
    maintain control over its thread while communicating to worker
    threads in a cooperative fasion. Threads are given their jobs
    through thread-safe queues. Events marking the completion of an
    assigned task are communicated back to POE via a one way pipe.
    Results of said task are optionally provided via a seperate thread
    safe queue. A thread safe semaphore is used to keep track of threads
    that are currently busy, and an preemptive expansion method is used
    to keep an optional number of spare threads around, up to an
    optional maximum number of threads. Any further tasks are placed in
    an internal queue, and assigned to free threads as thier jobs are
    completed.

    Thread::Pool does pretty much the same thing in a manner that is
    not suitable for POE applications. To my knowledge nothing like this
    currently exists, and I know nothing that accomplishes this task is
    listed in CPAN.

  enteredby:   TAG (Scott McCoy)
  enteredon:   Wed Dec  8 06:40:55 2004 GMT

The resulting entry would be:

POE::Component::Pool::
::Thread          bdpOo Boss session for managing Worker threads     TAG


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=ca800000_3617e6c0960c9394&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=ca800000_3617e6c0960c9394&SUBMIT_pause99_add_mod_insertit=1
