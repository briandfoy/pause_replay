Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:61183
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 17721 invoked from network); 5 Jul 2008 13:19:51 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by x6.develooper.com with SMTP; 5 Jul 2008 13:19:51 -0000
Received: (qmail 23965 invoked by uid 225); 5 Jul 2008 13:19:50 -0000
Delivered-To: modules@perl.org
Received: (qmail 23954 invoked by alias); 5 Jul 2008 13:19:50 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00
X-Spam-Check-By: la.mx.develooper.com
Received: from pause.fiz-chemie.de (HELO pause.perl.org) (195.149.117.110)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Sat, 05 Jul 2008 06:17:57 -0700
Received: from pause.perl.org (localhost.localdomain [127.0.0.1])
	by pause.perl.org (8.13.8/8.13.8/Debian-3) with ESMTP id m65DGlUv025967;
	Sat, 5 Jul 2008 15:16:47 +0200
Received: (from nobody@localhost)
	by pause.perl.org (8.13.8/8.13.8/Submit) id m65DGkWr025966;
	Sat, 5 Jul 2008 15:16:46 +0200
Date: Sat, 5 Jul 2008 15:16:46 +0200
Message-ID: <200807051316.m65DGkWr025966@pause.perl.org>
Subject: Module submission Data::HashArray
Reply-To: modules@perl.org
To: modules@perl.org, aulusoy@cpan.org
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Data::HashArray
  DSLIP:       RdpOp
  description: An array of hashes with magical properties
  userid:      AULUSOY (Ayhan Ulusoy)
  chapterid:   6 (Data_Type_Utilities)
  communities:
    perlmonks.org

  similar:

  rationale:

    Data::HashArray uses heavy dark magic with overloading and AUTOLOAD
    to overcome the following issues:

    - MULTIPLICTY: Wouldn't be nice to have an array of objects (or
    hashes) that behave like a single object(or hash) when accessed as
    such. This way you wouldn't need to really know if you are dealing
    with one or multiple objets (hashes). This is expecially useful for
    XML applications.

    - HASHING: So, you have an array of hashes that contain a field
    named 'id', for example. For quick access by 'Id', what you rather
    need is a hash of hashes. Of course you could do this manually, but
    Data::HashArray has a handy method for this. hash(). You can pass
    the name of the field to hash, and it will create a hash of
    HashArrays for you. Note that it is not a hash of hashes, but that
    doesn't matter because MULTIPLICITY/SINGULARITY is already taken
    care of for you.

    The name Data::HashArray has been chosen because it reflects what
    the object stands for.

  enteredby:   AULUSOY (Ayhan Ulusoy)
  enteredon:   Sat Jul  5 13:16:46 2008 GMT

The resulting entry would be:

Data::
::HashArray       RdpOp An array of hashes with magical properties   AULUSOY


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=5f210000_b20dd8bdaf56d0ba&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=5f210000_b20dd8bdaf56d0ba&SUBMIT_pause99_add_mod_insertit=1
