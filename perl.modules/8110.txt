Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:8110
Return-Path: <knagano@sodan.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 7150 invoked from network); 9 Oct 2001 11:34:55 -0000
Received: from sodan.org (HELO www.sodan.org) (210.224.163.21)
  by onion.valueclick.com with SMTP; 9 Oct 2001 11:34:55 -0000
Received: from www.sodan.org (localhost [127.0.0.1])
	by www.sodan.org (8.9.3+3.2W/3.7W/Sodan.smtpfeed) with ESMTP id UAA15232;
	Tue, 9 Oct 2001 20:34:26 +0900
Date: Tue, 09 Oct 2001 20:34:26 +0900
Message-ID: <lyy9mlyrlp.wl@www.sodan.org>
 <knagano@sodan.org>
To: Kirrily Robert <skud@infotrope.net>
Cc: knagano@sodan.org, andreas.koenig@anima.de (Andreas J. Koenig),
        modules@perl.org
Subject: Re: Request for PAUSE userid
In-Reply-To: <E15q7dG-0000QH-00@tanqueray.infotrope.net>
References: <lyr8sr2wqa.wl@www.sodan.org>
	<ly3d4ysc4l.wl@www.sodan.org>
	<m3g08xi2qe.fsf@anima.de>
	<lyd741rtxq.wl@www.sodan.org>
	<knagano@sodan.org>
	<E15q7dG-0000QH-00@tanqueray.infotrope.net>
User-Agent: Wanderlust/2.6.0 (Twist And Shout) EMY/1.13.9 (Art is long, life
 is short) SLIM/1.14.7 (=?ISO-2022-JP?B?GyRCPHIwZjpMTD4bKEI=?=) APEL/10.3
 Emacs/21.0.105 (i586-pc-linux-gnulibc1) MULE/5.0 (SAKAKI)
Organization: Team Sodan (http://sodan.org/)
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
X-Spam-Rating: onion.valueclick.com 1.6.2 0/1000/N
Approved: news@nntp.perl.org
From: knagano@sodan.org (Keiichiro Nagano)

Hi, Mr. Robert.

At Sun, 07 Oct 2001 02:41:50 -0400,
Kirrily Robert wrote:
> >>  >> I've implemented 'memfrob' bogo-encryption(?) routine provided
> >>  >> with GNU libc. It is written in 100% pure Perl, so with this
> >>  >> library, you can frobnicate and defrobnicate strings without
> >>  >> glibc.
> >>  >> 
> >>  >> I will name it String::Memfrob.
> >> Maybe Crypt::Memfrob?
> >I think we should call it String::Memfrob.  Because, in glibc,
> >memfrob(3) is provided by <string.h>, not <crypt.h>.
>
> I think that Crypt::Memfrob is best.  We don't need to support gratuitous
> compatibility with legacy languages ;) ... we're aiming at *Perl*
> programmers here after all, and I think if I were looking for encryption 
> or bogo-encryption routines I'd look in Crypt:: 

OK I see.  I'll call it Crypt::Memfrob.  Thank you for your advices,
Mr. Koenig and Mr. Robert.

> For example, I'd look for a rot13 module in Crypt:: before anywhere
> else.

I've hesitated to name it Crypt:: because memfrob is so simple, naive
algorithm.

-- 
Keiichiro Nagano
