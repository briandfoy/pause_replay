Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:20827
Return-Path: <nobody@pause.x.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 14528 invoked by uid 76); 2 May 2003 18:59:39 -0000
Received: from qmailr@one.develooper.com (HELO ran-out.mx.develooper.com) (64.81.84.115) by onion.perl.org (qpsmtpd/0.26-dev) with SMTP; Fri, 02 May 2003 11:59:39 -0700
Received: (qmail 30131 invoked by uid 225); 2 May 2003 18:59:31 -0000
Delivered-To: modules@perl.org
Received: (qmail 30123 invoked by uid 507); 2 May 2003 18:59:30 -0000
Received: from pause.perl.org (HELO pause.perl.org) (212.40.160.59) by one.develooper.com (qpsmtpd/0.26-dev) with SMTP; Fri, 02 May 2003 11:59:28 -0700
Received: from pause.perl.org (IDENT:nobody@localhost [127.0.0.1])	by pause.perl.org (8.12.9/8.12.9) with ESMTP id h42IxPI3004269	for <modules@perl.org>; Fri, 2 May 2003 20:59:25 +0200
Received: (from nobody@localhost)	by pause.perl.org (8.12.9/8.12.9/Submit) id h42IxPIp004268;	Fri, 2 May 2003 20:59:25 +0200
Date: Fri, 2 May 2003 20:59:25 +0200
Message-ID: <200305021859.h42IxPIp004268@pause.perl.org>
Subject: PAUSE ID request (DHARDISON; Dylan William Hardison)
Reply-To: modules@perl.org
To: modules@perl.org
X-SMTPD: qpsmtpd/0.26-dev, http://develooper.com/code/qpsmtpd/
X-Spam-Check-By: one.develooper.com
X-Spam-Status: No, hits=1.1 required=7.0 tests=CARRIAGE_RETURNS,SPAM_PHRASE_00_01 version=2.44
X-SMTPD: qpsmtpd/0.26-dev, http://develooper.com/code/qpsmtpd/
Approved: news@nntp.perl.org
From: upload@pause.x.perl.org ("Perl Authors Upload Server")

Request to register new user

fullname: Dylan William Hardison
  userid: DHARDISON
    mail: CENSORED
homepage: dylan.hardison.net
     why:

    I am planning on contributing ValidateHash.

    Validate::Hash::Match example:

    my $m = new Validate::Hash('this && that || foo');

    $m->match(\%hash) ^^ Will return true if %hash has a key named
    this, and a key named that, or a key named foo. Much more
    complicated things are possible, including regex matches.

    Validate::Hash has some high-level ways of doing the same things,
    Validate::Hash::Match is more flexible.

    More examples:
    http://dylan.hardison.net/modules/ValidateHash-1.21.tar.gz

    Cheers!


The following links are only valid for PAUSE maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_user&USERID=05300000_713c0fdc3a427d43&SUBMIT_pause99_add_user_sub=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_user&USERID=05300000_713c0fdc3a427d43&SUBMIT_pause99_add_user_Definitely=1
