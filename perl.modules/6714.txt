Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:6714
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 18732 invoked from network); 24 Jul 2001 16:11:16 -0000
Received: from dubravka.kbx.de (HELO pause.perl.org) (root@212.40.160.59)
  by onion.valueclick.com with SMTP; 24 Jul 2001 16:11:16 -0000
Received: (from nobody@localhost)
	by pause.perl.org (8.9.3/8.9.3) id SAA26582;
	Tue, 24 Jul 2001 18:11:14 +0200
Date: Tue, 24 Jul 2001 18:11:14 +0200
Message-ID: <200107241611.SAA26582@pause.perl.org>
Reply-To: modules@perl.org
Subject: Module submission HTML::Element::MetaHash
To: modules@perl.org
X-Spam-Rating: onion.valueclick.com 1.6.2 0/1000/N
Approved: news@nntp.perl.org
From: upload@p11.speed-link.de ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       HTML::Element::MetaHash
  DSLIP:       cdprp
  description: tied hash for <META>s in HTML::Element tree
  userid:      MARSHALL (David Marshall)
  chapterid:   15 (World_Wide_Web_HTML_HTTP_CGI)
  communities:
    comp.lang.perl.modules

  similar:
    HTML::Element

  rationale:

    Various approaches are used to manipulate the <META> tags in an
    HTML document - from insane regexes all the way up to using
    HTML::Element. Yet these approaches always couple the "what" and
    "why" of <META> fiddling with the "how," which is somewhat
    distasteful.

    It would be more convenient (at least for the application for which
    I created this) to tie a hash to the <META> elements, then to
    manipulate the hash rather than the HTML::Element tree.

  enteredby:   MARSHALL (David Marshall)
  enteredon:   Tue Jul 24 16:11:14 2001 GMT

The resulting entry would be:

HTML::Element::
::MetaHash        cdprp tied hash for <META>s in HTML::Element tree  MARSHALL


Thanks for registering,
The Pause Team

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=64000000_9326a17bf7563227&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=64000000_9326a17bf7563227&SUBMIT_pause99_add_mod_insertit=1
