Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:7286
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 52523 invoked from network); 31 Aug 2001 00:30:16 -0000
Received: from dubravka.kbx.de (HELO pause.perl.org) (root@212.40.160.59)
  by onion.valueclick.com with SMTP; 31 Aug 2001 00:30:16 -0000
Received: (from nobody@localhost)
	by pause.perl.org (8.9.3/8.9.3) id CAA04493;
	Fri, 31 Aug 2001 02:30:13 +0200
Date: Fri, 31 Aug 2001 02:30:13 +0200
Message-ID: <200108310030.CAA04493@pause.perl.org>
Reply-To: modules@perl.org
Subject: Module submission Units::Calc
To: modules@perl.org, sfink@cpan.org
X-Spam-Rating: onion.valueclick.com 1.6.2 0/1000/N
Approved: news@nntp.perl.org
From: upload@p11.speed-link.de ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Units::Calc
  DSLIP:       bdpfp
  description: Human-readable unit-aware calculator
  userid:      SFINK (Steve A Fink)
  chapterid:    6 (Data_Type_Utilities)
  communities:

  similar:
    Math::Units Convert::Units

  rationale:

    Not sure where to put this in the hierarchy. This is a unit-aware
    desktop calculation module that attempts to figure out reasonable
    units to display values in. Example output (ucalc is a thin
    command-line wrapper for the module):

    % ./ucalc "8KB / (8KB/(20MB/sec) + 15ms)" 532.3 byte / millisec
    1.785 gigabyte / hour 42.83 gigabyte / day 519.8 kilobyte / sec
    30.46 megabyte / minute (That calculation is an 8KB random I/O
    throughput estimate based on 20MB/sec sequential transfers and 15ms
    average access time.)

    This is similar to Math::Units in that it involves unit conversions
    (though Math::Units is much more complete), and to Convert::Units in
    making some attempt at dealing with human-readable unit descriptions
    (Convert::Units goes much farther in that direction, since that is
    its primary focus). Neither of them tries out different possible
    outputs. Which, incidentally, was the reason why I couldn't really
    use either of them as a subroutine, though I'd like to add a way to
    plug them in with restricted functionality.

    It doesn't make sense to me to put it under Convert::, since
    conversion isn't the focus of its functionality. Math:: makes more
    sense, but calling it Math::Units::Calc implies a nonexistent
    relationship to Math::Units, and I'm not sure where else to put it
    in there. Math::Calc::Units?Suggestions appreciated.

  enteredby:   SFINK (Steve A Fink)
  enteredon:   Fri Aug 31 00:30:13 2001 GMT

The resulting entry would be:

Units::
::Calc            bdpfp Human-readable unit-aware calculator         SFINK


Thanks for registering,
The Pause Team

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=4d000000_7b47fc33b98d7254&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=4d000000_7b47fc33b98d7254&SUBMIT_pause99_add_mod_insertit=1
