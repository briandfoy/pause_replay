Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:5903
Return-Path: <Ron.Isaacson@morganstanley.com>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 94375 invoked from network); 31 May 2001 15:47:17 -0000
Received: from hqvsbh2.ms.com (205.228.12.104)
  by onion.valueclick.com with SMTP; 31 May 2001 15:47:17 -0000
Received: from hqvsbh2-idmz.ms.com (localhost [127.0.0.1])
	by hqvsbh2.ms.com (Postfix) with SMTP id B7DA11C87
	for <modules@perl.org>; Thu, 31 May 2001 11:17:00 -0400 (EDT)
Received: from pismh1.ms.com (unknown [144.14.110.221])
	by hqvsbh2-idmz.ms.com (Postfix) with ESMTP id 9C8251B3E
	for <modules@perl.org>; Thu, 31 May 2001 11:17:00 -0400 (EDT)
Received: from morganstanley.com (bk12ronisaacpc.morgan.com [144.14.248.46])
        by pismh1.ms.com (8.8.5/imap+ldap v2.4) with ESMTP id LAA00497
        for <modules@perl.org>; Thu, 31 May 2001 11:17:00 -0400 (EDT)
Message-ID: <3B16606D.302F16A8@morganstanley.com>
Date: Thu, 31 May 2001 11:17:01 -0400
Reply-To: Ron.Isaacson@morganstanley.com
Organization: Morgan Stanley
X-Mailer: Mozilla 4.75 [en]C-CCK-MCD MS4.75 V20001029.1  (WinNT; U)
X-Accept-Language: en,pdf
MIME-Version: 1.0
To: modules@perl.org
Subject: New User Request
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
X-Spam-Rating: onion.valueclick.com 1.6.2 0/1000/N
Approved: news@nntp.perl.org
From: Ron.Isaacson@morganstanley.com (Ron Isaacson)

Hello --

I'd like to register as a CPAN contributor.

Name:   Ron Isaacson
E-mail: ron.isaacson@morganstanley.com
Userid: ISAACSON

I have one module ready for near-immediate release: Env::Module, a Perl
interface to modulecmd, to automate loading of modulefiles from Perl
scripts. Although the global community of module users is not huge, it
definitely does exist, and Env::Module should reduce the need for
deviant hackery.

I'm also working on a much larger project, tentatively called Xfer. Xfer
supports transferring of data between two arbitrary sources. The sources
are extensible -- currently I have Xfer::Source::CSV (for delimited text
files), Xfer::Source::DBI (for any DBD database), and Xfer::Source::Perl
(for Perl functions, called repeatedly to produce or accept data).
Anybody can write more Xfer::Source classes. You simply instantiate two
Xfer::Source objects and pass them to Xfer, which performs the transfer.
Many options are supported, such as mapping (reordering) of fields, row
callbacks, timeouts, etc. I've got an early alpha of this working, and I
would like to start releasing it for testing and feedback.

Thank you!

--
Ron Isaacson
Morgan Stanley
ron.isaacson@morganstanley.com / (718) 754-2345
