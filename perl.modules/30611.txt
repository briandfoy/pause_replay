Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:30611
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 23102 invoked by uid 76); 9 Apr 2004 15:28:45 -0000
Received: from x1.develooper.com (HELO x1.develooper.com) (63.251.223.170)
  by onion.perl.org (qpsmtpd/0.27.1) with SMTP; Fri, 09 Apr 2004 08:28:45 -0700
Received: (qmail 22401 invoked by uid 225); 9 Apr 2004 15:28:42 -0000
Delivered-To: modules@perl.org
Received: (qmail 22370 invoked by alias); 9 Apr 2004 15:28:39 -0000
X-Spam-Status: No, hits=0.0 required=7.0
	tests=
X-Spam-Check-By: la.mx.develooper.com
Received: from pause.fiz-chemie.de (HELO pause.perl.org) (195.149.117.110)
  by la.mx.develooper.com (qpsmtpd/0.27.1) with ESMTP; Fri, 09 Apr 2004 08:28:39 -0700
Received: from pause.perl.org (localhost [127.0.0.1])
	by pause.perl.org (8.12.3/8.12.3/Debian-6.6) with ESMTP id i39FSWTB013271;
	Fri, 9 Apr 2004 17:28:32 +0200
Received: (from nobody@localhost)
	by pause.perl.org (8.12.3/8.12.3/Debian-6.6) id i39FSVJZ013269;
	Fri, 9 Apr 2004 17:28:31 +0200
Date: Fri, 9 Apr 2004 17:28:31 +0200
Message-ID: <200404091528.i39FSVJZ013269@pause.perl.org>
Subject: Module submission CGI::Session::Encrypted
Reply-To: modules@perl.org
To: modules@perl.org, sriha@cpan.org
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       CGI::Session::Encrypted
  DSLIP:       bdpOp
  description: Encrypted session data in CGI applications
  userid:      SRIHA (Stepan Riha)
  chapterid:   15 (World_Wide_Web_HTML_HTTP_CGI)
  communities:
    comp.lang.perl.modules

  similar:
    CGI::Session

  rationale:

    I'm extending CGI::Session to allow for encrypting the data
    persisted on the server. The module works as a drop-in replacement
    for CGI::Session.

    The CGI::Session::Encrypted module bundles additional sub-modules
    that hand the actual encryption (i.e.
    CGI::Session::Encrypted::Crypt::CBC) and ancryption key generation
    (i.e. CGI::Session::Encrypted::Key::MD5). My module lets
    CGI::Session and its drivers do most of the work.

    Here's the documentation for the main module:

    NAME CGI::Session::Encrypted - encrypted session data in CGI
    applications

    SYNOPSIS # Object initialization: use CGI::Session::Encrypted;

    my $session = new CGI::Session("driver:File;crypt:Ceasar", undef,
    {Directory=>'/tmp'});

    # getting the effective session id: my $CGISESSID = $session->id();

    ...

    # delete the session for good $session->delete();

    DESCRIPTION CGI::Session::Encrypted is a Perl5 library that
    provides easy to use encryption for persisted data manged with the
    CGI::Session manpage. It is intended for situations where you do not
    want the session data stored on the server to be readable by
    unauthorised users or processes.

    The session data is encrypted with a configurable cipher and a
    random key - the default cipher is DES using a 128 bit key.

    The SSID generated by this module contains both the session id,
    which identifies the persisted session data on the server, as well
    as the encryption key, which allows the session data to be
    decrypted.

    WEAKNESSES If you pass the SSID as part of the URL (as opposed to
    using cookies or passing it as POST data), your web-server log will
    contain the encryption key information.

    To avoid this vulnerability, you should avoid passing the SSID as
    part of the GET URI.

    And of course, you should use SSL if you are concerned about the
    traffic between the browser and the server.

    METHODS The CGI::Session::Encrypted module extends the
    functionality of the CGI::Session manpage. Following is the overview
    of features added by CGI::Session::Encrypted. For additional
    documentation, please see the CGI::Session manpage.

    "new( DSN, SID, HASHREF )" Requires three arguments as described in
    the CGI::Session manpage. The DSN may specify which encryption and
    key negeration modules to use. The HASHREF may contain addition
    configuration for these modules. If no "crypt" or "key" is specified
    in the DSN, the module defaults to "crypt:CBC;key:MD5".

    Examples:

    $session = new CGI::Session::Encrypted(undef, undef, undef);
    $session = new
    CGI::Session::Encrypted("crypt:Ceasar;serializer:Storable", undef,
    {Directory=>'/tmp'}) $session = new
    CGI::Session::Encrypted("crypt:CBC", undef, { KeySize=>32,
    cipher=>'Blowfish'})

    Following data source variables are supported by this module:

    * "crypt" - crypt module to be used to encrypt serialized data
    before saving and to decrypt serialized data after loading.
    Available crypt modules are "CBC" and "Ceasar". Default is "CBC".

    * "key" - random key generator to used to generate the encryption
    key when new session is to be created. Available key generator is
    "MD5". Default is "MD5".

    "id()" Returns effective ID for a session. Since effective ID and
    claimed ID can differ, valid session id should always be retrieved
    using this method.

    The ID returned by this method consists of both the encryption key
    as well as the session ID used to identify the session data on disk.

    PERSISTED DATA The serialized session data is encrypted with the
    specified encryption module using the session's key. The encrypted
    data is then stored as a hex string and is thus binary safe.

    DISTRIBUTION CGI::Session::Encrypted consists of several modular
    components such as encryption modules and key generators. This
    section lists what is available.

    ENCRYPTION MODULES

    Following encryption modules are included in the standard
    distribution:

    * "CBC" - default encryption module using the Crypt::CBC manpage.
    Requires the Crypt::CBC manpage and a corresponding cipher module,
    such as the Crypt::DES manpage. Full name: the
    CGI::Session::Encrypted::Crypt::CBC manpage

    * "Caesar" - encryption module which uses a (weak) Ceasar cipher
    for encryption. Full name: the
    CGI::Session::Encrypted::Crypt::Caesar manpage

    KEY GENERATORS

    Following key generators are available:

    * "MD5" - default key generator which uses standard the Digest::MD5
    manpage for generating keys. Full name: the
    CGI::Session::Encrypted::Key::MD5 manpage.

    COPYRIGHT Copyright (C) 2004 Stepan Riha. All rights reserved.

    This library is free software. You can modify and or distribute it
    under the same terms as Perl itself.

    AUTHOR Stepan Riha <sriha@cpan.org>. Feedbacks, suggestions are
    welcome.

    SEE ALSO * the CGI::Session manpage - the CGI::Session
    documentation. Detailed information for session management.

    * the CGI::Session::Encrypted::Crypt::CBC manpage - Crypt::CBC
    based encryption

    * the CGI::Session::Encrypted::Crypt::Ceasar manpage - Ceasar
    cipher encryption

    * the CGI::Session::Encrypted::Key::MD5 manpage - Digest::MD5 based
    key genration

    * the Crypt::CBC manpage - encrypting data with Cipher Block
    Chaining Mode

    * the Crypt::DES manpage - DES encryption module

  enteredby:   SRIHA (Stepan Riha)
  enteredon:   Fri Apr  9 15:28:30 2004 GMT

The resulting entry would be:

CGI::Session::
::Encrypted       bdpOp Encrypted session data in CGI applications   SRIHA


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=75600000_c71ca9fd5da568fb&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=75600000_c71ca9fd5da568fb&SUBMIT_pause99_add_mod_insertit=1
