Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:4466
Return-Path: <ben@rhumba.pair.com>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 28025 invoked from network); 15 Feb 2001 04:49:47 -0000
Received: from relay1.pair.com (209.68.1.20)
  by tmtowtdi.perl.org with SMTP; 15 Feb 2001 04:49:47 -0000
Received: (qmail 5291 invoked from network); 15 Feb 2001 04:49:19 -0000
Received: from ignition-gw.customer.dsl.alter.net (HELO ?10.100.100.31?) (206.66.205.2)
  by relay1.pair.com with SMTP; 15 Feb 2001 04:49:19 -0000
X-pair-Authenticated: 206.66.205.2
User-Agent: Microsoft-Outlook-Express-Macintosh-Edition/5.02.2022
Date: Wed, 14 Feb 2001 20:48:02 -0800
Subject: Perl Net::SSH Update -- Net::SSH::perl
To: <modules@perl.org>
Message-ID: <B6B09F82.7BC2%ben@rhumba.pair.com>
Mime-version: 1.0
Content-type: text/plain; charset="US-ASCII"
Content-transfer-encoding: 7bit
Approved: news@nntp.perl.org
From: ben@rhumba.pair.com (Benjamin Trott)

I recently wrote a message entitled "Perl SSH Client", to announce a Perl
implementation of an ssh client that I wrote.

I've spoken with the author of the Net::SSH currently on CPAN (it's a
wrapper around the command-line ssh client), and we've agreed on renaming
his Net::SSH to something like Net::SSH::system, and mine to something like
Net::SSH::perl. Net::SSH itself, then, will be an interface to any of these
implementation modules, to be used something like:

    use Net::SSH mode => 'perl';
    my $ssh = Net::SSH->new($host, ...);

and so on. My Net::SSH::perl is ready for release as a 1.0 version. I
believe it's stable, and it currently supports password, RSA, RSA-Rhosts,
and Rhosts authentication methods, and IDEA, DES, and 3DES encryption.

I'd just like to make sure that the naming convention of Net::SSH::perl is
agreed upon as a good idea. Yes?

If so I'm planning to upload my Net::SSH::perl to CPAN; once Ivan (the
author of the current Net::SSH) has rewritten his Net::SSH to be
Net::SSH::system or something such, we can upload the Net::SSH interface to
these modules (I've written something that I believe will work just fine as
such an interface).

Net::SSH::perl is, of course, very useable on its own.

Thanks,
Benjamin Trott

