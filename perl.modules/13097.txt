Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:13097
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 57555 invoked by uid 76); 8 Aug 2002 18:40:16 -0000
Received: from root@[212.40.160.59] (HELO pause.perl.org) (212.40.160.59)
  by onion.perl.org (qpsmtpd/0.07b) with SMTP; Thu Aug  8 18:40:16 2002 -0000
Received: (from nobody@localhost)
	by pause.perl.org (8.11.6/8.11.6) id g78Idml30740;
	Thu, 8 Aug 2002 20:39:48 +0200
Date: Thu, 8 Aug 2002 20:39:48 +0200
Message-ID: <200208081839.g78Idml30740@pause.perl.org>
Subject: Module submission Test::ManyParams
Reply-To: modules@perl.org
To: modules@perl.org, bigj@cpan.org
Approved: news@nntp.perl.org
From: upload@p11.speed-link.de ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Test::ManyParams
  DSLIP:       cdpfp
  description: module to test many params as one test
  userid:      BIGJ (Janek Schleicher)
  chapterid:    3 (Development_Support)
  communities:
    perl.qa

  similar:

  rationale:

    This module helps to test a function or something similar with many
    different params.

    A typical example would be

    all_ok {foo(@_) > 0} [ [qw/arg1a arg1b arg1c/], [qw/arg2a arg2
    arg2c arg2d] ], "Test positivness of foo with all combinations of
    typical arguments";

    There will be also methods like all_dies_ok, all_like, all_can,
    all_isa, all_warn, ...

    In addition there will be similar methods, e.g. most_ok CODE PARAMS
    HOW_MANY [TEST_NAME], that will test only a random choosen part of
    the given parameters.

    This module had been discussed on perl.qa.

  enteredby:   BIGJ (Janek Schleicher)
  enteredon:   Thu Aug  8 18:39:47 2002 GMT

The resulting entry would be:

Test::
::ManyParams      cdpfp module to test many params as one test       BIGJ


Thanks for registering,
The Pause Team

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=6b100000_3a1739b59e2703e5&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=6b100000_3a1739b59e2703e5&SUBMIT_pause99_add_mod_insertit=1
