Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:82883
Return-Path: <alfie@linode1.alfiejohn.com>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 14984 invoked from network); 23 Oct 2012 21:32:16 -0000
Received: from x1.develooper.com (207.171.7.70)
  by x6.develooper.com with SMTP; 23 Oct 2012 21:32:16 -0000
Received: (qmail 29260 invoked by uid 225); 23 Oct 2012 21:32:15 -0000
Delivered-To: modules@perl.org
Received: (qmail 29256 invoked by alias); 23 Oct 2012 21:32:15 -0000
X-Spam-Status: No, hits=-1.9 required=8.0
	tests=BAYES_00,T_RP_MATCHES_RCVD
X-Spam-Check-By: la.mx.develooper.com
Received: from linode1.alfiejohn.com (HELO linode1.alfiejohn.com) (69.164.204.237)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Tue, 23 Oct 2012 14:32:12 -0700
Received: by linode1.alfiejohn.com (Postfix, from userid 1000)
	id 90D016099; Wed, 24 Oct 2012 08:32:08 +1100 (EST)
Date: Wed, 24 Oct 2012 08:32:08 +1100
To: Matt S Trout <mst@shadowcat.co.uk>
Cc: modules@perl.org
Subject: Re: Module submission Data::PathSimple
Message-ID: <20121023213208.GL20714@linode1.alfiejohn.com>
References: <201210131234.q9DCYOJp005719@pause.fiz-chemie.de>
 <221020122322238384%brian.d.foy@gmail.com>
 <20121023092947.GI20714@linode1.alfiejohn.com>
 <20121023153731.GT6412@newagaton.scsys.co.uk>
 <20121023204937.GJ20714@linode1.alfiejohn.com>
 <20121023211044.GX6412@newagaton.scsys.co.uk>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20121023211044.GX6412@newagaton.scsys.co.uk>
User-Agent: Mutt/1.5.20 (2009-06-14)
Approved: news@nntp.perl.org
From: alfie@h4c.kr (Alfie John)

On Tue, Oct 23, 2012 at 10:10:44PM +0100, Matt S Trout wrote:
> Audrey Tang once said:
> 
> "perl5 is just syntax. CPAN is the language."

Nice. I'm going to steal that.

> You're entirely welcome to disagree, but "I think the majority would agree"
> comes into the unfounded assertion category - and leads people to avoid
> dependencies "just becase", thereby resulting in CPAN soup where you have
> three modules doing very similar things in a particular piece of code that
> all behave -slightly- differently, at which point DW(anybody)M goes out the
> window because the 'what' that it does changes between sections of the same
> codebase.

Have you ever tried to install a single Perl module in a production
environment and it asks you to upgrade 20+ other modules? Saying Y is
not for the faint hearted. In fact, it's probably more likely to make
you think "do we really need to install this module, let's try looking
at something else".

> Damian made a substantial effort to try and provide a 'one common way' for
> a lot of things with Perl Best Practices and other works; quoting him while
> working towards undoing some if this work seems a trifle unfair.

I'd have to disagree with you here. What I meant by refering to his
Sufficiently Advanced Technologies talk is preciesly picking the best
defaults, providing a clean interface, and get out of the way of the
programmer. In other words, trying to keep it "Simple" :)

> But ... it's still your module, hence my naming suggestions went in a
> separate email to the 'grumpy old man' stuff above :)

All good :)

Hopefully you've all now got a better understanding of what I'm shooting for.

Alfie

-- 
Alfie John
http://h4c.kr
