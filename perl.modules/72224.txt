Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:72224
Return-Path: <simon@thegestalt.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Delivered-To: moderator for modules@perl.org
Received: (qmail 27674 invoked from network); 6 Aug 2010 22:09:22 -0000
Received: from x1.develooper.com (207.171.7.70)
  by x6.develooper.com with SMTP; 6 Aug 2010 22:09:22 -0000
Received: (qmail 24163 invoked by uid 225); 6 Aug 2010 22:09:21 -0000
Delivered-To: modules@perl.org
Received: (qmail 24158 invoked by alias); 6 Aug 2010 22:09:21 -0000
X-Spam-Status: No, hits=-0.7 required=8.0
	tests=RCVD_IN_DNSWL_LOW,T_RP_MATCHES_RCVD
X-Spam-Check-By: la.mx.develooper.com
Received: from bacchus.thegestalt.org (HELO thegestalt.org) (82.138.248.236)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Fri, 06 Aug 2010 15:09:20 -0700
Received: from simon by thegestalt.org with local (Exim 4.67 (FreeBSD))
	(envelope-from <simon@thegestalt.org>)
	id 1OhV6J-000K1d-2R; Fri, 06 Aug 2010 23:09:15 +0100
Date: Fri, 6 Aug 2010 23:09:15 +0100
To: Jens Rehsack <rehsack@googlemail.com>
Cc: modules@perl.org
Subject: Re: Module::Pluggable
Message-ID: <20100806220915.GJ2091@thegestalt.org>
References: <AANLkTilMibPrWx1hn7ctuk9j0jTayHJrZd6OzZTavou0@mail.gmail.com> <4C5BC6BD.6090605@netbsd.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <4C5BC6BD.6090605@netbsd.org>
User-Agent: Mutt/1.5.16 (2007-06-09)
Approved: news@nntp.perl.org
From: simon@thegestalt.org (Simon Wistow)

On Fri, Aug 06, 2010 at 08:24:29AM +0000, Jens Rehsack said:
> Would you please be so kind and give me a time frame when you're
> back again? Or can you simply login to PAUSE and give me the permissions
> to handle the RT tickets for Module::Pluggable (if you have an accessible
> repository, getting at least read access would be great).

Sorry - things have been a little crazy and apparently I missed your 
last mail.

The SVN respository is 

https://svn.unixbeard.net/simon/Module-Pluggable/

I'm a little gun shy adding even more options to the module since it's 
already getting quite bloated. I'll have a look at implementing the 
search depth stuff and get back to you.

That said - the point of seperating the code out into Module::Pluggable 
and a Module::Pluggable::Object class was so that people wouldn't need 
me to keep adidng features. So for example you could do (off the top of 
my head and not tested)

------- >8 -------

package Module::Pluggable::::Object::Jens;

use base qw(Module::Pluggable::Object);

sub find_files {
    my $self         = shift;
    my $search_path  = shift;
    my $file_regex   = $self->{'file_regex'} || qr/\.pm$/;
    my $min_depth    = $self->{'min_depth'};
    my $max_depth    = $self->{'max_depth'};

    # find all the .pm files in it
    # this isn't perfect and won't find multiple plugins per file
    #my $cwd = Cwd::getcwd;
    my @files = ();
    { # for the benefit of perl 5.6.1's Find, localize topic
        local $_;
        File::Find::find( { no_chdir => 1, wanted => sub {
                   # check if this matches our optional depth criteria
                   my $depth = _get_depth($File::Find::name);
                   return if ($min_depth && $depth<$min_depth) || 
                             ($max_depth && $depth>$max_depth);


                   return unless $File::Find::name =~ 
                       /$file_regex/;
                   (my $path = $File::Find::name) =~ 
                       s#^\\./##;
                   push @files, $path;
                 }
        }, $search_path );
    }
    #chdir $cwd;
    return @files;

}

1;

------- >8 -------


Hope that helps and sorry to keep you hanging.

Simon
