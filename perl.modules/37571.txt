Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:37571
Return-Path: <jv@squirrel.nl>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 17938 invoked from network); 10 Jan 2005 10:35:21 -0000
Received: from x1.develooper.com (63.251.223.170)
  by lists.develooper.com with SMTP; 10 Jan 2005 10:35:21 -0000
Received: (qmail 22921 invoked by uid 225); 10 Jan 2005 10:35:21 -0000
Delivered-To: modules@perl.org
Received: (qmail 22917 invoked by alias); 10 Jan 2005 10:35:20 -0000
X-Spam-Status: No, hits=-4.9 required=8.0
	tests=BAYES_00
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
Received: from smtp-vbr3.xs4all.nl (HELO smtp-vbr3.xs4all.nl) (194.109.24.23)
  by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Mon, 10 Jan 2005 02:35:17 -0800
Received: from phoenix.squirrel.nl (sioban.squirrel.nl [213.84.56.213])
	by smtp-vbr3.xs4all.nl (8.12.11/8.12.11) with ESMTP id j0AAZDo7063985;
	Mon, 10 Jan 2005 11:35:13 +0100 (CET)
	(envelope-from jv@squirrel.nl)
Received: by phoenix.squirrel.nl (Postfix, from userid 501)
	id DD4FE9DE9E; Mon, 10 Jan 2005 11:35:12 +0100 (CET)
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Message-ID: <16866.23136.708553.152255@phoenix.squirrel.nl>
Date: Mon, 10 Jan 2005 11:35:12 +0100
To: sjs@sonic.net
Reply-To: modules@perl.org
Cc: modules@perl.org
Subject: Re: Module submission Getopt:::OO
References: <200501092317.j09NHrKt026616@pause.perl.org>
X-Mailer: VM 7.19 under Emacs 21.3.1
X-Virus-Scanned: by XS4ALL Virus Scanner
Approved: news@nntp.perl.org
From: jvromans@squirrel.nl (Johan Vromans)

[Quoting Perl Authors Upload Server, on January 10 2005, 00:17, in "Module submission Ge"]
> 
> The following module was proposed for inclusion in the Module List:
> 
>   modid:       Getopt:::OO
> 
>   rationale:
> 
>     object oriented and I hope simple interface.

Getopt::Long and many other Getopt:: modules do this already.

>     Integrates help/usage into template for parsing command line
>     options.

Several other Getopt:: modules do this already.

However, as often discussed, this is a bogus approach since you need
to repeat the help info in the POD anyway. Getopt::Long has automatic
support for POD help info.

>     Flexable -- handles simple single character and long multi character
>     options.

Getopt::Long and many other Getopt:: modules do this already.

>     Parsing starts as very simple and increases in complexity
>     in such a way that (I hope) it behaves as a beginning programmer
>     would expect with simple command line parameters but will also
>     handle very complex command line parameters as well.

Getopt::Long and many other Getopt:: modules do this already.

 4) Parses
>     command line and saves options so user doesn't need to handle
>     variables. Access is like $x = $h->Values(opt) or if
>     ($h->Values(opt)) ...

This is a matter of taste. But does it validate yet another Getopt::
module?

The bottom line is: did you really consider using any of the many
Getopt:: modules that already exist? And if they did not meet your
specific needs, did you contact the authors to discuss improvements?

-- Johan
