Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:57228
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 12658 invoked from network); 17 Oct 2007 02:13:03 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 17 Oct 2007 02:13:03 -0000
Received: (qmail 21109 invoked by uid 225); 17 Oct 2007 02:13:03 -0000
Delivered-To: modules@perl.org
Received: (qmail 21104 invoked by alias); 17 Oct 2007 02:13:02 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00
X-Spam-Check-By: la.mx.develooper.com
Received: from pause.fiz-chemie.de (HELO pause.perl.org) (195.149.117.110)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Tue, 16 Oct 2007 19:13:00 -0700
Received: from pause.perl.org (localhost.localdomain [127.0.0.1])
	by pause.perl.org (8.13.4/8.13.4/Debian-3sarge3) with ESMTP id l9H2Cl4M026628;
	Wed, 17 Oct 2007 04:12:47 +0200
Received: (from nobody@localhost)
	by pause.perl.org (8.13.4/8.13.4/Submit) id l9H2ClQG026627;
	Wed, 17 Oct 2007 04:12:47 +0200
Date: Wed, 17 Oct 2007 04:12:47 +0200
Message-ID: <200710170212.l9H2ClQG026627@pause.perl.org>
Subject: Module submission DBIx::Pquery
Reply-To: modules@perl.org
To: modules@perl.org, pchines@cpan.org
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       DBIx::Pquery
  DSLIP:       adpOo
  description: SQL queries with parameters for end-users
  userid:      PCHINES (Peter Chines)
  chapterid:   7 (Database_Interfaces)
  communities:
    dbi-users

  similar:
    SQL::Library DBIx::Librarian DBIx::Connect

  rationale:

    This package primarily provides a commandline interface that makes
    it easy for users not versed in SQL, but needing access to a
    relational database, to leverage the knowledge of local database
    experts. Experts craft special query templates with parameters (and
    optionally prompts and default values), which are filled in
    interactively or via commandline options. Libraries of parameterized
    queries can be maintained, again leveraging the work of database
    experts. Result formatting may be specified at runtime or in the
    query template, including sprintf-style formatting of numeric
    fields.

    In addition, the module provides methods to maintain and use
    configuration files to supply all of the necessary database
    connection information, allowing users to ignore these details. By
    maintaining both user- and system-level configuration files,
    database access permissions can be assigned at whatever level is
    appropriate: private credentials for each user or shared access for
    a group, or a mixture. No attempt is made to prevent user access to
    passwords or other connection information, but private passwords are
    kept private via the local filesystem permissions.

    This module is distinguished from existing SQL template modules
    such as SQL::Library and DBIx::Librarian in several ways: - the
    intended audience is end users of the data, rather than programmers;
    this is most clear in the interactive mode, where user prompts and
    default values make it easier for a novice to supply the right
    criteria, as well as in the formatting of numeric values - this
    module provides for much more than the standard placeholder behavior
    supported by DBI and the other modules listed above; major changes
    to the query may be made in response to user input

    This module provides a mechanism for allowing individual users to
    connect to a database using credentials stored in configuration
    files, and in that respect is similar to DBIx::Connect. However,
    again the functionality is distinguished from that module in several
    ways: - connection information is stored in separate files, so that
    information for each realm may have different filesystem
    permissions, if desired, helping to limit access to sensitive
    information - connection information is sought first at the
    user-level, and then at the system-level, as with many UNIX resource
    files. This allows scripts to access a database with different
    privileges depending on which user runs the program, and/or provide
    a level of shared access. - command line programs allow users to
    maintain and modify the connection information, including, for
    example, simultaneously changing a password in the config file and
    in the database.

  enteredby:   PCHINES (Peter Chines)
  enteredon:   Wed Oct 17 02:12:47 2007 GMT

The resulting entry would be:

DBIx::
::Pquery          adpOo SQL queries with parameters for end-users    PCHINES


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=ebf00000_10fef139f360bf19&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=ebf00000_10fef139f360bf19&SUBMIT_pause99_add_mod_insertit=1
