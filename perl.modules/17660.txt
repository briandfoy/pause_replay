Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:17660
Return-Path: <corliss@digitalmages.com>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 44357 invoked by uid 76); 9 Feb 2003 01:26:18 -0000
Received: from qmailr@one.develooper.com (HELO ran-out.mx.develooper.com) (64.81.84.115) by onion.perl.org (qpsmtpd/0.20) with SMTP; 2003-02-09 01:26:18Z
Received: (qmail 11885 invoked by uid 225); 9 Feb 2003 01:26:14 -0000
Delivered-To: modules@perl.org
Received: (qmail 11879 invoked by uid 507); 9 Feb 2003 01:26:13 -0000
Received: from [12.17.180.99] (HELO sigurd.digitalmages.com) (12.17.180.99) by one.develooper.com (qpsmtpd/0.21-dev) with SMTP; 2003-02-09 01:26:12Z
Received: from localhost (localhost [127.0.0.1])	by sigurd.digitalmages.com (8.11.6/8.11.6) with ESMTP id h190tFe28623	for <modules@perl.org>; Sat, 8 Feb 2003 15:55:16 -0900
Date: Sat, 8 Feb 2003 15:55:15 -0900 (AKST)
To: modules@perl.org
Subject: Re: CPAN submission guidelines
In-Reply-To: <m3y94rkw8c.fsf@k242.linux.bogus>
Message-ID: <Pine.LNX.4.44.0302081547180.28481-100000@sigurd.digitalmages.com>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-SMTPD: qpsmtpd/0.21-dev, http://develooper.com/code/qpsmtpd/
X-Spam-Check-By: one.develooper.com
X-Spam-Status: No, hits=-0.8 required=7.0 tests=CARRIAGE_RETURNS,IN_REP_TO,QUOTED_EMAIL_TEXT,SPAM_PHRASE_03_05,USER_AGENT_PINE version=2.43
X-SMTPD: qpsmtpd/0.20, http://develooper.com/code/qpsmtpd/
Approved: news@nntp.perl.org
From: corliss@digitalmages.com (Arthur Corliss)
References: <m3y94rkw8c.fsf@k242.linux.bogus>

On Sat, 8 Feb 2003, Andreas J. Koenig wrote:

> Thank you, Arthur, for voicing your frustration. We do not have a
> bullet proof concept how to avoid frustration, but what happened to
> you seems avoidable.

:-) Thanks for hearing me out.

> Well, at least there it really says: You need *not* wait. You get
> maintainer status by simply using a namespace the first time.

I understood that, but it seemed that it might be a bit aggregious to go ahead
and use a space that might be contested later, or used for more appropriate
purposes by someone else.  For that reason, I've made the personal decision
not to upload anything that isn't signed off on.

> I'm reading the old thread again and I think the problem started with
> the namespace Parse::PerlConfig. Tim said:
>
>   Perhaps Parse::PlainConfig. Seems more natural to me that 'RCfile',
>   especially given the existance of Parse::PerlConfig.
>
> Parse::PerlConfig is not registered and imho is a bad precedent.
> Parse:: modules should deal with parse algorithms: Lex, RecDescent,
> Tokens, YALALR, Yapp are dealing with the task of parsing in a generic
> sense. I agree with brian that modules for reading config files should
> live in the Config or ConfigReader namespace.

I understand both brian's and your arguments, and as I said to him, I wish he
had pointed that out back then, I would have changed the module name to
something else.

> Oh well, I think, I'm ready to break down. Not by the namespace choice
> but by the fact that Tim's statement looked pretty approving and quite
> a lot of time has passed since. It's not acceptable for the users of
> your module to now reject a namespace proposal such a long time after
> it seemed to be approved.
>
> If nobody objects within the next three days, I'll approve
> Parse::PlainConfig.

Keep in mind, I haven't decided the best course of action on that module
myself.  I've taken what brian said to heart (though I still have a few
objections), and the users that I'm in contact with have already been warned
that there may be a name change in the future.  The biggest quandry I have is
a matter of cleaning up:  do I risk breaking existing scripts out there by
deleting Parse::PlainConfig from CPAN?  Or do I just funnel all future
development into another namespace?

> If you mean Class::EHierarchy, I've registered that now.

:-) Much obliged.

> CPAN is extremely tolerant in what it accepts. It works without human
> intervention. First-come-first-served is the default. It's the extra
> blessing of being registered in the module list that needs human
> intervention and this is a painful bottleneck. We do not know how this
> can be improved.
>
> You could perhaps adjust your expectation: ask us for advice and feel
> free *not* to accept it. The number of CPAN developers who either
> ignore us completely or do not follow our suggestions or did not get
> any good suggestions from us seem to be the majority, and yet CPAN
> works mostly.

I have a tremendous respect for you guys, so I don't think I'd feel
comfortable acting unilaterally.  I also understand that what you guys do for
CPAN is on your own time, so I don't expect immediate responses.  I just don't
want to move forward for many *months* like I did on Parse::PlainConfig just
to find that you had more input on it.  I was concerned that Class::EHierarchy
would end up the same way.

	--Arthur Corliss
	  Bolverk's Lair -- http://arthur.corlissfamily.org/
	  Digital Mages -- http://www.digitalmages.com/
	  "Live Free or Die, the Only Way to Live" -- NH State Motto

