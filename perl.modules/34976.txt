Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:34976
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 19084 invoked from network); 18 Sep 2004 03:29:41 -0000
Received: from x1.develooper.com (63.251.223.170)
  by lists.develooper.com with SMTP; 18 Sep 2004 03:29:41 -0000
Received: (qmail 23610 invoked by uid 225); 18 Sep 2004 03:29:40 -0000
Delivered-To: modules@perl.org
Received: (qmail 23606 invoked by alias); 18 Sep 2004 03:29:40 -0000
X-Spam-Status: No, hits=-4.9 required=8.0
	tests=BAYES_00
X-Spam-Check-By: la.mx.develooper.com
Received: from pause.fiz-chemie.de (HELO pause.perl.org) (195.149.117.110)
  by la.mx.develooper.com (qpsmtpd/0.27.1) with ESMTP; Fri, 17 Sep 2004 20:29:38 -0700
Received: from pause.perl.org (localhost [127.0.0.1])
	by pause.perl.org (8.12.3/8.12.3/Debian-6.6) with ESMTP id i8I3TSKt031726;
	Sat, 18 Sep 2004 05:29:28 +0200
Received: (from nobody@localhost)
	by pause.perl.org (8.12.3/8.12.3/Debian-6.6) id i8I3TSVW031724;
	Sat, 18 Sep 2004 05:29:28 +0200
Date: Sat, 18 Sep 2004 05:29:28 +0200
Message-ID: <200409180329.i8I3TSVW031724@pause.perl.org>
Subject: Module submission Locale::KeyedText
Reply-To: modules@perl.org
To: modules@perl.org, duncand@cpan.org
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Locale::KeyedText
  DSLIP:       RdpOl
  description: Refer to user messages in programs by keys
  userid:      DUNCAND (Darren Duncan)
  chapterid:   13 (Internationalization_Locale)
  communities:
    modules@perl.org mainly (eg: 2003.05.29-30)

  similar:
    Locale::Maketext Locale::gettext Locale::PGetText DBIx::BabelKit

  rationale:

    See the existing CPAN module documentation for Locale::KeyedText (
    http://search.cpan.org/dist/Locale-KeyedText/lib/Locale/KeyedText.pm
    ) for a proper/complete description of what the module is for,
    unique features, how it is structured, and how to use it.

    To summarize, Locale::KeyedText makes it simple to separate
    program-associated text that users see (such as prompts or errors)
    into separate files, which allows them to easily be edited and
    distributed separately from the main program file, or for alternate
    languages to be easily substituted, or for multiple language
    versions to be maintained at once. The text can be edited by a
    non-programmer, and programmers don't need to have reams of text
    filling up their program code.

    Code that uses Locale::KeyedText internally works with simple
    machine-readable Message objects that are thrown as exceptions
    (hence this requires Perl 5.006 and above); calling code can catch
    these objects and easily examine them and it can choose to recover
    from an error if it wants; each object contains a key and a hash of
    variables that can either be used by the program or interpolated
    into the user message. It is also easy for a library and a program
    using it to have overlapping user-text files; if they simply both
    define messages for the same keys, then the program can override
    what text is used when displaying for the user; if the same library
    is used with a different program that doesn't do this, then only the
    library's own text is available to show. Regardless, the using
    program itself has control as to when and how any text is output.

    One of the main distinctions of this approach over similar modules
    is that text is always looked up by a key which is not meant to be
    meaningful for a user. Whereas, with the other modules like
    "gettext" it looks like you are supposed to pass in english text and
    they translate it, which could produce ambiguous results or
    associations. Or alternately, the other modules require your text
    data to be stored in a format other than Perl files. Or alternately
    they have a compiled C component or otherwise have external
    dependencies; Locale::KeyedText has no external dependencies (it is
    very simple). There are other differences. Where other solutions
    take variables, they seem to be positional (like with 'sprintf');
    whereas, Locale::KeyedText has named variables, which can be used in
    any order, or not used at all, or used multiple times.
    Locale::KeyedText is generally a simpler solution than alternatives,
    and doesn't know about language specific details like encodings or
    plurality.

    The module name comes from its focus on looking up messages by
    machine-readable keys, or that otherwise said keys are used by
    programs to recover. It is under Locale because a primary use is to
    support multiple langauges easily.

    The design principles espoused in this module were inspired by one
    of the Mac OS X ways of doing things, where each program comes with
    a set of separate Locale files, one per supported language, and
    upgrading a program to support more languages simply means adding
    more files.

    To see practical examples of this module in use, see my dependent
    "SQL::SyntaxModel" and "Rosetta", plus their "en.pm" files, plus
    their t/*.t test scripts.

    Note: Aside from adding requested features, this module is
    "complete"; what you see now is a very stable form.

  enteredby:   DUNCAND (Darren Duncan)
  enteredon:   Sat Sep 18 03:29:27 2004 GMT

The resulting entry would be:

Locale::
::KeyedText       RdpOl Refer to user messages in programs by keys   DUNCAND


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=2e700000_4873ea040cd90f89&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=2e700000_4873ea040cd90f89&SUBMIT_pause99_add_mod_insertit=1
