Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:7317
Return-Path: <gbarr@mutatus.co.uk>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 53714 invoked from network); 2 Sep 2001 08:12:20 -0000
Received: from monty.mutatus.co.uk (i799f0@195.184.238.178)
  by onion.valueclick.com with SMTP; 2 Sep 2001 08:12:20 -0000
Received: (from gbarr@localhost)
	by monty.mutatus.co.uk (8.11.3/8.11.3) id f828B9g40444;
	Sun, 2 Sep 2001 09:11:09 +0100 (BST)
	(envelope-from gbarr)
Date: Sun, 2 Sep 2001 09:11:09 +0100
To: Michael G Schwern <schwern@pobox.com>
Cc: kstar@cpan.org, Kirrily Robert <skud@infotrope.net>, modules@perl.org
Subject: Re: New interface styles
Message-ID: <20010902091109.Q76062@pobox.com>
Mail-Followup-To: Graham Barr <gbarr@pobox.com>,
	Michael G Schwern <schwern@pobox.com>, kstar@cpan.org,
	Kirrily Robert <skud@infotrope.net>, modules@perl.org
References: <20010830194241.P2318@blackrider> <E15cptx-000820-00@tanqueray.infotrope.net> <20010901080233.B29926@wolfetech.com> <20010901221907.O76062@pobox.com> <20010901174649.V606@blackrider>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.2.5i
In-Reply-To: <20010901174649.V606@blackrider>; from schwern@pobox.com on Sat, Sep 01, 2001 at 05:46:49PM -0400
X-Spam-Rating: onion.valueclick.com 1.6.2 0/1000/N
Approved: news@nntp.perl.org
From: gbarr@pobox.com (Graham Barr)

On Sat, Sep 01, 2001 at 05:46:49PM -0400, Michael G Schwern wrote:
> On Sat, Sep 01, 2001 at 10:19:07PM +0100, Graham Barr wrote:
> > > > >The second is 'o' for 'other'.  A lot of stuff just doesn't fit.
> > > > >Test::Inline lets you put code in POD.  What the hell kind of
> > > > >interface is that?
> > > 
> > >     I don't see how that affects what kind of interface it is.  It's
> > > still functional, OO, declarative, procedural, whatever.
> > 
> > Yes, I agree with Kurt on bot points.
> 
> We already have an 'other'.  ' n - no interface at all (huh?)'.
> Module authors are using it to mean 'other'.

Then use n for your module.

> Here are some common, troublesome modules.  Simply describing these as
> 'procedural' or 'object-oriented' doesn't tell you anything useful.
> 
> CPAN        Sure, it's got an OO interface in there somewhere.  But the
>             shell interface is the real point of the module.

A shell is what it does, it is not the "programming interface"
the API is OO

> Text::Template      Simply describing these with O or f doesn't do
> Embperl             justice to the fact that the *real* point is
> HTML::Mason         the ability to embed code into other mediums.
> Test::Inline
> Inline::C

Again, you are describing what the modules does, not how the 
programmer would use it. Text::Template is most definately an OO
interface.

> We also need 'b' for 'bundle'.
> 
> Bundle::
> ::Bugzilla         Rdon? Bundle to load modules for Bugzilla          ZLIPTON
> 
> Bundle::Bugzilla is listed as having 'no interface'.

Well it does not, its not really a module. It is obvious from the name
that it is a bundle.

> So that's..
> 
>     p               pragma          (Perliaga, Coy, etc...)

Agree

>     e               embedded code   (Inline, Mason, etc...)

No, thats not an API

>     b               bundle          (Bundle::whatever)

No

>     s (or maybe P)  shell program   (CPAN)

Again, that is not the API

>     o               other           replacement for 'no interface'

Why ?

> plus the existing ones, and discourage the use of 'n'.

I see no real reason.

I see this as change for the sake of change with no real gain

> That should do a better job of describing what's on CPAN.

I disagree.

Graham.
