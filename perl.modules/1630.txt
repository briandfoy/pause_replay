Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:1630
Return-Path: <todd@bayleys.ping.de>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 31872 invoked from network); 13 Apr 2000 09:02:28 -0000
Received: from elch.de.uu.net (192.76.144.55)
  by tmtowtdi.perl.org with SMTP; 13 Apr 2000 09:02:28 -0000
Received: from vulcano (vulcano.de.uu.net [139.4.37.205])
	by elch.de.uu.net (5.5.5/5.5.5) with SMTP id KAA11837;
	Thu, 13 Apr 2000 10:59:25 +0200 (MET DST)
Reply-To: todd@bayleys.ping.de
Organization: private site
To: Tim Bunce <Tim.Bunce@ig.co.uk>
Subject: Re: Request for module name
Date: Thu, 13 Apr 2000 10:49:44 +0200
X-Mailer: KMail [version 1.0.28]
Content-Type: text/plain
Cc: modules@perl.org, the@de.uu.net
References: <00041119132009.00888@vulcano> <20000411221055.B15373@ig.co.uk>
In-Reply-To: <20000411221055.B15373@ig.co.uk>
MIME-Version: 1.0
Message-ID: <00041311020000.13293@vulcano>
Content-Transfer-Encoding: 8bit
Approved: news@nntp.perl.org
From: todd@bayleys.ping.de (Torsten Hentschel)


On Tue, 11 Apr 2000, Tim Bunce wrote:
> It would be nice to allow the same interface to work for multiple
> database types. So,
> 
> 	$schema = SQL::Schema->new($dbh);
> 
> seems appealing. In other words a thin SQL::Schema 'wrapper' module
> that then loads a "SQL::Schema::$driver_name" module to do the work.
> 
> Tim.

Sounds reasonable to me. And I agree that this is
a "nice to have".
Just some points against:

  - Other databases (like DB/2, Informix) come with tools
    to extract the database schema as plain SQL;
    so, as there is no need to write such tools, I do not
    expect that someone will volunteer to reimplement
    them in perl (except as a study).

  - The databases do vary widely when it comes to DDL
    statements. There will be only a few elements they have
    in common. So a general interface will be either hard
    to implement (complex mechanisms to distinguish between
    proprietary and common SQL elements / objects)
    or it will be this general that it might become
    nearly useless as the provided methods limit you
    to a very basic use.

Nevertheless, it might make sense to start with a very
general and simple interface and see what happens.
If there is no interest we can still make the occupied
name space available again.

Torsten

-- 
Torsten Hentschel privat
todd@bayleys.ping.de
