Newsgroups: perl.modules,perl.module-authors
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:79155 perl.module-authors:9602
Return-Path: <jandrewlund@gmail.com>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Delivered-To: moderator for modules@perl.org
Received: (qmail 25648 invoked from network); 11 Jan 2012 00:05:45 -0000
Received: from x1.develooper.com (207.171.7.70)
  by x6.develooper.com with SMTP; 11 Jan 2012 00:05:45 -0000
Received: (qmail 18779 invoked by uid 225); 11 Jan 2012 00:05:45 -0000
Delivered-To: modules@perl.org
Received: (qmail 18768 invoked by alias); 11 Jan 2012 00:05:44 -0000
X-Spam-Status: No, hits=-0.8 required=8.0
	tests=DKIM_SIGNED,DKIM_VALID,DKIM_VALID_AU,FREEMAIL_FROM,HTML_MESSAGE,RCVD_IN_DNSWL_LOW,SPF_PASS,T_TO_NO_BRKTS_FREEMAIL
X-Spam-Check-By: la.mx.develooper.com
Received: from mail-vx0-f169.google.com (HELO mail-vx0-f169.google.com) (209.85.220.169)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Tue, 10 Jan 2012 16:05:42 -0800
Received: by vcge1 with SMTP id e1so146591vcg.14
        for <multiple recipients>; Tue, 10 Jan 2012 16:05:38 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=gamma;
        h=mime-version:in-reply-to:references:date:message-id:subject:from:to
         :content-type;
        bh=giha+Qog8fCxaxKrB7bFSQ/G5m0/bEwohiMtUmaMxuY=;
        b=aL0lCalEfvHNOItGXAqxbXgTMYDcgCOjyzwAovvgz9oxX7Sv8b+JLI1vPap+v74sCB
         4Nwa7+VwgcQBiwa8VPiXreTs+84bjNAsBOHDTJGQWbllxBQBzMzUqX+/1LZjq3GNxzV3
         UOvPsn4X9EZ2f6sm/1oK4vW1AdBM2i6LGVbCQ=
MIME-Version: 1.0
Received: by 10.221.13.196 with SMTP id pn4mr13782732vcb.74.1326240338606;
 Tue, 10 Jan 2012 16:05:38 -0800 (PST)
Received: by 10.52.65.75 with HTTP; Tue, 10 Jan 2012 16:05:38 -0800 (PST)
In-Reply-To: <CAM4-=+OgMQ3JDN7GHkYOS1Xgh_OvgWYNw+r6HQR6b_ShEFm-9Q@mail.gmail.com>
References: <CAM4-=+OgMQ3JDN7GHkYOS1Xgh_OvgWYNw+r6HQR6b_ShEFm-9Q@mail.gmail.com>
Date: Tue, 10 Jan 2012 16:05:38 -0800
Message-ID: <CAM4-=+PDKpz1WJ1q_HcbFcqztM_dKD_PrXq=HBNkvQ0STEGejw@mail.gmail.com>
Subject: Re: Hello PAUSE
To: modules@perl.org, module-authors@perl.org
Content-Type: multipart/alternative; boundary=bcaec54fb9e044fa8504b6356414
X-Virus-Checked: Checked
Approved: news@nntp.perl.org
From: jandrewlund@gmail.com (Jed Lund)

--bcaec54fb9e044fa8504b6356414
Content-Type: text/plain; charset=ISO-8859-1

Hello all (again),

I think I may have made my first mistake by not suggesting a possible set
of names that I am considering in order to provide a place to start for
feedback from this distribution.

With regards to the Logging module idea below I am considering the
following names.  (Shiras is a species of Moose common in the western
United States.)

Log::Shiras
Log::Shiras::TrafficControl
Log::Shiras::Report
Log::Shiras::Report::Type::TieFile
Log::Shiras::Report::Format::Basic
Log::Shiras::Types
Test::Log::Shiras

For the DateTime::Format mashup I am considering.

DateTime::Format::Mashup::Shiras
DateTime::Format::Mashup::Shiras::Types

I would appreciate any feedback on the naming direction.

Best Regards,

Jed

On Wed, Jan 4, 2012 at 8:13 PM, Jed Lund <jandrewlund@gmail.com> wrote:

> Hello all,
>
> As I am new to PAUSE and would like to avoid as many initial mistakes as
> possible.  I would like to request some help naming my first modules to
> load.
>
> I have two packages that I am working on.
>
> First is a Logging package.  I know that there are several good logging
> modules out there and I have used Log::Log4perl generally but over time I
> have developed an API for a logger Class built on Moose that consumes
> appender and formatter Roles.  I did see the port of Log4perl into a Moose
> Role but what I wanted to do includes splitting the input streams of logged
> data as well as the standard functionality already in the best logging
> modules.  Basically a bit more of an all purpose output handler with the
> ability to manage output, location, and formatting for a codeset without
> rewriting the code itself. I am not sure of the protocol here since I am
> going down a path that is already so well traveled.  Should I be looking
> for something in the ACME namespace, is there an appropriate (unused)
> corner of the Log:: namespace, or should I look elsewhere?  As it stands
> currently the API actually has 4 classes.  A master logging class, an
> appender class, a traffic direction class, and a test class (Built
> on Test::Builder::Module).
>
> Second, I regularly use three DateTime
> modules; DateTime::Format::Epoch, DateTime::Format::Excel,
> and DateTime::Format::DateManip and I have been working to bundle them into
> one Moose Class to manage my general purpose date handling.  (the logging
> package above is an example).  I have managed to wrestle them all together
> using MooseX::Types. Again as a new contributor there isn't anything
> revolutionary here but I am wondering if they might find a home somewhere
> in the DateTime::Format:: namespace or if there is somewhere else that they
> should reside.
>
> Any assistance or suggestions that you could provide in suggesting names
> for these two packages would be greatly appreciated.
>
> Best Regards,
>
> Jed
>
> JANDREW
>

--bcaec54fb9e044fa8504b6356414
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable

Hello all (again),<div><br></div><div>I think I may have made my first mist=
ake by not suggesting a possible set of names that I am considering in orde=
r to provide a place to start for feedback from this distribution.</div>
<div><br></div><div>With regards to the Logging module idea below I am cons=
idering the following names. =A0(Shiras is a species of Moose common in the=
 western United States.)</div><div><br></div><div>Log::Shiras
</div><div><div>Log::Shiras::TrafficControl
</div><div>Log::Shiras::Report
</div><div>Log::Shiras::Report::Type::TieFile
</div><div>Log::Shiras::Report::Format::Basic
</div><div>Log::Shiras::Types</div><div>Test::Log::Shiras</div><div><br></d=
iv><div>For the DateTime::Format mashup I am considering.</div><div><br></d=
iv><div>DateTime::Format::Mashup::Shiras</div><div>DateTime::Format::Mashup=
::Shiras::Types</div>
<div><br></div><div>I would appreciate any feedback on the=A0naming=A0direc=
tion.</div><div><br></div><div>Best Regards,</div><div><br></div><div>Jed</=
div><br><div class=3D"gmail_quote">On Wed, Jan 4, 2012 at 8:13 PM, Jed Lund=
 <span dir=3D"ltr">&lt;<a href=3D"mailto:jandrewlund@gmail.com">jandrewlund=
@gmail.com</a>&gt;</span> wrote:<br>
<blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1p=
x #ccc solid;padding-left:1ex">Hello all,<div><br></div><div>As I am new to=
 PAUSE and would like to avoid as many initial mistakes as possible. =A0I w=
ould like to request some help naming my first modules to load.</div>
<div><br></div><div>I have two packages that I am working on.</div>
<div><br></div><div>First is a Logging package. =A0I know that there are se=
veral good logging modules out there and I have used Log::Log4perl generall=
y but over time I have developed an API for a logger Class built on Moose t=
hat consumes appender and formatter Roles. =A0I did see the port of Log4per=
l into a Moose Role but what I wanted to do includes splitting the input st=
reams of logged data as well as the standard functionality already in the b=
est logging modules. =A0Basically a bit more of an all purpose output handl=
er with the ability to manage output, location, and formatting for a codese=
t without rewriting the code itself. I am not sure of the protocol here sin=
ce I am going down a path that is already so well traveled. =A0Should I be =
looking for something in the ACME namespace, is there an appropriate (unuse=
d) corner of the Log:: namespace, or should I look elsewhere? =A0As it stan=
ds currently the API actually has 4 classes. =A0A master logging class, an =
appender class, a traffic direction class, and a test class (Built on=A0Tes=
t::Builder::Module).</div>

<div><br></div><div>Second, I regularly use three DateTime modules;=A0DateT=
ime::Format::Epoch,=A0DateTime::Format::Excel, and=A0DateTime::Format::Date=
Manip and I have been working to bundle them into one Moose Class to manage=
 my general purpose date handling. =A0(the logging package above is an exam=
ple). =A0I have managed to wrestle them all together using MooseX::Types. A=
gain as a new=A0contributor=A0there isn&#39;t anything revolutionary here b=
ut I am wondering if they might find a home somewhere in the DateTime::Form=
at:: namespace or if there is somewhere else that they should reside.</div>

<div><br></div><div>Any assistance or suggestions that you could provide in=
 suggesting names for these two packages would be greatly appreciated.</div=
><div><br></div><div>Best Regards,</div><div><br></div><div>Jed</div><div>

<br></div><div>JANDREW</div>
</blockquote></div><br></div>

--bcaec54fb9e044fa8504b6356414--
