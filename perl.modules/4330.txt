Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:4330
Return-Path: <Tim.Bunce@ig.co.uk>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 19669 invoked from network); 24 Jan 2001 23:37:05 -0000
Received: from anchor-post-32.mail.demon.net (194.217.242.90)
  by tmtowtdi.perl.org with SMTP; 24 Jan 2001 23:37:05 -0000
Received: from ignite.demon.co.uk ([158.152.8.99] helo=oink)
	by anchor-post-32.mail.demon.net with smtp (Exim 2.12 #1)
	id 14LZTH-000514-0W; Wed, 24 Jan 2001 23:36:59 +0000
Received: from toad by oink with SMTP (PP) id <06375-0@oink>;
          Sun, 25 Jan 1970 00:36:43 +0100
Received: by toad.ig.co.uk (8.8.8+Sun/SMI-SVR4) id XAA02961;
          Wed, 24 Jan 2001 23:36:35 GMT
Date: Wed, 24 Jan 2001 23:36:35 +0000
To: Ask Bjoern Hansen <ask@valueclick.com>
Cc: Tony Smith <tony@perforce.com>, modules@perl.org
Subject: Re: Would like to publish perl modules.
Message-ID: <20010124233635.F2570@ig.co.uk>
References: <01012410583107.01051@damn.perforce.co.uk> <Pine.LNX.4.21.0101240410440.2847-100000@impatience.valueclick.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Mailer: Mutt 0.95.3i
In-Reply-To: <Pine.LNX.4.21.0101240410440.2847-100000@impatience.valueclick.com>; from Ask Bjoern Hansen on Wed, Jan 24, 2001 at 04:12:26AM -0800
Organization: Paul Ingram Group, Software Systems, +44 1 483 862800
Approved: news@nntp.perl.org
From: Tim.Bunce@ig.co.uk (Tim Bunce)

On Wed, Jan 24, 2001 at 04:12:26AM -0800, Ask Bjoern Hansen wrote:
> On Wed, 24 Jan 2001, Tony Smith wrote:
> 
> > Name:		P4::ClientApi
> 
> Actually, that should probably be VCS::P4::Client or maybe even just
> VCS::P4.
> 
> The other Version Control System modules are under VCS.

Kind of, the VCS::* tree has a VCS.pm module that's designed to
provide a common interface for VCS systems. So VCS is a 'framework'.

From the docs:
: VCS is an API for abstracting access to all version control systems
: from Perl code. This is achieved in a similar fashion to the DBI suite
: of modules. There are "container" classes, VCS::Dir, VCS::File, and
: VCS::Version, and "implementation" classes, such as VCS::Cvs::Dir,
: VCS::Cvs::File, and VCS::Cvs::Version, which are subclasses of their
: respective "container" classes.

So I'd say go for VCS::P4... if you can/do/will support the generic
interface and it's sufficiently flexible for you.

Else, for example, stay with P4::* for 'native' access and, ideally,
also provide a simple VCS::P4 'shim' that provides a VCS.pm
compatibility layer.

Tim.
