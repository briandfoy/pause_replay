Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:38986
Return-Path: <dstorrs@bigpanda.com>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 4206 invoked from network); 11 Mar 2005 05:15:06 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 11 Mar 2005 05:15:06 -0000
Received: (qmail 13153 invoked by uid 225); 11 Mar 2005 05:15:06 -0000
Delivered-To: modules@perl.org
Received: (qmail 13147 invoked by alias); 11 Mar 2005 05:15:05 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
Received: from megazone.bigpanda.com (HELO megazone.bigpanda.com) (64.147.171.210)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Thu, 10 Mar 2005 21:15:01 -0800
Received: by megazone.bigpanda.com (Postfix, from userid 1031)
	id 96E2B357DA; Thu, 10 Mar 2005 21:14:58 -0800 (PST)
Date: Thu, 10 Mar 2005 21:14:58 -0800
To: modules@perl.org
Subject: RFC: Test::Output::CGI
Message-ID: <20050311051458.GE86088@megazone.bigpanda.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Disposition: inline
User-Agent: Mutt/1.4.1i
Approved: news@nntp.perl.org
From: dstorrs@dstorrs.com (David Storrs)

I've got a module half written but I'm starting to question whether
it's a good idea or not.

Test::Output::CGI is (would be) a module which simplifies the process
of doing "known good" testing.  You give it some information about
your CGI (its URL, whether you are testing the brower output or output
to a disk file, location of that disk file, etc).  You can then say
things like "if I call it with these parameters, does the output match
up to this file (the 'known good' version)"?

There are some pros and cons to this method of testing:

CON:

1) It doesn't scale well.  If you have lots of potential outputs, you
   need separate "known good" versions for each one.

2) Generating the "known good" versions usually requires
   hand-checking, which is error prone.


PRO:

1) It's conceptually easy; everyone can understand it and
   non-developers can generate the "known good" outputs.

2) Sometimes, there really is no other way to go.

3) Although perhaps not ideal for testing CGIs, I could see this being
   the first module in a 'Test::Output::' hierarchy that would make it
   easy to do KG testing on auto-generated Makefiles, pod2text output,
   and other things where the output is the product.


So, two questions:

A) Is it worth writing this and posting it to CPAN?

B) If so, any suggestions on features?  Here's the list I've already
   come up with: 

	- A switch to (not) ignore differences in whitespace
	- A switch to (not) ignore differences in case
	- Ability to preprocess your output to (e.g.) strip off
		  timestamps before doing the comparison.


--Dks

PS  Please CC me directly, as I am not subscribed...for which I
apologize, but I just can't handle another high-volume list.

-- 
dstorrs@dstorrs.com
