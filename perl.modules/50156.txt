Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:50156
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 7575 invoked from network); 5 Aug 2006 21:57:26 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 5 Aug 2006 21:57:26 -0000
Received: (qmail 5269 invoked by uid 225); 5 Aug 2006 21:57:25 -0000
Delivered-To: modules@perl.org
Received: (qmail 5265 invoked by alias); 5 Aug 2006 21:57:25 -0000
X-Spam-Status: No, hits=-2.5 required=8.0
	tests=BAYES_00,FORGED_RCVD_HELO
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
Received: from pause.fiz-chemie.de (HELO pause.perl.org) (195.149.117.110)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Sat, 05 Aug 2006 14:57:23 -0700
Received: from pause.perl.org (localhost.localdomain [127.0.0.1])
	by pause.perl.org (8.13.4/8.13.4/Debian-3sarge1) with ESMTP id k75Lv9Ti026552;
	Sat, 5 Aug 2006 23:57:09 +0200
Received: (from nobody@localhost)
	by pause.perl.org (8.13.4/8.13.4/Submit) id k75Lv9W9026551;
	Sat, 5 Aug 2006 23:57:09 +0200
Date: Sat, 5 Aug 2006 23:57:09 +0200
Message-ID: <200608052157.k75Lv9W9026551@pause.perl.org>
Subject: Module submission Thread::Sociable
Reply-To: modules@perl.org
To: modules@perl.org, darnold@cpan.org
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Thread::Sociable
  DSLIP:       cdhha
  description: Performance enhanced threads::shared
  userid:      DARNOLD (Dean Arnold)
  chapterid:   2 (Language_Extensions)
  communities:
    perl-ithreads@perl.org, perlmonks.org

  similar:
    threads::shared

  rationale:

    Thread::Sociable is intended as a performance-enhanced replacement
    for threads::shared. The latter uses a global shared Perl
    interpretter context which must be locked for any access by any
    thread to any piece of threads::shared data, resulting in serious
    performance degradataion due to lock contention. Thread::Sociable
    takes a more pragmatic approach: while it uses much the same
    mechanism as threads::shared to proxy the data to each thread, it
    minimizes locking, relying instead on the application to apply any
    needed locks, allocating shared data storage from the process heap,
    managing the data in a simple lookup table, and requiring explicit
    destruction of shared data items, rather than relying on ref
    counting (which imposes add'l locking requirements). In addition, a
    more tightly integrated version of Thread::Queue
    (Thread::Queue::Sociable) is provided to minimize the overhead of
    passing data between threads.

  enteredby:   DARNOLD (Dean Arnold)
  enteredon:   Sat Aug  5 21:57:09 2006 GMT

The resulting entry would be:

Thread::
::Sociable        cdhha Performance enhanced threads::shared         DARNOLD


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=bbc00000_7769df24ba0b98f1&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=bbc00000_7769df24ba0b98f1&SUBMIT_pause99_add_mod_insertit=1
