Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:3887
Return-Path: <h.camp@scm.de>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 21359 invoked from network); 13 Dec 2000 14:14:42 -0000
Received: from mailpop1.scm.de (HELO mailer.scm.de) (212.89.192.35)
  by tmtowtdi.perl.org with SMTP; 13 Dec 2000 14:14:42 -0000
Received: from harti3 [212.89.194.82] by mailer.scm.de with ESMTP
  (SMTPD32-6.05) id A3A51580234; Wed, 13 Dec 2000 15:11:49 +0100
To: modules@perl.org
Date: Wed, 13 Dec 2000 15:15:16 +0100
MIME-Version: 1.0
Content-type: text/plain; charset=ISO-8859-1
Content-transfer-encoding: Quoted-printable
Subject: Naming suggestion for new Perl module: Each_ex.pm
Reply-to: h.camp@scm.de
Message-ID: <3A379284.10875.D76AC8@localhost>
Priority: normal
X-mailer: Pegasus Mail for Win32 (v3.12c)
Approved: news@nntp.perl.org
From: h.camp@scm.de ("H.Camphausen")

Hi all,

I (that is HCAMP on CPAN) am planning to release a Perl module to 
CPAN, Each_ex.pm. The module provides some kind of extended   
"foreach()/keys()/values()"-features (see description below).

I'd like users to put if into the "[site]/lib/Data"-directory, i.e. 
it should be use()able via

	use Data::Each_ex.

The module's namespace would be Each_ex, with no Data::-prefix.

I think it should get listed under the item "Data Type 
Marshalling.../Data" in "The Perl 5 module list" - if it will get 
lsted anyway.

Pleas let me know if this would be ok, or tell me your suggestions.

>From Each_ex's pod:

=3Dhead1

=3Dhead2 Each_ex.pm - shows paths/values of complex data structures

=3Dhead2 B<1. Description>

Each_ex.pm is an object orientated (pure) Perl module to iterate over 
complex data structures (LoL, LoH, HoL, HoH etc.).
While Perl's built-in functions foreach(), each(), keys() and 
values() handle just a given level of a structure, Each_ex digs 
deeper - handling a structure like an one-dimensional hash.

For each element of a nested data structure the symbolic name ("data 
path"), The Value - as is! - plus some additional information are 
retrieved.

That is, Each_ex provides an unified syntax for simple handling of 
data sources of different types.

Each_ex does not alter the referenced structure, though values may be 
explicitly modified by the user.

Each_ex does not export any variables or functions. You I<can> call 
arbitrary packet subs via &Packetname::subname(), but you I<might> be 
surprised of the results :-)



mfg, Hartmut

-------------------------------------------
CREAGEN Computerkram      
Hartmut Camphausen       Fon: 06422/850527
Am kleinen Born 1        Fax: 06422/850528
35287 Am=F6neburg          E-Mail: h.camp@creagen.de
