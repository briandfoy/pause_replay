Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:71288
Return-Path: <emazep@gmail.com>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Delivered-To: moderator for modules@perl.org
Received: (qmail 25111 invoked from network); 20 May 2010 20:26:30 -0000
Received: from x1.develooper.com (207.171.7.70)
  by x6.develooper.com with SMTP; 20 May 2010 20:26:30 -0000
Received: (qmail 4878 invoked by uid 225); 20 May 2010 20:26:30 -0000
Delivered-To: modules@perl.org
Received: (qmail 4866 invoked by alias); 20 May 2010 20:26:29 -0000
X-Spam-Status: No, hits=-0.1 required=8.0
	tests=DKIM_SIGNED,DKIM_VALID,DKIM_VALID_AU,FREEMAIL_FROM,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received: from mail-ww0-f41.google.com (HELO mail-ww0-f41.google.com) (74.125.82.41)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Thu, 20 May 2010 13:26:27 -0700
Received: by wwi14 with SMTP id 14so192380wwi.14
        for <modules@perl.org>; Thu, 20 May 2010 13:26:22 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=gamma;
        h=domainkey-signature:received:received:message-id:date:from
         :user-agent:mime-version:to:cc:subject:references:in-reply-to
         :content-type:content-transfer-encoding;
        bh=IvguZBRyiw/DWFuKNWPqQeNKYQkcccHH5f/rYqOe/u0=;
        b=pVnXMkbHtnYdOrnyzogbCKJxU0tBZY7ODfr8v8/VfEMoRdAzM4OQ+qllDEXUw+ZxoX
         Z4eVcQfn98ZuzrTxoKvXx05lEJ61P64+T5nhTs0vOkNp7dzdZ8a0e2uPsi6jtbOeyyYy
         DrPtgHzBgFY+NQHnKLM9H/3cFe8tYZaFdSKI4=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=gamma;
        h=message-id:date:from:user-agent:mime-version:to:cc:subject
         :references:in-reply-to:content-type:content-transfer-encoding;
        b=eQGfMjMv+ip72e+/PhqZAyDgg02hBqSn8aG7uOHxBtggXAZ0u+3j1QW5uYgO4IeSI/
         nruuKt5LV55VW7gkB9nVclQvVvBDU2deCiiM8yup4iSH7Vjzr2laVnBiDSN40Yf0j6t9
         OCSHtDuq3eUXIKc4IOV40W92XXOGbCySihk2Q=
Received: by 10.227.156.78 with SMTP id v14mr449981wbw.25.1274387182706;
        Thu, 20 May 2010 13:26:22 -0700 (PDT)
Received: from [192.168.0.20] (adsl-ull-77-50.50-151.net24.it [151.50.50.77])
        by mx.google.com with ESMTPS id z33sm1776632wbd.1.2010.05.20.13.26.20
        (version=TLSv1/SSLv3 cipher=RC4-MD5);
        Thu, 20 May 2010 13:26:21 -0700 (PDT)
Message-ID: <4BF59ACE.2090006@gmail.com>
Date: Thu, 20 May 2010 22:25:50 +0200
User-Agent: Mozilla/5.0 (Windows; U; Windows NT 6.0; en-US; rv:1.9.1.9) Gecko/20100317 Thunderbird/3.0.4
MIME-Version: 1.0
To: Matt S Trout <mst@shadowcat.co.uk>
CC: modules@perl.org
Subject: Re: Module submission DBIx::DoMore
References: <201005200049.o4K0nthf021769@pause.fiz-chemie.de> <20100520181402.GY15270@agaton.scsys.co.uk>
In-Reply-To: <20100520181402.GY15270@agaton.scsys.co.uk>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Approved: news@nntp.perl.org
From: emazep@gmail.com (Emanuele Zeppieri)

On 20/05/2010 20.14, Matt S Trout wrote:

> On Thu, May 20, 2010 at 02:49:55AM +0200, Perl Authors Upload Server wrote:
>>
>> The following module was proposed for inclusion in the Module List:
>>
>>    modid:       DBIx::DoMore
>>    DSLIP:       RdpOp
>>    description: Multiple SQL statements in a single batch
>>    userid:      EMAZEP (Emanuele Zeppieri)
>>    chapterid:   7 (Database_Interfaces)
>>    communities:
>>
>>    similar:
>>      DBIx::RunSQL
>>
>>    rationale:
>>
>>      Some DBI drivers don't support the execution of multiple statements
>>      in a single "do()" call. This module tries to overcome such
>>      limitation, letting the user execute any number of SQL statements
>>      (of any kind, not only DDL statements) in a single batch, with any
>>      DBI driver.
>>
>>      No CPAN module I'm aware of offer such functionality except for
>>      DBIx::RunSQL, which however uses a raw split on the semicolon
>>      character to separate the given SQL code into the atomic statements
>>      it is composed of, which of course fails in a number of cases.
>>
>>      DBIx::DoMore instead uses a more sophisticated algorithm, so that
>>      it is able to correctly handle the presence of the semicolon inside
>>      identifiers, values or "BEGIN..END" blocks.
>>
>>      Automatic rollback in case of failure (which is optional anyway) is
>>      another (maybe) useful feature offered by DBIx::DoMore which
>>      DBIx::RunSQL seem to lack.
>
> How about DBIx::MultipleStatementDo then?

This is certainly a much more descriptive name.
I'll rename my module as soon as I'll get your reply about the question 
below.

> Also, can we please have the splitting behaviour in a standalone module
> so I can steal it for DBIx::Class to use without copy and paste :)

Sure!
But, please, have a look at:
http://search.cpan.org/~emazep/DBIx-DoMore-0.01002/lib/DBIx/DoMore.pm#split

where you can see that (the to be renamed) DBIx::DoMore already exposes 
a public, documented (class) method which does precisely that (the 
method is called "split" indeed ;-)

Please, let me know if this is enough for you (consider that 
DBIx::DoMore is really a tiny module), otherwise I'll split the module 
in two (and, in this latter case, which name do you suggest for the new 
module?)

Ciao and thanks!

-Emanuele
