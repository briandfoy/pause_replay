Newsgroups: perl.modules,perl.module-authors
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:47846 perl.module-authors:4456
Return-Path: <david@landgren.net>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Delivered-To: moderator for modules@perl.org
Received: (qmail 19821 invoked from network); 13 Mar 2006 17:02:28 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 13 Mar 2006 17:02:28 -0000
Received: (qmail 29931 invoked by uid 225); 13 Mar 2006 17:02:27 -0000
Delivered-To: modules@perl.org
Received: (qmail 29920 invoked by alias); 13 Mar 2006 17:02:26 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
Received: from sferics.mongueurs.net (HELO sferics.mongueurs.net) (81.80.147.197)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Mon, 13 Mar 2006 09:02:23 -0800
Received: from [127.0.0.1] (exo.bpinet.com [81.80.147.206])
	by sferics.mongueurs.net (Postfix) with ESMTP id 56696A9A6;
	Mon, 13 Mar 2006 18:02:17 +0100 (CET)
Message-ID: <4415A598.3090803@landgren.net>
Date: Mon, 13 Mar 2006 18:02:16 +0100
Organization: The Lusty Decadent Delights of Imperial Pompeii
User-Agent: Thunderbird 1.5 (Windows/20051201)
MIME-Version: 1.0
To: module-authors@perl.org, modules@perl.org
Subject: Re: Proposed module names
References: <000c01c6462e$df167a30$6600a8c0@elsegundo> <441572C5.6020807@hyperbolic.net>
In-Reply-To: <441572C5.6020807@hyperbolic.net>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Approved: news@nntp.perl.org
From: david@landgren.net (David Landgren)

David Golden wrote:
> Jim Schneider wrote:
>> I have three modules I am preparing to submit to CPAN, and I was 
>> hoping to get some input on the names.
>>  
>> The modules are:
>> 1)  DBIx::Class::Simple - a simpler alternative to DBIx::Class, but 
>> alas, not compatible (not even a little bit).  It takes a collection 
>> of data structures that describe your tables, and turns it into a 
>> collection of classes that can be used to access them.  I'm also open 
>> to the name DBIx::Simple::Class or DBIx::Simple::Object
> 

[...]

> I think you may be best if you come up with your own DBIx::* name that 
> captures what you feel is distinctive about your module -- beyond it 
> just being "simple".

Seconded. Simple modules never are. I'm not trying to be flippant. If 
the documentation isn't equally simple (for instance, fits on a 
screenful with no additional provisos or exceptions) then the person 
using it spends as much time learning how to use it as a supposedly more 
"complex" module.

>> 2)  WWW::Scraper::Zip4 - a simple web scraper to retrieve address 
>> information from the USPS website.
> 
> Again, there is already an unrelated WWW::Scraper, so I'd avoid that. 
> There seems to be an emerging style for these kinds of web interfaces 
> that is site-first, task-second, so how about this (with the additional 
> clarity of the proper name of a nine-digit zip):
> 
> WWW::USPS::ZipPlus4

Again, seconded. I was going to say the same thing (although I suppose 
the Zip4/ZipPlus4 distinction refers some sort of regional context that 
is lost on me).

>> 3)  Well, I'm currently calling it TemplateLoader, but that's too 
>> horrible for words.  Your provide some particulars on the module "use" 
>> line, and it creates a method in the calling class that loads the 
>> template.  Any suggestions for this one would definitely be appreciated.
> 
> This is far too generic a description to offer help.  Given the myriad 
> templating systems already out there, can you describe what your module 
> does that is distinctive?  That's usually a good place to start when 
> thinking about names.

Or a snippet showing how the module (?:sh|c|w)ould be used.

David
-- 
"It's overkill of course, but you can never have too much overkill."

