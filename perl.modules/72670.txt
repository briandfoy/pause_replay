Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:72670
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 336 invoked from network); 7 Sep 2010 16:15:51 -0000
Received: from x1.develooper.com (207.171.7.70)
  by x6.develooper.com with SMTP; 7 Sep 2010 16:15:51 -0000
Received: (qmail 5135 invoked by uid 225); 7 Sep 2010 16:15:50 -0000
Delivered-To: modules@perl.org
Received: (qmail 5131 invoked by alias); 7 Sep 2010 16:15:49 -0000
X-Spam-Status: No, hits=0.0 required=8.0
	tests=
X-Spam-Check-By: la.mx.develooper.com
Received: from pause.fiz-chemie.de (HELO pause.fiz-chemie.de) (195.37.231.65)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Tue, 07 Sep 2010 09:15:47 -0700
Received: from pause.fiz-chemie.de (localhost.localdomain [127.0.0.1])
	by pause.fiz-chemie.de (8.13.8/8.13.8/Debian-3) with ESMTP id o87GEo9g031615;
	Tue, 7 Sep 2010 18:14:50 +0200
Received: (from nobody@localhost)
	by pause.fiz-chemie.de (8.13.8/8.13.8/Submit) id o87GEop4031613;
	Tue, 7 Sep 2010 18:14:50 +0200
Date: Tue, 7 Sep 2010 18:14:50 +0200
Message-ID: <201009071614.o87GEop4031613@pause.fiz-chemie.de>
Subject: Module submission Hadoop::Streaming
Reply-To: modules@perl.org
To: modules@perl.org, spazm@cpan.org
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Hadoop::Streaming
  DSLIP:       RdpOp
  description: simple interface to Hadoop Streaming
  userid:      SPAZM (Andrew Grangaard)
  chapterid:   8 (User_Interfaces)
  communities:
    http://cpanforum.com/dist/Hadoop-Streaming

  similar:

  rationale:

    I've pushed out a few releases of Hadoop::Streaming to cpan. I'd
    like to register the module. Is this a good name space for it?

    Hadoop is a map/reduce framework written in Java. The Streaming
    interface to Hadoop allows for jobs written in languages other than
    java. It provides a STDIN/STDOUT interface of "key\t"value\n"
    format. --> http://hadoop.apache.org

    Writing Hadoop Streaming jobs normally ends up with a lot of
    boilerplate for converting key/value pairs to/from STDIN/STDOUT
    streams. This set of modules includes Moose roles for simplifying
    the process, to allow us to focus on the actual map and reduce
    logic.

    I couldn't find anything to simplify this on CPAN. At github I
    found two modules by Naoya Ito <naoya@hatena.ne.jp> that seem to be
    abandoned/forgotten -- hadoop-streaming-frontend and perl-hadoop. I
    emailed him 8 months ago about adopting hadoop-streaming-frontend,
    but have not heard a reply. I forked and improved
    hadoop-streaming-frontend and pushed it to CPAN. First I added
    tests, then got the tests working on CPANTS and then added some more
    functionality.

    Naoya Ito's hadoop modules:
    http://github.com/naoya/hadoop-streaming-frontend
    http://github.com/naoya/perl-hadoop

    My Hadoop::Streaming module hosted at github:
    http://github.com/spazm/hadoop-streaming-frontend.git
    http://github.com/spazm/hadoop-streaming-frontend

    issue tracker:
    http://github.com/spazm/hadoop-streaming-frontend/issues

    Modules currently in the Hadoop::Streaming distribution:
    Hadoop::Streaming -- top level placeholder, contains documentation.
    Hadoop::Streaming::Mapper -- Mapper class Hadoop::Streaming::Reducer
    -- Reducer class Hadoop::Streaming::Combiner -- Combiner class (new)

    internal helpers: Hadoop::Streaming::Reducer::Input -- Parse input
    stream for reducer Hadoop::Streaming::Reducer::Input::Iterator --
    Collects values for each key together with an iterator interface
    Hadoop::Streaming::Reducer::Input::ValuesIterator -- Role providing
    access to values for a given key. Hadoop::Streaming::Role::Emitter
    -- Role to provide emit, counter, and status interaction with
    Hadoop::Streaming. Hadoop::Streaming::Role::Iterator -- Role to
    require has_next and next

    Thanks for CPAN! --andrew grangaard aka spazm@CPAN

  enteredby:   SPAZM (Andrew Grangaard)
  enteredon:   Tue Sep  7 16:14:49 2010 GMT

The resulting entry would be:

Hadoop::
::Streaming       RdpOp simple interface to Hadoop Streaming         SPAZM


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=73400000_46b7e6b6b4eb9352&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=73400000_46b7e6b6b4eb9352&SUBMIT_pause99_add_mod_insertit=1
Peek at the current permissions:
  https://pause.perl.org/pause/authenquery?pause99_peek_perms_by=me&pause99_peek_perms_query=Hadoop%3A%3AStreaming
