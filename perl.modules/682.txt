Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:682
Return-Path: <Alex.Davies@tiuk.ti.com>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 572 invoked from network); 8 Dec 1999 16:36:43 -0000
Received: from gatekeep.ti.com (192.94.94.61)
  by tmtowtdi.perl.org with SMTP; 8 Dec 1999 16:36:43 -0000
Received: from dlep6.itg.ti.com ([157.170.188.9])
	by gatekeep.ti.com (8.9.3/8.9.3) with ESMTP id KAA29947
	for <modules@perl.org>; Wed, 8 Dec 1999 10:36:16 -0600 (CST)
Received: from dlep6.itg.ti.com (localhost [127.0.0.1])
	by dlep6.itg.ti.com (8.9.3/8.9.3) with ESMTP id KAA04962
	for <modules@perl.org>; Wed, 8 Dec 1999 10:36:11 -0600 (CST)
Received: from tiuk.ti.com (fantastic.tiuk.ti.com [137.167.91.143])
	by dlep6.itg.ti.com (8.9.3/8.9.3) with ESMTP id KAA04940
	for <modules@perl.org>; Wed, 8 Dec 1999 10:36:10 -0600 (CST)
Received: from gambit by tiuk.ti.com (8.8.8+Sun/SMI-SVR4)
	id QAA05957; Wed, 8 Dec 1999 16:36:11 GMT
Received: by gambit (8.8.8+Sun) id QAA03648; Wed, 8 Dec 1999 16:36:11 GMT
Date: Wed, 8 Dec 1999 16:36:11 GMT
Message-ID: <199912081636.QAA03648@gambit.tiuk.ti.com>
To: modules@perl.org
Subject: Request for CPAN id
Cc: AJFD@tiuk.ti.com
X-Sun-Charset: US-ASCII
Approved: news@nntp.perl.org
From: Alex.Davies@tiuk.ti.com


Hi!

I wish to contribute a script to CPAN...

Following outline given in http://www.perl.com/CPAN-local/modules/04pause.html:

Name:  Alex Davies
Email: Alex.Davies@ti.com
No-home-page

preferred CPAN user-ID: A-DAVIES

Description of planned contribution:
  peg. (yet another) perl grep. But which runs (by default) from expressions rather
  than merely regular expression patterns, and which supports almost all of
  the usual grep options and the GNU grep extensions, plus some neat new ones...

concise description:  script :: Search   (Current CPAN owner is Kurt Starsinic)

The script has not been discussed in public :( 
However, a similar script, called "pgrep" written by Steffen Beyer is on CPAN,
but which has fewer options and is more like grep(1) in that it runs only from
regular expression patterns.

Synopsis:

Usage: peg [<options>|-help] <perlexpr> [<files>]


Example usage:

peg -l '/\bneedle\b/i or /\bpin\b/i' haystack
peg -lwio needle pin -- haystack

The latter demonstrates two features: (1) alphanumeric <perlexpr>'s are
assumed to be regular expression patterns and (2) peg's -o option which
allows a list of <perlexpr>'s (similar(ish) to GNU grep's -e option)


Best regards,
alex.

=====================================================================
| Alex Davies                  _        Email : Alex.Davies@ti.com  |
| Texas Instruments Ltd       | '-.     MSG   : AJFD                |
| 800 Pavilion Drive         \,  _}     Tel   : +44 (1604) 663450   |
| Northampton, NN4 7YL         \(       Fax   : +44 (1604) 663456   |
| England                                                           |
=====================================================================
