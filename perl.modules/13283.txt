Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:13283
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 84889 invoked by uid 76); 19 Aug 2002 18:25:42 -0000
Received: from root@[212.40.160.59] (HELO pause.perl.org) (212.40.160.59)
  by onion.perl.org (qpsmtpd/0.07b) with SMTP; Mon Aug 19 18:25:42 2002 -0000
Received: (from nobody@localhost)
	by pause.perl.org (8.11.6/8.11.6) id g7JIPD623175;
	Mon, 19 Aug 2002 20:25:13 +0200
Date: Mon, 19 Aug 2002 20:25:13 +0200
Message-ID: <200208191825.g7JIPD623175@pause.perl.org>
Reply-To: modules@perl.org
Subject: Module submission String::Substrings
To: modules@perl.org, bigj@cpan.org
Approved: news@nntp.perl.org
From: upload@p11.speed-link.de ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       String::Substrings
  DSLIP:       idpfp
  description: interface to extract many/all substrings
  userid:      BIGJ (Janek Schleicher)
  chapterid:   11 (String_Lang_Text_Proc)
  communities:

  similar:
    Algorithm::ChooseSubsets

  rationale:

    This module is a simple wrapper around Perl lines of two nested for
    loops to get all substrings or all substrings of length 3 .. 6 or
    so.

    My main purpose is laziness, as it is boring to type and to read
    these nested loops where all I wanted was some substrings.

    On the other hand, it gives the chance to implement it in future as
    C module (as I'll use it on huge data sets), so there could be
    perhaps a speed advantage.

  enteredby:   BIGJ (Janek Schleicher)
  enteredon:   Mon Aug 19 18:25:12 2002 GMT

The resulting entry would be:

String::
::Substrings      idpfp interface to extract many/all substrings     BIGJ


Thanks for registering,
The Pause Team

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=2f100000_7405d4fa80c804b3&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=2f100000_7405d4fa80c804b3&SUBMIT_pause99_add_mod_insertit=1
