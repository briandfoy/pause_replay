Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:87301
Return-Path: <apache@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 24509 invoked from network); 30 Aug 2013 14:40:27 -0000
Received: from x1.develooper.com (207.171.7.70)
  by x6.develooper.com with SMTP; 30 Aug 2013 14:40:27 -0000
Received: (qmail 25172 invoked by uid 225); 30 Aug 2013 14:40:27 -0000
Delivered-To: modules@perl.org
Received: (qmail 25168 invoked by alias); 30 Aug 2013 14:40:27 -0000
X-Spam-Status: No, hits=-2.9 required=8.0
	tests=ALL_TRUSTED,BAYES_00
X-Spam-Check-By: la.mx.develooper.com
Received: from pause2.develooper.com (HELO pause.perl.org) (207.171.7.119)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Fri, 30 Aug 2013 07:40:20 -0700
Received: by pause.perl.org (Postfix, from userid 48)
	id 249201F7F1; Fri, 30 Aug 2013 14:40:17 +0000 (UTC)
Subject: Module submission App::Depst
Reply-To: modules@perl.org
To: modules@perl.org,gryphon@cpan.org
Message-ID: <20130830144017.249201F7F1@pause.perl.org>
Date: Fri, 30 Aug 2013 14:40:17 +0000 (UTC)
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       App::Depst
  DSLIP:       adpfp
  description: Deployment State Manager
  userid:      GRYPHON (Gryphon Shafer)
  chapterid:   3 (Development_Support)
  communities:

  similar:
    App::Sqitch

  rationale:

    App::Depst is a simple "deployment state" change management tool. I
    really like what Sqitch is doing, but I wanted something that worked
    on more than just databases. And I'm not very smart, so I wanted
    something really simple. (Both simple to use and simple to
    maintain.)

    Let's say you're working with a group of other software engineers
    on a particular software project using your favorite revision
    control system. Let's also say that you have a database that
    undergoes schema changes as features are developed, and you have
    various system activities like the installation of libraries or
    other applications. Then let's also say the team braches, works on
    stuff, shares those branches, reverts, merges, etc. And also from
    time to time you want to go back in time a bit so you can reproduce
    a bug. Maintaining the database state and the state of the system
    across all that activity can be problematic. depst tries to solve
    this in a very simple way, letting you be able to deploy, revert,
    and verify to any point in time in the development history.

  enteredby:   GRYPHON (Gryphon Shafer)
  enteredon:   Fri Aug 30 14:40:16 2013 UTC

The resulting entry would be:

App::
::Depst           adpfp Deployment State Manager                     GRYPHON


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=35d00000_829496edfd9cf540&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=35d00000_829496edfd9cf540&SUBMIT_pause99_add_mod_insertit=1
Peek at the current permissions:
  https://pause.perl.org/pause/authenquery?pause99_peek_perms_by=me&pause99_peek_perms_query=App%3A%3ADepst
