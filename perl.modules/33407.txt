Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:33407
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 51227 invoked from network); 7 Jul 2004 08:53:58 -0000
Received: from x1.develooper.com (63.251.223.170)
  by onion.develooper.com with SMTP; 7 Jul 2004 08:53:58 -0000
Received: (qmail 32073 invoked by uid 225); 7 Jul 2004 08:53:57 -0000
Delivered-To: modules@perl.org
Received: (qmail 32069 invoked by alias); 7 Jul 2004 08:53:57 -0000
X-Spam-Status: No, hits=-4.9 required=8.0
	tests=BAYES_00
X-Spam-Check-By: la.mx.develooper.com
Received: from pause.fiz-chemie.de (HELO pause.perl.org) (195.149.117.110)
  by la.mx.develooper.com (qpsmtpd/0.27.1) with ESMTP; Wed, 07 Jul 2004 01:53:56 -0700
Received: from pause.perl.org (localhost [127.0.0.1])
	by pause.perl.org (8.12.3/8.12.3/Debian-6.6) with ESMTP id i678rkTB024276;
	Wed, 7 Jul 2004 10:53:47 +0200
Received: (from nobody@localhost)
	by pause.perl.org (8.12.3/8.12.3/Debian-6.6) id i678rjpx024274;
	Wed, 7 Jul 2004 10:53:45 +0200
Date: Wed, 7 Jul 2004 10:53:45 +0200
Message-ID: <200407070853.i678rjpx024274@pause.perl.org>
Subject: Module submission XML::TiePYX
Reply-To: modules@perl.org
To: modules@perl.org, ebohlman@cpan.org
X-Spam-Rating: onion.develooper.com 1.6.2 0/1000/N
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       XML::TiePYX
  DSLIP:       bdphp
  description: Read or write XML data in PYX format via tie
  userid:      EBOHLMAN (Eric Bohlman)
  chapterid:   11 (String_Lang_Text_Proc)
  communities:
    comp.lang.perl.modules

  similar:
    XML::PYX

  rationale:

    There's already an XML::PYX module (written by Matt Sergeant)
    available, so why another PYX implementation? Mainly because
    XML::PYX is intended to be used in a standalone PYX-outputting
    program which you open as a pipe. That works very well under Unix,
    aside from the overhead of forking a separate process, but is
    problematic on Win32 systems for a variety of niggling reasons: the
    standalone script is supplied as a batch file, whose output can't be
    properly redirected into a pipe unless you invoke it as 'perl
    /perl/bin/pyx|' instead of just 'pyx|'. Both Win95 and Win98, as
    well as possibly other Win32 systems, implement pipes using
    temporary files and the reading process can't start reading until
    the writing process is done writing, which means that if you're
    parsing a huge file you may have to wait a long time before getting
    *any* output. The ability to guarantee a single character data event
    for any run of characters can often simplify processing. And
    finally, when I wrote this the only supported namespace- aware way
    to parse XML was the raw handlers interface of XML::Parser, which is
    needlessly complicated for simple applications (there are, of
    course, those who would argue that "simple applications" and
    "namespace-aware" are mutually-exclusive categories).

  enteredby:   EBOHLMAN (Eric Bohlman)
  enteredon:   Wed Jul  7 08:53:41 2004 GMT

The resulting entry would be:

XML::
::TiePYX          bdphp Read or write XML data in PYX format via tie EBOHLMAN


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=d6500000_8706bbfed767f967&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=d6500000_8706bbfed767f967&SUBMIT_pause99_add_mod_insertit=1
