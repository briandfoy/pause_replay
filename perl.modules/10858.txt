Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:10858
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 47841 invoked by uid 76); 27 Mar 2002 00:44:32 -0000
Received: from root@dubravka.kbx.de (HELO pause.perl.org) (212.40.160.59)
  by onion.perl.org (qpsmtpd/0.06) with SMTP; Wed Mar 27 00:44:32 2002 -0000
Received: (from nobody@localhost)
	by pause.perl.org (8.9.3/8.9.3) id BAA29736;
	Wed, 27 Mar 2002 01:44:27 +0100
Date: Wed, 27 Mar 2002 01:44:27 +0100
Message-ID: <200203270044.BAA29736@pause.perl.org>
Reply-To: modules@perl.org
Content-Type: Text/Plain; Charset=ISO-8859-1
Content-Transfer-Encoding: 8bit
MIME-Version: 1.0
Subject: Module submission Apache::Dynagzip
To: modules@perl.org, slava@cpan.org
Approved: news@nntp.perl.org
From: upload@p11.speed-link.de ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Apache::Dynagzip
  DSLIP:       bdpho
  description: dynamic gzip compression of chunked stream
  userid:      SLAVA (Slava Bizyayev)
  chapterid:   15 (World_Wide_Web_HTML_HTTP_CGI)
  communities:
    modperl@apache.org

  similar:
    Apache::GzipChain, Apache::Compress, mod_gzip, mod_deflate

  rationale:

    in February 2002 Nicholas Oxhøj wrote to the mod_perl mailing list
    about his experience to find the Apache gzipper for the streaming
    outgoing content:

    ``... I have been experimenting with all the different Apache
    compression modules I have been able to find, but have not been able
    to get the desired result. I have tried Apache::GzipChain,
    Apache::Compress, mod_gzip and mod_deflate, with different results.
    One I cannot get to work at all. Most work, but seem to collect all
    the output before compressing it and sending it to the browser...

    ... Wouldn't it be nice to have some option to specify that the
    handler should flush and send the currently compressed output every
    time it had received a certain amount of input or every time it had
    generated a certain amount of output?..

    ... So I am basically looking for anyone who has had any success in
    achieving this kind of ``streaming'' compression, who could direct
    me at an appropriate Apache module.``

    Unfortunately, the Apache::Dynagzip has not yet been publicly
    available at that time...

  enteredby:   SLAVA (Slava Bizyayev)
  enteredon:   Wed Mar 27 00:44:27 2002 GMT

The resulting entry would be:

Apache::
::Dynagzip        bdpho dynamic gzip compression of chunked stream   SLAVA


Thanks for registering,
The Pause Team

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=50100000_882ccd904322fae6&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=50100000_882ccd904322fae6&SUBMIT_pause99_add_mod_insertit=1
