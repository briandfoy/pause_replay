Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:97
Return-Path: <jdporter@min.net>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 22757 invoked from network); 18 Oct 1999 16:35:45 -0000
Received: from min.net (jdporter@208.222.210.19)
  by tmtowtdi.perl.org with SMTP; 18 Oct 1999 16:35:45 -0000
Received: (from jdporter@localhost)
	by min.net (8.9.3/8.9.3) id MAA12664;
	Mon, 18 Oct 1999 12:35:36 -0400 (EDT)
Date: Mon, 18 Oct 1999 12:35:35 -0400
To: "Andreas J. Koenig" <andreas.koenig@anima.de>
Cc: modules@perl.org
Subject: Re: [RFC] Tie::Array::Offset ?
Message-ID: <19991018123535.B8739@min.net>
References: <19991015150405.A14149@min.net> <sfcd7ufwgqp.fsf@hohenstaufen.in-berlin.de>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Mailer: Mutt 0.95.1us
In-Reply-To: <sfcd7ufwgqp.fsf@hohenstaufen.in-berlin.de>; from Andreas J. Koenig on Sat, Oct 16, 1999 at 03:57:18PM +0200
Approved: news@nntp.perl.org
From: jdporter@min.net (John Porter)

Andreas J. Koenig wrote:
> >>>>> On Fri, 15 Oct 1999 15:04:05 -0400, John Porter <jdporter@min.net> said:
> 
>  > What do you think?  Tie::OffsetArray?
>  > As I opinied earlier, I would consider Tie::Array::Offset to
>  > be appropriate...
> 
> About Tie::FooBar vs. Tie::Bar::Foo vs. Tie::Foo::Bar -- In the past
> we have tried to keep everything 2-level and so I'd prefer to let that
> stay so.

O.k.  (*sigh*)


> On the name Tie::OffsetArray, I see no better name. But...
> 
>  > Also, FWIW, this sort of mechanism (it's bloody simple) would
>  > have made pseudo-hashes a lot more natural to work with...
> 
> ...on this statement, I'm baffled. Maybe it depends on the appropriate
> definition of natural:-)

With pseudo-hashes, the 0'th element is reserved for the name->index
table (hash), very non-transparently.  With something like my
Tie::OffsetArray interposed, the p-h, when accessed as an array,
could still have its indices start at 0.

Actually, now I think about it, my Tie::OffsetArray could be
layered on *top* of a p-h, to achieve the same effect, although
non-universally...

-- 
John Porter

