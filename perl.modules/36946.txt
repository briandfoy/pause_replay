Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:36946
Return-Path: <webmaster@simplemood.com>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 7379 invoked from network); 8 Dec 2004 20:17:24 -0000
Received: from x1.develooper.com (63.251.223.170)
  by lists.develooper.com with SMTP; 8 Dec 2004 20:17:24 -0000
Received: (qmail 3747 invoked by uid 225); 8 Dec 2004 20:17:23 -0000
Delivered-To: modules@perl.org
Received: (qmail 3742 invoked by alias); 8 Dec 2004 20:17:23 -0000
X-Spam-Status: No, hits=-4.9 required=8.0
	tests=BAYES_00
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
Received: from . (HELO redspot.jupiterhost.net) (66.90.68.46)
  by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Wed, 08 Dec 2004 12:17:19 -0800
Received: from [206.80.70.18] (helo=[10.0.1.2])
	by redspot.jupiterhost.net with esmtpa (Exim 4.42)
	id 1Cc8FU-0007Oc-7H
	for modules@perl.org; Wed, 08 Dec 2004 14:17:20 -0600
Mime-Version: 1.0 (Apple Message framework v619)
In-Reply-To: <081220041405582320%comdog@panix.com>
References: <200412071732.iB7HWqYU011386@pause.perl.org> <071220041718322148%comdog@panix.com> <75290D54-48A7-11D9-9580-000A95C8946E@simplemood.com> <081220041405582320%comdog@panix.com>
Content-Type: text/plain; charset=US-ASCII; format=flowed
Message-ID: <2658BDC4-4956-11D9-BCDF-000A95C8946E@simplemood.com>
Content-Transfer-Encoding: 7bit
Subject: Re: Module submission Data::Paginate
Date: Wed, 8 Dec 2004 14:17:14 -0600
To: modules@perl.org
X-Mailer: Apple Mail (2.619)
X-AntiAbuse: This header was added to track abuse, please include it with any abuse report
X-AntiAbuse: Primary Hostname - redspot.jupiterhost.net
X-AntiAbuse: Original Domain - perl.org
X-AntiAbuse: Originator/Caller UID/GID - [47 12] / [47 12]
X-AntiAbuse: Sender Address Domain - simplemood.com
X-Source: 
X-Source-Args: 
X-Source-Dir: 
Approved: news@nntp.perl.org
From: webmaster@simplemood.com (SimpleMood Webmaster)

>> On Dec 7, 2004, at 5:18 PM, _brian_d_foy wrote:
>
>>> In article <200412071732.iB7HWqYU011386@pause.perl.org>, Perl Authors
>>> Upload Server <upload@pause.perl.org> wrote:
>
>>>> The following module was proposed for inclusion in the Module List:
>
>>>>   modid:       Data::Paginate
>
>>>>   description: OO interface to paginate data  with 1 module
>
>>> Is there anything that we might paginate that's not text?  Could
>>> this be Text::Paginate?
>
>> Sure, images, media, archives, Database records (which would likley be
>> text but also data structures in and of them selves)
>
> Aside from the discussion on the name, how do you paginate images or
> data structures?

An example that comes to mind with images is exploding an animated gif 
and having each frame displayed on seperate Tk screens for examination.

Or a data structure could be paginated in a shell or browser to view 
easier. For example, you could paginate the %Config hash where you want 
to show only 10 keys per page.

I use it mostly to manage persistent database results for browsers..

> Isn't the notion of pagination useful only when you want to display
> things across multiple pages (or screens)?  Or, perhaps, are you
> dooing something slightly different?

Pretty much yes :)

> I'm mostly just curious... :)

Aren't we all ;p

