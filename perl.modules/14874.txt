Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:14874
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 36165 invoked by uid 76); 30 Oct 2002 20:44:26 -0000
Received: from root@[212.40.160.59] (HELO pause.perl.org) (212.40.160.59) by onion.perl.org (qpsmtpd/0.12) with SMTP; 2002-10-30 20:44:26Z
Received: (from nobody@localhost)	by pause.perl.org (8.11.6/8.11.6) id g9UKiLG02065;	Wed, 30 Oct 2002 21:44:21 +0100
Date: Wed, 30 Oct 2002 21:44:21 +0100
Message-ID: <200210302044.g9UKiLG02065@pause.perl.org>
Reply-To: modules@perl.org
Subject: Module submission Text::MessageLibrary
To: modules@perl.org, jclyman@cpan.org
X-SMTPD: qpsmtpd/0.12, http://develooper.com/code/qpsmtpd/
Approved: news@nntp.perl.org
From: upload@p11.speed-link.de ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Text::MessageLibrary
  DSLIP:       bdpOa
  description: Centralize app's fixed/dynamic text strings
  userid:      JCLYMAN (John Clyman)
  chapterid:   11 (String_Lang_Text_Proc)
  communities:
    Perlmonks; namespace proposed on c.l.p.m and modules@perl.org

  similar:

  rationale:

    Larger apps can benefit from a way to manage text strings to avoid
    string literals scattered throughout code. This module implements a
    mechanism for creating lists of text strings (either fixed or with
    placeholders filled in at calling time) and wraps it in a nice OO
    interface that lets you make calls like this:

    print $my_messages->file_open_failed($input_file);

    (You never actually define a "file_open_failed" method; an AUTOLOAD
    sub generates one for you and performs a lookup to construct the
    appropriate string.)

    You can find a more detailed discussion of the rationale, and
    feedback from others in the community, here:
    http://www.perlmonks.org/index.pl?node_id=136715 and here:
    http://www.perlmonks.org/index.pl?node_id=136784

    I propose the name Text::MessageLibrary because this is basically a
    way for managing the text strings in your application. It's not
    language-specific, so Lingua::* seems inappropriate. String::* would
    be a possibility but my sense is that most of those modules are
    lower-level string-manipulation functions. (This is probably closer
    to some of the text-templating functions under Text::*.) brian d foy
    suggested Class::*, but the OO-ness of this solution is really
    incidental (it's for the syntactic convenience of the caller).

    Also, Text::* was where I first looked in CPAN when I was initially
    searching for a solution to this problem.

  enteredby:   JCLYMAN (John Clyman)
  enteredon:   Wed Oct 30 20:44:20 2002 GMT

The resulting entry would be:

Text::
::MessageLibrary  bdpOa Centralize app's fixed/dynamic text strings  JCLYMAN


Thanks for registering,
The Pause Team

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=86300000_77370d3eebfa11a7&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=86300000_77370d3eebfa11a7&SUBMIT_pause99_add_mod_insertit=1
