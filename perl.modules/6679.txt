Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:6679
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 23066 invoked from network); 23 Jul 2001 19:03:50 -0000
Received: from dubravka.kbx.de (HELO pause.perl.org) (root@212.40.160.59)
  by onion.valueclick.com with SMTP; 23 Jul 2001 19:03:50 -0000
Received: (from nobody@localhost)
	by pause.perl.org (8.9.3/8.9.3) id VAA17396;
	Mon, 23 Jul 2001 21:03:48 +0200
Date: Mon, 23 Jul 2001 21:03:48 +0200
Message-ID: <200107231903.VAA17396@pause.perl.org>
Reply-To: modules@perl.org
Subject: Module submission Class::Prototyped
To: modules@perl.org, nedkonz@cpan.org
X-Spam-Rating: onion.valueclick.com 1.6.2 0/1000/N
Approved: news@nntp.perl.org
From: upload@p11.speed-link.de ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Class::Prototyped
  DSLIP:       bdpOp
  description: Fast prototype-based OO programming in Perl
  userid:      NEDKONZ (Ned Konz)
  chapterid:    6 (Data_Type_Utilities)
  communities:
    an early version was put on Perlmonks.org. Authors of similar
    modules were contacted via email.

  similar:
    Class::Object, Class::SelfMethods, Class::Classless

  rationale:

    This module is a significant improvement over the modules
    Class::Object, Class::SelfMethods, Class::Classless. It offers
    better performance and a more complete reflection interface than
    Class::SelfMethods and Class::Classless, and it offers a complete
    solution for object-based inheritance, whereas Class::Object was
    just a proof-of-concept and lacks quite a bit of functionality.

    Originally, I'd thought that Object::Prototyped would be better,
    but Toby Everett convinced me that people would find it better if it
    were named Class:: something.

  enteredby:   NEDKONZ (Ned Konz)
  enteredon:   Mon Jul 23 19:03:47 2001 GMT

The resulting entry would be:

Class::
::Prototyped      bdpOp Fast prototype-based OO programming in Perl  NEDKONZ


Thanks for registering,
The Pause Team

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=24000000_c00aee2ee359fc33&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=24000000_c00aee2ee359fc33&SUBMIT_pause99_add_mod_insertit=1
