Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:42155
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 10779 invoked from network); 1 Aug 2005 09:17:44 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 1 Aug 2005 09:17:44 -0000
Received: (qmail 14031 invoked by uid 225); 1 Aug 2005 09:17:42 -0000
Delivered-To: modules@perl.org
Received: (qmail 14023 invoked by alias); 1 Aug 2005 09:17:39 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
Received: from pause.fiz-chemie.de (HELO pause.perl.org) (195.149.117.110)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Mon, 01 Aug 2005 02:17:36 -0700
Received: from pause.perl.org (localhost [127.0.0.1])
	by pause.perl.org (8.12.3/8.12.3/Debian-7.1) with ESMTP id j719HVrd022527
	for <modules@perl.org>; Mon, 1 Aug 2005 11:17:31 +0200
Received: (from nobody@localhost)
	by pause.perl.org (8.12.3/8.12.3/Debian-7.1) id j719HVWe022525;
	Mon, 1 Aug 2005 11:17:31 +0200
Date: Mon, 1 Aug 2005 11:17:31 +0200
Message-ID: <200508010917.j719HVWe022525@pause.perl.org>
Subject: Module submission Symbol::Values
Reply-To: modules@perl.org
To: modules@perl.org
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Symbol::Values
  DSLIP:       Rdphp
  description: Provides OO interface to values of symbol.
  userid:      KMIYAZAKI (Keitaro Miyazaki)
  chapterid:   2 (Language_Extensions)
  communities:

  similar:

  rationale:

    This module provides consistent accessing interface to values of
    symbol.

    Below is the background why I wore this module.

    I've been feeling that glob notation of perl is little bit funny.

    First problem is that it lacks consistency in the way of
    fetching/storing values of a symbol.

    See examples below.

    $code_ref = *name{CODE}; # Getting code object. # This is obvious.
    *name{CODE} = $code_ref; # Setting code object. # THIS CODE DOES NOT
    WORK!! *name = $code_ref; # This code works... # Isn't it funny?

    Second problem is readability of the code.

    I think that inconsistency of the glob notation is making
    readability of the code little bit difficult.

    Therefore I wrote this module to provide alternative way of
    accessing to the values of a symbol.

    By using this module, above examples can be wrote as below.

    use Symbol::Values; my $sym = Symbol::Values->new('name');
    $code_ref = $sym->code; # Getting code object. $sym->code =
    $code_ref; # Setting code object.

    I hope this module makes your code more readable.

  enteredby:   KMIYAZAKI (Keitaro Miyazaki)
  enteredon:   Mon Aug  1 09:17:30 2005 GMT

The resulting entry would be:

Symbol::
::Values          Rdphp Provides OO interface to values of symbol.   KMIYAZAKI


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=08900000_313ca82f198f14a1&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=08900000_313ca82f198f14a1&SUBMIT_pause99_add_mod_insertit=1
