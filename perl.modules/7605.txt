Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:7605
Return-Path: <mgilfix@eecs.tufts.edu>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 2214 invoked from network); 18 Sep 2001 19:53:39 -0000
Received: from yogi.eecs.tufts.edu (postfix@130.64.23.171)
  by onion.valueclick.com with SMTP; 18 Sep 2001 19:53:39 -0000
Received: from andante.eecs.tufts.edu (Andante.EECS.Tufts.EDU [130.64.23.37])
	by yogi.eecs.tufts.edu (Postfix) with ESMTP id 8D28C1ACA9
	for <modules@perl.org>; Tue, 18 Sep 2001 15:55:01 -0400 (EDT)
Received: by andante.eecs.tufts.edu (Postfix, from userid 22046)
	id 89987D3C3; Tue, 18 Sep 2001 15:53:37 -0400 (EDT)
Date: Tue, 18 Sep 2001 15:53:37 -0400
To: modules@perl.org
Subject: Registration for CPAN
Message-ID: <20010918155337.F20485@eecs.tufts.edu>
Reply-To: mgilfix@eecs.tufts.edu
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.2.2i
X-Spam-Rating: onion.valueclick.com 1.6.2 0/1000/N
Approved: news@nntp.perl.org
From: mgilfix@eecs.tufts.edu (Michael Gilfix)

  Hi! I'd like to contribute a suite of modules to CPAN. Here's the info you
guys need:

    Name: Michael Gilfix
    Email: mgilfix@eecs.tufts.edu
    Homepage: http://www.eecs.tufts.edu/~mgilfix
    Preferred-ID: MGILFIX

  The contribution would come in the form of three modules under the
Net::Notification namespace (I'm open to another namespace if you guys
have any suggestions):

    Net::Notification::Notice
    Net::Notification::NoticePool
    Net::Notification::Email

  Here's a description from the POD documentation for the NoticePool
module:

--------------------------------------------------------------------

Net::Notification::NoticePool provides methods for managing persistent
user notifications that might be sent through a variety of medium
such as via email or pager. This module is meant to facilitate
communication through medium where the programmer can expect a
significant delay and where reliability is important.

NoticePool allows for management of various Notification objects
(see Net::Notification::Notice), each with possibly different
destinations. The NoticePool offers guaranteed reliability as all
changes to the Notification object are written out to disk in the
notification database prior to update.

The notification pool allows the addition, updating, and retrieval
of notification objects within the pool.  Notification transactions
are advanced through the 'updateOutstanding' method, which attempts
to resend notifications whose delivery previously failed and indicate
that notices are awaiting processing when a response has arrived.

Transports are registered as transport types (keywords) and associated
instantiated transport objects. Transport objects must adhere to the
interface outlined in the transport section below.

A history of the notification transactions is also maintained within
the notification object during sending and retrieval.  The status of
the notification object is also updated as the application interacts
with the notice pool.

Finally, notification objects continue to exist within the persistent
notification database until they are resolved by the application.

---------------------------------------------------------------------

  I think this module will be really useful to the community as I have
often had need for such a module but have been unable to find anything
like it within the depths of CPAN. Please let me know if you guys need
any more information.

        Cheers!

               -- Mike

-- 
Michael Gilfix
mgilfix@eecs.tufts.edu
