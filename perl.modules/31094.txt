Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:31094
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 32904 invoked from network); 23 Apr 2004 00:24:57 -0000
Received: from x1.develooper.com (63.251.223.170)
  by onion.develooper.com with SMTP; 23 Apr 2004 00:24:57 -0000
Received: (qmail 32258 invoked by uid 225); 23 Apr 2004 00:24:56 -0000
Delivered-To: modules@perl.org
Received: (qmail 32254 invoked by alias); 23 Apr 2004 00:24:56 -0000
X-Spam-Status: No, hits=0.0 required=7.0
	tests=
X-Spam-Check-By: la.mx.develooper.com
Received: from pause.fiz-chemie.de (HELO pause.perl.org) (195.149.117.110)
  by la.mx.develooper.com (qpsmtpd/0.27.1) with ESMTP; Thu, 22 Apr 2004 17:24:56 -0700
Received: from pause.perl.org (localhost [127.0.0.1])
	by pause.perl.org (8.12.3/8.12.3/Debian-6.6) with ESMTP id i3N0OmTB015144;
	Fri, 23 Apr 2004 02:24:49 +0200
Received: (from nobody@localhost)
	by pause.perl.org (8.12.3/8.12.3/Debian-6.6) id i3N0OmqJ015142;
	Fri, 23 Apr 2004 02:24:48 +0200
Date: Fri, 23 Apr 2004 02:24:48 +0200
Message-ID: <200404230024.i3N0OmqJ015142@pause.perl.org>
Subject: Module submission Net::RTSP
Reply-To: modules@perl.org
To: modules@perl.org, wgdavis@cpan.org
X-Spam-Rating: onion.develooper.com 1.6.2 0/1000/N
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Net::RTSP
  DSLIP:       adpOg
  description: The Perl RTSP client API
  userid:      WGDAVIS (William G. Davis)
  chapterid:    5 (Networking_Devices_IPC)
  communities:
    perlmonks.com

  similar:
    RTSP::Lite

  rationale:

    RTSP is the Real Time Streaming Protocol (RFC 2326). The Real Time
    Streaming Protocol is a text-based client/server protocol used to
    control the delivery of real-time streams (delivered via another
    transport protocol). It's used by applications such as RealPlayer
    and Windows Media Player to play, pause, and otherwise manage
    streaming audio and video.

    Net::RTSP will *fully* implement the client-side of the Real Time
    Streaming Protocol, and it will do so with a powerful, flexible, and
    optionally simple, OO interface. It has classes to manipulate RTSP
    requests, responses, and sessions, for example.

    At the moment, the only other module I could find that supports
    RTSP is RTSP::Lite. As the name implies, it provides only a partial
    implementation of the protocol. It's really just a slightly modified
    HTTP::Lite.

    A true RTSP implementation has to support:

    1) Bidirectional communication.

    RTSP allows servers to make requests of the client, so a procedural
    connect->write->read->disconnect interface often wont suffice.

    2) Communication via TCP as well as UDP.

    RTSP maintains state using session IDs and ensures proper message
    ordering using sequence numbers, so UDP alternately be used instead
    of TCP for added performance.

    3) Multiple simultaneous connections.

    It's not uncommon to have one RTSP session handle a video stream
    and another handle an accompanying audio stream, so multiple
    connections are a must

    RTSP::Lite supports none of those, but Net::RTSP will. Net::RTSP
    offers both a simple, linear OO interface (connecting, then sending
    a request, then receiving a response, etc.) or an asynchronous OO
    interface that's completely event-driven, implemented using an event
    loop and select().

  enteredby:   WGDAVIS (William G. Davis)
  enteredon:   Fri Apr 23 00:24:47 2004 GMT

The resulting entry would be:

Net::
::RTSP            adpOg The Perl RTSP client API                     WGDAVIS


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=6b600000_0e10d2a1c0612861&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=6b600000_0e10d2a1c0612861&SUBMIT_pause99_add_mod_insertit=1
