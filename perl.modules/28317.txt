Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:28317
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 48309 invoked by uid 76); 9 Feb 2004 15:36:18 -0000
Received: from x1.develooper.com (HELO x1.develooper.com) (63.251.223.170) by onion.perl.org (qpsmtpd/0.26) with SMTP; Mon, 09 Feb 2004 07:36:18 -0800
Received: (qmail 5983 invoked by uid 225); 9 Feb 2004 15:36:16 -0000
Delivered-To: modules@perl.org
Received: (qmail 5871 invoked by alias); 9 Feb 2004 15:36:15 -0000
Received: from [195.149.117.110] (HELO pause.perl.org) (195.149.117.110)  by la.mx.develooper.com (qpsmtpd/0.27-dev) with ESMTP; Mon, 09 Feb 2004 07:36:15 -0800
Received: from pause.perl.org (localhost [127.0.0.1])	by pause.perl.org (8.12.3/8.12.3/Debian-6.6) with ESMTP id i19FaAcj005533	for <modules@perl.org>; Mon, 9 Feb 2004 16:36:11 +0100
Received: (from nobody@localhost)	by pause.perl.org (8.12.3/8.12.3/Debian-6.6) id i19Fa9u4005531;	Mon, 9 Feb 2004 16:36:09 +0100
Date: Mon, 9 Feb 2004 16:36:09 +0100
Message-ID: <200402091536.i19Fa9u4005531@pause.perl.org>
Subject: PAUSE ID request (RST; Roel van der Steen)
Reply-To: modules@perl.org
To: modules@perl.org
X-SMTPD: qpsmtpd/0.26, http://develooper.com/code/qpsmtpd/
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")

Request to register new user

fullname: Roel van der Steen
  userid: RST
    mail: CENSORED
homepage: 
     why:

    FrameMaker::MifTree

    There used to be a MIF parser module on CPAN once, but this seems
    now discontinued. I wrote a new object class and parser. The MIF
    object is implemented as a Tree::DAG_Node tree object, the parser
    uses IO::Tokenizer to process the MIF file.

    MifTree not only knows the MIF syntax, but it also has some
    understanding of the allowed structures (within their contexts) and
    attribute types. The current module sopports MIF version 7.00.

    The following important methods are available: * inherited methods
    from Tree::DAG_Node * methods to access MIF-specific attribute types
    (e.g., measurements, MIF strings, paths) * methods to handle facet
    data (embedded images) * parse MIF from file and from a text string
    * write out a MIF object to a MIF file or text string list

    I've plans for the following other methods: * a validator that
    checks some extra constructs * a "flatten" method that tries to
    reduce the number of objects needed for text flows and pages

    Non-supported MIF functions: * #-style comments * MIF macros *
    include files


The following links are only valid for PAUSE maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_user&USERID=61600000_ac08444e0346e378&SUBMIT_pause99_add_user_sub=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_user&USERID=61600000_ac08444e0346e378&SUBMIT_pause99_add_user_Definitely=1
