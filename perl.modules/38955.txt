Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:38955
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 5070 invoked from network); 10 Mar 2005 00:38:10 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 10 Mar 2005 00:38:10 -0000
Received: (qmail 3205 invoked by uid 225); 10 Mar 2005 00:38:10 -0000
Delivered-To: modules@perl.org
Received: (qmail 3197 invoked by alias); 10 Mar 2005 00:38:10 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
Received: from pause.fiz-chemie.de (HELO pause.perl.org) (195.149.117.110)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Wed, 09 Mar 2005 16:38:05 -0800
Received: from pause.perl.org (localhost [127.0.0.1])
	by pause.perl.org (8.12.3/8.12.3/Debian-7.1) with ESMTP id j2A0bu64028724
	for <modules@perl.org>; Thu, 10 Mar 2005 01:37:58 +0100
Received: (from nobody@localhost)
	by pause.perl.org (8.12.3/8.12.3/Debian-7.1) id j2A0bqh2028722;
	Thu, 10 Mar 2005 01:37:54 +0100
Date: Thu, 10 Mar 2005 01:37:54 +0100
Message-ID: <200503100037.j2A0bqh2028722@pause.perl.org>
Subject: Module submission Games::Tournament::BlackJack
Reply-To: modules@perl.org
To: modules@perl.org
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Games::Tournament::BlackJack
  DSLIP:       adphp
  description: BlackJack Simulation Environment
  userid:      PJACOBS (Paul Jacobs)
  chapterid:   23 (Miscellaneous_Modules)
  communities:
    Thousand-Oaks.pm meetings & mailing list

  similar:
    Games::Cards Games::Blackjack

  rationale:

    I've heard a lot of claims about blackjack card-counting schemes,
    grid-based programs for human players to interpret on the casino
    floor, etc.. I've also heard that it's possible in casino blackjack
    for the trained player to get a 5% or so advantage with 'ideal'
    strategy and timing, over the long run. But there is considerable
    debate, it seems, on WHICH strategy one should follow to get the
    maximum advantage.

    And more importantly, there doesn't seem to be any objective source
    in the market - no arguments are really being made by anyone who
    _isn't_ trying to sell a book or a training program. It's not
    science being done out there, it's marketing.

    I wanted to see a study done not-for-profit, with the data open to
    the public, with the algorithms open to the public, and giving
    anyone the software and data to duplicate the entire contest for
    themselves, if they want.

    So.. I decided to have a contest for blackjack bots, where the
    tournament software is open-source, and require all entries to be
    open-sourced as well. Everything is written in perl, as will be all
    the entries (though I'm considering adding other interfaces using
    stdin/stdout for non-perl-lovers). I am involved with the Thousand
    Oaks Perl Mongers, they are going to sponsor/adopt the contest. When
    the contest opens, I want to be able to tell users we will simply be
    using the latest version of the Games::Tournament::BlackJack module,
    and they can download and install (and help debug) the same
    tournament software that we will be using with a simple CPAN
    command.

    Also, I'm sure there are others out there who might want to make
    use of this framework to run simulated (or real, for that matter)
    blackjack tournaments.

    Before choosing the namespace for this module, I discussed the
    options several times with Thousand-Oaks.pm members at meetings, and
    wrote to modules@perl.org twice asking for advice - the first time
    (1/16/05), more general stuff, asking for suggestions, and then the
    second time (1/21/05), with a specific name in mind -
    Games::Tournament::BlackJack. For a discussion of why I chose the
    name I did, check out those two emails (both from
    paul@pauljacobs.net).

    Reasons this module doesn't make use of the Games::BlackJack
    module: - I don't like the way their card and deck representations
    work. Mine (in deck.pm) uses one scalar value per card,
    Games::BlackJack uses an array reference. Mine can be printed
    without any more preprocessing than a join, theirs requires a loop
    or subroutine to interpret the cards.. We both supply utility
    functions to minimize the necessity for accessing the cards directly
    in any case, but when you have to do so, I believe my way is better.
    I prefer to offload as much effort as possible from my users. - I
    wasn't aware Games::Blackjack existed until after I already had a
    working deck.pm, was happy with it's API, and had other code built
    on top of it. - I think there's room for two Blackjack modules. As I
    mentioned we have different data structure philosophies. And mine
    has a different and more specific purpose. - BlackJack should have
    the Jack capitalized to be correct. There is precedent for CamelCase
    module names in, for example, Parse::RecDescent.

    Reasons this module doesn't make use of the Games::Cards module: -
    I didn't know of it before I wrote the same functionality for this
    project. It looks useful, I may want to integrate it later.

  enteredby:   PJACOBS (Paul Jacobs)
  enteredon:   Thu Mar 10 00:37:48 2005 GMT

The resulting entry would be:

Games::Tournament::
::BlackJack       adphp BlackJack Simulation Environment             PJACOBS


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=fc900000_ecdd06e7d7bf349c&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=fc900000_ecdd06e7d7bf349c&SUBMIT_pause99_add_mod_insertit=1
