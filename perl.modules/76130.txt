Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:76130
Return-Path: <aw@ice-sa.com>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Delivered-To: moderator for modules@perl.org
Received: (qmail 13130 invoked from network); 18 May 2011 16:13:54 -0000
Received: from x1.develooper.com (207.171.7.70)
  by x6.develooper.com with SMTP; 18 May 2011 16:13:54 -0000
Received: (qmail 27374 invoked by uid 225); 18 May 2011 16:13:54 -0000
Delivered-To: modules@perl.org
Received: (qmail 27365 invoked by alias); 18 May 2011 16:13:48 -0000
X-Spam-Status: No, hits=1.6 required=8.0
	tests=SARE_CSBIG,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received: from tor.combios.es (HELO tor.combios.es) (212.85.38.228)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Wed, 18 May 2011 09:13:40 -0700
Received: from [192.168.245.129] (p549E899A.dip0.t-ipconnect.de [84.158.137.154])
	by tor.combios.es (Postfix) with ESMTPA id D83F22260ED;
	Wed, 18 May 2011 18:08:03 +0200 (CEST)
Message-ID: <4DD3EEE2.5000200@ice-sa.com>
Date: Wed, 18 May 2011 18:08:02 +0200
Reply-To: aw@ice-sa.com
User-Agent: Thunderbird 2.0.0.23 (Windows/20090812)
MIME-Version: 1.0
To: bug-Mail-Bulkmail@rt.cpan.org.
CC: modules@perl.org, JIMT@perl.org
Subject: Patch for Mail::Bulkmail v 3.12
Content-Type: multipart/mixed;
 boundary="------------040407030003050600030602"
X-Virus-Checked: Checked
Approved: news@nntp.perl.org
From: aw@ice-sa.com (=?UTF-8?B?QW5kcsOpIFdhcm5pZXI=?=)

--------------040407030003050600030602
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 8bit

Dear CPAN admins,

Below is an email which I sent to the author "JIMT" one week ago, and to which I have not 
received an answer so far.
I know it isn't a long time, but I had previously sent a similar email to the same author, 
about the same issue, 3 years ago, and never received an answer either.
And in the bug-tracking system, I see that there is already a bug report from someone 
else, dated 6 years ago, about the same issue and version. 
(https://rt.cpan.org/Ticket/Display.html?id=8496).
I believe that it is fair enough to think that the original module author is no longer 
available, or uninterested in further maintenance of the module (which module is however 
very nice and useful).

Attached is a modified version of Mail::Bulkmail, which (for me) fixes the problem I was 
having, and probably also the problem indicated in the bug report.

Unfortunately, i do not know how to generate a proper diff file on my Windows workstation, 
so I hope someone can do that for me.
Neither I am really interested in "adopting" the module, as there are many parts in that 
code and its prerequisites, which I do not really understand and would be unable to support.

But I hope that someone will find interest in applying this patch to Mail::Bulkmail, so 
that other people could avoid the same issue.

Best regards,
André Warnier



-------- Original Message --------
Date: Thu, 12 May 2011 22:29:57 +0200
From: André Warnier <aw@ice-sa.com>
Reply-To: aw@ice-sa.com
Subject: Mail::Bulkmail
To: jim@jimandkoka.com

Mail::Bulkmail
Platform independent mailing list module
Mail-Bulkmail-3.12 - 22 Dec 2003 - Jim Thomason


Hello Jim.

First, thanks for the Mail::Bulkmail module, it is very useful.

Are you still maintaining that module ?

If not, could you tell me how I could ask to incorporate the following in the module
version posted on CPAN ?

If yes, here is the issue :

There is a small problem in Mail::Bulkmail, which I have tried to correct in the attached
version (it works for me).
The modifications are in the line range 1962 to 2030.

The original problem is :
When creating a Mail::Bulkmail object, one can specify to use an existing mail message
file, and to use the headers which are already in that file.
Typically, that message will be prepared and saved using some kind of email program or
editor.  The "Content-type" header created by such programs is sometimes spelled as
"Content-Type" or "CONTENT-TYPE", which are valid and equivalent as far as RFC2822 and
RFC2045 are concerned.

But the Mail::Bulkmail v 3.12 module checks only for the exact header name "Content-type"
(lines 1994-2004), which can lead it to create a message containing 2 Content-type headers
: an original "Content-Type: multipart/related" for instance, plus an added "Content-type:
text/plain" header for instance.
The resulting email causes funny things to happen at the recipient side.

The applied modification helps to avoid this.  It just checks for the Content-type header
in a case-independent fashion.  I suppose that this could be generalised to the other
checked headers, but I have not done so because my problem was only with Content-type.

Best regards,
André Warnier
Informatica Consulting Europa SL
Valencia, Spain




--------------040407030003050600030602
Content-Type: text/plain;
 name="Bulkmail_modified.pm"
Content-Transfer-Encoding: base64
Content-Disposition: attachment;
 filename="Bulkmail_modified.pm"

cGFja2FnZSBNYWlsOjpCdWxrbWFpbDsKCiMgQ29weXJpZ2h0IGFuZCAoYykgMTk5OSwgMjAw
MCwgMjAwMSwgMjAwMiwgMjAwMyBKYW1lcyBBIFRob21hc29uIElJSSAoamltQGppbWFuZGtv
a2EuY29tKS4gQWxsIHJpZ2h0cyByZXNlcnZlZC4KIyBNYWlsOjpCdWxrbWFpbCBpcyBkaXN0
cmlidXRlZCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIFBlcmwgQXJ0aXN0aWMgTGljZW5zZS4K
CiMgTWFpbDo6QnVsa21haWwgaXMgc3RpbGwgbXkgYmFieSBhbmQgc2hhbGwgYmUgc3VwcG9y
dGVkIGZvcmV2ZXJtb3JlLgoKPXBvZAoKPWhlYWQxIE5BTUUKCk1haWw6OkJ1bGttYWlsIC0g
UGxhdGZvcm0gaW5kZXBlbmRlbnQgbWFpbGluZyBsaXN0IG1vZHVsZQoKPWhlYWQxIEFVVEhP
UgoKSmltIFRob21hc29uLCBqaW1AamltYW5ka29rYS5jb20gKGh0dHA6Ly93d3cuamltYW5k
a29rYS5jb20pCgo9aGVhZDEgU1lOT1BTSVMKCiB1c2UgTWFpbDo6QnVsa21haWwgL3BhdGgv
dG8vY29uZi5maWxlCgogbXkgJGJ1bGsgPSBNYWlsOjpCdWxrbWFpbC0+bmV3KAoJIkxJU1Qi
IAkJPT4gIn4vbXkubGlzdC50eHQiLAoJIkZyb20iCQk9PiAnIkppbSBUaG9tYXNvbiI8amlt
QGppbWFuZGtva2EuY29tPicsCgkiU3ViamVjdCIJPT4gIlRoaXMgaXMgYSB0ZXN0IG1lc3Nh
Z2UiLAoJIk1lc3NhZ2UiCT0+ICJIZXJlIGlzIG15IHRlc3QgbWVzc2FnZSIKICkgfHwgZGll
IE1haWw6OkJ1bGttYWlsLT5lcnJvcigpOwoKICRidWxrLT5idWxrbWFpbCgpIHx8IGRpZSAk
YnVsay0+ZXJyb3I7CgpEb24ndCBmb3JnZXQgdG8gc2V0IHVwIHlvdXIgY29uZiBmaWxlIQoK
PWhlYWQxIERFU0NSSVBUSU9OCgpNYWlsOjpCdWxrbWFpbCBnaXZlcyBhIGZhaXJseSBjb21w
bGV0ZSBzZXQgb2YgdG9vbHMgZm9yIG1hbmFnaW5nIG1hc3MtbWFpbGluZyBsaXN0cy4gSSBp
bml0aWFsbHkKd3JvdGUgaXQgYmVjYXVzZSB0aGUgdG9vbHMgSSB3YXMgdXNpbmcgYXQgdGhl
IHRpbWUgd2VyZSBqdXN0IHRvbyBkYW1uIHNsb3cgZm9yIG1haWxpbmcgb3V0IHRvCnRob3Vz
YW5kcyBvZiByZWNpcGllbnRzLiBJIGtlZXAgd29ya2luZyBvbiBpdCBiZWNhdXNlIGl0J3Mg
cmVhc29uYWJseSBwb3B1bGFyIGFuZCBJIGVuam95IGl0LgoKSW4gYSBudXRzaGVsbCwgaXQg
YWxsb3dzIHlvdSB0byByYXBpZGx5IHRyYW5zbWl0IGEgbWVzc2FnZSB0byBhIG1haWxpbmcg
bGlzdCBieSB6aXBwaW5nIG91dCB0aGUKaW5mb3JtYXRpb24gdG8gdGhlbSB2aWEgYW4gU01U
UCByZWxheSAoeW91ciBvd24sIG9mIGNvdXJzZSkuIFN1YmNsYXNzZXMgcHJvdmlkZSB0aGUg
YWJpbGl0eSB0bwp1c2UgbWFpbCBtZXJnZXMsIGR5bmFtaWMgbWVzc2FnZXMsIGFuZCBhbnl0
aGluZyBlbHNlIHlvdSBjYW4gdGhpbmsgb2YuCgpNYWlsOjpCdWxrbWFpbCAzLjAwIGlzIGEg
bWFqb3IgbWFqb3IgQjxtYWpvcj4gdXBncmFkZSB0byB0aGUgcHJldmlvdXMgdmVyc2lvbiAo
Mi4wNSksIHdoaWNoCndhcyBhIG1ham9yIHVwZ3JhZGUgdG8gdGhlIHByZXZpb3VzIHZlcnNp
b24gKDEuMTEpLiBNeSBzb2Z0d2FyZSBwaGlsb3NvcGh5IGlzIHRoYXQgbW9zdCBjb2RlCnNo
b3VsZCBiZSBzY3JhcHBlZCBhbmQgcmUtd3JpdHRlbiBldmVyeSA2LTggbW9udGhzIG9yIHNv
LiAyLjA1IHdhcyByZWxlYXNlZCBpbiBPY3RvYmVyIG9mIDIwMDAsIGFuZApJJ20gd3JpdGlu
ZyB0aGVzZSBkb2NzIGZvciAzLjAwIGluIEphbnVhcnkgb2YgMjAwMy4gU28gSSdtIGF0IGxl
YXN0IDMgbWFqb3IgcmUtd3JpdGVzIGJlaGluZC4KKHBoaWxvc29waHkgaXMgcmVmZXJlbmNl
ZCBpbiB0aGUgRkFRLCBiZWxvdykKCkJ1dCB0aGF0J3Mgb2theSwgYmVjYXVzZSB3ZSdyZSBn
ZXR0aW5nIGl0IGRvbmUgbm93LgoKMy4wMCBpcyBhYm91dCBhcyBiYWNrd2FyZHMgY29tcGF0
aWJsZSB0byAyLjAwIGFzIDIuMDAgaXMgdG8gMS4wMC4gVGhhdCBpcyB0byBzYXksIHNvcnRh
LiBJJ3ZlCnRyaWVkIHRvIG1ha2UgYSBub3RlIG9mIHRoaW5ncyB3aGVyZSB0aGV5IGNoYW5n
ZWQsIGJ1dCBJJ20gc3VyZSBJIG1pc3NlZCB0aGluZ3MuIFNvbWUgdGhpbmdzIGNhbgpubyBs
b25nZXIgYmUgZG9uZSwgbG90cyBhcmUgZG9uZSBkaWZmZXJlbnRseSwgc29tZSBhcmUgdGhl
IHNhbWUuIFlvdSB3aWxsIG5lZWQgdG8gY2hhbmdlIHlvdXIgY29kZQp0byB1cGRhdGUgZnJv
bSAxLnggb3IgMi54IHRvIDMuMDAsIHRob3VnaC4gVGhhdCdzIGEgZ2l2ZW4uCgpTbyB3aGF0
J3MgbmV3IGZvciAzLjAwPyBMb3RzIG9mIHN0dWZmLgoKSW1tZWRpYXRlIGNoYW5nZXMgYXJl
OgoKICogY29kZSBjb21wYXJ0bWVudGFsaXphdGlvbgogKiBtdWx0aS1zZXJ2ZXIgc3VwcG9y
dAogKiBjb25mIGZpbGUKClRoZSBpbW1lZGlhdGUgY2hhbmdlIGlzIHRoYXQgdGhlIGNvZGUg
aXMgbm93IGNvbXBhcnRtZW50YWxpemVkLgpNYWlsOjpCdWxrbWFpbCBub3cganVzdCBoYW5k
bGVzIG9yZGluYXJ5LCBub24tZHluYW1pYyBtYWlsaW5ncy4gU2VlIE1haWw6OkJ1bGttYWls
OjpEeW5hbWljIGZvciB0aGUKbWVyZ2luZyBhbmQgZHluYW1pYyB0ZXh0IGFiaWxpdGllcyBm
cm9tIHRoZSBwcmlvciB2ZXJzaW9ucy4KClNlcnZlciBjb25uZWN0aW9ucyBhcmUgbm8gbG9u
Z2VyIGhhbmRsZWQgZGlyZWN0bHkgaW4gTWFpbDo6QnVsa21haWwgKFNtdHAgYXR0cmlidXRl
LCBQb3J0IGF0dHJpYnV0ZSwKZXRjLiksIHRoZXJlIGlzIG5vdyBhIHNlcGFyYXRlIE1haWw6
OkJ1bGttYWlsOjpTZXJ2ZXIgb2JqZWN0IHRvIGhhbmRsZSBhbGwgb2YgdGhhdC4KCkFuZCBl
dmVyeXRoaW5nIHN1YmNsYXNzZXMgb2ZmIG9mIE1haWw6OkJ1bGttYWlsOjpPYmplY3QsIHdo
ZXJlIEkgaGF2ZSBteSBzdXBlci1tZXRob2RzIHRvIGRlZmluZQpteSBvYmplY3RzLCBzb21l
IGhlbHBlciBzdHVmZiwgYW5kIHNvIG9uLgoKSXQncyBqdXN0IGEgbG90IGVhc2llciBmb3Ig
bWUgdG8gbWFpbnRhaW4sIHRoaW5rIGFib3V0IGl0LCBldGMuIGlmIGl0J3MgYWxsIHNlcGFy
YXRlZC4gSXQncyBhbHNvIGVhc2llcgpmb3IgeW91LCB0aGUgdXNlciwgaWYgeW91IHdhbnQg
dG8gbWFrZSBjaGFuZ2VzIHRvIHRoaW5ncy4gSnVzdCBzdWJjbGFzcyBpdCwgdHdlYWsgaXQs
IGFuZCB1c2UgaXQuClZlcnkgc3RyYWlnaHRmb3J3YXJkIHRvIG1vZGlmeSBhbmQgZXh0ZW5k
IG5vdy4gMi54IGFuZCBiZWxvdyAqY291bGQqIGRvIGl0LCBidXQgaXQgd2Fzbid0IHJlYWxs
eSB0aGF0CmVhc3kgKHVubGVzcyB5b3Ugd2VyZSBtYWtpbmcgdmVyeSB0cml2aWFsIGNoYW5n
ZXMpLiBUaGlzIHNob3VsZCByZWN0aWZ5IHRoYXQuCgpBbm90aGVyIG1ham9yIGNoYW5nZSBp
cyB0aGUgYWRkaXRpb24gb2YgbXVsdGktc2VydmVyIHN1cHBvcnQuIFNlZSB0aGUgZG9jcyBp
biBNYWlsOjpCdWxrbWFpbDo6U2VydmVyIGZvcgptb3JlIGluZm9ybWF0aW9uLiBZb3UgY2Fu
IHN0aWxsIHNwZWNpZnkgb25lIFNNVFAgcmVsYXkgaWYgdGhhdCdzIGFsbCB5b3UndmUgZ290
LCBidXQgaWYgeW91IGhhdmUgbXVsdGlwbGUKc2VydmVycywgTWFpbDo6QnVsa21haWwgY2Fu
IG5vdyBsb2FkIGJhbGFuY2UgYmV0d2VlbiB0aGVtIHRvIGhlbHAgdGFrZSB0aGUgc3RyZXNz
IG9mZi4gTm8gbWF0dGVyIHdoYXQsCnRoZSBiaWdnZXN0IGJvdHRsZW5lY2sgdG8gYWxsIG9m
IHRoaXMgaXMgbmV0d29yayBwZXJmb3JtYW5jZSAoYm90aCB0byB0aGUgU01UUCByZWxheSBh
bmQgdGhlbiBmcm9tCnRoZSByZWxheSB0byB0aGUgcmVzdCBvZiB0aGUgd29ybGQpLCBzbyBp
IHdhbnRlZCB0byB0cnkgYW5kIGhlbHAgYWxsZXZpYXRlIHRoYXQgYnkgdXNpbmcgbXVsdGlw
bGUgc2VydmVycy4KSSBrbm93IHRoYXQgc29tZSBwZW9wbGUgd2VyZSBkb2luZyB0aGF0IG9u
IHRoZXJlIG93biB3aXRoIHNtYWxsIGNoYW5nZXMsIGJ1dCB0aGlzIGFsbG93cyB5b3UgdG8g
ZG8gaXQgYWxsCmludmlzaWJseS4KCkFuZCBmaW5hbGx5LCBmaW5hbGx5LCBmaW5hbGx5IHRo
ZXJlIGlzIGEgY29uZiBmaWxlLiBEb2N1bWVudGF0aW9uIG9uIHRoZSBmb3JtYXQgaXMgaW4g
TWFpbDo6QnVsa21haWw6Ok9iamVjdC4KSXQncyBwcmV0dHkgZWFzeSB0byB1c2UuIFRoaXMg
aXMgdGhlIGNvbmYgZmlsZSBmb3JtYXQgdGhhdCBJIGRlc2lnbmVkIGZvciBteSBvd24gdXNl
IChhbG9uZyB3aXRoIG1vc3Qgb2YgdGhlCnJlc3Qgb2YgTWFpbDo6QnVsa21haWw6Ok9iamVj
dCkuIFRoZSBzb2Z0d2FyZSBhbHNvIGhhcyB0aGUgYWJpbGl0eSB0byByZWFkIG11bHRpcGxl
IGNvbmYgZmlsZXMsIGlmIHNvCmRlc2lyZWQuIFNvIG5vIG1vcmUgd29ycnlpbmcgYWJvdXQg
YXNraW5nIHlvdXIgc3lzYWRtaW4gdG8gdHdlYWsgdGhlIHZhbHVlcyBpbiB5b3VyIG1vZHVs
ZSBzb21ld2hlcmUgdXAgaW4gL3Vzci9saWIvd2hhdGV2ZXIKCkp1c3QgaGF2ZSBoaW0gY3Jl
YXRlIHRoZSBjb25mIGZpbGUgeW91IHdhbnQsIG9yIHBhc3MgaW4geW91ciBvd24gYXMgZGVz
aXJlZC4KCmNvbmZfZmlsZXMgYXJlIHNwZWNpZmllZCBhbmQgZnVydGhlciBkb2N1bWVudGVk
IGluIE1haWw6OkJ1bGttYWlsOjpPYmplY3QsIGluIGFuIGludGVybmFsIGFycmF5IGNhbGxl
ZCBAY29uZl9maWxlcywgcmlnaHQKYXQgdGhlIHRvcCBvZiB0aGUgbW9kdWxlLiBUbyBzcGVj
aWZ5IGEgdW5pdmVyc2FsIGNvbmYgZmlsZSwgcHV0IGl0IGluIHRoYXQgYXJyYXkgKG9yIGhh
dmUgeW91ciBzeXNhZG1pbiBkbyBzbykuCkFsdGVybmF0aXZlbHksIHlvdSBjYW4gYWxzbyBh
ZGQgYSBjb25mX2ZpbGUgdmlhIHRoZSBjb25mX2ZpbGVzIGFjY2Vzc29yLgoKIE1haWw6OkJ1
bGttYWlsLT5jb25mX2ZpbGVzKCcvcGF0aC90by9jb25mX2ZpbGUnLCAnL3BhdGgvdG8vb3Ro
ZXIvY29uZl9maWxlJyk7CSMsIGV0Yy4KCkJ1dCB0aGUgcmVjb21tZW5kZWQgd2F5IGlzIHRv
IHNwZWNpZnkgeW91ciBjb25mIGZpbGUgdXBvbiBtb2R1bGUgaW1wb3J0LgoKIHVzZSBNYWls
OjpCdWxrbWFpbCAzLjAwICIvcGF0aC90by9jb25mL2ZpbGUiOwoKSW4gYWRkaXRpb24sIHRo
ZXJlIGlzIHRoZSB1c3VhbCBwbGV0aG9yYSBvZiBidWcgZml4ZXMsIHR3ZWFrcywgY2xlYW4t
dXBzLCBhbmQgc28gb24uCgpBbmQgeWVzLCB0aGUgaG9ycmlkIGxvbmctc3RhbmRpbmcgYnVn
IGluIHRoZSBUeiBtZXRob2QgaXMgQjxmaXhlZCE+IE5vLCBob25lc3QuCgpJJ20gYWxzbyB0
cnlpbmcgYSBuZXcgZG9jdW1lbnRhdGlvbiB0ZWNobmlxdWUuIFRoZSBwb2QgZm9yIGEgZ2l2
ZW4gbWV0aG9kIGlzIG5vdyBpbiB0aGUgbW9kdWxlIGJ5IHRoYXQKbWV0aG9kLCBhcyBvcHBv
c2VkIHRvIGV2ZXJ5dGhpbmcgYmVpbmcgYnVuY2hlZCB1cCBhdCB0aGUgYm90dG9tLiBQZXJz
b25hbGx5LCBJIHByZWZlciBldmVyeXRoaW5nIGJlaW5nIGJ1bmNoZWQKdXAgdGhlcmUgZm9y
IGNsYXJpdGllcyBzYWtlLiBCdXQgZnJvbSBhIG1haW50ZW5hbmNlIHBvaW50IG9mIHZpZXcs
IHNwcmVhZGluZyBpdCBhbGwgb3V0IG1ha2VzIG15IGxpZmUgbXVjaCBlYXNpZXIuCgo9aGVh
ZDEgcmVxdWlyZXMKCiBQZXJsIDUuNi4wLCBTb2NrZXQKIChJdCBwcm9iYWx5IGNhbiBnZXQg
Ynkgd2l0aCBsZXNzIHRoYW4gNS42LjAsIGJ1dCBJIGhhdmVuJ3QgdGVzdGVkIGl0IGluIHN1
Y2ggYW4gZW52aXJvbm1lbnQpCgo9Y3V0Cgp1c2UgTWFpbDo6QnVsa21haWw6Ok9iamVjdDsK
QElTQSA9IE1haWw6OkJ1bGttYWlsOjpPYmplY3Q7CgokVkVSU0lPTiA9ICczLjEyJzsKCnVz
ZSBTb2NrZXQ7Cgp1c2Ugc3RyaWN0Owp1c2Ugd2FybmluZ3M7Cgo9aGVhZDEgQVRUUklCVVRF
UwoKPW92ZXIgMTEKCj1jdXQKCiNhdHRyaWJ1dGVzIGZvciBzdG9yaW5nIGltcG9ydGFudCBo
ZWFkZXJzCgojIHlvdSdsbCBub3RlIHRoYXQgdGhlc2UgNSBhdHRyaWJ1dGVzIGFyZSBlbWFp
bCBhZGRyZXNzZXMgYW5kIGRvbid0IHVzZSB0aGUgc3RhbmRhcmQgYWRkX2F0dHIKIyBpbnN0
ZWFkLCB0aGV5J3JlIHdyYXBwZWQgdG8gY2FsbCBfZW1haWxfYWNjZXNzb3IgaW50ZXJuYWxs
eSBpbnN0ZWFkIG9mIF9hY2Nlc3NvciBhcyBub3JtYWwuCiMgRXh0ZXJuYWxseSwgaXQncyB0
aGUgc2FtZS4gJG9iai0+RnJvbSgkdmFsdWUpIHNldHMgaXQgYW5kICRvYmotPkZyb20oKSBy
ZWFkcyBpdAojCiMgQnV0IHRoaXMgYWxzbyBjcmVhdGVzIGFkZGl0aW9uYWwgaW50ZXJuYWwg
bWV0aG9kcyBmb3IgdGhlIHNsb3RzLiBTbyB0aGVyZSBpcyBhIC0+RnJvbSBhbmQgYSAtPl9G
cm9tCiMgZm9yIGV4YW1wbGUuIC0+X0Zyb20gaW50ZXJuYWxseSBzdG9yZXMgd2hhdGV2ZXIg
aXMgYWNjZXB0ZWQgYnkgLT5Gcm9tLCBhbmQgc2FtZSB3aXRoIHRoZSByZXN0IG9mIHRoZW0u
CiMgRG9uJ3QgYWNjZXNzIHRoZSAtPl8gYXR0cmlidXRlcyBkaXJlY3RseSwgdXNlIHRoZSB3
cmFwcGVycyBpbnN0ZWFkLgoKPXBvZAoKPWl0ZW0gRnJvbQoKU3RvcmVzIHRoZSBGcm9tIGFk
ZHJlc3Mgb2YgdGhpcyBtYWlsaW5nLiBNdXN0IGJlIGEgdmFsaWQgZW1haWwgYWRkcmVzcywg
dW5sZXNzIFRydXN0aW5nIGlzIHNldC4KUmVhbGx5IHJlYWxseSBzaG91bGQgYmUgYSB2YWxp
ZCBlbWFpbCBhZGRyZXNzIGFueXdheS4KCkZyb20gaXMgbm8gbG9uZ2VyIHVzZWQgYXMgdGhl
IFNlbmRlciwgYXMgd2FzIHRoZSBiZWhhdmlvciBpbiBwcmlvciB2ZXJzaW9ucy4gTm93LCBN
YWlsOjpCdWxrbWFpbApmaXJzdCB0cmllcyB0byB1c2UgdGhlIFNlbmRlciBhcyB0aGUgU2Vu
ZGVyLCBhbmQgZmFpbGluZyB0aGF0LCBmYWxscyBiYWNrIG9uIHRoZSBmcm9tLgoKICRidWxr
LT5Gcm9tKCciSmltIFRob21hc29uIjxqaW1AamltYW5ka29rYS5jb20+Jyk7CiBwcmludCAk
YnVsay0+RnJvbTsKCj1jdXQKCl9fUEFDS0FHRV9fLT5hZGRfYXR0cihbIkZyb20iLAkJCSdf
ZW1haWxfYWNjZXNzb3InXSwgMCk7Cgo9cG9kCgo9aXRlbSBUbwoKU3RvcmVzIHRoZSBUbyBh
ZGRyZXNzIG9mIHRoaXMgbWFpbGluZy4gTXVzdCBiZSBhIHZhbGlkIGVtYWlsIGFkZHJlc3Ms
IHVubGVzcyBUcnVzdGluZyBpcyBzZXQuClJlYWxseSBzaG91bGQgYmUgYSB2YWxpZCBlbWFp
bCBhZGRyZXNzIGFueXdheS4KClRvIGlzIHVzZWQgaWYgeW91IGhhdmUgdXNlX2VudmVsb3Bl
IHNldCB0byAxLiBTZWUgdXNlX2VudmVsb3BlLCBiZWxvdy4gSWYgeW91IGFyZSBub3QgdXNp
bmcgdGhlIGVudmVsb3BlLAp0aGVuIHRoZSBhY3R1YWwgZW1haWwgYWRkcmVzcyB0aGF0IHdl
IGFyZSBjdXJyZW50bHkgb24gaXMgdXNlZCBpbnN0ZWFkIGFuZCAtPlRvIGlzIG5ldmVyIHVz
ZWQgYXQgYWxsLgoKICRidWxrLT5Ubygnamltc2xpc3Q6OycpOwogcHJpbnQgJGJ1bGstPlRv
OwoKQXMgb2YgMy4wMCwgLT5UbyBtYXkgY29udGFpbiBlaXRoZXIgYSB2YWxpZCBlbWFpbCBh
ZGRyZXNzIG9yIGEgdmFsaWQgZ3JvdXAgZGVmaW5pdGlvbi4gQSBncm91cCBkZWZpbml0aW9u
IGlzIGFzIGZvbGxvd3MKKHBzZXVkby1yZWdleCk6CgogR3JvdXBuYW1lOihhZGRyZXNzKCxh
ZGRyZXNzKSopPzsKCmkuZS4sICJ0aGUgZ3JvdXAgbmFtZSIsIHRoZW4gYSBjb2xvbiwgdGhl
biBhbiBvcHRpb25hbCBsaXN0IG9mIGVtYWlsIGFkZHJlc3NlcywgdGhlbiBhIHNlbWktY29s
b24KCiAkYnVsay0+VG8oJ2ppbUBqaW1hbmRrb2thLmNvbScpOwogJGJ1bGstPlRvKCdNeUxp
c3Q6amltQGppbWFuZGtva2EuY29tJyk7CiAkYnVsay0+VG8oJ015TGlzdDo7Jyk7CgpBcmUg
YWxsIHZhbGlkIGFkZHJlc3Nlcy4gT25seSB0aGUgLT5UbyBhdHRyaWJ1dGUgbWF5IGFjY2Vw
dCBncm91cCBzeW50YXggZW1haWxzCgo9Y3V0CgpfX1BBQ0tBR0VfXy0+YWRkX2F0dHIoWyJU
byIsCQkJJ19lbWFpbF9hY2Nlc3NvciddLCAxKTsKCj1wb2QKCj1pdGVtIFNlbmRlcgoKU3Rv
cmVzIHRoZSBTZW5kZXIgYWRkcmVzcyBvZiB0aGlzIG1haWxpbmcuIE11c3QgYmUgYSB2YWxp
ZCBlbWFpbCBhZGRyZXNzLCB1bmxlc3MgVHJ1c3RpbmcgaXMgc2V0LgpSZWFsbHkgcmVhbGx5
IHNob3VsZCBiZSBhIHZhbGlkIGVtYWlsIGFkZHJlc3MgYW55d2F5LgoKU2VuZGVyIGlzIG1h
aW5seSB1c2VkIHdoZW4gc3BlYWtpbmcgU01UUCB0byB0aGUgc2VydmVyLCBzcGVjaWZpY2Fs
bHkgaW4gdGhlIFJDUFQgVE8gY29tbWFuZC4KVGhlIHNwZWMgZGVmaW5lcyAiU2VuZGVyIiBh
cyAiaGUgd2hvIHNlbmQgdGhlIG1lc3NhZ2UiIChwYXJhcGhyYXNpbmcpLCB3aGljaCBtYXkg
bm90IGFjdHVhbGx5IGJlIHdobwp0aGUgbWVzc2FnZSBpcyBmcm9tLiAyLjAwIHVzZWQgdGhl
IEZyb20gYWRkcmVzcyBhcyB0aGUgU2VuZGVyLgoKWW91IHNob3VsZCBzcGVjaWZ5IHRoaXMs
IGJ1dCBpZiB5b3UgZG9uJ3QgdGhlbiB0aGUgRnJvbSB2YWx1ZSBpcyBhc3N1bWVkIHRvIGJl
IHRoZSBzZW5kZXIuCgogJGJ1bGstPlNlbmRlcignamltQGppbWFuZGtva2EuY29tJyk7CiBw
cmludCAkYnVsay0+U2VuZGVyOwoKSWYgdGhpcyB2YWx1ZSBpcyBub3Qgc2V0LCB0aGVuIE1h
aWw6OkJ1bGttYWlsIEI8d2lsbD4gcGxhY2UgYSBTZW5kZXIgaGVhZGVyIGVxdWFsIHRvIHRo
ZSBGcm9tIHZhbHVlLgoKTm90ZSB0aGF0IHRoZSB1bHRpbWF0ZSByZWNlaXZpbmcgU01UUCBz
ZXJ2ZXIgaXMgZXhwZWN0ZWQgdG8gcGxhY2UgYSBSZXR1cm4tUGF0aCBoZWFkZXIgaW4gdGhl
IG1lc3NhZ2UuIFRoaXMKUmV0dXJuLVBhdGggdmFsdWUgd2lsbCBiZSBzZXQgdG8gdGhlIHZh
bHVlIG9mIHRoZSBzZW5kZXIgb2YgdGhlIG1lc3NhZ2UsIGVpdGhlciAtPlNlbmRlciBvciAt
PkZyb20uIFRoaXMsIGluCnR1cm4sIHdpbGwgYmUgdGhlIGFkZHJlc3MgdGhhdCBib3VuY2Ug
YmFja3MgZ28gdG8uIFlvdSBzaG91bGQgbm90IHNldCBhIFJldHVybi1QYXRoIGhlYWRlciB5
b3Vyc2VsZiwgYmVjYXVzZSBiYWQgdGhpbmdzCndpbGwgcmVzdWx0LgoKPWN1dAoKX19QQUNL
QUdFX18tPmFkZF9hdHRyKFsiU2VuZGVyIiwJCSdfZW1haWxfYWNjZXNzb3InXSwgMCk7Cgo9
cG9kCgo9aXRlbSBSZXBseVRvCgpTdG9yZXMgdGhlIFJlcGx5LVRvIGFkZHJlc3Mgb2YgdGhp
cyBtYWlsaW5nLiBNdXN0IGJlIGEgdmFsaWQgZW1haWwgYWRkcmVzcywgdW5sZXNzIFRydXN0
aW5nIGlzIHNldC4KUmVhbGx5IHJlYWxseSBzaG91bGQgYmUgYSB2YWxpZCBlbWFpbCBhZGRy
ZXNzIGFueXdheS4KClJlcGx5LVRvIGlzIHVzZWQgYXMgdGhlIGFkZHJlc3MgdGhhdCB0aGUg
dXNlcidzIGVtYWlsIGNsaWVudCBzaG91bGQgcmVwbHkgdG8sIGlmIHByZXNlbnQuIElmIHRo
aXMKdmFsdWUgaXMgbm90IHNldCwgdGhlbiBNYWlsOjpCdWxrbWFpbCBCPHdpbGw+IHBsYWNl
IGEgUmVwbHktVG8gaGVhZGVyIGVxdWFsIHRvIHRoZSBGcm9tIHZhbHVlLgoKTm90ZSB0aGF0
IGV2ZW4gdGhvdWdoIHRoZSBhdHRyaWJ1dGUgaXMgIlJlcGx5VG8iLCB0aGUgaGVhZGVyIHNl
dCBpcyAiUmVwbHktVG8iCgogJGJ1bGstPlJlcGx5VG8oJ2ppbUBqaW1hbmRrb2thLmNvbScp
OwogcHJpbnQgJGJ1bGstPlJlcGx5VG87Cgo9Y3V0CgpfX1BBQ0tBR0VfXy0+YWRkX2F0dHIo
WyJSZXBseVRvIiwgCQknX2VtYWlsX2FjY2Vzc29yJ10sIDApOwoKPXBvZAoKPWl0ZW0gU3Vi
amVjdAoKQm9yaW5nIG9sZCBhY2Nlc3NvciB0aGF0IHN0b3JlcyB0aGUgc3ViamVjdCBvZiB0
aGUgbWVzc2FnZS4gSXQncyByZWFsbHkgcmVjb21tZW5kZWQgdGhhdCB0aGlzIGlzCnNldCBl
aXRoZXIgYXQgeW91ciBvYmplY3Qgb3IgaW4gdGhlIGNvbmYgZmlsZSwgb3RoZXJ3aXNlIHlv
dSdsbCBzZW5kIG91dCBhIG1haWxpbmcgbGlzdCB3aXRoIG5vIHN1YmplY3QKd2hpY2ggd2ls
bCBwcm9iYWJseSBiZSBpZ25vcmVkLgoKICRidWxrLT5TdWJqZWN0KCJUaGlzIGlzIHRoZSBs
aXN0IHlvdSBzaWduZWQgdXAgZm9yIik7CiBwcmludCAkYnVsay0+U3ViamVjdDsKCj1jdXQK
Cl9fUEFDS0FHRV9fLT5hZGRfYXR0cigiU3ViamVjdCIpOwoKIyBpbnRlcm5hbGx5IHN0b3Jl
cyB0aGUgUHJlY2VkZW5jZSBvZiB0aGUgYnVsa21haWwgb2JqZWN0LiBTaG91bGQgbmV2ZXIg
YmUgYWNjZXNzZWQKIyBkaXJlY3RseSwgc2hvdWxkIGFsd2F5cyBiZSBhY2Nlc3NlZCB2aWEg
dGhlIC0+UHJlY2VkZW5jZSBtZXRob2QsIHdoaWNoIGRvZXMgYSB2YWxpZGF0aW9uIGNoZWNr
Cl9fUEFDS0FHRV9fLT5hZGRfYXR0cigiX1ByZWNlZGVuY2UiKTsKCiMgaW50ZXJuYWxseSBz
dG9yZXMgYWxsIG5vbi1zdGFuZGFyZCAocmVhZDogIm5vdCBkZWZpbmVkIGFib3ZlIikgaGVh
ZGVycyB0aGF0IHRoZSBidWxrbWFpbCBvYmplY3QKIyBtYXkgaGF2ZS4gSXQncyBzdG9yZWQg
YXMgYSBoYXNocmVmLCBhbmQgc2hvdWxkIGJlIGFjY2Vzc2VkIHZpYSB0aGUgLT5oZWFkZXIg
bWV0aG9kLgpfX1BBQ0tBR0VfXy0+YWRkX2F0dHIoJ19oZWFkZXJzJyk7CgojIGludGVybmFs
bHkgc3RvcmVzIHRoZSBfY2FjaGVkX2hlYWRlcnMgZm9yIGEgZ2l2ZW4gbWVzc2FnZS4gVGhp
cyBpcyBwb3B1bGF0ZWQgYnkgdGhlCiMgYnVpbGRIZWFkZXJzKCkgbWV0aG9kIGR1cmluZyBt
YWlsaW5nLiBBZnRlciB0aGUgaGVhZGVycyBoYXZlIGJlZW4gYnVpbHQgb25jZSwgdGhlbgoj
IGJ1aWxkSGVhZGVycyByZXR1cm5zIHRoZSB2YWx1ZSBpbiBfY2FjaGVkX2hlYWRlcnMgaW5z
dGVhZCBvZiBjb25zdGFudGx5IHJlYnVpbGRpbmcgdGhlbS4KIwojIF9jYWNoZWRfaGVhZGVy
cyBpcyBzdGF0aWMgaWYgdXNpbmcgdGhlIGVudmVsb3BlLiBJZiBub3QgdXNpbmcgdGhlIGVu
dmVsb3BlLCB0aGVuIHRoZQojIHN0cmluZyAjI0VNQUlMIyMgaXMgcG9wdWxhdGVkIGludG8g
dGhlIFRvOiBoZWFkZXIsIGFuZCBidWlsZEhlYWRlcnMgc3dhcHMgdGhhdCBmb3IgdGhlCiMg
YWN0dWFsIGluZGl2aWR1YWwgZW1haWwgYWRkcmVzc2VzCl9fUEFDS0FHRV9fLT5hZGRfYXR0
cignX2NhY2hlZF9oZWFkZXJzJyk7CgojYXR0cmlidXRlcyBmb3Igc3RvcmluZyBib29sZWFu
IGZsYWdzCgo9cG9kCgo9aXRlbSBIVE1MCgpCb29sZWFuIGZsYWcuIDEvMCBvbmx5LgoKQSBs
b3Qgb2YgcGVvcGxlLCB0aG91Z2ggb2J2aW91c2x5IG5vdCB5b3UsIGJlY2F1c2UgeW91J3Jl
IHJlYWRpbmcgdGhlIHBvZCwganVzdCBjb3VsZG4ndCBmaWd1cmUgb3V0IGhvdwp0byBzZW5k
IEhUTUwgbWVzc2FnZXMuIEl0J3MgZWFzeS4KCiAkYnVsay0+aGVhZGVyKCJDb250ZW50LXR5
cGUiLCAidGV4dC9odG1sIik7CgpCdXQgaXQgd2FzIGp1c3QgdG9vIGhhcmQgZm9yIG1vc3Qg
cGVvcGxlLiBTbyBJIGFkZGVkIHRoaXMgZmxhZy4KCkhlcmUncyB0aGUgb3JkZXI6CgogQ2hl
Y2sgYW5kIHNlZSBpZiAtPmhlYWRlcigiQ29udGVudC10eXBlIikgaXMgc2V0LCBpZiBzbyB0
aGVuIHNlbmQgaXQuCiBPdGhlcndpc2UsIGNoZWNrIGFuZCBzZWUgaWYgLT5IVE1MIGlzIHRy
dWUsIGlmIHNvLCB0aGVuIHNlbmQgYSBjb250ZW50LXR5cGUgb2YgdGV4dC9odG1sCiAgIGku
ZS4sIGFuIEhUTUwgbWVzc2FnZQogT3RoZXJ3aXNlLCBzZW5kIGEgY29udGVudC10eXBlIG9m
IHRleHQvcGxhaW4KICAgaS5lLiwgYSBwbGFpbnRleHQgbWVzc2FnZQoKICRidWxrLT5IVE1M
KDEpOwogcHJpbnQgJGJ1bGstPkhUTUwoKTsKCj1jdXQKCl9fUEFDS0FHRV9fLT5hZGRfYXR0
cignSFRNTCcpOwoKPXBvZAoKPWl0ZW0gdXNlX2VudmVsb3BlCgpCb29sZWFuIGZsYWcuIDEv
MCBvbmx5LgoKdXNlX2VudmVsb3BlIHdhcyB0aGUgY29vbGVzdCB0aGluZyBJIGFkZGVkIHRv
IEJ1bGttYWlsIDIuMDAsIGFuZCBpcyBhcmd1YWJseSBzdGlsbCB0aGUgYmVzdCB0aGluZyBJ
J3ZlIGdvdApoZXJlIGluIHRlcm1zIG9mIHJhdyBwb3dlciBpbiB5b3VyIGxpc3RzLgoKQmFz
aWNhbGx5LCBpdCdzIGxpa2UgbGFzaW5nIGEgc3RpY2sgb2YgZHluYW1pdGUuIE1haWw6OkJ1
bGttYWlsIGlzIGZhc3QuIE1haWw6OkJ1bGttYWlsIHdpdGggdXNlX2VudmVsb3BlCmlzIG1p
bmQtbnVtYmluZ2x5IGZhc3QuCgpGb3IgdGhlIHVuaW5mb3JtZWQsIGFuIGVtYWlsIG1lc3Nh
Z2UgY29udGFpbnMgdHdvIHBhcnRzLCB0aGUgbWVzc2FnZSBpdHNlbGYgYW5kIHRoZSBlbnZl
bG9wZS4gICBNYWlsIHNlcnZlcnMgb25seQpjYXJlIGFib3V0IHRoZSBlbnZlbG9wZSAoZm9y
IHRoZSBtb3N0IHBhcnQpLCBzaW5jZSB0aGF0J3Mgd2hlcmUgdGhleSBmaW5kIG91dCB3aG8g
dGhlIG1lc3NhZ2UgaXMgdG8gYW5kIGZyb20sIGFuZAp0aGV5IGRvbid0IHJlYWxseSBuZWVk
IHRvIGtub3cgYW55dGhpbmcgZWxzZS4KCkEgbmlmdHkgZmVhdHVyZSBvZiB0aGUgZW52ZWxv
cGUgaXMgdGhhdCB5b3UgY2FuIHN1Ym1pdCBtdWx0aXBsZSBhZGRyZXNzZXMgd2l0aGluIHRo
ZSBlbnZlbG9wZSwgYW5kIHRoZW4geW91cgptYWlsIHNlcnZlciB3aWxsIGF1dG9tYWdpY2Fs
bHkgc2VuZCBhbG9uZyB0aGUgbWVzc2FnZSB0byBldmVyeW9uZSBjb250YWluZWQgd2l0aGlu
IHRoZSBlbnZlbG9wZS4gIFlvdSBlbmQgdXAKc2VuZGluZyBhIGhlbGwgb2YgYSBsb3QgbGVz
cyBkYXRhIGFjcm9zcyB5b3VyIGNvbm5lY3Rpb24sIHlvdXIgU01UUCBzZXJ2ZXIgaGFzIGxl
c3Mgd29yayB0byBkbywgYW5kIGV2ZXJ5dGhpbmcKZW5kcyB1cCB3b3JraW5nIG91dCB3b25k
ZXJmdWxseS4KClRoZXJlIGFyZSB0d28gY2F0Y2hlcy4gIEZpcnN0IG9mIGFsbCwgd2l0aCBl
bnZlbG9wZSBzZW5kaW5nIHR1cm5lZCBvZmYsIHRoZSByZWNpcGllbnQgd2lsbCBoYXZlIHRo
ZWlyIG93biBlbWFpbAphZGRyZXNzIGluIHRoZSAiVG8iIGZpZWxkIChUbzogamltQGppbWFu
ZGtva2EuY29tLCBmZXIgaW5zdGFuY2UpLiAgV2l0aCB0aGUgZW52ZWxvcGUgb24sIHRoZSBy
ZWNpcGllbnQgd2lsbCBvbmx5CnJlY2VpdmUgYSBnZW5lcmljIGVtYWlsIGFkZHJlc3MgKCJU
bzogbGlzdEBteXNlcnZlci5jb20iLCBmZXIgaW5zdGFuY2UpICBNb3N0IHBlb3BsZSBkb24n
dCBjYXJlIHNpbmNlIHRoYXQncwpob3cgbW9zdCBlbWFpbCBsaXN0cyB3b3JrLCBidXQgeW91
IHNob3VsZCBiZSBhd2FyZSBvZiBpdC4KClNlY29uZGx5LCB5b3UgQjxNVVNUPiBhbmQgSSBt
ZWFuIEI8TVVTVD4gc29ydCB5b3VyIGxpc3QgYnkgZG9tYWluLiAgRW52ZWxvcGVzIGNhbiBv
bmx5IGJlIGJ1bmRsZWQgdXAgYnkgZG9tYWluLApzbyB0aGF0IHdlIHNlbmQgYWxsIGVtYWls
IHRvIGEgZG9tYWluIGluIG9uZSBidXJzdCwgYWxsIG9mIHRoZSBlbWFpbCB0byBhbm90aGVy
IGRvbWFpbiBpbiB0aGUgbmV4dCBidXJzdCwgYW5kIHNvCm9uLiAgU28geW91IG5lZWQgdG8g
aGF2ZSBhbGwgb2YgeW91ciBkb21haW5zIGNsdXN0ZXJlZCB0b2dldGhlciBpbiB5b3VyIGxp
c3QuICBJZiB5b3UgZG9uJ3QsIHlvdXIgbGlzdCB3aWxsIHN0aWxsCmdvIG91dCwgYnV0IGl0
IHdpbGwgYmUgYSBCPGxvdD4gc2xvd2VyLCBzaW5jZSBNYWlsOjpCdWxrbWFpbCBoYXMgYSBm
YWlyIGFtb3VudCBtb3JlIHByb2Nlc3NpbmcgdG8gZG8gd2hlbiB5b3Ugc2VuZAp3aXRoIHRo
ZW4gZW52ZWxvcGUuICBUaGlzIGlzIG5vcm1hbGx5IG1vcmUgdGhhbiBvZmZzZXQgYnkgdGhl
IGdhaW5zIHJlY2VpdmVkIGZyb20gc2VuZGluZyBmZXdlciBtZXNzYWdlcy4gIEJ1dCB3aXRo
CmFuIHVuc29ydGVkIGxpc3QsIHlvdSBuZXZlciBzZWUgdGhlIGJpZyBnYWlucyBhbmQgeW91
IHNlZSBhIG1ham9yIHNsb3cgZG93bi4gIFNvcnQgeW91ciBsaXN0cy4KCiAkYnVsay0+dXNl
X2VudmVsb3BlKDApOwogcHJpbnQgJGJ1bGstPnVzZV9lbnZlbG9wZTsKCj1jdXQKCl9fUEFD
S0FHRV9fLT5hZGRfYXR0cigndXNlX2VudmVsb3BlJyk7Cgo9cG9kCgo9aXRlbSBmb3JjZTgw
CgpCb29sZWFuIGZsYWcgMS8wCgpSRkMgMjgyMiByZWNvbW1lbmRzIHRoYXQgYWxsIG1lc3Nh
Z2VzIGhhdmUgbm8gbW9yZSB0aGFuIDgwIGNoYXJhY3RlcnMgaW4gYSBsaW5lICg3OCArIENS
TEYpLCBidXQgZG9lc24ndCByZXF1aXJlIGl0LiBpZiBmb3JjZTgwIGlzIDEsCnRoZW4gaXQg
d2lsbCBmb3JjZSBhIG1lc3NhZ2UgdG8gaGF2ZSBvbmx5IDgwIGNoYXJhY3RlcnMgcGVyIGxp
bmUuIEl0IHdpbGwgdHJ5IHRvIGluc2VydCBjYXJyaWFnZSByZXR1cm5zIGJldHdlZW4gd29y
ZCBib3VuZGFyaWVzLApidXQgaWYgaXQgY2FuJ3QsIHRoZW4gaXQgd2lsbCBjdXQgd29yZHMg
aW4gaGFsZiB0byBmb3JjZSB0aGUgbGltaXQuCgpSZWdhcmRsZXNzIG9mIGZvcmNlODAsIGJl
IHdhcm5lZCB0aGF0IFJGQyAyODIyIG1hbmRhdGVzIHRoYXQgbWVzc2FnZXMgbXVzdCBoYXZl
IG5vIG1vcmUgdGhhbiAxMDAwIGNoYXJhY3RlcnMgcGVyIGxpbmUgKDk5OCArIENSTEYpLAph
bmQgdGhhdCB3cmFwcGluZyB3aWxsIGJlIGRvbmUgbm8gbWF0dGVyIHdoYXQuIEFnYWluLCBp
dCB3aWxsIHRyeSB0byB3cmFwIGF0IHdvcmQgYm91bmRhcmllcywgYnV0IGlmIGl0IGNhbid0
LCBpdCB3aWxsIGN1dCB3b3JkcwppbiBoYWxmIHRvIGZvcmNlIHRoZSBsaW1pdC4KCkl0IGlz
IHJlY29tbWVuZGVkIHRoYXQgeW91IGp1c3QgaGF2ZSB5b3VyIG1lc3NhZ2Ugd2l0aCBhdCBt
b3N0IDc4IGNoYXJhY3RlcnMgKyBDUkxGIGZvciBoYXBwaW5lc3MnIHNha2UsIGFuZCBCPGRl
ZmluaXRlbHk+IGF0IG1vc3QKOTk4IGNoYXJhY3RlcnMgKyBDUkxGLiBZb3UgbWF5IGVuZCB1
cCB3aXRoIGV4dHJhIENSTEZzIGluIHlvdXIgbWVzc2FnZSB0aGF0IHlvdSB3ZXJlbid0IGV4
cGVjdGluZy4KCklmIHlvdXIgbWVzc2FnZSBpcyBub3QgZ3VhcmFudGVlZCB0byBoYXZlIG9u
bHkgPCA3OCBjaGFyYWN0ZXJzICsgQ1JMRiBwZXIgbGluZSwgdGhlbiBpdCdzIHJlY29tbWVu
ZGVkIHRvIGhhdmUgZm9yY2U4MCBvbiBmb3IKZnVsbCBjb21wYXRpYmlsaXR5LiBOb3RlIHRo
YXQgZm9yY2U4MCB3aWxsIGJlIG92ZXJyaWRkZW4gYnkgLT5UcnVzdGluZygnd3JhcHBpbmcn
KTsKCj1jdXQKCl9fUEFDS0FHRV9fLT5hZGRfYXR0cignZm9yY2U4MCcpOwoKIyBpbnRlcm5h
bCBmbGFnIHRvIGxldCAtPmJ1bGttYWlsIGtub3cgaWYgYSBtZXNzYWdlIGlzIHdhaXRpbmcu
IFRoaXMgaXMgbmVjZXNzYXJ5IGZvciBlbnZlbG9wZSBzZW5kaW5nOgojIHdoZW4gd2UgZ2V0
IGEgbmV3IGRvbWFpbiBmcm9tIHRoZSBnZXROZXh0TGluZSBjYWxsIG9uIExJU1QsIHdlIG5l
ZWQgdG8gc2VlIGlmIHRoZXJlJ3MgYSB3YWl0aW5nIG1lc3NhZ2UKIyBmaXJzdC4gSWYgdGhl
cmUgaXMgYSB3YWl0aW5nIG1lc3NhZ2UsIHRoZW4gd2UgbmVlZCB0byBmaW5pc2ggdGhhdCBv
bmUgdXAgYmVmb3JlIHdlIHN0YXJ0IHRoZSBuZXh0IG9uZQojIGZvciB0aGUgbmV3IGRvbWFp
bi4gX3dhaXRpbmdfbWVzc2FnZSBzdG9yZXMgdGhhdCB2YWx1ZQpfX1BBQ0tBR0VfXy0+YWRk
X2F0dHIoIl93YWl0aW5nX21lc3NhZ2UiKTsKCiNhdHRyaWJ1dGVzIGZvciBzdG9yaW5nIGNv
bm5lY3Rpb24gaW5mb3JtYXRpb24KCj1wb2QKCj1pdGVtIHNlcnZlcnMKCmFycmF5cmVmIG9m
IHNlcnZlcnMuCgpPa2F5LCB0aGlzIGlzIHRoZSBmaXJzdCBtYWpvciBjaGFuZ2UgYmV0d2Vl
biAyLnggYW5kIDMueC4gMi54IGhhZCBtZXRob2RzIHRvIGNvbm5lY3QgdG8gb25lIHNlcnZl
ciAoLT5TbXRwLCAtPlBvcnQsIGV0Yy4pLgozLnggZG9lc24ndCBoYXZlIHRob3NlLCBhbmQg
dGhlIHJlbGV2ZW50IHRoaW5ncyBhcmUgbm93IGluIE1haWw6OkJ1bGttYWlsOjpTZXJ2ZXIs
IGluc3RlYWQgaXQgaGFzIGEgbGlzdCBvZiBzZXJ2ZXJzLgoKc2VydmVycyBzaG91bGQgY29u
dGFpbiBhbiBhcnJheXJlZiBvZiBzZXJ2ZXIgb2JqZWN0cy4gWW91IGNhbiBlaXRoZXIgY3Jl
YXRlIHRoZW0gZXh0ZXJuYWxseSB5b3Vyc2VsZiBhbmQgcGFzcyB0aGVtIGluIGluIGFuIGFy
cmF5cmVmLAoKICRidWxrLT5zZXJ2ZXJzKFtcJHNlcnZlciwgXCRzZXJ2ZXIyLCBcJHNlcnZl
cjNdKTsKCm9yIHlvdSBjYW4gY3JlYXRlIHRoZW0gaW4geW91ciBjb25mIGZpbGUuIFNlZSB0
aGUgTWFpbDo6QnVsa21haWw6Ok9iamVjdCBmb3IgbW9yZSBpbmZvIG9uIHRoZSBmb3JtYXQg
b2YgdGhlIGNvbmYgZmlsZSwgYW5kCk1haWw6OkJ1bGttYWlsOjpTZXJ2ZXIgZm9yIHRoZSBh
dHRyaWJ1dGVzIHRvIHNwZWNpZnkuCgpzZXJ2ZXJzIHdpbGwgYXV0b21hdGljYWxseSBiZSBw
b3B1bGF0ZWQgd2l0aCBhIGxpc3Qgb2YgYWxsIHNlcnZlcnMgaW4gdGhlIHNlcnZlcl9saXN0
IGluIHRoZSBjb25mIGZpbGUgaWYgeW91IGRvbid0IHNwZWNpZnkgYW55dGhpbmcsCnNvIHlv
dSByZWFsbHkgZG9uJ3QgbmVlZCB0byB3b3JyeSBhYm91dCBpdC4KCklmIHlvdSdkIHJhdGhl
ciB1c2UgYSBkaWZmZXJlbnQgc2VydmVyX2ZpbGUsIHRoZW4gcGFzcyB0aGUgc2VydmVyX2Zp
bGUgZmxhZyB0byB0aGUgY29uc3RydWN0b3I6CgogJGJ1bGsgPSBNYWlsOjpCdWxrbWFpbC0+
bmV3KAogCSdzZXJ2ZXJfZmlsZScgPT4gJy9wYXRoL3RvL3NlcnZlcl9maWxlJwogKTsKClRo
YXQgd2lsbCBCPG92ZXJyaWRlIGFuZCBpZ25vcmU+IHRoZSBzZXJ2ZXJfZmlsZSBpbiBCPGFu
eT4gY29uZiBmaWxlLCBzbyB1c2UgaXQgd2l0aCBjYXV0aW9uLgoKUmVhbGlzdGljYWxseSwg
dGhvdWdoLCBqdXN0IGxldCB0aGUgcHJvZ3JhbSBwb3B1bGF0ZSBpbiB0aGUgdmFsdWVzIG9m
IHRoZSBzZXJ2ZXJzIHlvdSBzcGVjaWZpZWQgaW4gdGhlIGNvbmYgZmlsZSBhbmQgZG9uJ3Qg
d29ycnkgYWJvdXQKdGhpcy4KCkJlIHdhcm5lZCB0aGF0IHNlcnZlcnMgd2lsbCBiZSBwb3B1
bGF0ZWQgYnkgdGhlIGNvbnN0cnVjdG9yIGlmIHlvdSBkbyBub3QgcG9wdWxhdGUgc2VydmVy
cyBhdCBvYmplY3QgY3JlYXRpb24uIFlvdSBtYXkgc3RpbGwKY2hhbmdlIHNlcnZlcnMgbGF0
ZXIgKGJlZm9yZSB5b3UgYmVnaW4gbWFpbGluZyksIGJ1dCB0aGVyZSBpcyB0aGUgc2xpZ2h0
IHBlcmZvcm1hbmNlIGhpdCB0byBpbml0aWFsaXplIGFsbCBvZiB0aGUgc2VydmVyIG9iamVj
dHMKYW5kIHRoZW4gdGhyb3cgdGhlbSBhd2F5LiBUaGlzIGRvZXNuJ3QgYWZmZWN0IG1haWxp
bmcgc3BlZWQgaW4gYW55d2F5LCBpdCdsbCBqdXN0IHRha2UgYSBsaXR0bGUgbG9uZ2VyIHRv
IGdldCBzdGFydGVkIHRoYW4gaXQgc2hvdWxkLgoKPWN1dAoKX19QQUNLQUdFX18tPmFkZF9h
dHRyKCdzZXJ2ZXJzJyk7CgojIGludGVybmFsIGZsYWcgdG8gbGV0IC0+YnVsa21haWwga25v
dyB0aGUgZG9tYWluIG9mIHRoZSBsYXN0IGVtYWlsIGFkZHJlc3Mgd2UgbG9va2VkIGF0IHdo
ZW4gdXNpbmcKIyB0aGUgZW52ZWxvcGUuIFRoaXMgaXMgbmVjZXNzYXJ5IHRvIGtub3cgd2hl
biB3ZSByZWFjaCBhIG5ldyBkb21haW4gaW4gdGhlIExJU1QuIElmIHdlIGhhdmUgYSBuZXcK
IyBkb21haW4gKGkuZS4sIHRoZSBjdXJyZW50IG1lc3NhZ2UncyBkb21haW4gaXMgZGlmZmVy
ZW50IGZyb20gX2NhY2hlZF9kb21haW4pLCB0aGVuIGZpbmlzaCBvZmYgdGhlCiMgbWVzc2Fn
ZSBpZiB3ZSBfd2FpdGluZ19tZXNzYWdlIGlzIHRydWUgYW5kIHRoZW4gbW92ZSBvbgpfX1BB
Q0tBR0VfXy0+YWRkX2F0dHIoIl9jYWNoZWRfZG9tYWluIik7CgojIGludGVybmFsbHkgc3Rv
cmVzIHdoaWNoIGluZGV4IG9mIHRoZSAtPnNlcnZlcnMgbGlzdCB3ZSdyZSBvbiB1c2VkIGFu
ZCBzZXQgYnkgbmV4dFNlcnZlcgpfX1BBQ0tBR0VfXy0+YWRkX2F0dHIoIl9zZXJ2ZXJfaW5k
ZXgiKTsKCiNhdHRyaWJ1dGVzIGZvciBzdG9yaW5nIGluZm9ybWF0aW9uIGFib3V0IHRoZSBt
ZXNzYWdlCgo9cG9kCgo9aXRlbSBNZXNzYWdlCgpUaGlzIHN0b3JlcyB0aGUgbWVzc2FnZSB0
aGF0IHlvdSB3aWxsIHNlbmQgb3V0IHRvIHRoZSByZWNpcGllbnRzIG9mIHlvdXIgbGlzdC4K
CiAkYnVsay0+TWVzc2FnZSgnSGkgdGhlcmUuIFlvdSdyZSBvbiBteSBtYWlsaW5nIGxpc3Qn
KTsKIHByaW50ICRidWxrLT5NZXNzYWdlOwoKRG9uJ3QgcHV0IGFueSBoZWFkZXJzIGluIHlv
dXIgTWVzc2FnZSwgc2luY2UgdGhleSB3b24ndCBiZSB0cmFuc21pdHRlZCBhcyBoZWFkZXJz
LiBJbnN0ZWFkIHRoZXkgd2lsbCBzaG93IHVwIGluIHRoZSBib2R5Cm9mIHlvdXIgbWVzc2Fn
ZSB0ZXh0LiBVc2UgdGhlIC0+aGVhZGVyIG1ldGhvZCBpbnN0ZWFkIGZvciBhZGRpdGlvbmFs
IGhlYWRlcnMKClRoaXMgbXV0YXRvciBpcyBrbm93biB0byBiZSBhYmxlIHRvIHJldHVybjoK
CiBNQjAyMCAtIGNvdWxkIG5vdCBvcGVuIGZpbGUgZm9yIG1lc3NhZ2UKIE1CMDIxIC0gY291
bGQgbm90IGNsb3NlIGZpbGUgZm9yIG1lc3NhZ2UKIE1CMDIyIC0gaW52YWxpZCBoZWFkZXJz
IGZyb20gbWVzc2FnZQoKPWN1dAoKIyBUaGUgbWVzc2FnZSBpcyBhY3R1YWxseSBzdG9yZWQg
aW50ZXJuYWxseSAoX01lc3NhZ2UpIGFuZCBhY2Nlc3NlZCB2aWEgTWVzc2FnZS4KIyBUaGF0
IHdheSwgaWYgd2UgY2hhbmdlIHRoZSBtZXNzYWdlLCB3ZSBjYW4gYmUgc3VyZSB0byB3aXBl
IG91dCB0aGUgaW50ZXJuYWwgX2NhY2hlZF9tZXNzYWdlIGFzIHdlbGwKX19QQUNLQUdFX18t
PmFkZF9hdHRyKCdfTWVzc2FnZScpOwoKc3ViIE1lc3NhZ2UgewoJbXkgJHNlbGYgPSBzaGlm
dDsKCSRzZWxmLT5fY2FjaGVkX21lc3NhZ2UodW5kZWYpIGlmIEBfOwoKCW15IEBwYXNzZWQg
PSBAXzsKCglteSAkbmVlZHNfaGVhZGVyX2V4dHJhY3Rpb24gPSAwOwoKCWlmIChAcGFzc2Vk
KSB7CgkJJHNlbGYtPl9leHRyYWN0ZWRfaGVhZGVyc19mcm9tX21lc3NhZ2UoMCk7Cgl9OwoK
CWlmICgkc2VsZi0+bWVzc2FnZV9mcm9tX2ZpbGUpIHsKCgkJbXkgJGZpbGUgPSBzaGlmdCBA
cGFzc2VkIHx8ICRzZWxmLT5fbWVzc2FnZV9maWxlOwoKCQlpZiAoISBkZWZpbmVkICRzZWxm
LT5fbWVzc2FnZV9maWxlX2FjY2Vzc190aW1lIHx8ICRmaWxlIG5lICRzZWxmLT5fbWVzc2Fn
ZV9maWxlIHx8IC1NICRmaWxlIDwgJHNlbGYtPl9tZXNzYWdlX2ZpbGVfYWNjZXNzX3RpbWUp
IHsKCgkJCSRzZWxmLT5fbWVzc2FnZV9maWxlKCRmaWxlKTsKCQkJJHNlbGYtPl9tZXNzYWdl
X2ZpbGVfYWNjZXNzX3RpbWUoLU0gJGZpbGUpOwoKCQkJI3RoZW9yZXRpY2FsbHksIHlvdSBj
b3VsZCBjYWxsIC0+TWVzc2FnZSB3aXRoIG5vIGFyZ3VtZW50cyBidXQgd2l0aCBtZXNzYWdl
X2Zyb21fZmlsZSB0dXJuZWQgb24KCQkJI2luIHRoYXQgY2FzZSwgeW91IG1heSByZS1yZWFk
IHRoZSBmaWxlIGlmIGl0J3MgYmVlbiBtb2RpZmllZCBzaW5jZSB5b3UgbGFzdCBsb29rZWQg
YXQgaXQuCgkJCSNXZSdyZSBjdXJyZW50bHkgaW4gdGhhdCBjYXNlLiBTbyB3ZSB3aXBlIG91
dCB0aGUgcHJldmlvdXNseSBfY2FjaGVkX21lc3NhZ2UgdG8gYmUgc2FmZS4KCQkJJHNlbGYt
Pl9jYWNoZWRfbWVzc2FnZSh1bmRlZik7CgoJCQlteSAkaGFuZGxlID0gJHNlbGYtPmdlbl9o
YW5kbGU7CgoJCQlteSAkbWVzc2FnZSA9IHVuZGVmOwoKCQkJb3BlbiAoJGhhbmRsZSwgJGZp
bGUpIHx8IHJldHVybiAkc2VsZi0+ZXJyb3IoIkNvdWxkIG5vdCBvcGVuIGZpbGUgZm9yIG1l
c3NhZ2U6ICQhIiwgIk1CMDIwIik7CgoJCQl7CgkJCQlsb2NhbCAkLyA9IHVuZGVmOwoJCQkJ
JG1lc3NhZ2UgPSA8JGhhbmRsZT47CgkJCX0KCgkJCWNsb3NlICgkaGFuZGxlKSB8fCByZXR1
cm4gJHNlbGYtPmVycm9yKCJDb3VsZCBub3QgY2xvc2UgZmlsZSBmb3IgbWVzc2FnZTogJCEi
LCAiTUIwMjEiKTsKCgkJCXVuc2hpZnQgQHBhc3NlZCwgJG1lc3NhZ2U7CgkJfTsKCX07CgoJ
I2ZpcnN0LCB3aXBlIG91dCBhbnkgcHJldmlvdXNseSBzZXQgaGVhZGVyc19mcm9tX21lc3Nh
Z2UKCWlmIChkZWZpbmVkICRzZWxmLT5fcHJldmlvdXNfaGVhZGVyc19mcm9tX21lc3NhZ2Up
IHsKCQlmb3JlYWNoIG15ICRoZWFkZXIgKEB7JHNlbGYtPl9wcmV2aW91c19oZWFkZXJzX2Zy
b21fbWVzc2FnZX0pewoJCQkkc2VsZi0+aGVhZGVyKCRoZWFkZXIsIHVuZGVmKTsKCQl9OwoJ
fTsKCgkjd2lwZSBvdXQgdGhlIGxpc3Qgb2YgcHJldmlvdXNseSBzZXQgaGVhZGVycwoJJHNl
bGYtPl9wcmV2aW91c19oZWFkZXJzX2Zyb21fbWVzc2FnZShbXSk7CgoJI3RoZW4sIGlmIHdl
J3JlIHNldHRpbmcgbmV3IGhlYWRlcnMsIHdlIHNob3VsZCBzZXQgdGhlbS4KCWlmICgkc2Vs
Zi0+aGVhZGVyc19mcm9tX21lc3NhZ2UgJiYgISAkc2VsZi0+X2V4dHJhY3RlZF9oZWFkZXJz
X2Zyb21fbWVzc2FnZSkgewoJCSRzZWxmLT5fZXh0cmFjdGVkX2hlYWRlcnNfZnJvbV9tZXNz
YWdlKDEpOwoJCSRwYXNzZWRbMF0gfHw9ICRzZWxmLT5fTWVzc2FnZSgpOwkjV2UnbGwgc29t
ZXRpbWVzIGNhbGwgdGhpcyBtZXRob2QgYWZ0ZXIgc2V0dGluZyB0aGUgbWVzc2FnZQoJCSNz
ZW5kbWFpbC1pZnkgb3VyIG1lc3NhZ2VzIG5ld2xpbmVzCgkJJHBhc3NlZFswXSA9fiBzLyg/
OlxyP1xufFxyXG4/KS9cMDE1XDAxMi9nOwoKCQlteSAkaGVhZGVyX3N0cmluZyA9IHVuZGVm
OwoKCQkjc3BsaXQgb3V0IHRoZSBoZWFkZXIgc3RyaW5nIGFuZCB0aGUgbWVzc2FnZSBib2R5
CgkJKCRoZWFkZXJfc3RyaW5nLCAkcGFzc2VkWzBdKSA9IHNwbGl0KC9cMDE1XDAxMlwwMTVc
MDEyLywgJHBhc3NlZFswXSwgMik7CgoJCW15ICgkbGFzdF9oZWFkZXIsICRsYXN0X3ZhbHVl
KSA9ICgpOwoJCWZvcmVhY2ggKHNwbGl0L1wwMTVcMDEyLywgJGhlYWRlcl9zdHJpbmcpewoJ
CQlpZiAoLzovKXsKCQkJCWlmIChkZWZpbmVkICRsYXN0X2hlYWRlciAmJiBkZWZpbmVkICRs
YXN0X3ZhbHVlKSB7CgkJCQkJI3NldCBvdXIgaGVhZGVyCgkJCQkJJHNlbGYtPmhlYWRlcigk
bGFzdF9oZWFkZXIsICRsYXN0X3ZhbHVlKQoJCQkJCQl8fCByZXR1cm4gdW5kZWY7CSNidWJi
bGUgdXAgdGhlIGhlYWRlciBlcnJvcgoKCQkJCQkjYW5kIHdpcGUgb3V0IHRoZSBwcmlvciB2
YWx1ZXMKCQkJCQkkbGFzdF9oZWFkZXIgPSAkbGFzdF92YWx1ZSA9IHVuZGVmOwoJCQkJfTsK
CQkJCSgkbGFzdF9oZWFkZXIsICRsYXN0X3ZhbHVlKSA9IHNwbGl0KC86LywgJF8sIDIpOwoJ
CQkJcHVzaCBAeyRzZWxmLT5fcHJldmlvdXNfaGVhZGVyc19mcm9tX21lc3NhZ2V9LCAkbGFz
dF9oZWFkZXI7CgkJCX0KCQkJZWxzaWYgKC9eXHMrLyl7CgkJCQkkbGFzdF92YWx1ZSAuPSAi
XDAxNVwwMTIkXyI7CgkJCX0KCQkJZWxzZSB7CgkJCQlyZXR1cm4gJHNlbGYtPmVycm9yKCJJ
bnZhbGlkIEhlYWRlcnMgZnJvbSBNZXNzYWdlOiBsaW5lICgkXylcblxuLS0+KCRoZWFkZXJf
c3RyaW5nKSIsICJNQjAyMiIpOwoJCQl9OwoJCX07CgoJCSNjbGVhbiB1cCBhbnkgaGVhZGVy
cyB0aGF0IHJlbWFpbgoJCWlmIChkZWZpbmVkICRsYXN0X2hlYWRlciAmJiBkZWZpbmVkICRs
YXN0X3ZhbHVlKSB7CgkJCSNzZXQgb3VyIGhlYWRlcgoJCQkkc2VsZi0+aGVhZGVyKCRsYXN0
X2hlYWRlciwgJGxhc3RfdmFsdWUpCgkJCQl8fCByZXR1cm4gdW5kZWY7CSNidWJibGUgdXAg
dGhlIGhlYWRlciBlcnJvcgoJCX07Cgl9OwoKCXJldHVybiAkc2VsZi0+X01lc3NhZ2UoQHBh
c3NlZCk7Cn07CgojIGludGVybmFsIG1ldGhvZC4gTG9va3MgdG8gc2VlIGlmIGEgdGhlIG1l
c3NhZ2UgaXMgYmVpbmcgcmVhZCBmcm9tIGRpc2suIElmIHNvLCBpZiBpdAojIHdhcyBtb2Rp
ZmllZCBzaW5jZSBpdCB3YXMgcmVhZCwgdGhlbiBpdCBpcyBub3QgY3VycmVudC4gT3RoZXJ3
aXNlLCBpdCBpcy4KCnN1YiBfY3VycmVudF9tZXNzYWdlIHsKCW15ICRzZWxmID0gc2hpZnQ7
CgoJaWYgKAoJCSRzZWxmLT5tZXNzYWdlX2Zyb21fZmlsZQoJCSYmICgKCQkJISBkZWZpbmVk
ICRzZWxmLT5fbWVzc2FnZV9maWxlX2FjY2Vzc190aW1lCgkJCXx8IC1NICRzZWxmLT5fbWVz
c2FnZV9maWxlIDwgJHNlbGYtPl9tZXNzYWdlX2ZpbGVfYWNjZXNzX3RpbWUKCQkJKQoJCSkg
ewoJCQlyZXR1cm4gMDsKCX0KCWVsc2UgewoJCXJldHVybiAxOwoJfTsKfTsKCiMgaW50ZXJu
YWxseSBzdG9yZXMgdGhlIF9jYWNoZWRfbWVzc2FnZSBmb3IgYSBnaXZlbiBtZXNzYWdlLiBU
aGlzIGlzIHBvcHVsYXRlZCBieSB0aGUgYnVpbGRNZXNzYWdlKCkKIyBtZXRob2QgZHVyaW5n
IG1haWxpbmcuIEFmdGVyIHRoZSBtZXNzYWdlIGhhcyBiZWVuIGJ1aWx0IG9uY2UsIHRoZW4g
YnVpbGRNZXNzYWdlIHJldHVybnMgdGhlCiMgdmFsdWUgaW4gX2NhY2hlZF9tZXNzYWdlIGlu
c3RlYWQgb2YgY29uc3RhbnRseSByZWJ1aWxkaW5nIGl0LgpfX1BBQ0tBR0VfXy0+YWRkX2F0
dHIoJ19jYWNoZWRfbWVzc2FnZScpOwoKPXBvZAoKPWl0ZW0gbWVzc2FnZV9mcm9tX2ZpbGUK
CmJvb2xlYW4gZmxhZy4gMS8wIG9ubHkuCgptZXNzYWdlX2Zyb21fZmlsZSBhbGxvd3MgeW91
IHRvIGxvYWQgeW91ciBtZXNzYWdlIGluIGZyb20gYSBmaWxlLiBJZiBtZXNzYWdlX2Zyb21f
ZmlsZSBpcwpzZXQgdG8gMSwgdGhlbiB0aGUgdmFsdWUgcGFzc2VkIHRvIC0+TWVzc2FnZSgp
IHdpbGwgYmUgYXNzdW1lZCB0byBiZSBhIHBhdGggdG8gYSBmaWxlIG9uIGRpc2suClRoYXQg
ZmlsZSB3aWxsIGJlIG9wZW5uZWQgaW4gcmVhZCBtb2RlIChpZiBwb3NzaWJsZSksIHJlYWQg
aW4sIGFuZCBzdG9yZWQgYXMgeW91ciBtZXNzYWdlLiBOb3RlCnRoYXQgeW91ciBlbnRpcmUg
bWVzc2FnZSB0ZXh0IHdpbGwgYmUgcmVhZCBpbnRvIG1lbW9yeSAtIG5vIG1hdHRlciBob3cg
bGFyZ2UgdGhlIG1lc3NhZ2UgbWF5IGJlLgoKVGhpcyBpcyBzaW1wbHkgYSBzaG9ydGN1dCBz
byB0aGF0IHlvdSBkb24ndCBoYXZlIHRvIG9wZW4gYW5kIHJlYWQgaW4gdGhlIG1lc3NhZ2Ug
eW91cnNlbGYuCgpCPE5PVEU+IFRoaXMgaXMgYSBiaXQgcGlja3ksIHRvIHB1dCBpdCBtaWxk
bHkuIE5vIGRvdWJ0IHlvdSd2ZSByZWFkIHRoYXQgdGhlIGNvbnN0cnVjdG9yIGFjdHVhbGx5
CmlzIHRha2luZyBpbiBpdHMgYXJndW1lbnRzIGluIGFuIGFycmF5LCBub3QgYSBoYXNoLiBT
byB0aGV5J3JlIHBhcnNlZCBpbiBvcmRlciwgd2hpY2ggbWVhbnMgeW91IG5lZWQKcGFzcyBp
biBtZXNzYWdlX2Zyb21fZmlsZSBCPGJlZm9yZT4gTWVzc2FnZS4gaS5lLiwgdGhpcyB3aWxs
IHdvcms6CgogJGJ1bGsgPSBNYWlsOjpCdWxrbWFpbC0+bmV3KAogCSdtZXNzYWdlX2Zyb21f
ZmlsZScgPT4gMSwKIAknTWVzc2FnZScJCQk9PiAnL3BhdGgvdG8vbWVzc2FnZS50eHQnLAog
KTsKCkJ1dCB0aGlzIHdpbGwgbm90OgoKICRidWxrID0gTWFpbDo6QnVsa21haWwtPm5ldygK
IAknTWVzc2FnZScJCQk9PiAnL3BhdGgvdG8vbWVzc2FnZS50eHQnLAogCSdtZXNzYWdlX2Zy
b21fZmlsZScgPT4gMSwKICk7CgpEaXR0byBmb3IgdXNpbmcgdGhlIG11dGF0b3JzLiBUdXJu
IG9uIHRoZSBmbGFnLCBpPHRoZW4+IHNwZWNpZnkgdGhlIE1lc3NhZ2UuCgo9Y3V0CgpfX1BB
Q0tBR0VfXy0+YWRkX2F0dHIoJ21lc3NhZ2VfZnJvbV9maWxlJyk7CgojIGludGVybmFsIGNh
Y2hpbmcgYXR0cmlidXRlIHRvIHN0b3JlIHRoZSBtZXNzYWdlIGZpbGUuIFRoaXMgd2F5IHdl
IHdpbGwgYmUgYWJsZSB0byByZS1vcGVuCiMgYW5kIHJlLXJlYWQgdGhlIG1lc3NhZ2UgZmls
ZSBpZiBpdCBoYXBwZW5lZCB0byBjaGFuZ2UuCgpfX1BBQ0tBR0VfXy0+YWRkX2F0dHIoJ19t
ZXNzYWdlX2ZpbGUnKTsKCiMgaW50ZXJuYWwgYXR0cmlidXRlIHRvIHN0b3JlIHRoZSB0aW1l
IHRoZSBtZXNzYWdlIGZpbGUgd2FzIGxhc3QgYWNjZXNzZWQuIFRoaXMgYWxsb3dzIHRoZSBt
ZXNzYWdlCiMgZmlsZSB0byBjaGFuZ2UgYW5kIGJlIHJlLXJlYWQsIHRob3VnaCBsb3JkIGtu
b3dzIHdoeSB5b3UnZCB3YW50IHRvIG5lY2Vzc2FyaWx5IGRvIHNvbWV0aGluZyBsaWtlCiMg
dGhhdC4KCl9fUEFDS0FHRV9fLT5hZGRfYXR0cignX21lc3NhZ2VfZmlsZV9hY2Nlc3NfdGlt
ZScpOwoKPXBvZAoKPWl0ZW0gaGVhZGVyc19mcm9tX21lc3NhZ2UKCmJvb2xlYW4gZmxhZy4g
MS8wIG9ubHkuCgpoZWFkZXJzX2Zyb21fbWVzc2FnZSBhbGxvd3MgeW91IHRvIHNwZWNpZnkg
bWFpbCBoZWFkZXJzIGluc2lkZSB5b3VyIG1lc3NhZ2UgYm9keS4gWW91IG1heQpzdGlsbCBz
cGVjaWZ5IGFkZGl0aW9uYWwgaGVhZGVycyBpbiB0aGUgdHJhZGl0aW9uYWwgbWFubmVyLgoK
Tm90ZSB0aGF0IGlmIHlvdSBjaGFuZ2UgdGhlIHZhbHVlIG9mIC0+TWVzc2FnZSAobm90IHJl
Y29tbWVuZGVkLCBidXQgdGhlcmUgYXJlIHRpbWVzIHlvdSBtYXkKd2FudCB0byBkbyBzbyks
IHRoZW4gYW55IGhlYWRlcnMgdGhhdCB3ZXJlIHByZXZpb3VzbHkgc2V0IHZpYSBoZWFkZXJz
X2Zyb21fbWVzc2FnZSB3aWxsIGJlIEI8d2lwZWQgb3V0Pi4KCmFueSBoZWFkZXJzIHNwZWNp
ZmllZCBpbiB0aGUgbWVzc2FnZSB3aWxsIGJlIHNldCB3aGVuIHlvdSBjYWxsIC0+TWVzc2Fn
ZS4KCj1jdXQKCl9fUEFDS0FHRV9fLT5hZGRfYXR0cignaGVhZGVyc19mcm9tX21lc3NhZ2Un
KTsKCiMgaW50ZXJuYWwgYm9vbGVhbiBmbGFnLiB1c2VkIHRvIGdvdmVybiB3aGV0aGVyIHRo
ZSBoZWFkZXJzIGhhdmUgYWxyZWFkeSBiZWVuIGV4dHJhY3RlZCBmcm9tCiMgdGhlIG1lc3Nh
Z2UKX19QQUNLQUdFX18tPmFkZF9hdHRyKCdfZXh0cmFjdGVkX2hlYWRlcnNfZnJvbV9tZXNz
YWdlJyk7CgojaW50ZXJuYWwgYXJyYXlyZWYgY29udGFpbmluZyB0aGUgaGVhZGVycyBzZXQg
dGhlIGxhc3QgdGltZSAtPk1lc3NhZ2Ugd2FzIGNhbGxlZC4KCl9fUEFDS0FHRV9fLT5hZGRf
YXR0cigiX3ByZXZpb3VzX2hlYWRlcnNfZnJvbV9tZXNzYWdlIik7CgojIGludGVybmFsIGhh
c2hyZWYgdGhhdCBzdG9yZXMgdGhlIGxpc3Qgb2YgZHVwbGljYXRlIGVtYWlsIGFkZHJlc3Nl
cyBwb3B1bGF0ZWQgYnkgc2V0RHVwbGljYXRlIGFuZAojIHJlYWQgYnkgaXNEdXBsaWNhdGUu
IFdBUk5JTkcgLSB0aGVyZSBpcyBhICpzZXZlcmUqIHBlbmFsdHkgZm9yIHVzaW5nIGR1cGxp
Y2F0ZXMsIHRoaXMgaGFzaCBjYW4KIyBnZXQgcmVhbGx5IHJlYWxseSBodWdlLiBJdCBpcyBy
ZWNvbW1lbmRlZCB5b3UgcmVtb3ZlIGR1cGxpY2F0ZXMgaW4gYWR2YW5jZSBhbmQgdHVybiBv
bgojIGFsbG93X2R1cGxpY2F0ZXMgdG8gcHJldmVudCB0aGlzIGZyb20gYmVpbmcgcG9wdWxh
dGVkLCBpZiB5b3UgZG8gdXNlIGl0LCB0aGVuIGl0CiMgaXMgKnN0cm9uZ2x5KiByZWNvbW1l
bmRlZCB0aGF0IHlvdSBsZWF2ZSBUcnVzdGluZygnYmFubmVkJykgb2ZmLCBpLmUuIFRydXN0
aW5nKCdiYW5uZWQnID0+IDApCl9fUEFDS0FHRV9fLT5hZGRfYXR0cignX2R1cGxpY2F0ZXMn
KTsKCiMgaW50ZXJuYWwgaGFzaHJlZiB0aGF0IHN0b3JlcyB0aGUgbGlzdCBvZiBiYW5uZWQg
ZW1haWwgYWRkcmVzc2VzIG9yIGRvbWFpbnMgcG9wdWxhdGVkIGJ5IGEgY2FsbAojIHRvIGJh
bm5lZCAod2hpY2ggZG9lcyBzb21lIG1hZ2ljIHdpdGggX2ZpbGVfYWNjZXNzb3IpLiBhY2Nl
c3NlZCB2aWEgaXNCYW5uZWQKIyBJdCBpcyAqc3Ryb25nbHkqIHJlY29tbWVuZGVkIHRoYXQg
eW91IGxlYXZlIFRydXN0aW5nKCdiYW5uZWQnKSBvZmYsIGkuZS4gVHJ1c3RpbmcoJ2Jhbm5l
ZCcgPT4gMCkKX19QQUNLQUdFX18tPmFkZF9hdHRyKCdfYmFubmVkJyk7CgojYXR0cmlidXRl
cyBmb3Igc3RvcmluZyBmaWxlaGFuZGxlcwoKPXBvZAoKPWl0ZW0gTElTVAoKTElTVCBzdG9y
ZXMgdGhlIGxpc3Qgb2YgYWRkcmVzc2VzIHlvdSdyZSBnb2luZyB0byBtYWlsIG91dCB0by4g
TElTVCBtYXkgYmUgZWl0aGVyIGEgY29kZXJlZiwgZ2xvYnJlZiwgYXJyYXlyZWYsIG9yIHN0
cmluZyBsaXRlcmFsLgoKSWYgYSBzdHJpbmcgbGl0ZXJhbCwgdGhlbiBNYWlsOjpCdWxrbWFp
bCB3aWxsIGF0dGVtcHQgdG8gb3BlbiB0aGF0IGZpbGUgYXMgeW91ciBsaXN0OgoKICRidWxr
LT5MSVNUKCIvcGF0aC90by9teS9saXN0Iik7CgpJZiBhIGdsb2JyZWYsIGl0IGlzIGFzc3Vt
ZWQgdG8gYmUgYW4gb3BlbiBmaWxlaGFuZGxlOgoKIG9wZW4gKEwsICIvcGF0aC90by9teS9s
aXN0Iik7CiAkYnVsay0+TElTVChcKkwpOwoKaWYgYSBjb2RlcmVmLCBpdCBpcyBhc3N1bWVk
IHRvIGJlIGEgZnVuY3Rpb24gdG8gcmV0dXJuIHlvdXIgbGlzdCwgb3IgdW5kZWYgd2hlbiBp
dCBpcyBkb25lOgoKIHN1YiBMIHtyZXR1cm4gJGxpc3RxdWVyeS0+ZXhlY3V0ZSgpfTsJI29y
IHdoYXRldmVyIHlvdXIgY29kZSBpcwogJGJ1bGstPkxJU1QoXCZMKTsKClRoZSBjb2RlcmVm
IHdpbGwgcmVjZWl2ZSB0aGUgYnVsa21haWwgb2JqZWN0IGl0c2VsZiBhcyBhbiBhcmd1bWVu
dC4KCmlmIGFuIGFycmF5cmVmLCBpdCBpcyBhc3N1bWVkIHRvIGJlIGFuIGFycmF5IGNvbnRh
aW5pbmcgeW91ciBsaXN0OgoKIG15ICRsaXN0ID0gW3F3KGppbUBqaW1hbmRrb2thLmNvbSB0
aG9tYXNvbmlpaUB5YWhvby5jb20pXTsKICRidWxrLT5MSVNUKCRsaXN0KTsKClVzZSB3aGlj
aGV2ZXIgaXRlbSBpcyBtb3N0IGNvbnZlbmllbnQsIGFuZCBNYWlsOjpCdWxrbWFpbCB3aWxs
IHRha2UgaXQgZnJvbSB0aGVyZS4KCj1jdXQKCl9fUEFDS0FHRV9fLT5hZGRfYXR0cihbJ0xJ
U1QnLCAJCSdfZmlsZV9hY2Nlc3NvciddLCAnPCcpOwoKPXBvZAoKPWl0ZW0gQkFECgpUaGlz
IGlzIGFuIG9wdGlvbmFsIGxvZyBmaWxlIHRvIGtlZXAgdHJhY2sgb2YgdGhlIGJhZCBhZGRy
ZXNzZXMgeW91IGhhdmUsIGkuZS4gYmFubmVkLCBpbnZhbGlkLCBvciBkdXBsaWNhdGVzLgoK
QkFEIG1heSBiZSBlaXRoZXIgYSBjb2RlcmVmLCBnbG9icmVmLCBhcnJheXJlZiwgb3Igc3Ry
aW5nIGxpdGVyYWwuCgpJZiBhIHN0cmluZyBsaXRlcmFsLCB0aGVuIE1haWw6OkJ1bGttYWls
IHdpbGwgYXR0ZW1wdCB0byBvcGVuIHRoYXQgZmlsZSAoaW4gYXBwZW5kIG1vZGUpIGFzIHlv
dXIgbG9nOgoKICRidWxrLT5CQUQoIi9wYXRoL3RvL215L2JhZC5hZGRyZXNzZXMiKTsKCklm
IGEgZ2xvYnJlZiwgaXQgaXMgYXNzdW1lZCB0byBiZSBhbiBvcGVuIGZpbGVoYW5kbGUgaW4g
YXBwZW5kIG1vZGU6Cgogb3BlbiAoQiwgIj4+L3BhdGgvdG8vbXkvYmFkLmFkZHJlc3NlcyIp
OwogJGJ1bGstPkJBRChcKkwpOwoKaWYgYSBjb2RlcmVmLCBpdCBpcyBhc3N1bWVkIHRvIGJl
IGEgZnVuY3Rpb24gdG8gY2FsbCB3aXRoIHRoZSBhZGRyZXNzIGFzIGFuIGFyZ3VtZW50OgoK
IHN1YiBCIHsgcHJpbnQgIkJBRCBBRERSRVNTIDogIiwgJF9bMV0sICJcbiJ9Owkjb3Igd2hh
dGV2ZXIgeW91ciBjb2RlIGlzCiAkYnVsay0+QkFEKFwmQik7CgpUaGUgY29kZXJlZiB3aWxs
IHJlY2VpdmUgdHdvIGFyZ3VtZW50cy4gVGhlIGZpcnN0IGlzIHRoZSBidWxrbWFpbCBvYmpl
Y3QgaXRzZWxmLCBhbmQgdGhlIHNlY29uZAppcyB0aGUgZGF0YSBpbiB0aGUgZm9ybSB0aGF0
IGl0IHdhcyByZXR1cm5lZCBmcm9tIHRoZSBMSVNUIGF0dHJpYnV0ZS4KCmlmIGFuIGFycmF5
cmVmLCB0aGVuIGJhZCBhZGRyZXNzZXMgd2lsbCBiZSBwdXNoZWQgb24gdG8gdGhlIGVuZCBv
ZiBpdAoKICRidWxrLT5CQUQoXEBiYWQpOwoKVXNlIHdoaWNoZXZlciBpdGVtIGlzIG1vc3Qg
Y29udmVuaWVudCwgYW5kIE1haWw6OkJ1bGttYWlsIHdpbGwgdGFrZSBpdCBmcm9tIHRoZXJl
LgoKPWN1dAoKX19QQUNLQUdFX18tPmFkZF9hdHRyKFsnQkFEJywJCSdfZmlsZV9hY2Nlc3Nv
ciddLCAnPj4nKTsKCj1wb2QKCj1pdGVtIEdPT0QKClRoaXMgaXMgYW4gb3B0aW9uYWwgbG9n
IGZpbGUgdG8ga2VlcCB0cmFjayBvZiB0aGUgZ29vZCBhZGRyZXNzZXMgeW91IGhhdmUsIGku
ZS4gdGhlIG9uZXMgdGhhdApNYWlsOjpCdWxrbWFpbCBjb3VsZCBzdWNjZXNzZnVsbHkgdHJh
bnNtaXQgdG8gdGhlIHNlcnZlci4gTm90ZSB0aGF0IHRoZXJlIGlzIG5vIGd1YXJhbnRlZSB0
aGF0CmFuIGVtYWlsIGFkZHJlc3MgaW4gdGhlIEdPT0QgZmlsZSBhY3R1YWxseSByZWNlaXZl
ZCB5b3VyIG1haWxpbmcgLSBpdCBjb3VsZCBoYXZlIGZhaWxlZCBhdCBhCmxhdGVyIHBvaW50
IHdoZW4gb3V0IG9mIE1haWw6OkJ1bGttYWlsJ3MgY29udHJvbC4KCkdPT0QgbWF5IGJlIGVp
dGhlciBhIGNvZGVyZWYsIGdsb2JyZWYsIGFycmF5cmVmLCBvciBzdHJpbmcgbGl0ZXJhbC4K
CklmIGEgc3RyaW5nIGxpdGVyYWwsIHRoZW4gTWFpbDo6QnVsa21haWwgd2lsbCBhdHRlbXB0
IHRvIG9wZW4gdGhhdCBmaWxlIChpbiBhcHBlbmQgbW9kZSkgYXMgeW91ciBsb2c6CgogJGJ1
bGstPkdPT0QoIi9wYXRoL3RvL215L2dvb2QuYWRkcmVzc2VzIik7CgpJZiBhIGdsb2JyZWYs
IGl0IGlzIGFzc3VtZWQgdG8gYmUgYW4gb3BlbiBmaWxlaGFuZGxlIGluIGFwcGVuZCBtb2Rl
OgoKIG9wZW4gKEIsICI+Pi9wYXRoL3RvL215L2dvb2QuYWRkcmVzc2VzIik7CiAkYnVsay0+
R09PRChcKkIpOwoKaWYgYSBjb2RlcmVmLCBpdCBpcyBhc3N1bWVkIHRvIGJlIGEgZnVuY3Rp
b24gdG8gY2FsbCB3aXRoIHRoZSBhZGRyZXNzIGFzIGFuIGFyZ3VtZW50OgoKIHN1YiBHIHsg
cHJpbnQgIkdPT0QgQUREUkVTUyA6ICIsICRfWzFdLCAiXG4ifTsJI29yIHdoYXRldmVyIHlv
dXIgY29kZSBpcwogJGJ1bGstPkdPT0QoXCZHKTsKClRoZSBjb2RlcmVmIHdpbGwgcmVjZWl2
ZSB0d28gYXJndW1lbnRzLiBUaGUgZmlyc3QgaXMgdGhlIGJ1bGttYWlsIG9iamVjdCBpdHNl
bGYsIGFuZCB0aGUgc2Vjb25kCmlzIHRoZSBkYXRhIGluIHRoZSBmb3JtIHRoYXQgaXQgd2Fz
IHJldHVybmVkIGZyb20gdGhlIExJU1QgYXR0cmlidXRlLgoKaWYgYW4gYXJyYXlyZWYsIHRo
ZW4gYmFkIGFkZHJlc3NlcyB3aWxsIGJlIHB1c2hlZCBvbiB0byB0aGUgZW5kIG9mIGl0Cgog
JGJ1bGstPkdPT0QoXEBnb29kKTsKClVzZSB3aGljaGV2ZXIgaXRlbSBpcyBtb3N0IGNvbnZl
bmllbnQsIGFuZCBNYWlsOjpCdWxrbWFpbCB3aWxsIHRha2UgaXQgZnJvbSB0aGVyZS4KClBs
ZWFzZSBub3RlIHRoYXQgLT5HT09EIG9ubHkgc2F5cyB0aGF0IHRoZSBhZGRyZXNzIHdhcyBp
bml0aWFsbHkgYWNjZXB0ZWQgZm9yIGRlbGl2ZXJ5LiBJdCBjb3VsZCBsYXRlciBmYWlsIHdo
aWxlIHRyYW5zbWl0dGluZwp0aGUgZW1haWwgYWRkcmVzcywgb3IgaXQgY291bGQgYmUgYW4g
dmFsaWQgYnV0IG5vbi1leGlzdGVudCBhZGRyZXNzIHRoYXQgYm91bmNlcyBsYXRlci4gSXQg
aXMgdXAgdG8gdGhlIGVuZCB1c2VyIHRvIGluc3BlY3QgeW91cgplcnJvciBsb2dzIHRvIG1h
a2Ugc3VyZSBubyBlcnJvcnMgb2NjdXJyZWQsIGFuZCBsb29rIGZvciAoYW5kIHdlZWQgb3V0
KSBib3VuY2VzIG9yIG90aGVyIGZhaWx1cmVzIGxhdGVyLgoKPWN1dAoKX19QQUNLQUdFX18t
PmFkZF9hdHRyKFsnR09PRCcsCQknX2ZpbGVfYWNjZXNzb3InXSwgJz4+Jyk7CgojY2xhc3Mg
YXR0cmlidXRlcwoKPXBvZAoKPWl0ZW0gc2VydmVyX2NsYXNzCgpzZXJ2ZXJfY2xhc3MgaXMg
YSBjbGFzcyBtZXRob2QgdGhhdCBCPE1VU1Q+IGJlIHNwZWNpZmllZCBpbiB0aGUgY29uZiBm
aWxlLiBZb3UgY2FuIGluaXRpYWxpemUgaXQgaW4geW91ciBwcm9ncmFtIGlmIHlvdQpyZWFs
bHkgd2FudCwgYnV0IGl0IGlzIEI8c3Ryb25nbHk+IHJlY29tbWVuZGVkIHRvIGJlIGluIHRo
ZSBjb25mIGZpbGUgc28geW91IGRvbid0IGZvcmdldCBpdC4KCnNlcnZlcl9jbGFzcyBpcyB1
c2VkIGJ5IHRoZSBjb25zdHJ1Y3RvciB0byBjcmVhdGUgdGhlIHNlcnZlciBsaXN0IHRvIHBv
cHVsYXRlIGludG8gLT5zZXJ2ZXJzLCAtPnNlcnZlcnMgaXMgbm90CnBvcHVsYXRlZCBpbiB0
aGUgY29uc3RydWN0b3IuCgpCeSBkZWZhdWx0LCB0aGlzIHNob3VsZCBwcm9iYWJseSBiZSBN
YWlsOjpCdWxrbWFpbDo6U2VydmVyLCB0byBhbGxvdyBtYWlsaW5nLiBBbm90aGVyIHVzZWZ1
bCB2YWx1ZSBpcyBNYWlsOjpCdWxrbWFpbDo6RHVtbXkKU2VlIE1haWw6OkJ1bGttYWlsOjpT
ZXJ2ZXIgYW5kIE1haWw6OkJ1bGttYWlsOjpEdW1teSBmb3IgbW9yZSBpbmZvcm1hdGlvbiBv
biBob3cgdG8gY3JlYXRlIHRob3NlIG9iamVjdHMuCgpBbHNvLCBpZiB5b3Ugd3JpdGUgeW91
ciBvd24gc2VydmVyIGltcGxlbWVudGF0aW9uLCB0aGlzIHdvdWxkIGJlIHdoZXJlIHlvdSdk
IGhvb2sgaXQgaW50byBNYWlsOjpCdWxrbWFpbAoKPWN1dAoKX19QQUNLQUdFX18tPmFkZF9j
bGFzc19hdHRyKCdzZXJ2ZXJfY2xhc3MnKTsKCiNzcGVjaWFsaXR5IGFjY2Vzc29ycwoKIyBf
VHJ1c3Rpbmcgc3RvcmVzIHRoZSBoYXNocmVmIHRoYXQgaXMgYWNjZXNzZWQgaW50ZXJuYWxs
eSBieSB0aGUgVHJ1c3RpbmcgbWV0aG9kCgpfX1BBQ0tBR0VfXy0+YWRkX2F0dHIoJ19UcnVz
dGluZycpOwoKPXBvZAoKPWl0ZW0gVHJ1c3RpbmcKClRydXN0aW5nIHNwZWNpZmllcyB5b3Vy
IFRydXN0aW5nIGxldmVsLiBNYWlsOjpCdWxrbWFpbCAzLjAwIHdpbGwgZG8gaXRzIGJlc3Qg
dG8gbWFrZSBzdXJlIHRoYXQgeW91ciBlbWFpbCBhZGRyZXNzZXMKYXJlIHZhbGlkIGFuZCB0
aGF0IHlvdXIgbWVzc2FnZSBjb25mb3JtcyB0byBSRkMgMjgyMi4gQnV0LCB0aGVyZSBpcyBh
IHNsaWdodCBwZXJmb3JtYW5jZSBoaXQgdG8gZG9pbmcgdGhhdCAtIGl0IGRvZXMgaGF2ZQp0
byBjaGVjayB0aGluZ3MsIGRvIHJlZ2V4ZXMsIGFuZCBzbyBvbi4gSXQncyBub3QgdmVyeSBz
bG93LCBidXQgZXh0cmFwb2xhdGVkIG92ZXIgYSBodWdlIGxpc3QsIGl0IGNhbiBiZSBub3Rp
Y2VhYmxlLgoKU28gdGhhdCdzIHdoZXJlIFRydXN0aW5nIGNvbWVzIGluIHRvIHBsYXkuIElm
IHlvdSBzZXQgYSBUcnVzdGluZyB2YWx1ZSwgdGhlbiBjZXJ0YWluIHRlc3RzIHdpbGwgYmUg
c2tpcHBlZC4gQjxVc2UgdGhpcyBhdCB5b3VyCm93biByaXNrPi4gSWYgeW91IHRlbGwgTWFp
bDo6QnVsa21haWwgdG8gYmUgVHJ1c3RpbmcsIHRoZW4gaXQgd29uJ3QgdmVyaWZ5IGFkZHJl
c3NlcyBvciB0byBtYWtlIHN1cmUgeW91ciBsaXN0IGlzIHVuZGVyIDEsMDAwCmNoYXJhY3Rl
cnMgcGVyIGxpbmUuIFNvIGlmIHlvdSdyZSBUcnVzdGluZyBhbmQgeW91IHBhc3MgaW4gYmFk
IGRhdGEsIGl0J3MgeW91ciBmdW5lcmFsLiBJZiB0aGVyZSBpcyBCPGFueT4gY2hhbmNlIG9m
IGludmFsaWQgZGF0YSwKdGhlbiBkb24ndCBiZSBUcnVzdGluZy4gSWYgeW91J3JlICpwb3Np
dGl2ZSogdGhlcmUncyBub3RoaW5nIHdyb25nLCB0aGVuIHlvdSBtYXkgYmUgVHJ1c3Rpbmcu
CgpUcnVzdGluZyB2YWx1ZXMgYXJlIHNldCBvbmUgYXMga2V5L3ZhbHVlIHBhaXJzLgoKICRi
dWxrLT5UcnVzdGluZygiZW1haWwiID0+IDEpOwogJGJ1bGstPlRydXN0aW5nKCJ3cmFwcGlu
ZyIgPT4gMSk7CiAkYnVsay0+VHJ1c3RpbmcoImRlZmF1bHQiID0+IDEpOwoKQW5kIHJlYWQg
YmFjayB3aXRoIGp1c3QgdGhlIGtleToKCiAkYnVsay0+VHJ1c3RpbmcoImVtYWlsIik7CiAk
YnVsay0+VHJ1c3RpbmcoIndyYXBwaW5nIik7CiAkYnVsay0+VHJ1c3RpbmcoImRlZmF1bHQi
KTsKCmRlZmF1bHQgaXMgdXNlZCBhcyBhIGZhbGwgYmFjay4gU28gaWYgeW91IGRpZG4ndCBz
cGVjaWZ5IGEgVHJ1c3RpbmcgdmFsdWUgZm9yICJlbWFpbCIsIGZvciBleGFtcGxlLCBpdCB3
aWxsIHVzZQp0aGUgImRlZmF1bHQiIHZhbHVlLiBOb3RlIHRoYXQgdGhlIGRlZmF1bHQgaXMg
b25seSB1c2VkIGlmIGEgdmFsdWUgaXMgbm90IHNwZWNpZmllZC4KCiAkYnVsay0+VHJ1c3Rp
bmcoImRlZmF1bHQiID0+IDEpOwogcHJpbnQgJGJ1bGstPlRydXN0aW5nKCJlbWFpbCIpOwkj
cHJpbnRzIDEKIHByaW50ICRidWxrLT5UcnVzdGluZygiZGVmYXVsdCIpOwkjcHJpbnRzIDEK
ICRidWxrLT5UcnVzdGluZygiZGVmYXVsdCIgPT4gMCk7CiBwcmludCAkYnVsay0+VHJ1c3Rp
bmcoImVtYWlsIik7CSNwcmludHMgMAogcHJpbnQgJGJ1bGstPlRydXN0aW5nKCJkZWZhdWx0
Iik7CSNwcmludHMgMAogJGJ1bGstPlRydXN0aW5nKCJlbWFpbCIgPT4gMSk7CiBwcmludCAk
YnVsay0+VHJ1c3RpbmcoImVtYWlsIik7CSNwcmludHMgMQogcHJpbnQgJGJ1bGstPlRydXN0
aW5nKCJkZWZhdWx0Iik7CSNwcmludHMgMAogJGJ1bGstPlRydXN0aW5nKCJlbWFpbCIgPT4g
MCk7CiAkYnVsay0+VHJ1c3RpbmcoImRlZmF1bHQiID0+IDApOwogcHJpbnQgJGJ1bGstPlRy
dXN0aW5nKCJlbWFpbCIpOwkjcHJpbnRzIDAKIHByaW50ICRidWxrLT5UcnVzdGluZygiZGVm
YXVsdCIpOwkjcHJpbnRzIDEKCllvdSBtYXkgYWxzbyBkaXJlY3RseSBzZXQgYWxsIHZhbHVl
cyB3aXRoIHRoZSBpbnRlZ2VyIHNob3J0IGN1dC4KCiAkYnVsay0+VHJ1c3RpbmcoMSk7CSMg
ZXZlcnl0aGluZyBpcyBUcnVzdGluZwogJGJ1bGstPlRydXN0aW5nKDApOwkjIG5vdGhpbmcg
aXMgVHJ1c3RpbmcKCklmIHlvdSB3YW50IHRvIHNwZWNpZnkgVHJ1c3RpbmcgaW4gdGhlIGNv
bmYgZmlsZSwgeW91IG1heSBvbmx5IGRpcmVjdGx5IHNwZWNpZnkgdmlhIHRoZSBpbnRlZ2Vy
IHNob3J0Y3V0LiBPdGhlcndpc2UsIHlvdSBtdXN0CnVzZSB0aGUgbGlzdCBlcXVhdGlvbi4K
CiAjIGFsbCBUcnVzdGluZwogVHJ1c3RpbmcgPSAxCgogI25vbmUgVHJ1c3RpbmcKIFRydXN0
aW5nID0gMAoKICNlbWFpbCBpcyB0cnVzdGluZwogVHJ1c3RpbmcgQD0gZW1haWwKIFRydXN0
aW5nIEA9IHdyYXBwaW5nCgpUaGlzIHdpbGwgbm90IHdvcms6CgogVHJ1c3RpbmcgPSBlbWFp
bAoKSWYgeW91IHVzZSB0aGF0IHN5bnRheCwgaXQgd2lsbCBpbnRlcm5hbGx5IGRvOgoKICRi
dWxrLT5UcnVzdGluZygnZW1haWwnKTsKCndoaWNoIHlvdSBrbm93IHdpbGwgb25seSByZWFk
IHRoZSB2YWx1ZSwgbm90IHNldCBpdC4gSWYgeW91IHVzZSB0aGUgYXJyYXkgc3ludGF4LCBp
dCB3aWxsIHByb3Blcmx5IHNldCB0aGUgdmFsdWUuCgpOb3RlIHRoYXQgLT5UcnVzdGluZygn
ZGVmYXVsdCcgPT4gMCkgaXMgbm90IGVxdWl2YWxlbnQgdG8gLT5UcnVzdGluZygwKS4gQ29u
c2lkZXI6CgogJGJ1bGstPlRydXN0aW5nKCdlbWFpbCcgPT4gMSk7CiBwcmludCAkYnVsay0+
VHJ1c3RpbmcoJ2VtYWlsJyk7CSMgcHJpbnRzIDEKICRidWxrLT5UcnVzdGluZygiZGVmYXVs
dCcgPT4gMCk7CiBwcmludCAkYnVsay0+VHJ1c3RpbmcoJ2VtYWlsJyk7CSMgc3RpbGwgcHJp
bnRzIDEKICRidWxrLT5UcnVzdGluZygwKTsKIHByaW50ICRidWxrLT5UcnVzdGluZygnZW1h
aWwnKTsJIyBub3cgcHJpbnRzIDAKCkN1cnJlbnRseSwgeW91IG1heSBzZXQ6CgogZW1haWwg
ICAgICAtIFRydXN0aW5nKCdlbWFpbCcgPT4gMSkgd2lsbCBub3QgY2hlY2sgZm9yIHZhbGlk
IGVtYWlsIGFkZHJlc3Nlcwogd3JhcHBpbmcgICAtIFRydXN0aW5nKCd3cmFwcGluZycgPT4g
MSkgd2lsbCBub3QgdHJ5IHRvIHdyYXAgdGhlIG1lc3NhZ2UgdG8gcmVhY2ggdGhlIDEsMDAw
IGNoYXJhY3RlciBwZXIgbGluZSBsaW1pdAogZHVwbGljYXRlcyAtIFRydXN0aW5nKCdkdXBs
aWNhdGVzJyA9PiAxKSB3aWxsIG5vdCBkbyBhbnkgZHVwbGljYXRlcyBjaGVja2luZwogICAg
ICh0aGlzIGlzIHRoZSBlcXVpdmFsZW50IG9mIGFsbG93X2R1cGxpY2F0ZXMgaW4gb2xkZXIg
dmVyc2lvbnMpCiBiYW5uZWQgICAgIC0gVHJ1c3RpbmcoJ2Jhbm5lZCcgPT4gMSkgd2lsbCBu
b3QgbG93ZXJjYXNlIHRoZSBsb2NhbCBwYXJ0IG9mIGEgZG9tYWluIGluIGEgYmFubmVkIG9y
IGR1cGxpY2F0ZXMgY2hlY2sKICAgICAodGhpcyBpcyB0aGUgb3Bwb3NpdGUgb2Ygc2FmZV9i
YW5uZWQgaW4gb2xkZXIgdmVyc2lvbnMuIGkuZS4gJGJ1bGsyXzA1LT5zYWZlX2Jhbm5lZCgx
KSA9PSAkYnVsa18zMDAtPlRydXN0aW5nKCdiYW5uZWQnID0+IDApOwoKSXQgaXMgcmVjb21t
ZW5kZWQgeW91ciBjb25mIGZpbGUgYmU6CgogVHJ1c3RpbmcgQD0gZHVwbGljYXRlcwoKU2lu
Y2UgeW91J3JlIHVzdWFsbHkgYmV0dGVyIG9mZiB3ZWVkaW5nIGR1cGxpY2F0ZXMgb3V0IGlu
IGFkdmFuY2UuIEFsbCBvdGhlciBUcnVzdGluZyB2YWx1ZXMgYXJlIHJlY29tbWVuZGVkIHRv
IGJlIGZhbHNlLgoKPWN1dAoKc3ViIFRydXN0aW5nIHsKCW15ICRzZWxmID0gc2hpZnQ7Cglt
eSAka2V5ID0gc2hpZnQ7CgoJJHNlbGYtPl9UcnVzdGluZyh7fSkgdW5sZXNzICRzZWxmLT5f
VHJ1c3Rpbmc7CgoJaWYgKGRlZmluZWQgJGtleSkgewoJCWlmIChyZWYgJGtleSBlcSAiQVJS
QVkiKXsKCQkJZm9yZWFjaCBteSAkayAoQCRrZXkpewoJCQkJJHNlbGYtPl9UcnVzdGluZy0+
eyRrfSA9IDE7CgkJCX07CgkJCXJldHVybiAxOwoJCX0KCQllbHNpZiAoQF8pewoJCQlteSAk
dmFsID0gc2hpZnQ7CgkJCSRzZWxmLT5fVHJ1c3RpbmctPnska2V5fSA9ICR2YWw7CgkJCXJl
dHVybiAkdmFsOwoJCX0KCQllbHNpZiAoJGtleSA9fiAvXlsxMF0kLyl7CgkJCSRzZWxmLT5f
VHJ1c3Rpbmcoe30pOwoJCQkkc2VsZi0+X1RydXN0aW5nLT57J2RlZmF1bHQnfSA9ICRrZXk7
CgkJCXJldHVybiAka2V5OwoJCX0KCQllbHNlIHsKCQkJcmV0dXJuIGRlZmluZWQgJHNlbGYt
Pl9UcnVzdGluZy0+eyRrZXl9CgkJCQk/ICRzZWxmLT5fVHJ1c3RpbmctPnska2V5fQoJCQkJ
OiAoJHNlbGYtPl9UcnVzdGluZy0+eydkZWZhdWx0J30gfHwgMCkKCQl9OwoJfQoJZWxzZSB7
CgkJcmV0dXJuICRzZWxmLT5fVHJ1c3RpbmctPnsnZGVmYXVsdCd9IHx8IDA7Cgl9Owp9OwoK
PXBvZAoKPWl0ZW0gYmFubmVkCgpiYW5uZWQgc3RvcmVzIHRoZSBsaXN0IG9mIGVtYWlsIGFk
ZHJlc3NlcyBhbmQgZG9tYWlucyB0aGF0IGFyZSBiYW5uZWQuIE9ubHkgc3RvcmUgdXNlckBk
b21haW4uY29tIHBvcnRpb25zIG9mCmVtYWlsIGFkZHJlc3NlcywgZG9uJ3QgdHJ5IHRvIGJh
biAiSmltIjxqaW1AamltYW5ka29rYS5jb20+LCBmb3IgaW5zdGFuY2UuIE9ubHkgYmFuIGpp
bUBqaW1hbmRrb2thLmNvbQoKYmFubmVkIG1heSBiZSBlaXRoZXIgYSBjb2RlcmVmLCBnbG9i
cmVmLCBhcnJheXJlZiwgb3Igc3RyaW5nIGxpdGVyYWwuCgpJZiBhIHN0cmluZyBsaXRlcmFs
LCB0aGVuIE1haWw6OkJ1bGttYWlsIHdpbGwgYXR0ZW1wdCB0byBvcGVuIHRoYXQgZmlsZSAo
aW4gYXBwZW5kIG1vZGUpIGFzIHlvdXIgbG9nOgoKICRidWxrLT5iYW5uZWQoIi9wYXRoL3Rv
L215L2Jhbm5lZC5hZGRyZXNzZXMiKTsKCklmIGEgZ2xvYnJlZiwgaXQgaXMgYXNzdW1lZCB0
byBiZSBhbiBvcGVuIGZpbGVoYW5kbGUgaW4gYXBwZW5kIG1vZGU6Cgogb3BlbiAoQiwgIj4+
L3BhdGgvdG8vbXkvYmFubmVkLmFkZHJlc3NlcyIpOwogJGJ1bGstPmJhbm5lZChcKkIpOwoK
ZmlsZXMgc2hvdWxkIGNvbnRhaW4gb25lIGVudHJ5IHBlciBsaW5lLCBlYWNoIGVudHJ5IGJl
aW5nIGFuIGVtYWlsIGFkZHJlc3Mgb3IgYSBkb21haW4uIEZvciBleGFtcGxlOgoKIGppbUBq
aW1hbmRrb2thLmNvbQogamltYW5ka29rYS5jb20KIGZvb0BiYXIuY29tCiBiYXIuY29tCgpp
ZiBhIGNvZGVyZWYsIGl0IGlzIGFzc3VtZWQgdG8gYmUgYSBmdW5jdGlvbiB0byByZXR1cm4g
eW91ciBiYW5uZWQgbGlzdDoKCiBzdWIgQiB7cmV0dXJuICRiYW5uZWRxdWVyeS0+ZXhlY3V0
ZSgpfTsJI29yIHdoYXRldmVyIHlvdXIgY29kZSBpcwogJGJ1bGstPmJhbm5lZChcJkIpOwoK
VGhlIGZ1bmN0aW9uIHNob3VsZCByZXR1cm4gb25lIGVudHJ5IHBlciBleGVjdXRpb24sIGVp
dGhlciBhbiBhZGRyZXNzIG9yIGEgZG9tYWluLgoKaWYgYW4gYXJyYXlyZWYsIHRoZW4gaXQn
cyBhbiBhcnJheSBvZiBiYW5uZWQgYWRkcmVzc2VzIGFuZCBkb21haW5zCgogJGJ1bGstPmJh
bm5lZChbcXcoamltQGppbWFuZGtva2EuY29tIGppbWFuZGtva2EuY29tKV0pOwoKVGhlIGFy
cmF5cmVmIGNhbiBjb250YWluIGVtYWlsIGFkZHJlc3NlcyBhbmQgZG9tYWlucy4KClVzZSB3
aGljaGV2ZXIgaXRlbSBpcyBtb3N0IGNvbnZlbmllbnQsIGFuZCBNYWlsOjpCdWxrbWFpbCB3
aWxsIHRha2UgaXQgZnJvbSB0aGVyZS4KCk9uY2UgYmFubmVkIGhhcyBiZWVuIHBvcHVsYXRl
ZCwgdGhlIHZhbHVlcyBhcmUgc3RvcmVkIGludGVybmFsbHkgaW4gYSBoYXNocmVmLgoKPWN1
dAoKc3ViIGJhbm5lZCB7CglteSAkc2VsZiA9IHNoaWZ0OwoKCWlmIChAXykgewoJCW15ICRi
YW5uZWQgPSBzaGlmdDsKCgkJI3dlJ3JlIGdvbm5hIGNoZWF0IGFuZCBwb3B1bGF0ZSB0aGUg
ZGF0YSBpbnRvIC0+X2Jhbm5lZCB2aWEgdGhlIF9maWxlX2FjY2Vzc29yLgoJCSN0aGVuIHdl
J2xsIGl0ZXJhdGUgdGhyb3VnaCBpdCBhbGwsIHBvcCBpdCBpbnRvIGEgaGFzaCwgYW5kIHRo
ZW4gZHJvcAoJCSN0aGF0IGJhY2sgaW50byBfYmFubmVkIGluc3RlYWQKCgkJbXkgJG9iID0g
JHNlbGYtPl9iYW5uZWQoKTsJI3NhdmUgaXQgZm9yIGJlbG93LgoJCSRzZWxmLT5fZmlsZV9h
Y2Nlc3NvcigiX2Jhbm5lZCIsICI8IiwgJGJhbm5lZCk7CgoJCW15ICRiID0gJG9iIHx8IHt9
Owkja2VlcCB0aGUgb2xkIHZhbHVlLCBvciBtYWtlIGEgbmV3IGhhc2hyZWYKCgkJd2hpbGUg
KG15ICRhZGRyZXNzID0gJHNlbGYtPmdldE5leHRMaW5lKCRzZWxmLT5fYmFubmVkKSl7CgkJ
CSRiLT57JGFkZHJlc3N9ID0gMTsKCQl9OwoKCQlyZXR1cm4gJHNlbGYtPl9iYW5uZWQoJGIp
OwoJfQoJZWxzZSB7CgkJI2lmIHdlIGhhdmUgYSBiYW5uZWQgaGFzaCwgcmV0dXJuIGl0LgoJ
CWlmICgkc2VsZi0+X2Jhbm5lZCl7CgkJCXJldHVybiAkc2VsZi0+X2Jhbm5lZDsKCQl9CgkJ
I290aGVyd2lzZSwgY3JlYXRlIG9uZSBhbmQgcmV0dXJuIHRoYXQuCgkJZWxzZSB7CgkJCXJl
dHVybiAkc2VsZi0+X2Jhbm5lZCh7fSk7CgkJfTsKCX07Cn07Cgo9cG9kCgo9aXRlbSBQcmVj
ZWRlbmNlCgpQcmVjZWRlbmNlIGlzIGEgdmFsaWRhdGluZyBhY2Nlc3NvciB0byB2YWxpZGF0
ZSB0aGUgUHJlY2VkZW5jZSB5b3UgaGF2ZSBwYXNzZWQgZm9yIHlvdXIgbWFpbGluZyBsaXN0
LgoKUHJlY2VkZW5jZSBtdXN0IGJlIGVpdGhlcjoKCiAqIGxpc3QgKGRlZmF1bHQpIC0gYSBt
YWlsaW5nIGxpc3QKICogYnVsayAtIGJ1bGsgbWFpbGluZyBvZiBzb21lIHR5cGUKICoganVu
ayAtIHdvcnRobGVzcyB0ZXN0IG1lc3NhZ2UuCgpZb3UgY2FuIHVzZSBhbiBhbHRlcm5hdGUg
UHJlY2VkZW5jZSBpZiB5b3Ugc2V0IFRydXN0aW5nIHRvIDAuIEJ1dCBzZXJpb3VzbHksIHRo
ZXJlJ3MgKm5vKiByZWFzb24gdG8gZG8gdGhhdC4gS2VlcGluZwp0aGUgYXBwcm9wcmlhdGUg
cHJlY2VkZW5jZSB3aWxsIGhlbHAgdGhlIHNlcnZlcnMgb24gdGhlIGludGVybmV0IHJvdXRl
IHlvdXIgbWVzc2FnZSBhcyB3ZWxsIGFzIHRoZSByZXN0IG9mIHRoZSBlbWFpbCBvdXQKdGhl
cmUgbW9yZSBlZmZpY2llbnRseS4gU28gZG9uJ3QgYmUgYSBqZXJrLCBhbmQgbGVhdmUgaXQg
YXMgb25lIG9mIHRob3NlIHRocmVlLgoKVGhpcyBtZXRob2QgaXMga25vd24gdG8gYmUgYWJs
ZSB0byByZXR1cm46CgogTUIwMDEgLSBpbnZhbGlkIHByZWNlZGVuY2UKCj1jdXQKCnN1YiBQ
cmVjZWRlbmNlIHsKCW15ICRzZWxmID0gc2hpZnQ7CglteSAkcHJvcCA9ICdfUHJlY2VkZW5j
ZSc7CgoJaWYgKEBfKXsKCQlteSAkcHJlY2VkZW5jZSA9IHNoaWZ0OwoJCWlmICgkc2VsZi0+
VHJ1c3RpbmcoJ3ByZWNlZGVuY2UnKSB8fCAkc2VsZi0+X3ZhbGlkX3ByZWNlZGVuY2UoJHBy
ZWNlZGVuY2UpKXsKCQkJJHNlbGYtPl9QcmVjZWRlbmNlKCRwcmVjZWRlbmNlKTsKCQkJcmV0
dXJuICRzZWxmLT5fUHJlY2VkZW5jZTsKCQl9CgkJZWxzZSB7CgkJCXJldHVybiAkc2VsZi0+
ZXJyb3IoIkludmFsaWQgcHJlY2VkZW5jZTogJHByZWNlZGVuY2UiLCAiTUIwMDEiKTsKCQl9
OwoJfQoJZWxzZSB7CgkJcmV0dXJuICRzZWxmLT5fUHJlY2VkZW5jZSB8fCAnbGlzdCc7CSNp
ZiB0aGV5IGRpZG4ndCBzZXQgaXQsIGFzc3VtZSBsaXN0LCBubyBtYXR0ZXIgd2hhdAoJfTsK
fTsKCiNkYXRlIGFuZCB0eiBhcmUgYWN0dWFsbHkgbWV0aG9kcywgbm90IGFjY2Vzc29ycywg
YnV0IHRoZXkncmUgY2xvc2UgZW5vdWdoLCBzbyB3aGF0IHRoZSBoZWxsCgo9cG9kCgo9aXRl
bSBUegoKUmV0dXJucyB0aGUgdGltZXpvbmUgdGhhdCB5b3UncmUgaW4uIFlvdSBjYW5ub3Qg
c2V0IHRoaXMgdmFsdWUuIFlvdSdsbCBhbHNvIG5ldmVyIG5lZWQgdG8gd29ycnkgYWJvdXQg
aXQuCgo9Y3V0CgpzdWIgVHogewoKCW15ICRzZWxmID0gc2hpZnQ7CglteSAkdGltZSA9IHNo
aWZ0IHx8IHRpbWU7CgoJbXkgKCRtaW4sICRob3VyLCAkaXNkc3QpCT0gKGxvY2FsdGltZSgk
dGltZSkpWzEsMiwtMV07CglteSAoJGdtaW4sICRnaG91ciwgJGdzZHN0KQk9IChnbXRpbWUo
JHRpbWUpKVsxLDIsIC0xXTsKCglteSAkZGlmZmhvdXIgPSAkaG91ciAtICRnaG91cjsKCSRk
aWZmaG91ciA9ICRkaWZmaG91ciAtIDI0IGlmICRkaWZmaG91ciA+IDEyOwoJJGRpZmZob3Vy
ID0gJGRpZmZob3VyICsgMjQgaWYgJGRpZmZob3VyIDwgLTEyOwoKCSgkZGlmZmhvdXIgPSBz
cHJpbnRmKCIlMDNkIiwgJGRpZmZob3VyKSkgPX4gcy9eMC9cKy87CgoJcmV0dXJuICRkaWZm
aG91ciAuIHNwcmludGYoIiUwMmQiLCAkbWluIC0gJGdtaW4pOwoKfTsKCj1wb2QKCj1pdGVt
IERhdGUKClJldHVybnMgdGhlIGRhdGUgdGhhdCB0aGlzIGVtYWlsIGlzIGJlaW5nIHNlbnQs
IGluIHZhbGlkIFJGQyBmb3JtYXQuIE5vdGUgdGhhdCB0aGlzIHdpbGwgYmUgc3RvcmVkIGlu
IF9jYWNoZWRfaGVhZGVycyBhcyB0aGUKZGF0ZSB0aGF0IHRoZSBmaXJzdCBlbWFpbCBpcyBz
ZW50LgoKQW5vdGhlciB0aGluZyB5b3Ugd29uJ3QgbmVlZCB0byB3b3JyeSBhYm91dC4KCj1j
dXQKCnN1YiBEYXRlIHsKCglteSAkc2VsZiAJPSBzaGlmdDsKCglteSBAbW9udGhzIAk9IHF3
KEphbiBGZWIgTWFyIEFwciBNYXkgSnVuIEp1bCBBdWcgU2VwIE9jdCBOb3YgRGVjKTsKCW15
IEBkYXlzIAk9IHF3KFN1biBNb24gVHVlIFdlZCBUaHUgRnJpIFNhdCk7CgoJbXkgJHRpbWUg
PSB0aW1lOwoJbXkgKCRzZWMsICRtaW4sICRob3VyLCAkbWRheSwgJG1vbiwgJHllYXIsICR3
ZGF5KSA9IGxvY2FsdGltZSgkdGltZSk7CgoJcmV0dXJuIHNwcmludGYoIiVzLCAlMDJkICVz
ICUwNGQgJTAyZDolMDJkOiUwMmQgJTA1cyIsCgkJJGRheXNbJHdkYXldLCAkbWRheSwgJG1v
bnRoc1skbW9uXSwgJHllYXIgKyAxOTAwLCAkaG91ciwgJG1pbiwgJHNlYywgJHNlbGYtPlR6
KCR0aW1lKSk7Cn07CgojZG9uZSB3aXRoIHNwZWNpYWxpdHkgYWNjZXNzb3JzCgojb3VyIGdl
bmVyaWMgc3BlY2lhbGl0eSBhY2Nlc3NvcnMKCiMgaW50ZXJuYWxseSB1c2VkIHRvIHBvcHVs
YXRlIHRoZSBhdHRyaWJ1dGVzIHRoYXQgYXJlIGV4cGVjdGVkIHRvIGNvbnRhaW4gZW1haWwg
YWRkcmVzc2VzCiMgYmFzaWNhbGx5LCBpdCBqdXN0IGRvZXMgYSB2YWxpZF9lbWFpbCBjaGVj
ayBvbiB0aGUgZW1haWwgYWRkcmVzcyBiZWZvcmUgYWxsb3dpbmcgaXQgaW50bwojIHRoZSBv
YmplY3QncyBhdHRyaWJ1dGUuIFRoZSB2YWxpZGF0aW9uIGNoZWNrIHdpbGwgYmUgYnlwYXNz
ZWQgaWYgVHJ1c3RpbmcgaXMgc2V0CiMKIyBvdGhlcndpc2UsIHRoZSBhdHRyaWJ1dGUgZXh0
ZXJuYWxseSBiZWhhdmVzIGp1c3QgYXMgYW55IG90aGVyCnN1YiBfZW1haWxfYWNjZXNzb3Ig
ewoJbXkgJHNlbGYJCQk9IHNoaWZ0OwoJbXkgJHByb3AJCQk9IHNoaWZ0OwoJbXkgJGFsbG93
X2dyb3Vwcwk9IHNoaWZ0OwoKCWlmIChAXyl7CgkJbXkgJGVtYWlsID0gc2hpZnQ7CgkJaWYg
KCEgZGVmaW5lZCAkZW1haWwgfHwgJHNlbGYtPlRydXN0aW5nKCdlbWFpbCcpIHx8ICRzZWxm
LT52YWxpZF9lbWFpbCgkZW1haWwsICRhbGxvd19ncm91cHMpKXsKCQkJbXkgJHJldHVybiA9
ICRzZWxmLT4kcHJvcCgkZW1haWwpOzsKCQkJcmV0dXJuIGRlZmluZWQgJGVtYWlsID8gJHJl
dHVybiA6IDA7CgkJfQoJCWVsc2UgewoJCQlyZXR1cm4gJHNlbGYtPmVycm9yKCJJbnZhbGlk
IGFkZHJlc3M6ICRlbWFpbCIsICJNQjAwMiIpOwoJCX07Cgl9CgllbHNlIHsKCQlyZXR1cm4g
JHNlbGYtPiRwcm9wKCk7Cgl9Owp9OwoKI2RvbmUgd2l0aCBnZW5lcmljIHNwZWNpYWx0eSBh
Y2Nlc3NvcnMKCiNjb25zdHJ1Y3RvcgoKPXBvZAoKPWJhY2sKCj1oZWFkMSBNRVRIT0RTCgo9
b3ZlciAxMQoKPWl0ZW0gbmV3CgpUaGUgY29uc3RydWN0b3IsIHVzZWQgdG8gY3JlYXRlIG5l
dyBNYWlsOjpCdWxrbWFpbCBvYmplY3RzLiBTZWUgTWFpbDo6QnVsa21haWw6Ok9iamVjdCBm
b3IgbW9yZSBpbmZvcm1hdGlvbiBvbiBjb25zdHJ1Y3RvcnMuCgpJbiBhIG51dHNoZWxsLCB0
aGUgY29uc3RydWN0b3IgYWNjZXB0cyBhIGhhc2ggd2l0aCBuYW1lL3ZhbHVlIHBhaXJzIGNv
cnJlc3BvbmRpbmcgdG8gYXR0cmlidXRlcyBhbmQgYXR0cmlidXRlIHZhbHVlcy4KClNvIHRo
YXQ6CgogbXkgJGJ1bGsgPSBNYWlsOjpCdWxrbWFpbC0+bmV3KAogCSdMSVNUJyA9PiAnLi9s
aXN0LnR4dCcsCiAJJ01lc3NhZ2UnID0+ICJUaGlzIGlzIG15IG1lc3NhZ2UhIiwKIAknSFRN
TCcgPT4gMAogKSB8fCBkaWUgTWFpbDo6QnVsa21haWwtPmVycm9yOwoKaXMgdGhlIHNhbWUg
YXM6CgogbXkgJGJ1bGsgPSBNYWlsOjpCdWxrbWFpbC0+bmV3KCkgfHwgZGllIE1haWw6OkJ1
bGttYWlsLT5lcnJvcjsKCiAkYnVsay0+TElTVCgiLi9saXN0LnR4dCIpOwogJGJ1bGstPk1l
c3NhZ2UoIlRoaXMgaXMgbXkgbWVzc2FnZSEiKTsKICRidWxrLT5IVE1MKDApOwoKKnRlY2hu
aWNhbGx5KiBpdCdzIG5vdCBleGFjdGx5IHRoZSBzYW1lLCBzaW5jZSB0aGUgY29uc3RydWN0
b3Igd2lsbCBmYWlsIHdpdGggYW4gZXJyb3IgaWYgeW91ciBhdHRyaWJ1dGUgY2FsbHMgcmV0
dXJuIHVuZGVmLCBidXQKaXQncyBjbG9zZSBlbm91Z2guCgpJdCBpcyByZWNvbW1lbmQgdG8g
dGFjayBvbiBhbiB8fCBkaWUgYWZ0ZXIgeW91ciBuZXcoKSBjYWxscywgdG8gbWFrZSBzdXJl
IHlvdSdyZSBhbGVydGVkIGlmIHlvdXIgb2JqZWN0IGlzbid0IGNyZWF0ZWQuCgogbXkgJGJ1
bGsgPSBNYWlsOjpCdWxrbWFpbC0+bmV3KCkgfHwgZGllIE1haWw6OkJ1bGttYWlsLT5lcnJv
cigpOwoKT3RoZXJ3aXNlLCB5b3Ugd29uJ3QgYmUgYWxlcnRlZCBpZiB5b3VyIG9iamVjdCBp
c24ndCBjcmVhdGVkLgoKVXBvbiBjcmVhdGlvbiwgTWFpbDo6QnVsa21haWwgd2lsbCBmaXJz
dCBpdGVyYXRlIHRocm91Z2ggdGhlIGNvbmYgZmlsZSBhbmQgcG9wdWxhdGUgYWxsIG9mIHRo
ZSBhdHRyaWJ1dGVzIGRlZmluZWQgaW4gdGhlIGNvbmYgZmlsZQppbnRvIHlvdXIgb2JqZWN0
LiBJdCB3aWxsIHRoZW4gaXRlcmF0ZSB0aHJvdWdoIHRoZSB2YWx1ZXMgeW91IHBhc3NlZCB0
byB0aGUgY29uc3RydWN0b3IgYW5kIG11dGF0ZSB0aGUgYXR0cmlidXRlcyB0byB0aG9zZQp2
YWx1ZXMuIElmIHlvdSBkb24ndCBwYXNzIGFueSBhcmd1bWVudHMgdG8gdGhlIGNvbnN0cnVj
dG9yLCBpdCBzdGlsbCBnZXRzIHRoZSBkZWZhdWx0IHZhbHVlcyBpbiB0aGUgY29uZiBmaWxl
LiBWYWx1ZXMgcGFzc2VkIHRvCnRoZSBjb25zdHJ1Y3RvciBhbHdheXMgb3ZlcnJpZGUgdmFs
dWVzIHNwZWNpZmllZCBpbiB0aGUgY29uZiBmaWxlCgpUaGVyZSBpcyBvbmUgc3BlY2lhbCBj
b25zdHJ1Y3RvciBmbGFnLCAic2VydmVyX2ZpbGUiLCB3aGljaCBkb2VzIG5vdCBjb3JyZXNw
b25kIHRvIGFuIGF0dHJpYnV0ZSBvciBtZXRob2QuICJzZXJ2ZXJfZmlsZSIgaXMgdXNlZCB0
bwpvdmVycmlkZSB0aGUgc2VydmVyX2ZpbGUgc3BlY2lmaWVkIGluIHRoZSBjb25mIGZpbGUu
CgpJZiB5b3UgcGFzcyBhIGtleS92YWx1ZSBwYWlyIHRvIHRoZSBjb25zdHJ1Y3RvciB0aGF0
IGRvZXNuJ3QgaGF2ZSBhIGNvcnJlc3BvbmRpbmcgYXR0cmlidXRlLCB0aGVuIGl0IGlzIGFz
c3VtaW5nIHlvdSBhcmUgc2V0dGluZyBhCm5ldyBoZWFkZXIuCgogbXkgJGJ1bGsgPSBNYWls
OjpCdWxrbWFpbC0+bmV3KCdmb28nID0+ICdiYXInKTsKCiBpcyB0aGUgc2FtZSBhczoKCiBt
eSAkYnVsayA9IE1haWw6OkJ1bGttYWlsLT5uZXcoKTsKICRidWxrLT5oZWFkZXIoJ2Zvbycg
PT4gJ2JhcicpOwoKVGhpcyBtZXRob2QgaXMga25vd24gdG8gYmUgYWJsZSB0byByZXR1cm46
CgogTUIwMDMgLSBjb3VsZCBub3QgdXNlIHNlcnZlciBjbGFzcwoKPWN1dAoKc3ViIG5ldyB7
CglteSAkY2xhc3MJPSBzaGlmdDsKCglteSAlaW5pdAk9IEBfOwoKCW15ICRzZWxmID0gJGNs
YXNzLT5TVVBFUjo6bmV3KAoJCSdzZXJ2ZXJzJwkJCT0+IFtdLAoJCSdfaGVhZGVycycJCQk9
PiB7fSwKCQkiX2R1cGxpY2F0ZXMiCQk9PiB7fSwKCQkiX3dhaXRpbmdfbWVzc2FnZSIJPT4g
MCwKCQkiX3NlcnZlcl9pbmRleCIJCT0+IC0xLAoJCUBfCgkpIHx8IHJldHVybiB1bmRlZjsK
Cgkjbm93LCB3ZSBpdGVyYXRlIHRocm91Z2ggZXZlcnl0aGluZyBlbHNlIHRoYXQgd2FzIHBh
c3NlZCwgc2luY2Ugd2UncmUgZ29ubmEgYXNzdW1lCgkjdGhhdCB0aGV5IHdhbnQgdG8gc2V0
IGl0IGFzIGEgaGVhZGVyCglmb3JlYWNoIG15ICRrZXkgKGdyZXAgeyEgJHNlbGYtPmNhbigk
Xyl9IGtleXMgJWluaXQpewoJCW5leHQgaWYgJGtleSBlcSAnc2VydmVyX2ZpbGUnOwkjc3Bl
Y2lhbCBjYXNlIHRvIGFsbG93IHBhc3Npbmcgb2YgYSBzZXBhcmF0ZSBzZXJ2ZXJfZmlsZQoJ
CSRzZWxmLT5oZWFkZXIoJGtleSwgJGluaXR7JGtleX0pIHx8IHJldHVybiAkY2xhc3MtPmVy
cm9yKCRzZWxmLT5lcnJvciwgJHNlbGYtPmVycmNvZGUsICdub3QgbG9nZ2VkJyk7Cgl9OwoK
CSNpZiB3ZSBoYXZlIG5vIHNlcnZlcnMsIGJ1dCB3ZSBkbyBoYXZlIGEgc2VydmVyIGZpbGUg
KHdoaWNoIHdlIHNob3VsZC4uLikKCWlmICgkY2xhc3MtPnNlcnZlcl9jbGFzcykgewoJCSRA
ID0gdW5kZWY7CgkJZXZhbCAidXNlICIgLiAkY2xhc3MtPnNlcnZlcl9jbGFzczsKCQlyZXR1
cm4gJHNlbGYtPmVycm9yKCJDb3VsZCBub3QgdXNlICIgLiAkY2xhc3MtPnNlcnZlcl9jbGFz
cyAuICIgOiAkQCIsICJNQjAwMyIpIGlmICRAOwoJCSNpZiB3ZSBoYXZlIG5vIHNlcnZlcnMs
IHRoZW4gaW5pdGlhbGl6ZSB0aGVtIHZpYSBjcmVhdGVfYWxsX3NlcnZlcnMKCQkkc2VsZi0+
c2VydmVycygkY2xhc3MtPnNlcnZlcl9jbGFzcy0+Y3JlYXRlX2FsbF9zZXJ2ZXJzKCRpbml0
eydzZXJ2ZXJfZmlsZSd9IHx8IHVuZGVmKSkKCQkJaWYgJGNsYXNzLT5zZXJ2ZXJfY2xhc3Mg
JiYgQHskc2VsZi0+c2VydmVyc30gPT0gMDsKCX07CgoJcmV0dXJuICRzZWxmOwoKfTsKCj1w
b2QKCj1pdGVtIGhlYWRlcgoKdGhlIGhlYWRlciBtZXRob2QgaXMgdXNlZCB0byBzZXQgYWRk
aXRpb25hbCBoZWFkZXJzIGZvciB5b3VyIG9iamVjdCB0aGF0IGRvbid0IGhhdmUgdGhlaXIg
b3duIG1ldGhvZHMgKHN1Y2ggYXMgU3ViamVjdCkKaGVhZGVyIGV4cGVjdHMgdGhlIGhlYWRl
ciBhbmQgdmFsdWUgdG8gYWN0IGFzIGEgbXV0YXRvciwgb3IgdGhlIGhlYWRlciB0byBhY3Qg
YXMgYW4gYWNjZXNzb3IuCgogJGJ1bGstPmhlYWRlcignWC1IZWFkZXInLCAiTXkgaGVhZGVy
IHZhbHVlIik7CiBwcmludCAkYnVsay0+aGVhZGVyKCdYLUhlYWRlcicpOyAjcHJpbnRzICJN
eSBoZWFkZXIgdmFsdWUiCgpVc2UgdGhpcyB0byBzZXQgYW55IGFkZGl0aW9uYWwgaGVhZGVy
cyB0aGF0IHlvdSB3b3VsZCBsaWtlLgoKTm90ZSB0aGF0IHlvdSBjYW4ndCB1c2UgdGhpcyB0
byBieXBhc3MgdmFsaWRhdGlvbiBjaGVja3MuCgogJGJ1bGstPkhlYWRlcigiU3ViamVjdCIs
ICJNeSBTdWJqZWN0Iikgd2lsbCBpbnRlcm5hbGx5IGNoYW5nZSBpbnRvICRidWxrLT5TdWJq
ZWN0KCJNeSBTdWJqZWN0Iik7CgpUaGVyZSdzIG5vIGJlbmVmaXQgdG8gZG9pbmcgdGhhdCwg
aXQnbGwganVzdCBzbG93IHlvdSBkb3duLgoKSWYgeW91IGNhbGwgaGVhZGVyIHdpdGggbm8g
dmFsdWVzLCBpdCByZXR1cm5zIHRoZSBfaGVhZGVycyBoYXNocmVmLCBjb250YWluaW5nIGtl
eSB2YWx1ZSBwYWlycyBvZiBoZWFkZXIgPT4gdmFsdWUKClRoaXMgbWV0aG9kIGlzIGtub3du
IHRvIGJlIGFibGUgdG8gcmV0dXJuOgoKIE1CMDA0IC0gY2Fubm90IHNldCBDQyBvciBCQ0Mg
aGVhZGVyCiBNQjAwNSAtIGludmFsaWQgaGVhZGVyCgo9Y3V0CgojaGVhZGVyIGFsbG93cyB1
cyB0byBzcGVjaWZ5IGFkZGl0aW9uYWwgaGVhZGVycwpzdWIgaGVhZGVyIHsKCglteSAkc2Vs
Zgk9IHNoaWZ0OwoJbXkgJGhlYWRlcgk9IHNoaWZ0IHx8IHJldHVybiAkc2VsZi0+X2hlYWRl
cnM7CgoJaWYgKCRoZWFkZXIgPX4gL14oPzpGcm9tfFRvfFNlbmRlcnxSZXBseS0/VG98U3Vi
amVjdHxQcmVjZWRlbmNlKSQvKXsKCQkkaGVhZGVyID1+IHMvXFcvL2c7CgkJcmV0dXJuICRz
ZWxmLT4kaGVhZGVyKEBfKTsKCX0KCWVsc2lmICgkaGVhZGVyID1+IC9eYj9jYy9pKXsKCQly
ZXR1cm4gJHNlbGYtPmVycm9yKCJDYW5ub3Qgc2V0IENDIG9yIEJDQy4uLnRoYXQncyBqdXN0
IGNvbW1vbiBzZW5zZSEiLCAiTUIwMDQiKTsKCX0KCWVsc2UgewoJCWlmICgkaGVhZGVyID1+
IC9eW1x4MjEtXHgzOVx4M0ItXHg3RV0rJC8pewoJCQlteSAkdmFsdWUgPSBzaGlmdDsKCQkJ
aWYgKGRlZmluZWQgJHZhbHVlKSB7CgkJCQkkc2VsZi0+X2hlYWRlcnMtPnskaGVhZGVyfSA9
ICR2YWx1ZTsKCQkJCXJldHVybiAkdmFsdWU7CgkJCX0KCQkJZWxzZSB7CgkJCQlkZWxldGUg
JHNlbGYtPl9oZWFkZXJzLT57JGhlYWRlcn07CgkJCQlyZXR1cm4gMDsgI25vbi10cnVlIHZh
bHVlIChkaWRuJ3Qgc2V0IGl0IHRvIGFueXRoaW5nKSwgYnV0IGEgZGVmaW5lZCB2YWx1ZSBz
aW5jZSBpdCdzIG5vdCBhbiBlcnJvci4KCQkJfTsKCQl9CgkJZWxzZSB7CgkJCXJldHVybiAk
c2VsZi0+ZXJyb3IoIkNhbm5vdCBzZXQgaGVhZGVyICckaGVhZGVyJyA6IGludmFsaWQuIEhl
YWRlcnMgY2Fubm90IGNvbnRhaW4gbm9uLXByaW50YWJsZXMsIHNwYWNlcywgb3IgY29sb25z
IiwgIk1CMDA1Iik7CgkJfTsKCX07Cgp9OwoKI3ZhbGlkYXRpb24gbWV0aG9kcwoKewoJIyBN
YWlsOjpCdWxrbWFpbCAzLjAwIGhhcyBhIGdyZWF0bHkgZXh0ZW5kZWQgcm91dGluZSBmb3Ig
dmFsaWRhdGluZyBlbWFpbCBhZGRyZXNzZXMuIFRoZSBvbmUgaW4gMi54IHdhcyBwcmV0dHkg
Z29vZCwKCSMgYnV0IHdhcyBvbmx5IHNsaWdodGx5IHN1cGVyaW9yIHRvIHRoZSBvbmUgaW4g
MS54LiBJdCBhbHNvIHdhc24ndCBxdWl0ZSBwZXJmZWN0IC0gdGhlcmUgd2VyZSB2YWxpZCBh
ZGRyZXNzZXMgaXQgd291bGQKCSMgcmVmdXNlLCBhbmQgaW52YWxpZCBhZGRyZXNzZXMgaXQg
d291bGQgYWNjZXB0LiBJdCB3YXMgKm1vc3RseSogZmluZSwgdGhvdWdoLgoJIwoJIyAzLjAw
IGhhcyBhIGhpZ2hlciBzdGFuZGFyZCwgdGhvdWdoLiA6KQoJIyBTbyB2YWxpZF9lbWFpbCBo
YXMgYmVlbiByZS13cml0dGVuLiBUaGlzIHNob3VsZCBtYXRjaCBvbmx5IHZhbGlkIFJGQyAy
ODIyIGFkZHJlc3Nlcywgd2l0aCBkZXZpYXRpb25zIGZyb20gdGhlCgkjIHNwZWMgbm90ZWQg
YmVsb3cuIFN0aWxsIG9ubHkgYWxsb3dzIHNpbmdsZSBhZGRyZXNzZXMsIHRob3VnaC4gTm8g
YWRkcmVzcyBsaXN0cyBvciBncm91cHMgZm9yIHRoZSBnZW5lcmFsIGNhc2UuCgoJIyBvdXIg
cmVnZXhlcyB0byBkZWFsIHdpdGggd2hpdGVzcGFjZSBhbmQgZm9sZGluZyB3aGl0ZXNwYWNl
CglteSAkd3NwID0gcTxbIFx0XT47CglteSAkZndzID0gcXE8KD86KD86JHdzcCpcXDAxNVxc
MDEyKT8kd3NwKyk+OwoKCSMgb3VyIHJlZ2V4ZXMgZm9yIGNvbnRyb2wgY2hhcmFjdGVycwoJ
bXkgJG5vX3dzX2N0bCA9IHE8XHgwMS1ceDA4XHgwQlx4MENceDBFLVx4MUZceDdGPjsKCgkj
IHJlZ2V4IGZvciAidGV4dCIsIGFueSBhc2NpaSBjaGFyYWN0ZXIgb3RoZXIgdGhhbiBhIENS
IG9yIExGCglteSAkdGV4dCA9IHE8W1x4MDEtXHgwOVx4MEJceDBDXHgxNC1ceDdGXT47CgoJ
I3JlZ2V4ZXMgZm9yICJhdG9tcyIKCgkJI2RlZmluZSBvdXIgYXRvbXRleHQKCQlteSAkYXRl
eHQgPSBxPFshIyQlJicqK1wtLz0/XmB7fH1+XHddPjsKCgkJIyBhbiBhdG9tIGlzIGF0ZXh0
IG9wdGlvbmFsbHkgc3Vycm91bmRlZCBieSBmb2xkZWQgd2hpdGUgc3BhY2UKCQlteSAkYXRv
bSA9IHFxPCg/OiRmd3MqJGF0ZXh0KyRmd3MqKT47CgoJCSMgYSBkb3RhdG9tIGlzIGF0b20g
dGV4dCBvcHRpb25hbGx5IGZvbGxvd2VkIGJ5IGEgZG90IGFuZCBtb3JlIGF0b210ZXh0CgkJ
bXkgJGRvdGF0b210ZXh0ID0gcXE8KD86JGF0ZXh0Kyg/OlxcLiRhdGV4dCspKik+OwoKCQkj
YSBkb3RhdG9tIGlzIGRvdGF0b210ZXh0IG9wdGlvbmFsbHkgc3Vycm91bmRlZCBieSBmb2xk
ZWQgd2hpdGVzcGFjZQoJCW15ICRkb3RhdG9tID0gcXE8KD86JGZ3cz8kZG90YXRvbXRleHQk
ZndzPyk+OwoKCSNhIHF1b3RlZCBwYWlyIGlzIGEgYmFja3NsYXNoIGZvbGxvd2VkIGJ5IGEg
c2luZ2xlIHRleHQgY2hhcmFjdGVyLCBhcyBkZWZpbmVkIGFib3ZlLgoJbXkgJHF1b3RlZF9w
YWlyID0gJyg/OicgLiBxPFxcPiAuIHFxPCR0ZXh0PiAuICcpJzsKCgkjcmVnZXhlcyBmb3Ig
cXVvdGVkIHN0cmluZ3MKCgkJI3F1b3RlZCB0ZXh0IGlzIHRleHQgYmV0d2VlbiBxdW90ZXMs
IGl0IGNhbiBiZSBhbnkgY29udHJvbCBjaGFyYWN0ZXIsCgkJI2luIGFkZGl0aW9uIHRvIGFu
eSBBU0NJSSBjaGFyYWN0ZXIgb3RoZXIgdGhhbiBcIG9yICIKCQlteSAkcXRleHQgPSAnKD86
JyAuICdbJyAuICRub193c19jdGwgLiBxPFx4MjFceDIzLVx4NUJceDVELVx4N0U+IC4gJ10n
IC4gJyknOwoKCQkjY29udGVudCBpbnNpZGUgYSBxdW90ZWQgc3RyaW5nIG1heSBlaXRoZXIg
YmUgcXRleHQgb3IgYSBxdW90ZWQgcGFpcgoJCW15ICRxY29udGVudCA9IHFxPCg/OiRxdGV4
dHwkcXVvdGVkX3BhaXIpPjsKCgkJI2FuZCwgZmluYWxseSwgb3VyIHF1b3RlZCBzdHJpbmcg
aXMgb3B0aW9uYWwgZm9sZGVkIHdoaXRlIHNwYWNlLCB0aGVuIGEgZG91YmxlIHF1b3RlCgkJ
I3dpdGggYXMgbXVjaCBxY29udGVudCBhcyB3ZSdkIGxpa2UgKG9wdGlvbmFsbHkgc3Vycm91
bmRlZCBieSBmb2xkaW5nIHdoaXRlIHNwYWNlCgkJI3RoZW4gYW5vdGhlciBkb3VibGUgcXVv
dGUsIGFuZCBtb3JlIG9wdGlvbmFsIGZvbGRlZCB3aGl0ZSBzcGFjZQoJCW15ICRxdW90ZWRf
c3RyaW5nID0gcXE8KD86JGZ3cz8iKD86JGZ3cz8kcWNvbnRlbnQpKiRmd3M/IiRmd3M/KT47
CgoJI2Egd29yZCBpcyBhbiBhdG9tIG9yIGEgcXVvdGVkIHN0cmluZwoJbXkgJHdvcmQgPSBx
cTwoPzokYXRvbXwkcXVvdGVkX3N0cmluZyk+OwoKCSNhIHBocmFzZSBpcyBtdWx0aXBsZSB3
b3JkcwoJbXkgJHBocmFzZSA9IHFxPCR3b3JkKz47CgoJI3RoZSBsb2NhbCBwYXJ0IG9mIGFu
IGFkZHJlc3MgaXMgZWl0aGVyIGEgZG90YXRvbSBvciBhIHF1b3RlZCBzdHJpbmcKCW15ICRs
b2NhbF9wYXJ0ID0gcXE8KD86JGRvdGF0b218JHF1b3RlZF9zdHJpbmcpPjsKCgkjcmVnZXhl
cyBmb3IgZG9tYWlucwoKCSMJI2RvbWFpbiB0ZXh0IG1heSBiZSBhIGNvbnRyb2wgY2hhcmFj
dGVyLCBpbiBhZGRpdGlvbiB0byBhbnkgQVNDSUkgY2hhcmFjdGVyIG90aGVyIHRoYW4gWywg
XCwgb3IgXQoJIwlteSAkZHRleHQJPSAnKD86JyAuICdbJyAuICRub193c19jdGwgLiBxPFx4
MjEtXHg1QVx4NUUtXHg3RT4gLiAnXScgLiAnKSc7CgkjCgkjCSNkb21haW4gY29udGVudCBp
cyBlaXRoZXIgZHRleHQgb3IgYSBxdW90ZWQgcGFpcgoJIwlteSAkZGNvbnRlbnQgPSBxcTwo
PzokZHRleHR8JHF1b3RlZF9wYWlyKT47CgkjCgkjCSNhIGRvbWFpbiBsaXRlcmFsIGlzIG9w
dGlvbmFsIGZvbGRlZCB3aGl0ZSBzcGFjZSwgZm9sbG93ZWQgYnkgYSBsaXRlcmFsIFsKCSMJ
I3RoZW4gb3B0aW9uYWwgZm9sZGVkIHdoaXRlIHNwYWNlIGFuZCBhcmJpdHJhcnkgZGNvbnRl
bnQsIGZvbGxvd2VkIGJ5IGFub3RoZXIgbGl0ZXJhbCBdCgkjCSNhbmQgdGhlbiBvcHRpb25h
bCBmd3MKCSMJbXkgJGRvbWFpbl9saXRlcmFsID0gcXE8KD86JGZ3cz9cXFsoPzokZndzPyRk
Y29udGVudCkqXFxdJGZ3cyk+OwoJIwoJIwkjYW5kLCBmaW5hbGx5LCBhIGRvbWFpbiBpcyBl
aXRoZXIgYSBkb3RhdG9tIG9yIGEgZG9tYWlubGl0ZXJhbC4KCSMJbXkgJGRvbWFpbiA9IHFx
PCg/OiRkb3RhdG9tfCRkb21haW5fbGl0ZXJhbCk+OwoKCQkjIFJGQyAyODIxIGlzIGEgYml0
IHN0cmljdGVyIHRoYW4gUkZDIDI4MjIuIEluIGZhY3QsIGFjY29yZGluZyB0byB0aGF0IGRv
Y3VtZW50LCBhIGRvbWFpbiBtYXkgYmUgb25seQoJCSMgbGV0dGVycywgbnVtYmVycywgYW5k
IGh5cGhlbnMuIEdvIGZpZ3VyZS4gSSBrZXB0IHRoZSBvbGQgZG9tYWluIHNwZWNpZmljYXRp
b24gaW4gdGhlIGNvbW1lbnRzCgkJIyBpbW1lZGlhdGVseSBhYm92ZSBoZXJlLCBqdXN0ICdj
dXogSSB3YXMgc28gcHJvdWQgb2YgJ2VtLiA6KQoJCW15ICRkb21haW4gPSBxPFthLXpBLVow
LTlcLV0rKD86XC5bYS16QS1aMC05XC1dKykqXFwuKD86W2EtekEtWl1bYS16QS1aXSg/Olth
LXpBLVpdKD86W2EtekEtWl0oPzpbYS16QS1aXVthLXpBLVpdKT8pPyk/KT47CgoJI291ciBh
ZGRyZXNzIHNwZWMuIERlZmluZXMgdXNlckBkb21haW4uY29tCgkjbm90ZSAtIHZlcnkgaW1w
b3J0YW50LCB0aGF0IHRoZSBhZGRyX3NwZWMgaXMgd2l0aGluIGJhY2t0cmFja2luZyBwYXJl
bnRoZXNlcy4gVGhpcyB2YWx1ZSB3aWxsCgkjZ28gaW50byBlaXRoZXIgJDEgKGNvbW1vbikg
b3IgJDIgKG5vdCBxdWl0ZSBhcyBjb21tb24pLgoJI2Fsc28gbm90ZSB0aGF0IHdlIGRldmlh
dGUgZnJvbSBSRkMgMjgyMiBoZXJlLCBieSBmb3JjaW5nIHRoZSBUTEQgb2YgMiwzLDQgb3Ig
NiBjaGFyYWN0ZXJzLgoJI3RoYXQncyB3aGF0IHRoZSBpbnRlcm5ldCB1c2VzLCByZWdhcmRs
ZXNzIG9mIHdoYXQgdGhlIHNwZWMgYWxsb3dzLgoJbXkgJGFkZHJfc3BlYyA9ICcoJyAuICRs
b2NhbF9wYXJ0IC4gJ0AnIC4gJGRvbWFpbiAuICcpJzsKCgkjYSBkaXNwbGF5IG5hbWUgKGRp
c3BsYXluYW1lPGFkZHJfc3BlYz4pIGlzIGp1c3QgYSBwaHJhc2UKCW15ICRkaXNwbGF5X25h
bWUgPSAkcGhyYXNlOwoKCSNhbiBhbmdsZV9hZGRyIGlzIGp1c3QgYW4gYWRkcl9zcGVjIHN1
cnJvdW5kZWQgYnkgPCBhbmQgPiwgd2l0aCBvcHRpb25hbCBmb2xkZWQgd2hpdGUgc3BhY2UK
CSNhcm91bmQgdGhhdAoJbXkgJGFuZ2xlX2FkZHIgPSBxcVsoPzokZndzPzwkYWRkcl9zcGVj
PiRmd3M/KV07CgoJI2EgbmFtZSBhZGRyZXNzIGlzIGFuIG9wdGlvbmFsIGRpc3BsYXlfbmFt
ZSBmb2xsb3dlZCBieSBhbiBhbmdsZV9hZGRyCglteSAkbmFtZV9hZGRyID0gcXE8KD86JGRp
c3BsYXlfbmFtZT8kYW5nbGVfYWRkcik+OwoKCSMgYW5kIGEgbWFpbGJveCBpcyBlaXRoZXIg
YW4gYWRkcl9zcGVjIG9yIGEgbmFtZV9hZGRyCgkjIHRoZSBtYWlsYm94IGlzIG91ciBmaW5h
bCByZWdleCB0aGF0IHdlIHVzZSBpbiB2YWxpZF9lbWFpbAoJIwoJbXkgJG1haWxib3ggPSBx
cTwoPzokYWRkcl9zcGVjfCRuYW1lX2FkZHIpPjsKCSMKCSMjCgoJIyBhIG1haWxib3ggbGlz
dCBpcywgYXMgaXQgc291bmRzLCBhIGxpc3Qgb2YgYXQgbGVhc3Qgb25lIG1haWxib3gsIHdp
dGggYXMgbWFueSBhcyB5b3UnZCBsaWtlLCBjb21tYSBkZWxpbWl0ZWQKCW15ICRtYWlsYm94
X2xpc3QgPSBxcTwoPzokbWFpbGJveCg/OiwkbWFpbGJveCkqKT47CgoJIyBhbmQgYSBncm91
cCBpcyBhIGRpc3BsYXlfbmFtZSwgYSA6LCBhbmQgYW4gb3B0aW9uYWwgbWFpbGJveCBsaXN0
LCBlbmRlZCB3aXRoIGEgc2VtaS1jb2xvbgoJIyBUaGlzIGlzIHVzZWQgaW4gdGhlIFRvIGFj
Y2Vzc29yLCB3aGljaCBpcyBhbGxvd2VkIHRvIGNvbnRhaW4gZ3JvdXBzLgoJbXkgJGdyb3Vw
ID0gcXE8KD86JGRpc3BsYXlfbmFtZTooPzokbWFpbGJveF9saXN0fCRmd3MpPzspPjsKCj1w
b2QKCj1pdGVtIHZhbGlkX2VtYWlsCgp2YWxpZF9lbWFpbCB2YWxpZGF0ZXMgYW4gZW1haWwg
YWRkcmVzcyBhbmQgZXh0cmFjdHMgdGhlIHVzZXJAZG9tYWluLmNvbSBwYXJ0IG9mIGFuIGFk
ZHJlc3MKCiBwcmludCAkYnVsay0+dmFsaWRfZW1haWwoJ2ppbUBqaW1hbmRrb2thLmNvbScp
LT57J2V4dHJhY3RlZCd9OwkJCQkJI3ByaW50cyBqaW1AamltYW5ka29rYS5jb20KIHByaW50
ICRidWxrLT52YWxpZF9lbWFpbCgnIkppbSBUaG9tYXNvbiI8amltQGppbWFuZGtva2EuY29t
PicpLT57J2V4dHJhY3RlZCd9OwkjcHJpbnRzIGppbUBqaW1hbmRrb2thLmNvbQogcHJpbnQg
JGJ1bGstPnZhbGlkX2VtYWlsKCdqaW1AamltYW5ka29rYS5jb20nKS0+eydleHRyYWN0ZWQn
fTsJCQkJCSNwcmludHMgamltQGppbWFuZGtva2EuY29tCiBwcmludCAkYnVsay0+dmFsaWRf
ZW1haWwoJ2ppbUBAamltYW5ka29rYS5jb20nKTsJCQkJCQkJCSNwcmludHMgbm90aGluZyAo
aW52YWxpZCBhZGRyZXNzKQoKTm90ZSB0aGF0IGFzIG9mIHYzLjEwLCB2YWxpZF9lbWFpbCBy
ZXR1cm5zIGEgaGFzaCB3aXRoIHR3byBrZXlzIHVwb24gc3VjY2Vzcy4gJ29yaWdpbmFsJyBj
b250YWlucyB0aGUgYWRkcmVzcyBhcyB5b3UKcGFzc2VkIGl0IGluLCAnZXh0cmFjdGVkJyBp
cyB0aGUgYWRkcmVzcyBwZXJzb24gdGhhdCB3YXMgeWFua2VkIG91dC4KCiB7CiAJJ29yaWdp
bmFsJwk9PiAnSmltIFRob21hc29uJzxqaW1AamltYW5ka29rYS5jb20nLAogCSdleHRyYWN0
ZWQnCT0+ICdqaW1AamltYW5ka29rYS5jb20nLAogfQoKR2l2ZW4gYW4gaW52YWxpZCBhZGRy
ZXNzLCByZXR1cm5zIHVuZGVmIGFuZCBzZXRzIGFuIGVycm9yIGFzIGFsd2F5cy4KCklmIFRy
dXN0aW5nIGlzIDEsIHRoZW4gdmFsaWRfZW1haWwgb25seSByZW1vdmVzIGNvbW1lbnRzIGFu
ZCBleHRyYWN0cyB0aGUgYWRkcmVzcyBzcGVjIHBhcnQgb2YgdGhlIGVtYWlsLiBpLmUuLCBp
ZiB5b3VyIGFkZHJlc3MgaXMKCiBzb21lIG5hbWU8c29tZUBhZGRyZXNzLmNvbT4KCkl0J2xs
IGp1c3QgcmV0dXJuIHNvbWVAYWRkcmVzcy5jb20uIFRoaXMgaXMgcmVxdWlyZWQsIGJlY2F1
c2UgdmFsaWRfZW1haWwgaXMgYWxzbyB3aGVyZSB0aGUgYWRkcmVzcyBzcGVjIGlzIHZhbGlk
YXRlZC4KQXMgb2YgMy4wMCwgdmFsaWRfZW1haWwgc2hvdWxkIGJlIGZ1bGx5IFJGQyAyODIy
IGNvbXBsaWFudCwgZXhjZXB0IHdoZXJlIG90aGVyd2lzZSBub3RlZCAoc3VjaCBhcyBmb3Jj
aW5nIGEgdmFsaWQgZG9tYWluIGFzIHBlciBSRkMgMjgyMSkuCkFuZCBhbHNvIGFzIG9mIDMu
MDAsIFRydXN0aW5nIGlzIGV2ZW4gbW9yZSB0cnVzdGluZyBhbmQgaGFzIGEgZmFzdGVyIHJl
dHVybi4gVGhlcmUgYXJlIHNwZWVkIHJlYXNvbnMgdG8gaGF2ZSBUcnVzdGluZyBzZXQKdG8g
MSAoc3VjaCBhcyBub3QgaGF2aW5nIHRvIGNoZWNrIHRoZSB2YWxpZGl0eSBvZiBlYWNoIGVt
YWlsIGFkZHJlc3MpLCBidXQgaWYgeW91IGRvIHRoYXQgdGhlbiB5b3UgbXVzdCBiZSBCPHBv
c2l0aXZlPiB0aGF0CkI8YWxsPiBvZiB5b3VyIGFkZHJlc3NlcyBhcmUgMTAwJSB2YWxpZC4g
SWYgeW91IGhhdmUgQjxhbnk+IGFkZHJlc3NlcyBpbiB5b3VyIGxpc3QgdGhhdCBhcmUgaW52
YWxpZCBhbmQgVHJ1c3RpbmcgaXMgc2V0IHRvIDEsCnRoZW4geW91IG1heSBoYXZlIGJhZCB0
aGluZ3MgaGFwcGVuLiBZb3UgaGF2ZSBiZWVuIHdhcm5lZC4KClRoaXMgbWV0aG9kIGlzIGtu
b3duIHRvIGJlIGFibGUgdG8gcmV0dXJuOgoKIE1CMDA2IC0gbm8gZW1haWwgYWRkcmVzcwog
TUIwMDcgLSBpbnZhbGlkIGVtYWlsIGFkZHJlc3MKCj1jdXQKCglzdWIgdmFsaWRfZW1haWwg
ewoKCQlteSAkc2VsZgkJCT0gc2hpZnQ7CgkJbXkgJGVtYWlsCQkJPSBzaGlmdDsKCQlteSAk
YWxsb3dfZ3JvdXBzCT0gc2hpZnQ7CgoJCW15ICRyZXR1cm5faGFzaCAJPSB7CgkJCSdvcmln
aW5hbCcgPT4gJGVtYWlsCgkJfTsKCgkJcmV0dXJuICRzZWxmLT5lcnJvcigiQ2Fubm90IHZh
bGlkYXRlIHcvbyBlbWFpbCBhZGRyZXNzIiwgIk1CMDA2IikgdW5sZXNzICRlbWFpbDsKCgkJ
JGVtYWlsID0gJHNlbGYtPl9jb21tZW50X2tpbGxlcigkZW1haWwpOwkJCQkjTm8gb25lIGVs
c2UgaGFuZGxlcyBjb21tZW50cywgdG8gbXkga25vd2xlZGdlLiBDb29sLCBodWg/ICA6KQoK
CQkjIGlmIHdlJ3JlIHRydXN0aW5nLCB0cml2aWFsbHkgZXh0cmFjdCB0aGUgYWRkcmVzcy1z
cGVjIGFuZCByZXR1cm4gaXQKCQlpZiAoJHNlbGYtPlRydXN0aW5nKCdlbWFpbCcpKXsKCQkJ
JGVtYWlsID1+IHMvLis8KC4rKT4vJDEvZzsKCQkJJHJldHVybl9oYXNoLT57J2V4dHJhY3Rl
ZCd9ID0gJGVtYWlsOwoJCQlyZXR1cm4gJHJldHVybl9oYXNoOwoJCX07CgoJCSNva2F5LCBj
aGVjayBvdXIgZW1haWwgYWRkcmVzcwoJCWlmICgkZW1haWwgPX4gbSFeJG1haWxib3gkIW8p
ewoJCQkkcmV0dXJuX2hhc2gtPnsnZXh0cmFjdGVkJ30gPSAkMSB8fCAkMjsJI291ciBhZGRy
ZXNzIGNvdWxkIGJlIGluIGVpdGhlciBwbGFjZTsKCQkJcmV0dXJuICRyZXR1cm5faGFzaDsK
CQl9CgkJI2lmIGl0IGZhaWxzIGFzIGFuIGVtYWlsIGFkZHJlc3MgYW5kIHdlIGFsbG93IGdy
b3Vwcywgc2VlIGlmIHdlIHdlcmUgcGFzc2VkIGEgZ3JvdXAKCQllbHNpZiAoJGFsbG93X2dy
b3VwcyAmJiAkZW1haWwgPX4gbSFeJGdyb3VwJCFvKXsKCQkJI3RoZSAkZ3JvdXAgcmVnZXgg
Y2FuJ3QgZXh0cmFjdCBlbWFpbHMsIHNvIHdlJ2xsIGp1c3QgcmV0dXJuIHRoZSB3aG9sZSB0
aGluZy4KCQkJJHJldHVybl9oYXNoLT57J2V4dHJhY3RlZCd9ID0gJGVtYWlsOwoJCQlyZXR1
cm4gJHJldHVybl9oYXNoOwoJCX0KCQkjZmluYWxseSwgb3RoZXJ3aXNlIGdpdmUgYW4gZXJy
b3IKCQllbHNlIHsKCQkJJHNlbGYtPmxvZ1RvRmlsZSgkc2VsZi0+QkFELCBcJGVtYWlsKTsK
CQkJcmV0dXJuICRzZWxmLT5lcnJvcigiSW52YWxpZCBlbWFpbCBhZGRyZXNzIDogJGVtYWls
IiwgIk1CMDA3Iik7CgkJfTsKCX07CgoJIyBfY29tbWVudF9raWxsZXIgaXMgdXNlZCBpbnRl
cm5hbGx5IGJ5IHZhbGlkX2VtYWlsLCBfY29tbWVudF9raWxsZXIgZG9lcyB3aGF0IHlvdSdk
IGV4cGVjdCBmcm9tIGl0LCBpdCByZW1vdmVzCgkjIGNvbW1lbnRzIGZyb20gZW1haWwgYWRk
cmVzc2VzCgoJc3ViIF9jb21tZW50X2tpbGxlciB7CgoJCW15ICRzZWxmICA9IHNoaWZ0OwoJ
CW15ICRlbWFpbCA9IHNoaWZ0OwoKCQkjY29tbWVudCB0ZXh0IGlzIGFueXRoaW5nIGluIEFT
Q0lJLCBleGNlcHQgZm9yIFwsICgsIGFuZCApCgkJbXkgJGN0ZXh0ID0gJygnIC4gJ1snIC4g
JG5vX3dzX2N0bCAuIHE8XHgyMS1ceDI3XHgyQS1ceDVCXHg1RC1ceDdFPiAuICddJyAuICcp
JzsKCgkJI3RoZSBjb250ZW50IG9mIGEgY29tbWVudCBpcyBlaXRoZXIgY3RleHQgb3IgYSBx
dW90ZWQgcGFpcgoJCSN3ZSBhcmUgZGV2aWF0aW5nIGZyb20gUkZDIDI4MjIsIGJlY2F1c2Ug
Y29tbWVudHMgY2FuIG5lc3QgYXJiaXRyYXJpbHkuIEJ1dCB3ZSBkb24ndCBhbGxvdyB0aGF0
LgoJCW15ICRjY29udGVudCA9IHFxPCgkY3RleHR8JHF1b3RlZF9wYWlyKT47CSN8JGNvbW1l
bnQsIGJ1dCB3ZSBkb24ndCBhbGxvdyBuZXN0aW5nIGhlcmUKCgkJI2FuZCBmaW5hbGx5LCBh
IGNvbW1lbnQgaXMgYSAoIGZvbGxvd2VkIGJ5IGFyYml0cmFyeSBjY29udGVudCwgZm9sbG93
ZWQgYnkgYW5vdGhlciApCgkJbXkgJGNvbW1lbnQgPSAnKCcgLiAnXCgnIC4gcXE8KCRmd3M/
JGNjb250ZW50KSokZndzPz4gLiAnXCknIC4gJyknOwoKCQl3aGlsZSAoJGVtYWlsID1+IC8k
Y29tbWVudC9vKXskZW1haWwgPX4gcy8kY29tbWVudC8vZ299OwoKCQlyZXR1cm4gJGVtYWls
OwoJfTsKCn07CgojIF92YWxpZF9wcmVjZWRlbmNlIGlzIHVzZWQgaW50ZXJuYWxseSB0byBj
aGVjayB3aGV0aGVyIGEgcHJlY2VkZW5jZSBpcyB2YWxpZCwgaS5lLiwgbGlzdCwgYnVsaywg
b3IganVuawojIEl0IGlzIGNhbGxlZCBieSB0aGUgUHJlY2VkZW5jZSB3cmFwcGVyIHRvIHRo
ZSBfUHJlY2VkZW5jZSBhdHRyaWJ1dGUKCnN1YiBfdmFsaWRfcHJlY2VkZW5jZSB7CglteSAk
c2VsZgk9IHNoaWZ0OwoJbXkgJHZhbHVlCT0gc2hpZnQ7CgoJaWYgKCRzZWxmLT5UcnVzdGlu
ZygncHJlY2VkZW5jZScpIHx8IChkZWZpbmVkICR2YWx1ZSAmJiAkdmFsdWUgPX4gL2xpc3R8
YnVsa3xqdW5rL2kpKXsKCQlyZXR1cm4gMTsKCX0gZWxzZSB7CgkJJHZhbHVlID0gJycgdW5s
ZXNzIGRlZmluZWQgJHZhbHVlOwoJCXJldHVybiAkc2VsZi0+ZXJyb3IoIkludmFsaWQgcHJl
Y2VkZW5jZSAoJHZhbHVlKSA6IG9ubHkgJ2xpc3QnLCAnYnVsaycsIG9yICdqdW5rJyIsICJN
QjAwOCIpOwoJfTsKfTsKCiMvdmFsaWRhdGlvbgoKI25vdywgZm9yIHRoZSBtZXRob2RzCgo9
cG9kCgo9aXRlbSBsY19kb21haW4KCmdpdmVuIGFuIGVtYWlsIGFkZHJlc3MsIGxvd2VyY2Fz
ZXMgdGhlIGRvbWFpbi4gTWFpbmx5IHVzZWQgaW50ZXJuYWxseSwgYnV0IEkgdGhvdWdodCBp
dCBtaWdodCBiZSB1c2VmdWwgZXh0ZXJuYWxseSBhcyB3ZWxsLgoKIHByaW50ICRzZWxmLT5s
Y19kb21haW4oJ0ppbUBKaW1BTkRLb2thLmNvbScpOwkjcHJpbnRzIEppbUBqaW1hbmRrb2th
LmNvbQogcHJpbnQgJHNlbGYtPmxjX2RvbWFpbignSklNQEpJTUFOREtPS0EuY29tJyk7CSNw
cmludHMgSklNQGppbWFuZGtva2EuY29tCiBwcmludCAkc2VsZi0+bGNfZG9tYWluKCdqaW1A
amltYW5ka29rYS5jb20nKTsJI3ByaW50cyBqaW1AamltYW5ka29rYS5jb20KClRoaXMgbWV0
aG9kIGlzIGtub3duIHRvIGJlIGFibGUgdG8gcmV0dXJuOgoKIE1CMDA5IC0gY2Fubm90IGxv
d2VyY2FzZSBkb21haW4gdy9vIGVtYWlsCgo9Y3V0CgpzdWIgbGNfZG9tYWluIHsKCgkjbG93
ZXJjYXNlIHRoZSBkb21haW4gcGFydCwgYnV0IF9ub3RfIHRoZSBsb2NhbCBwYXJ0LiAgV2h5
IG5vdD8KCSNSZWFkIHRoZSBzcGVjcywgeW91IGNhbid0IG1ha2UgYXNzdW1wdGlvbnMgYWJv
dXQgdGhlIGxvY2FsIHBhcnQsIGl0IGlzIGNhc2Ugc2Vuc2l0aXZlCgkjZXZlbiB0aG91Z2gg
OTkuOTk5JSBvZiB0aGUgbmV0IHRyZWF0cyBpdCBhcyBpbnNlbnNpdGl2ZS4KCglteSAkc2Vs
Zgk9IHNoaWZ0OwoKCW15ICRlbWFpbAk9IHNoaWZ0IHx8IHJldHVybiAkc2VsZi0+ZXJyb3Io
IkNhbm5vdCBsb3dlcmNhc2UgZG9tYWluIHdpdGggbm8gZW1haWwgYWRkcmVzcyIsICJNQjAw
OSIpOwoKCShteSAkbGMgPSAkZW1haWwpID1+IHMvXiguKylAKC4rKSQvJDFAXEwkMi87CgoJ
cmV0dXJuICRsYzsKCn07Cgo9cG9kCgo9aXRlbSBzZXREdXBsaWNhdGUKCnNldHMgYW4gZW1h
aWwgYWRkcmVzcyBhcyBhIGR1cGxpY2F0ZS4KCiAkYnVsay0+c2V0RHVwbGljYXRlKCRlbWFp
bCk7CgpvbmNlIGFuIGFkZHJlc3MgaXMgc2V0IGFzIGEgZHVwbGljYXRlLCB0aGVuIGlzRHVw
bGljYXRlIHdpbGwgcmV0dXJuIGEgdHJ1ZSB2YWx1ZSBmb3IgdGhhdCBhZGRyZXNzCgogcHJp
bnQgJGJ1bGstPmlzRHVwbGljYXRlKCRlbWFpbDIpOwkjcHJpbnRzIDAKICRidWxrLT5zZXRE
dXBsaWNhdGUoJGVtYWlsMik7CiBwcmludCAkYnVsay0+aXNEdXBsaWNhdGUoJGVtYWlsMik7
CSNwcmludHMgMQoKVGhpcyBpcyBtYWlubHkgdXNlZCBpbnRlcm5hbGx5LCBidXQgSSBkZWNp
ZGVkIHRvIG1ha2UgaXQgZXh0ZXJuYWwgYW55d2F5LgoKc2V0RHVwbGljYXRlIHdpbGwgYWx3
YXlzIHJldHVybiAxIGlmIHlvdSBoYXZlIFRydXN0aW5nKCdkdXBsaWNhdGVzJykgc2V0LgoK
QmUgd2FybmVkIHRoYXQgdGhlcmUgaXMgYSBwZXJmb3JtYW5jZSBoaXQgdG8gdXNpbmcgdGhp
cywgc2luY2UgaXQgd2lsbCBldmVudHVhbGx5IHN0b3JlIHlvdXIgZW50aXJlIGxpc3QgaW5z
aWRlIGFuCmVudGlyZSBoYXNocmVmIGluIG1lbW9yeS4gWW91J3JlIGluIG11Y2ggYmV0dGVy
IHNoYXBlIGlmIHlvdSB3ZWVkIG91dCB0aGUgZHVwbGljYXRlcyBpbiBhZHZhbmNlIGFuZCB0
aGVuIHNldCBUcnVzdGluZygnZHVwbGljYXRlcycgPT4gMSkKdG8gc2tpcCB0aGUgY2hlY2sg
YW5kIHNraXAgc3RvcmluZyB0aGUgdmFsdWVzIGluIHRoZSBoYXNocmVmLgoKQnV0IGlmIHlv
dSBoYXZlIHRvIHVzZSB0aGlzIHRvIHdlZWQgb3V0IHZhbHVlcywgZ28gdG8gdG93bi4KClRo
aXMgbWV0aG9kIGlzIGtub3duIHRvIGJlIGFibGUgdG8gcmV0dXJuOgoKIE1CMDEwIC0gY2Fu
bm90IHNldCBkdXBsaWNhdGUgdy9vIGVtYWlsCj1jdXQKCnN1YiBzZXREdXBsaWNhdGUgewoJ
bXkgJHNlbGYJPSBzaGlmdDsKCW15ICRlbWFpbAk9IHNoaWZ0IHx8IHJldHVybiAkc2VsZi0+
ZXJyb3IoIkNhbm5vdCBzZXQgZHVwbGljYXRlIHdpdGhvdXQgZW1haWwiLCAiTUIwMTAiKTsK
CglyZXR1cm4gMSBpZiAkc2VsZi0+VHJ1c3RpbmcoJ2R1cGxpY2F0ZXMnKTsKCglpZiAoISAk
c2VsZi0+VHJ1c3RpbmcoJ2Jhbm5lZCcpKSB7CgkJJHNlbGYtPl9kdXBsaWNhdGVzLT57bGMg
JGVtYWlsfSA9IDE7Cgl9CgllbHNlIHsKCQkkc2VsZi0+X2R1cGxpY2F0ZXMtPnskc2VsZi0+
bGNfZG9tYWluKCRlbWFpbCl9ID0gMTsKCX07CgoJcmV0dXJuIDE7Cn07Cgo9cG9kCgo9aXRl
bSBpc0R1cGxpY2F0ZQoKcmV0dXJucyBhIGJvb2xlYW4gdmFsdWUgYXMgdG8gd2hldGhlciBh
biBlbWFpbCBhZGRyZXNzIGlzIGEgZHVwbGljYXRlCgogcHJpbnQgJGJ1bGstPmlzRHVwbGlj
YXRlKCRlbWFpbCk7ICNwcmludHMgMCBvciAxCgpvbmNlIGFuIGFkZHJlc3MgaXMgc2V0IGFz
IGEgZHVwbGljYXRlLCB0aGVuIGlzRHVwbGljYXRlIHdpbGwgcmV0dXJuIGEgdHJ1ZSB2YWx1
ZSBmb3IgdGhhdCBhZGRyZXNzCgogcHJpbnQgJGJ1bGstPmlzRHVwbGljYXRlKCRlbWFpbDIp
OwkjcHJpbnRzIDAKICRidWxrLT5zZXREdXBsaWNhdGUoJGVtYWlsMik7CiBwcmludCAkYnVs
ay0+aXNEdXBsaWNhdGUoJGVtYWlsMik7CSNwcmludHMgMQoKVGhpcyBpcyBtYWlubHkgdXNl
ZCBpbnRlcm5hbGx5LCBidXQgSSBkZWNpZGVkIHRvIG1ha2UgaXQgZXh0ZXJuYWwgYW55d2F5
LgoKaXNEdXBsaWNhdGUgd2lsbCBhbHdheXMgcmV0dXJuIDAgaWYgeW91IGhhdmUgVHJ1c3Rp
bmcoJ2R1cGxpY2F0ZXMnID0+IDEpIHNldC4KCkJlIHdhcm5lZCB0aGF0IHRoZXJlIGlzIGEg
cGVyZm9ybWFuY2UgaGl0IHRvIHVzaW5nIHRoaXMsIHNpbmNlIGl0IHdpbGwgZXZlbnR1YWxs
eSBzdG9yZSB5b3VyIGVudGlyZSBsaXN0IGluc2lkZSBhbgplbnRpcmUgaGFzaHJlZiBpbiBt
ZW1vcnkuIFlvdSdyZSBpbiBtdWNoIGJldHRlciBzaGFwZSBpZiB5b3Ugd2VlZCBvdXQgdGhl
IGR1cGxpY2F0ZXMgaW4gYWR2YW5jZSBhbmQgdGhlbiBzZXQgVHJ1c3RpbmcoJ2R1cGxpY2F0
ZXMnID0+IDEpCnRvIHNraXAgdGhlIGNoZWNrIGFuZCBza2lwIHN0b3JpbmcgdGhlIHZhbHVl
cyBpbiB0aGUgaGFzaHJlZi4KCkJ1dCBpZiB5b3UgaGF2ZSB0byB1c2UgdGhpcyB0byB3ZWVk
IG91dCB2YWx1ZXMsIGdvIHRvIHRvd24uCgo9Y3V0CgpzdWIgaXNEdXBsaWNhdGUgewoJbXkg
JHNlbGYJPSBzaGlmdDsKCW15ICRlbWFpbAk9IHNoaWZ0IHx8IHJldHVybiAkc2VsZi0+dW5k
ZWYoIkNhbm5vdCBjaGVjayBkdXBsaWNhdGUgd2l0aG91dCBlbWFpbCIsICJNQjAxNSIpOwoK
CXJldHVybiAwIGlmICRzZWxmLT5UcnVzdGluZygnZHVwbGljYXRlcycpOwoKCWlmICghICRz
ZWxmLT5UcnVzdGluZygnYmFubmVkJykpewoJCXJldHVybiAkc2VsZi0+X2R1cGxpY2F0ZXMt
PntsYyAkZW1haWx9OwoJfQoJZWxzZSB7CgkJcmV0dXJuICRzZWxmLT5fZHVwbGljYXRlcy0+
eyRzZWxmLT5sY19kb21haW4oJGVtYWlsKX07Cgl9Owp9OwoKPXBvZAoKPWl0ZW0gaXNCYW5u
ZWQKCnJldHVybnMgYSBib29sZWFuIHZhbHVlIGFzIHRvIHdoZXRoZXIgYW4gZW1haWwgYWRk
cmVzcyAob3IgZG9tYWluKSBpcyBiYW5uZWQgb3Igbm90CgogJGJ1bGstPmlzQmFubmVkKCRl
bWFpbCk7CSNwcmludHMgMCBvciAxCiAkYnVsay0+aXNCYW5uZWQoJGRvbWFpbik7CSNwcmlu
dHMgMCBvciAxCgotPmlzQmFubmVkIGdvZXMgb2ZmIG9mIHRoZSB2YWx1ZXMgcG9wdWxhdGVk
IHZpYSB0aGUgYmFubmVkIGF0dHJpYnV0ZQoKVGhpcyBpcyBtYWlubHkgdXNlZCBpbnRlcm5h
bGx5LCBidXQgSSBkZWNpZGVkIHRvIG1ha2UgaXQgZXh0ZXJuYWwgYW55d2F5LgoKPWN1dAoK
c3ViIGlzQmFubmVkIHsKCW15ICRzZWxmCT0gc2hpZnQ7CglteSAkZW1haWwJPSBzaGlmdCB8
fCByZXR1cm4gJHNlbGYtPnVuZGVmKCJDYW5ub3QgY2hlY2sgYmFubmVkLW5lc3Mgd2l0aG91
dCBlbWFpbCIsICJNQjAxNiIpOwoKCShteSAkZG9tYWluID0gJGVtYWlsKSA9fiBzL14uK0Av
LzsKCglyZXR1cm4gMiBpZiAkc2VsZi0+YmFubmVkLT57bGMgJGRvbWFpbn07CgoJaWYgKCEg
JHNlbGYtPlRydXN0aW5nKCdiYW5uZWQnKSl7CgkJcmV0dXJuICRzZWxmLT5iYW5uZWQtPnts
YyAkZW1haWx9OwoJfQoJZWxzZSB7CgkJcmV0dXJuICRzZWxmLT5iYW5uZWQtPnskc2VsZi0+
bGNfZG9tYWluKCRlbWFpbCl9OwoJfTsKfTsKCj1wb2QKCj1pdGVtIG5leHRTZXJ2ZXIKCkFn
YWluLCBtYWlubHkgdXNlZCBpbnRlcm5hbGx5LgoKLT5uZXh0U2VydmVyIHdpbGwgaXRlcmF0
ZSBvdmVyIHRoZSAtPnNlcnZlcnMgYXJyYXkgYW5kIHJldHVybiB0aGUgbmV4dCB2YWxpZCwg
Y29ubmVjdGVkIHNlcnZlci4gSWYgYSBzZXJ2ZXIgaXMKbm90IGNvbm5lY3RlZCwgLT5uZXh0
U2VydmVyIHdpbGwgdHJ5IHRvIG1ha2UgaXQgY29ubmVjdC4gSWYgdGhlIHNlcnZlciBjYW5u
b3QgY29ubmVjdCwgaXQgd2lsbCBnbyBvbiB0byB0aGUgbmV4dCBvbmUuCgpPbmNlIGFsbCBz
ZXJ2ZXJzIGFyZSBleGhhdXN0ZWQsIGl0IHJldHVybnMgdW5kZWYuCgpuZXh0U2VydmVyIGlz
IGNhbGxlZCBpZiB0aGUgcHJlc2VudCBzZXJ2ZXIgb2JqZWN0IGhhcyByZWFjaGVkIG9uZSBv
ZiBpdHMgaW50ZXJuYWwgbGltaXRzLiBTZWUgTWFpbDo6QnVsa21haWw6OlNlcnZlciBmb3Ig
bW9yZQppbmZvcm1hdGlvbiBvbiBzZXJ2ZXIgbGltaXRzLgoKVGhpcyBtZXRob2QgaXMga25v
d24gdG8gYmUgYWJsZSB0byByZXR1cm46CgogTUIwMTEgLSBObyBzZXJ2ZXJzICgtPnNlcnZl
cnMgYXJyYXkgaXMgZW1wdHkpCiBNQjAxMiAtIE5vIGF2YWlsYWJsZSBzZXJ2ZXJzIChjYW5u
b3QgY29ubmVjdCB0byBhbnkgc2VydmVycykKCj1jdXQKCnN1YiBuZXh0U2VydmVyIHsKCW15
ICRzZWxmID0gc2hpZnQ7CgoJcmV0dXJuICRzZWxmLT5lcnJvcigiTm8gc2VydmVycyIsICJN
QjAxMSIpIHVubGVzcyAkc2VsZi0+c2VydmVycyAmJiBAeyRzZWxmLT5zZXJ2ZXJzfTsKCglt
eSAkb2xkX2lkeCA9ICRzZWxmLT5fc2VydmVyX2luZGV4OwoJbXkgJG5ld19pZHggPSAoJG9s
ZF9pZHggKyAxKSAlIEB7JHNlbGYtPnNlcnZlcnN9OwoKCSNzcGVjaWFsIGNhc2UgZm9yIGxv
b3AgcHJldmVudGlvbi4gSW50ZXJuYWxseSwgd2UgaW5pdGlhbGx5IHN0YXJ0IEAgLTEsIHRv
IHN0YXJ0IG9mZiBhdCAwIGluc3RlYWQgb2YgMS4KCSRvbGRfaWR4ID0gMCBpZiAkbmV3X2lk
eCA9PSAwOwoKCXdoaWxlICgxKXsKCQkjcHJldmVudCBpbmZpbml0ZSBsb29wcy4gSWYgd2Ug
Z2V0IGJhY2sgdG8gdGhlIGJlZ2lubmluZyBBTkQgdGhhdCBzZXJ2ZXIgaXMgd29ydGhsZXNz
ICgibm90IG5vdCB3b3J0aGxlc3MiKSwgdGhlbgoJCSN3ZSBjYW4ndCBjb25uZWN0IHRvIGFu
eSBvZiAnZW0uCgkJaWYgKCRuZXdfaWR4ID09ICRvbGRfaWR4ICYmICEgJHNlbGYtPnNlcnZl
cnMtPlskbmV3X2lkeF0tPl9ub3Rfd29ydGhsZXNzKXsKCQkJcmV0dXJuICRzZWxmLT5lcnJv
cigiTm8gYXZhaWxhYmxlIHNlcnZlcnMiLCAiTUIwMTIiKTsKCQl9CgkJZWxzZSB7CgkJCSNp
ZiB3ZSdyZSBjb25uZWN0ZWQsIHdlJ3JlIGdvbGRlbi4KCQkJaWYgKCRzZWxmLT5zZXJ2ZXJz
LT5bJG5ld19pZHhdLT5jb25uZWN0ZWQpewoJCQkJJHNlbGYtPl9zZXJ2ZXJfaW5kZXgoJG5l
d19pZHgpOwoJCQkJcmV0dXJuICRzZWxmLT5zZXJ2ZXJzLT5bJG5ld19pZHhdOwoJCQl9CgkJ
CSNvdGhlcndpc2UsIHRyeSB0byBjb25uZWN0CgkJCWVsc2UgewoJCQkJJHNlbGYtPnNlcnZl
cnMtPlskbmV3X2lkeF0tPmNvbm5lY3Q7CgoJCQkJI2lmIHdlIHN1Y2NlZWQsIHdlJ3JlIGdv
bGRlbgoJCQkJaWYgKCRzZWxmLT5zZXJ2ZXJzLT5bJG5ld19pZHhdLT5jb25uZWN0ZWQpewoJ
CQkJCSRzZWxmLT5fc2VydmVyX2luZGV4KCRuZXdfaWR4KTsKCQkJCQlyZXR1cm4gJHNlbGYt
PnNlcnZlcnMtPlskbmV3X2lkeF07CgkJCQl9CgkJCX0KCQl9OwoKCQkjb3RoZXJ3aXNlLCBu
byBtYXR0ZXIgd2hhdCwgaWYgd2UncmUgZG93biBoZXJlIHdlIHdhbnQgdG8gbG9vayBhdCB0
aGUgbmV4dCBzZXJ2ZXIgaW4gdGhlIGxpc3QKCQkkbmV3X2lkeCA9ICgkbmV3X2lkeCArIDEp
ICUgQHskc2VsZi0+c2VydmVyc307Cgl9OwoKfTsKCj1wb2QKCj1pdGVtIGV4dHJhY3RFbWFp
bAoKVGhlIGV4dHJhY3QgbWV0aG9kcyByZXR1cm4gcmVzdWx0cyBlcXVpdmFsZW50IHRvIHRo
ZSByZXR1cm4gb2YgdmFsaWRfZW1haWwKCmV4dHJhY3RzIHRoZSBlbWFpbCBhZGRyZXNzIGZy
b20gdGhlIGRhdGEgcGFzc2VkIGluIHRoZSBidWxrbWFpbCBvYmplY3QuIE5vdCBuZWNlc3Nh
cnkgaW4gTWFpbDo6QnVsa21haWwsIHNpbmNlIGFsbCBpdApkb2VzIGluIGhlcmUgaXMgcmVm
bGVjdCB0aHJvdWdoIHRoZSBzYW1lIHZhbHVlIHRoYXQgaXMgcGFzc2VkLgoKVGhpcyB3aWxs
IGJlIHZlcnkgaW1wb3J0YW50IGluIGEgc3ViY2xhc3MsIHRob3VnaC4gZ2V0TmV4dExpbmUg
bWlnaHQgcmV0dXJuIHZhbHVlcyBiZXlvbmQganVzdCBzaW1wbGUgZW1haWwgYWRkcmVzc2Vz
CmluIHN1YmNsYXNzZXMsIGhhc2hlcywgb2JqZWN0cywgd2hhdGV2ZXIuIFlvdSBuYW1lIGl0
LiBJbiB0aGF0IGNhc2UsIGV4dHJhY3RFbWFpbCBpcyBuZWNlc3NhcnkgdG8gZmluZCB0aGUg
YWN0dWFsIGVtYWlsCmFkZHJlc3Mgb3V0IG9mIHdoYXRldmVyIGl0IGlzIHRoYXQgd2FzIHJl
dHVybmVkIGZyb20gZ2V0TmV4dExpbmUoKS4KCkJ1dCBoZXJlPyBOb3RoaW5nIHRvIHdvcnJ5
IGFib3V0LgoKVGhpcyBtZXRob2QgaXMga25vd24gdG8gYmUgYWJsZSB0byByZXR1cm46Cgog
TUIwMTMgLSBjYW5ub3QgZXh0cmFjdCBlbWFpbCB3L28gZW1haWwKCj1jdXQKCnN1YiBleHRy
YWN0RW1haWwgewoJbXkgJHNlbGYJPSBzaGlmdDsKCW15ICRlbWFpbAk9IHNoaWZ0IHx8IHJl
dHVybiAkc2VsZi0+ZXJyb3IoIkNhbm5vdCBleHRyYWN0IGVtYWlsIHcvbyBlbWFpbCIsICJN
QjAxMyIpOwoKCXJldHVybiAkc2VsZi0+dmFsaWRfZW1haWwoJCRlbWFpbCk7Cgp9OwoKPXBv
ZAoKPWl0ZW0gZXh0cmFjdFNlbmRlcgoKVGhlIGV4dHJhY3QgbWV0aG9kcyByZXR1cm4gcmVz
dWx0cyBlcXVpdmFsZW50IHRvIHRoZSByZXR1cm4gb2YgdmFsaWRfZW1haWwKCmV4dHJhY3Rz
IHRoZSBzZW5kZXIgb2YgdGhlIG1lc3NhZ2UgZnJvbSB0aGUgZGF0YSBwYXNzZWQgaW4gdGhl
IGJ1bGttYWlsIG9iamVjdC4gTm90IG5lY2Vzc2FyeSBpbiBNYWlsOjpCdWxrbWFpbCwgc2lu
Y2UKYWxsIGl0IGRvZXMgaW4gaGVyZSBpcyByZXR1cm4gZWl0aGVyIHRoZSBCdWxrbWFpbCBv
YmplY3QncyBTZW5kZXIgb3IgaXRzIEZyb20gZmllbGQuCgpUaGlzIHdpbGwgYmUgdmVyeSBp
bXBvcnRhbnQgaW4gYSBzdWJjbGFzcywgdGhvdWdoLiBnZXROZXh0TGluZSBtaWdodCByZXR1
cm4gdmFsdWVzIGJleW9uZCBqdXN0IHNpbXBsZSBlbWFpbCBhZGRyZXNzZXMKaW4gc3ViY2xh
c3NlcyAtIGhhc2hlcywgb2JqZWN0LCB3aGF0ZXZlci4gWW91IG5hbWUgaXQuIEluIHRoYXQg
Y2FzZSwgZXh0cmFjdEVtYWlsIGlzIG5lY2Vzc2FyeSB0byBmaW5kIHRoZSBhY3R1YWwgZW1h
aWwKYWRkcmVzcyBvdXQgb2Ygd2hhdGV2ZXIgaXQgaXMgdGhhdCB3YXMgcmV0dXJuZWQgZnJv
bSBnZXROZXh0TGluZSgpLgoKQnV0IGhlcmU/IE5vdGhpbmcgdG8gd29ycnkgYWJvdXQuCgo9
Y3V0CgpzdWIgZXh0cmFjdFNlbmRlciB7CglteSAkc2VsZiA9IHNoaWZ0OwoKCSN3ZSBjaGVh
dCBsaWtlIGEgbWFkbWFuIGluIHRoaXMgbWV0aG9kLiBXZSAta25vdy0gdGhhdCB0aGUgU2Vu
ZGVyIGFuZCB0aGUgRnJvbSBhcmUgdmFsaWQsIHNpbmNlIHdlIHZhbGlkYXRlZAoJI3RoZW0g
YmVmb3JlIHRoZXkncmUgaW5zZXJlZC4gU28gd2UgZG8gdGhlIHRyaXZpYWwgZXh0cmFjdCBh
bmQgcmV0dXJuIHRoYXQgd2F5LgoKCW15ICRzZW5kZXIgPSAkc2VsZi0+U2VuZGVyIHx8ICRz
ZWxmLT5Gcm9tOwoJbXkgJHJldHVybl9oYXNoID0geydvcmlnaW5hbCcgPT4gJHNlbmRlcn07
Cgkkc2VuZGVyID1+IHMvLis8KC4rKT4vJDEvZzsKCSRyZXR1cm5faGFzaC0+eydleHRyYWN0
ZWQnfSA9ICRzZW5kZXI7CglyZXR1cm4gJHJldHVybl9oYXNoOwp9OwoKPXBvZAoKPWl0ZW0g
ZXh0cmFjdFJlcGx5VG8KClRoZSBleHRyYWN0IG1ldGhvZHMgcmV0dXJuIHJlc3VsdHMgZXF1
aXZhbGVudCB0byB0aGUgcmV0dXJuIG9mIHZhbGlkX2VtYWlsCgpleHRyYWN0cyB0aGUgUmVw
bHktVG8gb2YgdGhlIG1lc3NhZ2UgZnJvbSB0aGUgZGF0YSBwYXNzZWQgaW4gdGhlIGJ1bGtt
YWlsIG9iamVjdC4gTm90IG5lY2Vzc2FyeSBpbiBNYWlsOjpCdWxrbWFpbCwgc2luY2UKYWxs
IGl0IGRvZXMgaW4gaGVyZSBpcyByZXR1cm4gZWl0aGVyIHRoZSBCdWxrbWFpbCBvYmplY3Qn
cyBTZW5kZXIgb3IgaXRzIEZyb20gZmllbGQuCgpUaGlzIHdpbGwgYmUgdmVyeSBpbXBvcnRh
bnQgaW4gYSBzdWJjbGFzcywgdGhvdWdoLiBnZXROZXh0TGluZSBtaWdodCByZXR1cm4gdmFs
dWVzIGJleW9uZCBqdXN0IHNpbXBsZSBlbWFpbCBhZGRyZXNzZXMKaW4gc3ViY2xhc3NlcyAt
IGhhc2hlcywgb2JqZWN0LCB3aGF0ZXZlci4gWW91IG5hbWUgaXQuIEluIHRoYXQgY2FzZSwg
ZXh0cmFjdEVtYWlsIGlzIG5lY2Vzc2FyeSB0byBmaW5kIHRoZSBhY3R1YWwgZW1haWwKYWRk
cmVzcyBvdXQgb2Ygd2hhdGV2ZXIgaXQgaXMgdGhhdCB3YXMgcmV0dXJuZWQgZnJvbSBnZXRO
ZXh0TGluZSgpLgoKQnV0IGhlcmU/IE5vdGhpbmcgdG8gd29ycnkgYWJvdXQuCgo9Y3V0Cgpz
dWIgZXh0cmFjdFJlcGx5VG8gewoJbXkgJHNlbGYgPSBzaGlmdDsKCgkjd2UgY2hlYXQgbGlr
ZSBhIG1hZG1hbiBpbiB0aGlzIG1ldGhvZC4gV2UgLWtub3ctIHRoYXQgdGhlIFNlbmRlciBh
bmQgdGhlIEZyb20gYXJlIHZhbGlkLCBzaW5jZSB3ZSB2YWxpZGF0ZWQKCSN0aGVtIGJlZm9y
ZSB0aGV5J3JlIGluc2VyZWQuIFNvIHdlIGRvIHRoZSB0cml2aWFsIGV4dHJhY3QgYW5kIHJl
dHVybiB0aGF0IHdheS4KCglteSAkcmVwbHl0byA9ICRzZWxmLT5SZXBseVRvIHx8ICRzZWxm
LT5Gcm9tOwoJbXkgJHJldHVybl9oYXNoID0geydvcmlnaW5hbCcgPT4gJHJlcGx5dG99OwoJ
JHJlcGx5dG8gPX4gcy8uKzwoLispPi8kMS9nOwoJJHJldHVybl9oYXNoLT57J2V4dHJhY3Rl
ZCd9ID0gJHJlcGx5dG87CglyZXR1cm4gJHJldHVybl9oYXNoOwp9OwoKPXBvZAoKPWl0ZW0g
cHJlcHJvY2VzcwoKVGhpcyBpcyBhbm90aGVyIG1ldGhvZCB0aGF0J2xsIGRvIG1vcmUgaW4g
YSBzdWJjbGFzcy4gV2hlbiB5b3UgaGFkIG9mZiBkYXRhIHRvIGVpdGhlciAtPm1haWwgb3Ig
LT5idWxrbWFpbCwKaXQgZ2V0cyBwcmVwcm9jZXNzZWQgYmVmb3JlIGl0J3MgYWN0dWFsbHkg
dXNlZC4gSW4gTWFpbDo6QnVsa21haWwgaXRzZWxmLCBhbGwgaXQgZG9lcyBpcyB0YWtlIGEg
bm9uLXJlZmVyZW5jZQp2YWx1ZSBhbmQgdHVybiBpdCBpbnRvIGEgcmVmZXJlbmNlLCBvciBy
ZXR1cm4gYSByZWZlcmVuY2UgYXMgaXMgaWYgdGhhdCB3YXMgcGFzc2VkLgoKSGVyZSwgdGhl
IHdob2xlIG1ldGhvZDoKCiBzdWIgcHJlcHJvY2VzcyB7CiAJbXkgJHNlbGYJPSBzaGlmdDsK
IAlteSAkdmFsCQk9IHNoaWZ0OwoKIAlyZXR1cm4gcmVmICR2YWwgPyAkdmFsIDogXCR2YWw7
CiB9OwoKQnV0IGluIGEgc3ViY2xhc3MsIHRoaXMgbWF5IGJlIG11Y2ggbW9yZSBpbXBvcnRh
bnQuIE1ha2luZyBzdXJlIHRoYXQgeW91ciBkYXRhIGlzIHVuaWZvcm0gb3IgdmFsaWQsIHRo
YXQKcGFydGljdWxhciB2YWx1ZXMgYXJlIHBvcHVsYXRlZCwgYWRkaXRpb25hbCB0ZXN0cywg
d2hhdGV2ZXIuCgo9Y3V0CgpzdWIgcHJlcHJvY2VzcyB7CglteSAkc2VsZgk9IHNoaWZ0OwoJ
bXkgJHZhbAkJPSBzaGlmdDsKCglyZXR1cm4gcmVmICR2YWwgPyAkdmFsIDogXCR2YWw7Cn07
CgojIF9mb3JjZV93cmFwX3N0cmluZyBpcyBhbiBpbnRlcm5hbCBtZXRob2QgdGhhdCBoYW5k
bGVzIHdyYXBwaW5nIGxpbmVzIGFzIGFwcHJvcHJpYXRlLCBlaXRoZXIgdG8gODAgY2hhcmFj
dGVycyBwZXIgbGluZQojIGlmIC0+Zm9yY2U4MCBpcyB0cnVlLCBhbmQgb3RoZXJ3aXNlIHRv
IDEwMDAgY2hhcmFjdGVycyB0byBjb21wbHkgd2l0aCBSRkMyODIyLiBXaWxsIG5vdCB0b3Vj
aCB0aGUgc3RyaW5nCiMgaWYgVHJ1c3RpbmcgaXMgc2V0IHRvIDEuCiMKIyB0aG91Z2ggdGhp
cyBpcyByZS13cml0dGVuLCBJJ20gc3RpbGwgbm90IHRlcnJpYmx5IHRocmlsbGVkIHdpdGgg
aXQuCgpzdWIgX2ZvcmNlX3dyYXBfc3RyaW5nIHsKCW15ICRzZWxmID0gc2hpZnQ7CglteSAk
c3RyaW5nID0gc2hpZnQ7CglteSAkc3BhY2VwcmVwZW5kPSBzaGlmdCB8fCAwOwoJbXkgJG5v
YmxhbmtzCT0gc2hpZnQgfHwgMDsKCgkjaWYgd2UncmUgdHJ1c3RpbmcgdGhlIHdyYXAsIGp1
c3QgcmV0dXJuIHRoZSBzdHJpbmcKCXJldHVybiAkc3RyaW5nIGlmICRzZWxmLT5UcnVzdGlu
Zygnd3JhcHBpbmcnKTsKCgkjZGV0ZXJtaW5lIHRoZSBsZW5ndGggd2Ugd3JhcCB0bwoJbXkg
JGxlbmd0aCA9ICRzZWxmLT5mb3JjZTgwID8gNzggOiA5OTg7CgoJI2lmIHdlJ3JlIHRhY2tp
bmcgYSBzcGFjZSBvbiB0byB0aGUgZnJvbnQsIHRoYXQncyBhbiBleHRyYSBjaGFyYWN0ZXIs
IHNvIGRlY3JlbWVudCB0aGUgbGVuZ3RoIHRvIG1hdGNoCgkkbGVuZ3RoLS0gaWYgJHNwYWNl
cHJlcGVuZDsKCgkjd2Ugd2FudCB0byBzcGxpdCBpbnRvIGFzIG1hbnkgZmllbGRzIGFzIHRo
ZXJlIGFyZSByZXR1cm5zIGluIHRoZSBtZXNzYWdlCglteSBAcmV0dXJucyA9ICRzdHJpbmcg
PX4gbS8oXDAxNVwwMTIpL2c7CgoJbXkgQGxpbmVzID0gc3BsaXQoL1wwMTVcMDEyLywgJHN0
cmluZywgc2NhbGFyIEByZXR1cm5zKTsKCWZvcmVhY2ggKEBsaW5lcyl7CgkJaWYgKGxlbmd0
aCAkXyA+ICRsZW5ndGgpewoJCQlteSAkb25lID0gMDsKCQkJIyBib3ksIGRpZCB0aGlzIHRh
a2UgZmluZXNzZS4gT25seSBwcmVwZW5kIGEgc3BhY2UgaWYgaXQncyBub3QgdGhlIHN0YXJ0
IG9mIHRoZSBvcmlnaW5hbCBsaW5lCgkJCSMgVGhhdCB3YXksIHdlIGNhbiBwcm9wZXJseSB3
cmFwIG91ciBoZWFkZXJzLiBUaGF0J3Mgd2hhdCAkb25lIGlzLgoKCQkJIyB0aGlzIHJlZ2V4
IHB1dHMgYXMgbWFueSBjaGFyYWN0ZXJzIGJlZm9yZSBhIHdvcmRicmVhayBhcyBpdCBjYW4g
aW50byAkMSwgYW5kIHRoZSByZXN0IGludG8gJDIuCgkJCSMgaWYgYSBzdHJpbmcgaXMgYSBz
b2xpZCB3b3JkIGdyZWF0ZXIgdGhhbiB0aGUgdGhlIGxlbmd0aCwgaXQgYWxsIGdvZXMgaW50
byAkMgoJCQkkXyA9fiBzLyg/OihbXlwwMTVcMDEyXXsxLCRsZW5ndGh9KVxiKT8oW15cMDE1
XDAxMl0rKS8kc2VsZi0+X3Byb2Nlc3Nfc3RyaW5nKCQxLCAkMiwgJGxlbmd0aCwgJHNwYWNl
cHJlcGVuZCAmJiAhICRvbmUrKyA/IDEgOiAwKS9nZTsKCQl9OwoJfTsKCgkjcmVidWlsZCBv
dXIgc3RyaW5nCgkkc3RyaW5nID0gam9pbigiXDAxNVwwMTIiLCBAbGluZXMpOwoKCSNnZXQg
cmlkIG9mIGFueSBibGFuayBsaW5lcyB3ZSBtYXkgaGF2ZSBjcmVhdGVkLCBpZiBzbyBkZXNp
cmVkLgoJaWYgKCRub2JsYW5rcyl7CgkJJHN0cmluZyA9fiBzL1wwMTVcMDEyW15cMDE1XDAx
MlxTXSpcMDE1XDAxMi9cMDE1XDAxMi9nIHdoaWxlICRzdHJpbmcgPX4gL1wwMTVcMDEyW15c
MDE1XDAxMlxTXStcMDE1XDAxMi87Cgl9OwoKCXJldHVybiAkc3RyaW5nOwp9OwoKIyBwcm9j
ZXNzIHN0cmluZyBpcyB1c2VkIGludGVybmFsbHkgYnkgX2ZvcmNlX3dyYXBfc3RyaW5nIHRv
IGRvIHdyYXBwaW5nLCBhcyBhcHByb3ByaWF0ZS4KCnN1YiBfcHJvY2Vzc19zdHJpbmcgewoJ
bXkgJHNlbGYJCQk9IHNoaWZ0OwoJbXkgJG9uZQkJCQk9IHNoaWZ0IHx8ICcnOwkjJDEsIHBh
c3NlZCBmcm9tIF9mb3JjZV93cmFwX3N0cmluZwoJbXkgJHR3bwkJCQk9IHNoaWZ0IHx8ICcn
OwkjJDIsIHBhc3NlZCBmcm9tIF9mb3JjZV93cmFwX3N0cmluZwoJbXkgJGxlbmd0aAkJCT0g
c2hpZnQ7CQkjdGhlIGxlbmd0aCB3ZSdyZSB3cmFwcGluZyB0bwoJbXkgJHNwYWNlcHJlcGVu
ZAk9IHNoaWZ0IHx8IDA7CSN3aGV0aGVyIHdlJ3JlIHByZXBlbmRpbmcgYSBzcGFjZQoKCSNy
ZS1kZWZpbmUgdGhlIHNwYWNlcHJlcGVuZCB0byB0aGUgY2hhcmFjdGVyIHdlIHdpbGwgcHJl
cGVuZC4KCSRzcGFjZXByZXBlbmQgPSAkc3BhY2VwcmVwZW5kID8gJyAnIDogJyc7CgoJI2lm
IHdlIGRvbid0IGhhdmUgJDEsIHRoZW4gd2UgaGF2ZSBhIHNpbmdsZSB3b3JkIGdyZWF0ZXIg
dGhhbiB0aGUgbGVuZ3RoLiBDdXQgaXQgdXAgYXQgdGhlIGxlbmd0aCBwb2ludCwgZ2xvYmFs
bHkKCWlmICghICRvbmUpewoJCSR0d28gPX4gcy8oW15cMDE1XDAxMl17JGxlbmd0aH0pLyQx
XDAxNVwwMTIkc3BhY2VwcmVwZW5kL2c7CgkJcmV0dXJuICR0d287Cgl9Cgkjb3RoZXJ3aXNl
LCB1c2UgdGhlIHNhbWUgcmVnZXggdGhhdCBfZm9yY2Vfd3JhcF9zdHJpbmcgdXNlcyBhbmQg
cHJvY2VlZCByZWN1c2l2ZWx5LgoJZWxzZSB7CgkJJHR3byA9fiBzLyg/OihbXlwwMTVcMDEy
XXsxLCRsZW5ndGh9KVxiKT8oW15cMDE1XDAxMl0rKS8kc2VsZi0+X3Byb2Nlc3Nfc3RyaW5n
KCQxLCAkMiwgJGxlbmd0aCwgJHNwYWNlcHJlcGVuZCkvZ2U7CgkJcmV0dXJuICIkb25lXDAx
NVwwMTIkc3BhY2VwcmVwZW5kJHR3byI7Cgl9Cn07Cgo9cG9kCgo9aXRlbSBidWlsZEhlYWRl
cnMKCmJ1aWxkSGVhZGVycyBpcyBtYWlubHkgdXNlZCBpbnRlcm5hbGx5LCBsaWtlIGl0cyBu
YW1lIGltcGxpZXMsIGl0IGJ1aWxkcyB0aGUgaGVhZGVycyBmb3IgdGhlIG1lc3NhZ2UuCgpZ
b3UnbGwgbmV2ZXIgbmVlZCB0byBjYWxsIGJ1aWxkSGVhZGVycyB1bmxlc3MgeW91J3JlIHN1
YmNsYXNzaW5nLCBpbiB3aGljaCBjYXNlIHlvdSBtYXkgd2FudCB0byBvdmVycmlkZSB0aGlz
IG1ldGhvZAp3aXRoIGEgbmV3IHJvdXRpbmUgdG8gYnVpbGQgaGVhZGVycyBpbiBhIGRpZmZl
cmVudCBmYXNoaW9uLgoKVGhpcyBtZXRob2QgaXMgY2FsbGVkIGludGVybmFsbHkgYnkgLT5i
dWxrbWFpbCBhbmQgLT5tYWlsIG90aGVyd2lzZSBhbmQgaXMgbm90IHNvbWV0aGluZyB5b3Ug
bmVlZCB0byB3b3JyeSBhYm91dC4KClRoZSBmaXJzdCB0aW1lIGJ1aWxkSGVhZGVycyBpcyBj
YWxsZWQsIGl0IHBvcHVsYXRlcyBfY2FjaGVkX2hlYWRlcnMgc28gYXMgbm90IHRvIGhhdmUg
dG8gZ28gdGhyb3VnaCB0aGUgcHJvY2Vzc2luZyBvZiByZWJ1aWxkaW5nCnRoZSBoZWFkZXJz
IGZvciBlYWNoIGFkZHJlc3MgaW4geW91ciBsaXN0LgoKVGhpcyBtZXRob2QgaXMga25vd24g
dG8gYmUgYWJsZSB0byByZXR1cm46CgogTUIwMTQgLSBubyBGcm9tIGFkZHJlc3MKIE1CMDE1
IC0gbm8gVG8gYWRkcmVzcwoKPWN1dAoKc3ViIGJ1aWxkSGVhZGVycyB7CgoJbXkgJHNlbGYJ
CQk9IHNoaWZ0OwoJbXkgJGRhdGEJCQk9IHNoaWZ0OwoKCW15ICRoZWFkZXJzX2hhc2gJPSBz
aGlmdCB8fCAkc2VsZi0+X2hlYWRlcnM7CgoJaWYgKCRzZWxmLT51c2VfZW52ZWxvcGUgJiYg
JHNlbGYtPl9jYWNoZWRfaGVhZGVycyl7CgkJcmV0dXJuICRzZWxmLT5fY2FjaGVkX2hlYWRl
cnM7Cgl9CgllbHNpZiAoJHNlbGYtPl9jYWNoZWRfaGVhZGVycyl7CgoJCW15ICRoZWFkZXJz
ID0gJHskc2VsZi0+X2NhY2hlZF9oZWFkZXJzfTsKCgkJbXkgJGV4dHJhY3RlZF9lbWFpbHMg
PSAkc2VsZi0+ZXh0cmFjdEVtYWlsKCRkYXRhKTsKCQlteSAkZW1haWwgPSAkZXh0cmFjdGVk
X2VtYWlscy0+eydvcmlnaW5hbCd9OwoKCQkkaGVhZGVycyA9fiBzL15UbzogIyNFTUFJTCMj
L1RvOiAkZW1haWwvbTsKCgkJcmV0dXJuIFwkaGVhZGVyczsKCX07CgoJbXkgJGhlYWRlcnMJ
PSB1bmRlZjsKCiMgYXcgMjAwOS8xMS8wMiBtb3ZlZCBmdXJ0aGVyIGRvd24KCSMkaGVhZGVy
cyAuPSAiRGF0ZTogIiAuICRzZWxmLT5EYXRlIC4gIlwwMTVcMDEyIjsKCglpZiAobXkgJGZy
b20gPSAkc2VsZi0+RnJvbSl7CgkJJGhlYWRlcnMgLj0gIkZyb206ICIgLiAkZnJvbSAuICJc
MDE1XDAxMiI7Cgl9CgllbHNlIHsKCQlyZXR1cm4gJHNlbGYtPmVycm9yKCJDYW5ub3QgYnVs
a21haWwuLi5ubyBGcm9tIGFkZHJlc3MiLCAiTUIwMTQiKTsKCX07CgoJJGhlYWRlcnMgLj0g
IlN1YmplY3Q6ICIgLiAkc2VsZi0+U3ViamVjdCAuICJcMDE1XDAxMiIgaWYgZGVmaW5lZCAk
c2VsZi0+U3ViamVjdCAmJiAkc2VsZi0+U3ViamVjdCA9fiAvXFMvOwoKCSNpZiB3ZSdyZSB1
c2luZyB0aGUgZW52ZWxvcGUsIHRoZW4gdGhlIFRvOiBoZWFkZXIgaXMgdGhlIFRvIGF0dHJp
YnV0ZQoJaWYgKG15ICR0byA9ICRzZWxmLT51c2VfZW52ZWxvcGUgPyAkc2VsZi0+VG8gOiAi
IyNFTUFJTCMjIil7CgkJJGhlYWRlcnMgLj0gIlRvOiAkdG9cMDE1XDAxMiI7Cgl9CgllbHNl
IHsKCQlyZXR1cm4gJHNlbGYtPmVycm9yKCJDYW5ub3QgYnVsa21haWwuLi5ubyBUbyBhZGRy
ZXNzIiwgIk1CMDE1Iik7Cgl9OwoKCW15ICRzZW5kZXJfaGFzaCA9ICRzZWxmLT5leHRyYWN0
U2VuZGVyKCRkYXRhKTsKCWlmIChkZWZpbmVkICRzZW5kZXJfaGFzaCkgewoJCSRoZWFkZXJz
IC49ICJTZW5kZXI6ICIJCS4gJHNlbmRlcl9oYXNoLT57J29yaWdpbmFsJ30JCS4gIlwwMTVc
MDEyIjsKCX0KCglteSAkcmVwbHlfdG9faGFzaCA9ICRzZWxmLT5leHRyYWN0UmVwbHlUbygk
ZGF0YSk7CglpZiAoZGVmaW5lZCAkcmVwbHlfdG9faGFzaCkgewoJCSRoZWFkZXJzIC49ICJS
ZXBseS1UbzogIgkuICRyZXBseV90b19oYXNoLT57J29yaWdpbmFsJ30JCS4gIlwwMTVcMDEy
IjsKCX07CgoJI3dlJ3JlIGFsd2F5cyBnb2luZyB0byBzcGVjaWZ5IGF0IGxlYXN0IGEgbGlz
dCBwcmVjZWRlbmNlCgkkaGVhZGVycyAuPSAiUHJlY2VkZW5jZTogIgkJLiAoJHNlbGYtPlBy
ZWNlZGVuY2UgfHwgJ2xpc3QnKQkJCS4gIlwwMTVcMDEyIjsKCiMgYXcgMjAwOS8xMS8wMiBk
ZXRlY3QgZXhpc3RpbmcgJ0NvbnRlbnQtVHlwZScgd2l0aCBhbnkgY2FzZSwgdXNpbmcgbmV3
IHN1YgoJI2lmICgkaGVhZGVyc19oYXNoLT57IkNvbnRlbnQtdHlwZSJ9KXsKCSMJJGhlYWRl
cnMgLj0gIkNvbnRlbnQtdHlwZTogIiAuICRoZWFkZXJzX2hhc2gtPnsiQ29udGVudC10eXBl
In0gLiAiXDAxNVwwMTIiOwoJI30KCW15ICgkaGRyX25hbWUsJGhkcl92YWx1ZSkgPSAkc2Vs
Zi0+ZmluZF9oZWFkZXJfbm9jYXNlKCRoZWFkZXJzX2hhc2gsJ0NvbnRlbnQtdHlwZScpOwoJ
aWYgKGRlZmluZWQoJGhkcl9uYW1lKSkgewojIGF3IDIwMDkvMTEvMDIgbm90ZSA6IGl0IG1p
Z2h0IGJlIGJldHRlciB0byBkZWxldGUgZXhpc3RpbmcsIGFuZCBmb3JjZSAnQ29udGVudC10
eXBlJwoJCSRoZWFkZXJzIC49ICRoZHJfbmFtZSAuICI6ICIgLiAkaGRyX3ZhbHVlIC4gIlww
MTVcMDEyIjsKCX0KCWVsc2UgewoJCWlmICgkc2VsZi0+SFRNTCl7CgkJCSRoZWFkZXJzIC49
ICJDb250ZW50LXR5cGU6IHRleHQvaHRtbFwwMTVcMDEyIjsKCQl9CgkJZWxzZSB7CgkJCSRo
ZWFkZXJzIC49ICJDb250ZW50LXR5cGU6IHRleHQvcGxhaW5cMDE1XDAxMiI7CgkJfTsKCX07
CgoJZm9yZWFjaCBteSAka2V5IChrZXlzICV7JGhlYWRlcnNfaGFzaH0pIHsKIyBhdyAyMDA5
LzExLzAyIHJlcGxhY2UgZXEgYnkgY2FzZS1pbnNlbnNpdGl2ZSByZWdleHAKCQkjbmV4dCBp
ZiAka2V5IGVxICdDb250ZW50LXR5cGUnOwoJCW5leHQgaWYgJGtleSA9fiBtL15Db250ZW50
LXR5cGUkL2k7CiMgYXcgMjAwOS8xMS8wMiBhbHNvIGlnbm9yZSBleGlzdGluZyBEYXRlIGhl
YWRlciwgc2VlIGJlbG93CgkJbmV4dCBpZiAka2V5ID1+IG0vXkRhdGUkL2k7CgkJbXkgJHZh
bCA9ICRoZWFkZXJzX2hhc2gtPnska2V5fTsKCgkJbmV4dCBpZiAhIGRlZmluZWQgJHZhbCB8
fCAkdmFsICF+IC9cUy87CgoJCSRoZWFkZXJzIC49ICRrZXkgLiAiOiAiIC4gJHZhbCAuICJc
MDE1XDAxMiI7Cgl9OwoKCSMgUHJldmlvdXNseSwgd2UgaWdub3JlZCBhbnkgRGF0ZSBhbHJl
YWR5IHNldCBpbiB0aGUgbWVzc2FnZSBoZWFkZXIuCgkjIE5vdywgd2UgZm9yY2UgdGhlIERh
dGUgdG8gIm5vdyIsIGJlY2F1c2UgdGhpcyBpcyB3aGVuIHdlIHNlbmQgaXQsIGRhbW5pdCAh
CgkkaGVhZGVycyAuPSAiRGF0ZTogIiAuICRzZWxmLT5EYXRlIC4gIlwwMTVcMDEyIjsKCgkj
IEknbSB0YWtpbmcgY3JlZGl0IGZvciB0aGUgbWFpbGluZywgZGFtbWl0IQoJJGhlYWRlcnMg
Lj0gIlgtQnVsa21haWw6ICIgLiAkTWFpbDo6QnVsa21haWw6OlZFUlNJT04gLiAiXDAxNVww
MTIiOwoKCSRoZWFkZXJzID0gJHNlbGYtPl9mb3JjZV93cmFwX3N0cmluZygkaGVhZGVycywg
J3N0YXJ0IHdpdGggYSBibGFuaycsICdubyBibGFuayBsaW5lcycpOwoKCSRoZWFkZXJzIC49
ICJcMDE1XDAxMiI7CSNibGFuayBsaW5lIGJldHdlZW4gdGhlIGhlYWRlciBhbmQgdGhlIG1l
c3NhZ2UKCgkkc2VsZi0+X2NhY2hlZF9oZWFkZXJzKFwkaGVhZGVycyk7CgoJdW5sZXNzICgk
c2VsZi0+dXNlX2VudmVsb3BlKXsKCQlteSAkaCA9ICRoZWFkZXJzOwkjY2FuJ3QganVzdCB1
c2UgJGhlYWRlcnMsIHdlJ2xsIHNjcmV3IHVwIHRoZSByZWYgaW4gX2NhY2hlZF9oZWFkZXJz
CgkJbXkgJGV4dHJhY3RlZF9lbWFpbHMgPSAkc2VsZi0+ZXh0cmFjdEVtYWlsKCRkYXRhKTsK
CQlteSAkZW1haWwgPSAkZXh0cmFjdGVkX2VtYWlscy0+eydvcmlnaW5hbCd9OwoJCSRoID1+
IHMvXlRvOiAjI0VNQUlMIyMvVG86ICRlbWFpbC9tOwoJCXJldHVybiBcJGg7Cgl9OwoKCXJl
dHVybiBcJGhlYWRlcnM7Cgp9OwojIGF3IDIwMDkvMTEvMDIgbmV3IHN1YgpzdWIgZmluZF9o
ZWFkZXJfbm9jYXNlIHsKCglteSAkc2VsZgkJCT0gc2hpZnQ7CglteSAkdGFibGUJCQk9IHNo
aWZ0OwoJbXkgJG5hbWUgCQkJPSBzaGlmdDsKCWZvciBteSAkayAoa2V5cyglJHRhYmxlKSkg
ewoJCWlmICgkayA9fiBtL14kbmFtZSQvaSkgewoJCQlyZXR1cm4gKCRrLCR0YWJsZS0+eyRr
fSk7CgkJfQoJfQoJcmV0dXJuICh1bmRlZix1bmRlZik7Cn0KCgo9cG9kCgo9aXRlbSBidWls
ZE1lc3NhZ2UKCmJ1aWxkTWVzc2FnZSBpcyBtYWlubHkgdXNlZCBpbnRlcm5hbGx5LCBsaWtl
IGl0cyBuYW1lIGltcGxpZXMsIGl0IGJ1aWxkcyB0aGUgYm9keSBvZiB0aGUgbWVzc2FnZQoK
WW91J2xsIG5ldmVyIG5lZWQgdG8gY2FsbCBidWlsZE1lc3NhZ2UgdW5sZXNzIHlvdSdyZSBz
dWJjbGFzc2luZywgaW4gd2hpY2ggY2FzZSB5b3UgbWF5IHdhbnQgdG8gb3ZlcnJpZGUgdGhp
cyBtZXRob2QKd2l0aCBhIG5ldyByb3V0aW5lIHRvIGJ1aWxkIHlvdXIgbWVzc2FnZSBpbiBh
IGRpZmZlcmVudCBmYXNoaW9uLgoKVGhpcyBtZXRob2QgaXMgY2FsbGVkIGludGVybmFsbHkg
YnkgLT5idWxrbWFpbCBhbmQgLT5tYWlsIG90aGVyd2lzZSBhbmQgaXMgbm90IHNvbWV0aGlu
ZyB5b3UgbmVlZCB0byB3b3JyeSBhYm91dC4KClRoaXMgbWV0aG9kIGlzIGtub3duIHRvIGJl
IGFibGUgdG8gcmV0dXJuOgoKIE1CMDE2IC0gLT5NZXNzYWdlIGlzIG5vdCBkZWZpbmVkCgo9
Y3V0CgpzdWIgYnVpbGRNZXNzYWdlIHsKCW15ICRzZWxmCT0gc2hpZnQ7CgoJbXkgJGRhdGEJ
PSBzaGlmdDsKCgkjaWYgd2UndmUgY2FjaGVkIHRoZSBtZXNzYWdlLCB0aGVuIHJldHVybiBp
dAoJcmV0dXJuICRzZWxmLT5fY2FjaGVkX21lc3NhZ2UgaWYgJHNlbGYtPl9jYWNoZWRfbWVz
c2FnZSAmJiAkc2VsZi0+X2N1cnJlbnRfbWVzc2FnZTsKCgkjb3RoZXJ3aXNlLCB1c2UgdGhl
IE1lc3NhZ2UsIGNhY2hlIHRoYXQgYW5kIHJldHVybiBpdC4KCW15ICRtZXNzYWdlCT0gJHNl
bGYtPk1lc3NhZ2UoKQoJCXx8IHJldHVybiAkc2VsZi0+ZXJyb3IoIkNhbm5vdCBidWlsZCBt
ZXNzYWdlIHcvbyBtZXNzYWdlIiwgIk1CMDE2Iik7CgoJcmV0dXJuICRtZXNzYWdlIGlmIHJl
ZiAkbWVzc2FnZTsKCgkjc2VuZG1haWwtaWZ5IG91ciBsaW5lIGJyZWFrcwoJJG1lc3NhZ2Ug
PX4gcy8oPzpccj9cbnxcclxuPykvXDAxNVwwMTIvZzsKCgkkbWVzc2FnZSA9ICRzZWxmLT5f
Zm9yY2Vfd3JhcF9zdHJpbmcoJG1lc3NhZ2UpOwoKCSNkb3VibGUgYW55IHBlcmlvZHMgdGhh
dCBzdGFydCBsaW5lcwoJJG1lc3NhZ2UgPX4gcy9eXC4vLi4vZ207CgoJI2FuZCBmb3JjZSBh
IENSTEYgYXQgdGhlIGVuZCwgdW5sZXNzIG9uZSBpcyBhbHJlYWR5IHByZXNlbnQKCSRtZXNz
YWdlIC49ICJcMDE1XDAxMiIgdW5sZXNzICRtZXNzYWdlID1+IC9cMDE1XDAxMiQvOwoJJG1l
c3NhZ2UgLj0gIi4iOwoKCSRzZWxmLT5fY2FjaGVkX21lc3NhZ2UoXCRtZXNzYWdlKTsKCXJl
dHVybiBcJG1lc3NhZ2U7Cn07Cgo9cG9kCgo9aXRlbSBidWxrbWFpbAoKVGhpcyBpcyB0aGUg
YnJlYWQgYW5kIGJ1dHRlciBvZiB0aGUgd2hvbGUgc2V0IHVwLCBhbmQgaXQncyBlYXN5IGFz
IHBpZS4KCiAkYnVsay0+YnVsa21haWwoKTsKCndpbGwgdGFrZSB5b3VyIGxpc3QsIGl0ZXJh
dGUgb3ZlciBpdCwgYnVpbGQgYWxsIHlvdXIgbWVzc2FnZSBoZWFkZXJzLCBidWlsZCB5b3Vy
IG1lc3NhZ2UsIGFuZCBlbWFpbCB0byBldmVyeW9uZSBvbiB5b3VyCmxpc3QsIGl0ZXJhdGlu
ZyB0aHJvdWdoIGFsbCBvZiB5b3VyIHNlcnZlcnMsIGxvZyBhbGwgcmVsZXZhbnQgaW5mb3Jt
YXRpb24sIGFuZCBzZW5kIHlvdSBoYXBwaWx5IG9uIHlvdXIgd2F5LgoKRWFzeSBhcyBwaWUu
IFlvdSBkb24ndCBldmVuIG5lZWQgdG8gd29ycnkgYWJvdXQgaXQgaWYgeW91IHN1YmNsYXNz
IHRoaW5ncywgYmVjYXVzZSB5b3UnZCBqdXN0IG5lZWQgdG8gb3ZlcnJpZGUKYnVpbGRIZWFk
ZXJzLCBidWlsZE1lc3NhZ2UsIGdldE5leHRMaW5lIGFuZCBleHRyYWN0RW1haWwgYXQgbW9z
dC4KClRoaXMgbWV0aG9kIGlzIGtub3duIHRvIGJlIGFibGUgdG8gcmV0dXJuOgoKIE1CMDE3
IC0gZHVwbGljYXRlIGVtYWlsCiBNQjAxOCAtIGJhbm5lZCBlbWFpbAogTUIwMTkgLSBpbnZh
bGlkIHNlbmRlci9mcm9tCgo9Y3V0CgpzdWIgYnVsa21haWwgewoJbXkgJHNlbGYJPSBzaGlm
dDsKCglteSAkc2VydmVyCT0gJHNlbGYtPm5leHRTZXJ2ZXIgfHwgcmV0dXJuIHVuZGVmOwoK
CW15ICRsYXN0X2RhdGEgPSB1bmRlZjsKCgl3aGlsZSAoZGVmaW5lZCAobXkgJGRhdGEgPSAk
c2VsZi0+Z2V0TmV4dExpbmUpKXsKCgkJaWYgKG15ICRyID0gJHNlcnZlci0+cmVhY2hlZF9s
aW1pdCl7CgoJCQkjaWYgYSBtZXNzYWdlIGlzIHdhaXRpbmcgb24gdGhlIHByZXZpb3VzIHNl
cnZlciwgdGhlbiBmaW5pc2ggaXQgb2ZmCgkJCWlmICgkc2VsZi0+X3dhaXRpbmdfbWVzc2Fn
ZSkgewoKCQkJCW15ICRoZWFkZXJzID0gJHNlbGYtPmJ1aWxkSGVhZGVycygkbGFzdF9kYXRh
KTsKCgkJCQlteSAkbWVzc2FnZSA9ICRzZWxmLT5idWlsZE1lc3NhZ2UoJGxhc3RfZGF0YSk7
CgoJCQkJIyBpdCBpcyAqaW1wZXJhdGl2ZSogdGhhdCB3ZSBvbmx5IHNlbmQgREFUQSBpZiB3
ZSBoYXZlIHRoZSBoZWFkZXJzIGFuZCBtZXNzYWdlIGJvZHkuCgkJCQkjIG90aGVyd2lzZSwg
dGhlIHNlcnZlciB3aWxsIGhhbmcuCgkJCQlpZiAoJGhlYWRlcnMgJiYgJG1lc3NhZ2UpIHsK
CQkJCQlteSAkcmMgPSAkc2VydmVyLT50YWxrX2FuZF9yZXNwb25kKCJEQVRBIik7CgkJCQkJ
JHNlcnZlci0+dGFsa19hbmRfcmVzcG9uZCgkJGhlYWRlcnMgLiAkJG1lc3NhZ2UpIGlmICRy
YzsKCQkJCX0KCgkJCQlteSAkZXh0cmFjdGVkX2VtYWlscyA9ICRzZWxmLT5leHRyYWN0RW1h
aWwoJGxhc3RfZGF0YSk7CgkJCQlpZiAoZGVmaW5lZCAkZXh0cmFjdGVkX2VtYWlscykgewoJ
CQkJCSRzZWxmLT5zZXREdXBsaWNhdGUoJGV4dHJhY3RlZF9lbWFpbHMtPnsnZXh0cmFjdGVk
J30pOwoJCQkJfTsKCQkJfTsKCgkJCSRzZXJ2ZXIgPSAkc2VsZi0+bmV4dFNlcnZlciB8fCBy
ZXR1cm4gdW5kZWY7CgoJCQkjbmV3IHNlcnZlciwgc28gbm90aGluZyBzaG91bGQgYmUgd2Fp
dGluZywgYW5kIHRoZXJlIGFyZSBubyBjYWNoZWQgZG9tYWlucwoJCQkkc2VsZi0+X3dhaXRp
bmdfbWVzc2FnZSgwKTsKCQkJJHNlbGYtPl9jYWNoZWRfZG9tYWluKHVuZGVmKTsKCgkJCSNh
bmQgcmVzZXQgdGhhdCBzZXJ2ZXIncyBjb3VudGVycwoJCQkkc2VydmVyLT5yZXNldF9tZXNz
YWdlX2NvdW50ZXJzKCk7CgkJfTsKCgkJJGRhdGEgPX4gcy8oPzpeXHMrfFxzKyQpLy9nIHVu
bGVzcyByZWYgJGRhdGE7CgoJCSRkYXRhID0gJHNlbGYtPnByZXByb2Nlc3MoJGRhdGEpIHx8
IG5leHQ7CgoJCW15ICRleHRyYWN0ZWRfZW1haWxzID0gJHNlbGYtPmV4dHJhY3RFbWFpbCgk
ZGF0YSkgfHwgbmV4dDsKCQlteSAkZW1haWwgPSAkZXh0cmFjdGVkX2VtYWlscy0+eydleHRy
YWN0ZWQnfTsKCgkJI2NoZWNrIGZvciBkdXBsaWNhdGVzIG9yIGJhbm5lZCBhZGRyZXNzZXMK
CQlpZiAoJHNlbGYtPmlzRHVwbGljYXRlKCRlbWFpbCkpewoKCQkJJHNlbGYtPmxvZ1RvRmls
ZSgkc2VsZi0+QkFELCAkZGF0YSkgaWYgJHNlbGYtPkJBRDsKCgkJCSRzZWxmLT5lcnJvcigi
SW52YWxpZCBlbWFpbCBhZGRyZXNzICRlbWFpbCA6IGR1cGxpY2F0ZSIsICJNQjAxNyIpOwoJ
CQluZXh0OwoJCX0KCQllbHNpZiAobXkgJGIgPSAkc2VsZi0+aXNCYW5uZWQoJGVtYWlsKSl7
CgoJCQkkc2VsZi0+bG9nVG9GaWxlKCRzZWxmLT5CQUQsICRkYXRhKSBpZiAkc2VsZi0+QkFE
OwoKCQkJJHNlbGYtPmVycm9yKCJJbnZhbGlkIGVtYWlsIGFkZHJlc3MgJGVtYWlsIDogIiAu
ICgkYiA9PSAyID8gJ2Jhbm5lZCBkb21haW4nIDogJ2Jhbm5lZCBhZGRyZXNzJyksICJNQjAx
OCIpOwoJCQluZXh0OwoJCX07CgoJCSN1c2UgdGhlIGVudmVsb3BlLCBpZiB3ZSdyZSB1c2lu
ZyBpdAoJCWlmICgkc2VsZi0+dXNlX2VudmVsb3BlKXsKCgkJCSNleHRyYWN0IHRoZSBkb21h
aW4gZnJvbSB0aGUgZW1haWwgYWRkcmVzcwoJCQkobXkgJGRvbWFpbiA9IGxjICRlbWFpbCkg
PX4gcy9eW15AXStALy87CgoJCQkjZmlyc3QsIHNlZSBpZiB0aGlzIGlzIGEgbmV3IGRvbWFp
biwgZWl0aGVyIHRoZSBmaXJzdCB0aW1lIHRocm91Z2gsIGlmIGl0J3MgYSBkaWZmZXJlbnQg
ZG9tYWluIHRoYW4gdGhlIGxhc3QKCQkJI29uZSB3ZSBzYXcsIG9yIGlmIHdlIHJlYWNoZWQg
dGhlIHNlcnZlcidzIGVudmVsb3BlIGxpbWl0CgkJCWlmICghICRzZWxmLT5fY2FjaGVkX2Rv
bWFpbiB8fCAoJHNlbGYtPl9jYWNoZWRfZG9tYWluICYmICRkb21haW4gbmUgJHNlbGYtPl9j
YWNoZWRfZG9tYWluKCkpIHx8ICRzZXJ2ZXItPnJlYWNoZWRfZW52ZWxvcGVfbGltaXQpIHsK
CgkJCQkjaWYgYSBtZXNzYWdlIGlzIHdhaXRpbmcsIHRoZW4gZmluaXNoIGl0IG9mZgoJCQkJ
aWYgKCRzZWxmLT5fd2FpdGluZ19tZXNzYWdlKSB7CgkJCQkJbXkgJGhlYWRlcnMgPSAkc2Vs
Zi0+YnVpbGRIZWFkZXJzKCRsYXN0X2RhdGEpOwoKCQkJCQlteSAkbWVzc2FnZSA9ICRzZWxm
LT5idWlsZE1lc3NhZ2UoJGxhc3RfZGF0YSk7CgoJCQkJCSMgaXQgaXMgKmltcGVyYXRpdmUq
IHRoYXQgd2Ugb25seSBzZW5kIERBVEEgaWYgd2UgaGF2ZSB0aGUgaGVhZGVycyBhbmQgbWVz
c2FnZSBib2R5LgoJCQkJCSMgb3RoZXJ3aXNlLCB0aGUgc2VydmVyIHdpbGwgaGFuZy4KCQkJ
CQlpZiAoJGhlYWRlcnMgJiYgJG1lc3NhZ2UpIHsKCQkJCQkJbXkgJHJjID0gJHNlcnZlci0+
dGFsa19hbmRfcmVzcG9uZCgiREFUQSIpOwoJCQkJCQkkc2VydmVyLT50YWxrX2FuZF9yZXNw
b25kKCQkaGVhZGVycyAuICQkbWVzc2FnZSkgaWYgJHJjOwoJCQkJCX0KCgkJCQkJbXkgJGV4
dHJhY3RlZF9lbWFpbHMgPSAkc2VsZi0+ZXh0cmFjdEVtYWlsKCRsYXN0X2RhdGEpOwoJCQkJ
CWlmIChkZWZpbmVkICRleHRyYWN0ZWRfZW1haWxzKSB7CgkJCQkJCSRzZWxmLT5zZXREdXBs
aWNhdGUoJGV4dHJhY3RlZF9lbWFpbHMtPnsnZXh0cmFjdGVkJ30pOwoJCQkJCX07CgoJCQkJ
CSRzZWxmLT5fd2FpdGluZ19tZXNzYWdlKDApOwoJCQkJfTsKCgkJCQkjcmVzZXQgb3VyIGNv
bm5lY3Rpb24sIGp1c3QgdG8gYmUgc2FmZQoKCQkJCSRzZXJ2ZXItPnRhbGtfYW5kX3Jlc3Bv
bmQoIlJTRVQiKSB8fCBuZXh0OwoKCQkJCW15ICRmcm9tX2hhc2ggPSAkc2VsZi0+ZXh0cmFj
dFNlbmRlcigkZGF0YSkKCQkJCQl8fCByZXR1cm4gJHNlbGYtPmVycm9yKCJDb3VsZCBub3Qg
Z2V0IHZhbGlkIHNlbmRlci9mcm9tIGFkZHJlc3MiLCAiTUIwMTkiKTsKCgkJCQlteSAkZnJv
bSA9ICRmcm9tX2hhc2gtPnsnZXh0cmFjdGVkJ307CgoJCQkJI3NheSB3aG8gdGhlIG1lc3Nh
Z2UgaXMgZnJvbQoJCQkJJHNlcnZlci0+dGFsa19hbmRfcmVzcG9uZCgiTUFJTCBGUk9NOjwi
IC4gJGZyb20gLiAiPiIpIHx8IG5leHQ7CgoJCQkJI25vdywgc2luY2Ugd2Uga25vdyB0aGF0
IHdlIHJlc2V0IGFuZCBzZW50IE1BSUwgRlJPTSBwcm9wZXJseSwgd2UnbGwgcmVzZXQgb3Vy
IGNvdW50ZXIKCQkJCSNhbmQgY2FjaGUgdGhpcyBkb21haW4KCgkJCQkjcmVzZXQgdGhhdCBz
ZXJ2ZXIncyBlbnZlbG9wZSBjb3VudGVyCgkJCQkkc2VydmVyLT5yZXNldF9lbnZlbG9wZV9j
b3VudGVyKCk7CgoJCQkJI3NvIG5vdyB3ZSB3YW50IHRvIGNhY2hlIHRoaXMgZG9tYWluCgkJ
CQkkc2VsZi0+X2NhY2hlZF9kb21haW4oJGRvbWFpbik7CgoJCQl9OwoKCQkJI25vdywgd2Ug
YWRkIHRoaXMgZW1haWwgYWRkcmVzcyB0byB0aGUgZW52ZWxvcGUKCQkJJHNlcnZlci0+dGFs
a19hbmRfcmVzcG9uZCgiUkNQVCBUTzo8IiAuICRlbWFpbCAuICI+IikgfHwgbmV4dDsKCgkJ
CSNhIG1lc3NhZ2UgaXMgbm93IHdhaXRpbmcgdG8gYmUgc2VudAoJCQkkc2VsZi0+X3dhaXRp
bmdfbWVzc2FnZSgxKTsKCgkJCSNtYWtlIGEgbm90ZSBvZiB0aGUgZW1haWwgYWRkcmVzcyBp
biB0aGUgbG9nCgkJCSRzZWxmLT5sb2dUb0ZpbGUoJHNlbGYtPkdPT0QsICRkYXRhKSBpZiAk
c2VsZi0+R09PRDsKCgkJCSN3ZSBuZWVkIHRvIGtlZXAgdHJhY2sgb2YgdGhlIGxhc3QgZW1h
aWwgc2VudCwgdG8gZmluaXNoIG9mZiB0aGUgZmluYWwKCQkJI3dhaXRpbmdfbWVzc2FnZSBh
dCB0aGUgZW5kLgoJCQkkbGFzdF9kYXRhID0gJGRhdGE7CgoJCQkjYW5kIGZpbmFsbHksIHdl
IGNhY2hlIHRoZSBkb21haW4KCQkJJHNlbGYtPl9jYWNoZWRfZG9tYWluKCRkb21haW4pOwoK
CQl9CgoJCSNub3QgdXNpbmcgdGhlIGVudmVsb3BlCgkJZWxzZSB7CgkJCSRzZWxmLT5tYWls
KCRkYXRhLCAkc2VydmVyKSB8fCBuZXh0OwoJCX07CgoJCSNtYWtlIGEgbm90ZSBvZiB0aGlz
IGVtYWlsIGFkZHJlc3MKCQkkc2VsZi0+c2V0RHVwbGljYXRlKCRlbWFpbCk7CgoJCSNhbmQg
d2UgaW5jcmVtZW50IG91ciBjb3VudGVycwoJCSRzZXJ2ZXItPmluY3JlbWVudF9tZXNzYWdl
c19zZW50KCk7CgoJfTsKCgkjaWYgYSBtZXNzYWdlIGlzIHdhaXRpbmcsIHRoZW4gZmluaXNo
IGl0IG9mZgoJaWYgKCRzZWxmLT5fd2FpdGluZ19tZXNzYWdlKSB7CgoJCW15ICRoZWFkZXJz
ID0gJHNlbGYtPmJ1aWxkSGVhZGVycygkbGFzdF9kYXRhKTsKCgkJbXkgJG1lc3NhZ2UgPSAk
c2VsZi0+YnVpbGRNZXNzYWdlKCRsYXN0X2RhdGEpOwoKCQkjIGl0IGlzICppbXBlcmF0aXZl
KiB0aGF0IHdlIG9ubHkgc2VuZCBEQVRBIGlmIHdlIGhhdmUgdGhlIGhlYWRlcnMgYW5kIG1l
c3NhZ2UgYm9keS4KCQkjIG90aGVyd2lzZSwgdGhlIHNlcnZlciB3aWxsIGhhbmcuCgkJaWYg
KCRoZWFkZXJzICYmICRtZXNzYWdlKSB7CgkJCW15ICRyYyA9ICRzZXJ2ZXItPnRhbGtfYW5k
X3Jlc3BvbmQoIkRBVEEiKTsKCQkJJHNlcnZlci0+dGFsa19hbmRfcmVzcG9uZCgkJGhlYWRl
cnMgLiAkJG1lc3NhZ2UpIGlmICRyYzsKCQl9CgoJCW15ICRleHRyYWN0ZWRfZW1haWxzID0g
JHNlbGYtPmV4dHJhY3RFbWFpbCgkbGFzdF9kYXRhKTsKCQlpZiAoZGVmaW5lZCAkZXh0cmFj
dGVkX2VtYWlscykgewoJCQkkc2VsZi0+c2V0RHVwbGljYXRlKCRleHRyYWN0ZWRfZW1haWxz
LT57J2V4dHJhY3RlZCd9KTsKCQl9OwoKCQkkc2VsZi0+X3dhaXRpbmdfbWVzc2FnZSgwKTsK
CX07CgoJcmV0dXJuIDE7Cgp9OwoKPXBvZAoKPWl0ZW0gbWFpbAoKV29ya3MgdGhlIHNhbWUg
YXMgLT5idWxrbWFpbCwgYnV0IG9ubHkgb3BlcmF0ZXMgb24gb25lIGVtYWlsIGFkZHJlc3Mg
aW5zdGVhZCBvZiBhIGxpc3QuCgogJGJ1bGstPm1haWwoJ2ppbUBqaW1hbmRrb2thLmNvbScp
OwoKU2VuZHMgeW91ciBNZXNzYWdlIGFzIGRlZmluZWQgaW4gLT5NZXNzYWdlIHRvIGppbUBq
aW1hbmRrb2thLmNvbS4gWW91IGNhbiBhbHNvIG9wdGlvbmFsbHkgcGFzcyBpbiBhIHNlcnZl
ciBhcyB0aGUgc2Vjb25kIGFyZ3VtZW50LgoKICRidWxrLT5tYWlsKCdqaW1AamltYW5ka29r
YS5jb20nLCAkc2VydmVyKTsKCmlzIHRoZSBzYW1lIGFzIGFib3ZlLCBidXQgcmVsYXlzIHRo
cm91Z2ggdGhhdCBwYXJ0aWN1bGFyIHNlcnZlci4gaWYgeW91IGRvbid0IHBhc3MgYSBzZXJ2
ZXIsIGlmIHRyaWVzIHRvIGJyaW5nIHRoZSBuZXh0IG9uZQppbiB2aWEgLT5uZXh0U2VydmVy
CgotPm1haWwgd2FudHMgaXRzIGZpcnN0IGFyZ3VtZW50IHRvIGJlIHdoYXRldmVyIHdvdWxk
IGJlIG5vcm1hbGx5IHJldHVybmVkIGJ5IGEgY2FsbCB0byAtPmdldE5leHRMaW5lKCRidWxr
LT5MSVNUKTsgUmlnaHQgbm93LAp0aGF0J3MganVzdCBhIHNpbmdsZSBlbWFpbCBhZGRyZXNz
LiBCdXQgdGhhdCBtYXkgY2hhbmdlIGluIGEgc3ViY2xhc3MuIFNvLCBpZiB5b3UncmUgb3Bl
cmF0aW5nIGluIGEgc3ViY2xhc3MsIGp1c3QgcmVtZW1iZXIgdGhhdAp5b3UgbWF5IGJlIGFi
bGUgKG9yIHJlcXVpcmVkKSB0byBwYXNzIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24gaW4geW91
ciBmaXJzdCBhcmd1bWVudC4KClRoaXMgbWV0aG9kIGlzIGtub3duIHRvIGJlIGFibGUgdG8g
cmV0dXJuOgoKIE1CMDE4IC0gYmFubmVkIGVtYWlsCiBNQjAxOSAtIGludmFsaWQgc2VuZGVy
L2Zyb20gYWRkcmVzcwoKPWN1dAoKc3ViIG1haWwgewoJbXkgJHNlbGYJCQk9IHNoaWZ0OwoJ
bXkgJGRhdGEJCQk9IHNoaWZ0OwoJbXkgJHBhc3NlZF9zZXJ2ZXIJPSBzaGlmdDsKCglteSAk
c2VydmVyCT0gJHBhc3NlZF9zZXJ2ZXIgfHwgJHNlbGYtPm5leHRTZXJ2ZXIoKSB8fCByZXR1
cm4gdW5kZWY7CgoJJGRhdGEgPSAkc2VsZi0+cHJlcHJvY2VzcygkZGF0YSk7CgoJbXkgJGV4
dHJhY3RlZF9lbWFpbHMgPSAkc2VsZi0+ZXh0cmFjdEVtYWlsKCRkYXRhKSB8fCByZXR1cm4g
dW5kZWY7CglteSAkZW1haWwgPSAkZXh0cmFjdGVkX2VtYWlscy0+eydleHRyYWN0ZWQnfTsK
CglpZiAobXkgJGIgPSAkc2VsZi0+aXNCYW5uZWQoJGVtYWlsKSl7CgoJCSRzZWxmLT5sb2dU
b0ZpbGUoJHNlbGYtPkJBRCwgJGRhdGEpIGlmICRzZWxmLT5CQUQ7CgoJCXJldHVybiAkc2Vs
Zi0+ZXJyb3IoIkludmFsaWQgZW1haWwgYWRkcmVzcyAkZW1haWwgOiAiIC4gKCRiID09IDIg
PyAnYmFubmVkIGRvbWFpbicgOiAnYmFubmVkIGFkZHJlc3MnKSwgIk1CMDE4Iik7Cgl9OwoK
CSNyZXNldCBvdXIgY29ubmVjdGlvbiwganVzdCB0byBiZSBzYWZlCgoJJHNlcnZlci0+dGFs
a19hbmRfcmVzcG9uZCgiUlNFVCIpCgkJfHwgcmV0dXJuICRzZWxmLT5lcnJvcigkc2VydmVy
LT5lcnJvciwgJHNlcnZlci0+ZXJyY29kZSwgJ25vdCBsb2dnZWQnKTsKCglteSAkZnJvbV9o
YXNoID0gJHNlbGYtPmV4dHJhY3RTZW5kZXIoJGRhdGEpCgkJfHwgcmV0dXJuICRzZWxmLT5l
cnJvcigiQ291bGQgbm90IGdldCB2YWxpZCBzZW5kZXIvZnJvbSBhZGRyZXNzIiwgIk1CMDE5
Iik7CgoJbXkgJGZyb20gPSAkZnJvbV9oYXNoLT57J2V4dHJhY3RlZCd9OwoKCSNzYXkgd2hv
IHRoZSBtZXNzYWdlIGlzIGZyb20KCSRzZXJ2ZXItPnRhbGtfYW5kX3Jlc3BvbmQoIk1BSUwg
RlJPTTo8IiAuICRmcm9tIC4gIj4iKQoJCXx8IHJldHVybiAkc2VsZi0+ZXJyb3IoJHNlcnZl
ci0+ZXJyb3IsICRzZXJ2ZXItPmVycmNvZGUsICdub3QgbG9nZ2VkJyk7CgoJI25vdywgd2Ug
YWRkIHRoaXMgZW1haWwgYWRkcmVzcyB0byB0aGUgZW52ZWxvcGUKCSRzZXJ2ZXItPnRhbGtf
YW5kX3Jlc3BvbmQoIlJDUFQgVE86PCIgLiAkZW1haWwgLiAiPiIpCgkJfHwgcmV0dXJuICRz
ZWxmLT5lcnJvcigkc2VydmVyLT5lcnJvciwgJHNlcnZlci0+ZXJyY29kZSwgJ25vdCBsb2dn
ZWQnKTsKCgkjd2UgYnVpbGQgdGhlIGhlYWRlcnMgYW5kIG1lc3NhZ2UgYm9keSBGSVJTVCwg
dG8gbWFrZSBzdXJlIHdlIGhhdmUgdGhlbS4KCSN0aGF0IHdheSwgd2UgY2FuIG5ldmVyIHNl
bmQgREFUQSB3L28gYSBtZXNzYWdlIGFuZCBoYW5nIHRoZSBzZXJ2ZXIKCW15ICRoZWFkZXJz
ID0gJHNlbGYtPmJ1aWxkSGVhZGVycygkZGF0YSkgfHwgcmV0dXJuIHVuZGVmOwoKCW15ICRt
ZXNzYWdlID0gJHNlbGYtPmJ1aWxkTWVzc2FnZSgkZGF0YSkgfHwgcmV0dXJuIHVuZGVmOwoK
CSRzZXJ2ZXItPnRhbGtfYW5kX3Jlc3BvbmQoIkRBVEEiKQoJCXx8IHJldHVybiAkc2VsZi0+
ZXJyb3IoJHNlcnZlci0+ZXJyb3IsICRzZXJ2ZXItPmVycmNvZGUsICdub3QgbG9nZ2VkJyk7
CgoJJHNlcnZlci0+dGFsa19hbmRfcmVzcG9uZCgkJGhlYWRlcnMgLiAkJG1lc3NhZ2UpIHx8
IHJldHVybiB1bmRlZjsKCgkjbWFrZSBhIG5vdGUgb2YgdGhlIGVtYWlsIGFkZHJlc3MgaW4g
dGhlIGxvZwoJJHNlbGYtPmxvZ1RvRmlsZSgkc2VsZi0+R09PRCwgJGRhdGEpIGlmICRzZWxm
LT5HT09EOwoKCXJldHVybiAkZW1haWw7Cn07CgoxOwoKX19FTkRfXwoKPXBvZAoKPWJhY2sK
Cj1oZWFkMSBGQVEKCj1vdmVyIDUKCj1pdGVtIFNvIGp1c3QgaG93IGZhc3QgaXMgdGhpcyB0
aGluZywgYW55d2F5Pz4KCkkgZG9uJ3Qga25vdyBhbnkgbW9yZSwgSSBkb24ndCBoYXZlIGFj
Y2VzcyB0byB0aGUgc2FtZSBnaWdhbnRpYyBsaXN0cyBJIHVzZWQgdG8gYW55bW9yZS4gIDp+
KAoKQnV0LCBiYXNpY2FsbHksIFJlYWxseSBmYXN0LiAgUmVhbGx5IHN0dXBlbmRvdXNseSBp
bmNyZWRpYmx5IGZhc3QuCgpUaGUgbGFzdCBvZmZpY2lhbCBiaWcgYmVuY2htYXJrIEkgcmFu
IHdhcyB3aXRoIHYxLjExLiBUaGF0IGxpc3QgcnVucyB0aHJvdWdoIHRvIGNvbXBsZXRpb24g
aW4gYWJvdXQKYW4gaG91ciBhbmQgNDMgbWludXRlcywgd2hpY2ggbWVhbnQgdGhhdCBNYWls
OjpCdWxrbWFpbCAxLjExIGNvdWxkIHByb2Nlc3MgKGF0IGxlYXN0KSA4ODQgbWVzc2FnZXMg
cGVyIG1pbnV0ZSBvciBhYm91dAo1MywxMDAgcGVyIGhvdXIuCgpUaGUgbGFzdCBtZXNzYWdl
IHNlbnQgb3V0IHdhcyA0LDk3OSBieXRlcy4gIDQ5NzkgeCA5MSwxNDAgcGVvcGxlIGlzIDQ1
Myw3ODYsMDYwIGJ5dGVzIG9mIGRhdGEKdHJhbnNmZXJyZWQsIG9yIGFib3V0IDQ1My43ODYg
bWVnYWJ5dGVzIGluIDEgaG91ciBhbmQgNDMgbWludXRlcy4gIFRoaXMgaXMgYSBzdXN0YWlu
ZWQgdHJhbnNmZXIgcmF0ZSBvZiBhYm91dCA0LjQgbWVnYWJ5dGVzCnBlciBtaW51dGUsIG9y
IDI2NC4zNCBtZWdhYnl0ZXMgcGVyIGhvdXIuCgpTbyB0aGVuLCB0aGF0IHRlbGxzIHlvdSBo
b3cgZmFzdCB0aGUgc29mdHdhcmUgd2FzIGJhY2sgaW4gMTk5OSwgMiBtYWpvciByZXZpc2lv
bnMgYWdvLiBCdXQsIGludmFyaWFibHksIHlvdSB3YW50IHRvIGtub3cgd2hhdCBpdCdzCmxp
a2UgKm5vdyosIHJpZ2h0PyBXZWxsLCBJJ2xsIGRvIG15IGJlc3QgdG8gZ3Vlc3N0aW1hdGUg
aXQuIEhvd2V2ZXIsIHRoZXNlIHRlc3RzIHdlcmUgbm90IHJ1biB0aHJvdWdoIGFuIFNNVFAg
cmVsYXksIHRoZXkgd2VyZSBydW4KdXNpbmcgRHVtbXlTZXJ2ZXIgaW4gdjMuMCBhbmQgYSBo
YWNrZWQgMi4wNSBhbmQgKHNldmVyZWx5KSBoYWNrZWQgMS4xMSB0byBpbnNlcnQgc2ltaWxh
ciBmdW5jdGlvbmFsaXR5LiBBbGwgZGF0YSB3YXMgc2VudCB0byAvZGV2L251bGwuCgpUZXN0
cyB3ZXJlIHBlcmZvcm1lZCBvbiBhIDUsMDAwIHJlY2lwaWVudCBsaXN0LgoKRmlyc3Qgb2Yg
YWxsLCB3aXRoIGVudmVsb3BlIHNlbmRpbmcgdHVybmVkIG9mZiAoYXZlcmFnZSB0aW1lcyk6
CgogdjEuMTEuLi4uLi4yMCBzZWNvbmRzCSgxLjAwKQogdjMuMDAuLi4uLi4yMyBzZWNvbmRz
CSgxLjE1KQogdjIuMDUuLi4uLi41MCBzZWNvbmRzCSgyLjUpCgoxLjExIHdhcyB0aGUgc3Bl
ZWQgY2hhbXAgaW4gdGhpcyBjYXNlLCBidXQgdGhhdCdzIG5vdCBzdXJwcmlzaW5nIGNvbnNp
ZGVyaW5nIHRoZSBmYWN0IHRoYXQgaXQgZGlkIGEgbG90IGxlc3MgcHJvY2Vzc2luZyB0aGFu
IHRoZQpvdGhlciAyLiBUaGUgZmFjdCB0aGF0IDMuMDAgYWxtb3N0IGNhdGNoZXMgaXQgc2hv
dWxkIHNwZWFrIHRvIHRoZSBpbXByb3ZlbWVudCBpbiB0aGUgY29kZSBpbiB0aGUgMy54IHJl
bGVhc2UuIDIuMDUgd2FzLi4uY2x1bmt5LgoKTm93IHRoZW4sIHRoZXJlJ3MgYW5vdGhlciB0
aGluZyB0byBjb25zaWRlciwgZW52ZWxvcGUgc2VuZGluZy4gV2l0aCBlbnZlbG9wZSBzZW5k
aW5nIHR1cm5lZCBvbiAoYXZlcmFnZSB0aW1lcyk6CgogdjMuMDAuLi4uLi4xMiBzZWNvbmRz
CSgxLjAwKQogdjIuMDUuLi4uLi4xOSBzZWNvbmRzCSgxLjU4KQogdjEuMTEuLi4uLi4yMiBz
ZWNvbmRzCSgxLjgzKQoKVGhpcyBpcyB3aXRoIGFuIGVudmVsb3BlX2xpbWl0IG9mIDEwMC4g
U28gdGhlIHN1cHBvc2VkIHNwZWVkIGdhaW5zIHRoYXQgZW52ZWxvcGUgc2VuZGluZyB3ZXJl
IHN1cHBvc2VkIHRvIHNlZSBpbiAyLjA1IG5ldmVyCnJlYWxseSBtYXRlcmlhbGl6ZWQuIFdo
aWxlIGRvaW5nIHRoZXNlIHRlc3RzLCBJIGRpc2NvdmVyZWQgYSBidWcgaW4gMi4wNSdzIHVz
ZV9lbnZlbG9wZSByb3V0aW5lIHRoYXQgd291bGQgc29tZXRpbWVzIGNhdXNlIGl0CnRvIHNs
b3cgZG93biBzdWJzdGFudGlhbGx5LiAzLjAwLCB3aXRoIGEgbmV3IHJvdXRpbmUsIHdhcyBu
ZXZlciBhZmZlY3RlZC4gSW5jaWRlbnRhbGx5LCBCdWxrbWFpbCAyLjA1IHdpbGwgYmUgZmFz
dGVyIHdpdGggdHJpdmlhbGx5CmxvdyBlbnZlbG9wZV9saW1pdHMuIEJ1bGttYWlsIDMuMDAg
YmVjb21lcyBmYXN0ZXIgd2l0aCBhbiBlbnZlbG9wZV9saW1pdCBncmVhdGVyIHRoYW4gMi4K
ClRoZXJlIGlzIGFsc28gbWFpbCBtZXJnaW5nIChmaWxlbWFwcGluZyBpbiAxLngpIHRoYXQg
c2hvdWxkIGJlIGNvbnNpZGVyZWQuIFRoaXMgd2FzIGJlbmNobWFya2VkIHdpdGggTWFpbDo6
QnVsa21haWw6OkR5bmFtaWMgZm9yIDMuMDAuCkEgc2ltcGxlIG1haWwgbWVyZ2Ugd2l0aCBv
bmUgaXRlbSB3YXMgdXNlZCwgYW5kIG9uZSBnbG9iYWwgaXRlbSwgcmVhZCBmcm9tIGEgZmls
ZSwgYW5kIHNwbGl0IG9uIGEgZGVsaW1pdGVyIChzaW5jZSB0aGlzIHdhcyB0aGUKb25seSBm
dW5jdGlvbmFsaXR5IHRoYXQgdjEueCBoYWQpLiBXaXRoIG1haWwgbWVyZ2UgdHVybmVkIG9u
IChhdmVyYWdlIHRpbWVzKToKCiB2MS4xMS4uLi4uLjIwIHNlY29uZHMJKDEuMDApCiB2My4w
MC4uLi4uLjM1IHNlY29uZHMJKDEuNzUpCiB2Mi4wNS4uLi4uLjQwIHNlY29uZHMJKDIuMDAp
CgpBbmQgZmluYWxseSwgMi54IGFuZCAzLnggaGF2ZSBib3RoIGhhZCB0aGUgY2FwYWJpbGl0
eSB0byBnZW5lcmF0ZSBhIGR5bmFtaWMgbWVzc2FnZS4gVGhpcyBpcyBhIG1pbmltYWwgdGVz
dCB3aXRoIG9uZSBkeW5hbWljCm1lc3NhZ2UgZWxlbWVudCwgb25lIGR5bmFtaWMgaGVhZGVy
LCBhbmQgYSBtYWlsIG1lcmdlIGludG8gdGhlIGR5bmFtaWMgZWxlbWVudDoKCiB2My4wMC4u
Li4uLjM2IHNlY29uZHMJKDEuMDApCiB2Mi4wNS4uLi4uLjQ0IHNlY29uZHMJKDEuMjIpCgpT
byAzLnggaXMgdXN1YWxseSBmYXN0ZXIgdGhhbiAyLngsIGJ1dCBzb21ldGltZXMgc2xvd2Vy
IHRoYW4gMS54LiBXaGljaCBtYWtlcyBzZW5zZSwgYWdhaW4gZHVlIHRvIHRoZSBhZGRlZCBm
ZWF0dXJlcyBpbiAyLnggYW5kIDMueC4KClRoZXNlIHRlc3RzIGRvIG5vdCB0YWtlIGludG8g
YWNjb3VudCB0aGUgbXVsdGktc2VydmVyIGNhcGFiaWxpdHkgaW50cm9kdWNlZCBpbiAzLjAw
LgoKQWxzbyBub3RlIHRoYXQgdGhlc2Ugc3BlZWRzIGFyZSBvbmx5IG1lYXN1cmluZyB0aGUg
dGltZSBpdCB0YWtlcyB0byBnZXQgZnJvbSBNYWlsOjpCdWxrbWFpbCB0byB5b3VyIFNNVFAg
cmVsYXkuIFRoZXJlIGFyZSBubwptZWFzdXJlbWVudHMgcmVmbGVjdGluZyBob3cgbG9uZyBp
dCBtYXkgdGFrZSB5b3VyIFNNVFAgcmVsYXkgdG8gc2VuZCB0aGUgZGF0YSBvbiB0byB0aGUg
cmVjaXBpZW50cyBvbiB5b3VyIGxpc3QuCgo9aXRlbSBBbSBJIGdvaW5nIHRvIHNlZSBzcGVl
ZHMgdGhhdCBmYXN0PwoKTWF5YmUsIG1heWJlIG5vdC4gIEl0IGRlcGVuZHMgb24gaG93IGJ1
c3kgeW91ciBTTVRQIHNlcnZlciBpcy4gIElmIHlvdSBoYXZlIGEgcmVsYXRpdmVseSB1bnVz
ZWQgU01UUCBzZXJ2ZXIgd2l0aCBhIGZhaXIgYW1vdW50Cm9mIGhvcnNlcG93ZXIgYW5kIGEg
ZmFzdCBjb25uZWN0aW9uLCB5b3UgY2FuIGVhc2lseSBnZXQgdGhlc2Ugc3BlZWRzIG9yIGJl
eW9uZC4gIElmIHlvdSBoYXZlIGEgcmVsYXRpdmVseSBidXN5IGFuZC9vciBsb3cgcG93ZXJl
ZApTTVRQIHNlcnZlciBvciBzbG93IGNvbm5lY3Rpb25zLCB5b3UncmUgbm90IGdvaW5nIHRv
IHJlYWNoIHNwZWVkcyB0aGF0IGZhc3QuCgo9aXRlbSBIb3cgbXVjaCBmYXN0ZXIgd2lsbCBN
YWlsOjpCdWxrbWFpbCBiZSB0aGFuIG15IGN1cnJlbnQgc3lzdGVtPwoKVGhpcyBpcyBhIHZl
cnkgdG91Z2ggcXVlc3Rpb24gdG8gYW5zd2VyLCBzaW5jZSBpdCBkZXBlbmRzIGhpZ2hseSB1
cG9uIHdoYXQgeW91ciBjdXJyZW50IHN5c3RlbSBpcy4gIEZvciB0aGUgc2FrZSBvZiBhcmd1
bWVudCwKbGV0J3MgYXNzdW1lIHRoYXQgZm9yIHlvdXIgY3VycmVudCBzeXN0ZW0sIHlvdSBv
cGVuIGFuIFNNVFAgY29ubmVjdGlvbiB0byB5b3VyIHNlcnZlciwgc2VuZCBhIG1lc3NhZ2Us
IGFuZCBjbG9zZSB0aGUgY29ubmVjdGlvbi4KQW5kIHRoZW4gcmVwZWF0LiAgT3Blbiwgc2Vu
ZCwgY2xvc2UsIGV0Yy4KCk1haWw6OkJ1bGttYWlsIHdpbGwgSTxhbHdheXM+IGJlIGZhc3Rl
ciB0aGFuIHRoaXMgYXBwcm9hY2ggc2luY2UgaXQgb3BlbnMgb25lIFNNVFAgY29ubmVjdGlv
biBhbmQgc2VuZHMgZXZlcnkgc2luZ2xlIG1lc3NhZ2UgYWNyb3NzCm9uIHRoYXQgb25lIGNv
bm5lY3Rpb24uICBIb3cgbXVjaCBmYXN0ZXIgZGVwZW5kcyBvbiBob3cgYnVzeSB5b3VyIHNl
cnZlciBpcyBhcyB3ZWxsIGFzIHRoZSBzaXplIG9mIHlvdXIgbGlzdC4gVGhlIGNvbm5lY3Rp
b24gd2lsbApvbmx5IGJlIGNsb3NlZCBpZiB5b3UgaGF2ZSBhbiBlcnJvciBvciBpZiB5b3Ug
cmVhY2ggdGhlIG1heCBudW1iZXIgb2YgbWVzc2FnZXMgdG8gc2VuZCBpbiBhIGdpdmVuIHNl
cnZlciBjb25uZWN0aW9uLgoKTGV0cyBhc3N1bWUgKGZvciBzaW1wbGljaXR5J3Mgc2FrZSkg
dGhhdCB5b3UgaGF2ZSBhIGxpc3Qgb2YgMTAwLDAwMCBwZW9wbGUuICBXZSdsbCBhbHNvIGFz
c3VtZSB0aGF0IHlvdSBoYXZlIGEgcHJldHR5IGJ1c3kKU01UUCBzZXJ2ZXIgYW5kIGl0IHRh
a2VzIChvbiBhdmVyYWdlKSAyNSBzZWNvbmRzIGZvciB0aGUgc2VydmVyIHRvIHJlc3BvbmQg
dG8gYSBjb25uZWN0aW9uIHJlcXVlc3QuICBXZSdyZSBtYWtpbmcgMTAwLDAwMApjb25uZWN0
aW9uIHJlcXVlc3RzICh3aXRoIHlvdXIgb2xkIHN5c3RlbSkuICBUaGF0IG1lYW5zIDEwMCww
MDAgeCAyNSBzZWNvbmRzID0gYWxtb3N0IDI5IGRheXMgd2FpdGluZyBqdXN0IHRvIG1ha2Ug
Y29ubmVjdGlvbnMKdG8gdGhlIHNlcnZlciEgIE1haWw6OkJ1bGttYWlsIG1ha2VzIG9uZSBj
b25uZWN0aW9uLCB0YWtlcyAyNSBzZWNvbmRzIGZvciBpdCwgYW5kIGVuZHMgdXAgYmVpbmcg
MTAwLDAwMHggZmFzdGVyIQoKQnV0LCBub3cgbGV0cyBhc3N1bWUgdGhhdCB5b3UgaGF2ZSBh
IHZlcnkgdW5idXN5IFNNVFAgc2VydmVyIGFuZCBpdCByZXNwb25kcyB0byBjb25uZWN0aW9u
IHJlcXVlc3RzIGluIC4wMDMgc2Vjb25kcy4gIFdlJ3JlIG1ha2luZwoxMDAsMDAwIGNvbm5l
Y3Rpb24gcmVxdWVzdHMuICBUaGF0IG1lYW5zIDEwMCwwMDAgeCAuMDAwMyBzZWNvbmRzID0g
YWJvdXQgNSBtaW51dGVzIHdhaXRpbmcgdG8gbWFrZSBjb25uZWN0aW9ucyB0byB0aGUgc2Vy
dmVyLgpNYWlsOjpCdWxrbWFpbCBtYWtlcyBvbiBjb25uZWN0aW9uLCB0YWtlcyAuMDAwMyBz
ZWNvbmRzIGZvciBpdCwgYW5kIGVuZHMgdXAgb25seSBiZWluZyAxNjY2eCBmYXN0ZXIuICBC
dXQsIGV2ZW4gdGhvdWdoIGJlaW5nCjEsNjY2IHRpbWVzIGZhc3RlciBzb3VuZHMgaW1wcmVz
c2l2ZSwgdGhlIHdvcmxkIHdvbid0IHN0b3Agc3Bpbm5pbmcgb24gaXRzIGF4aXMgaWYgeW91
IHVzZSB5b3VyIG9sZCBzeXN0ZW0gYW5kIHRha2UgdXAgYW4gZXh0cmEKNSBtaW51dGVzLgoK
QW5kIHRoaXMgZG9lc24ndCBldmVuIGJlZ2luIHRvIHRha2UgaW50byBhY2NvdW50IHN5c3Rl
bXMgdGhhdCBkb24ndCBvcGVuIGFuZCBjbG9zZSBTTVRQIGNvbm5lY3Rpb25zIGZvciBlYWNo
IG1lc3NhZ2UuCgpUaGlzIGFsc28gZG9lc24ndCB0YWtlIGludG8gYWNjb3VudCB0aGUgbG9h
ZCBiYWxhbmNpbmcgYmV0d2VlbiBtdWx0aXBsZSBTTVRQIHJlbGF5cyB0aGF0IDMuMDAgY2Fu
IHBlcmZvcm0uCgpJbiBzaG9ydCwgdGhlcmUncyBubyB3YXkgZm9yIG1lIHRvIHRlbGwgaG93
IG11Y2ggZmFzdGVyIChpZiBhdCBhbGwpIGl0J2xsIGJlLiBUcnkgaXQgYW5kIGZpbmQgb3V0
LgoKPWl0ZW0gSGF2ZSB5b3UgYmVuY2htYXJrZWQgaXQgYWdhaW5zdCBhbnl0aGluZyBlbHNl
PwoKTm90IHNjaWVudGlmaWNhbGx5LiAgSSd2ZSBoZWFyZCB0aGF0IE1haWw6OkJ1bGttYWls
IDEuMTAgaXMgYWJvdXQgNC01eCBmYXN0ZXIgdGhhbiBMaXN0Y2FzdGVyIGZyb20gTXVzdGFu
ZyBTb2Z0d2FyZSwgYnV0IEkgZG9uJ3QKaGF2ZSBhbnkgaGFyZCBudW1iZXJzLiAgQnV0IG5v
dGhpbmcgYmV5b25kIHRoYXQuCgpJZiB5b3Ugd2FudCB0byBiZW5jaG1hcmsgaXQgYWdhaW5z
dCBzb21lIG90aGVyIHN5c3RlbSBhbmQgbGV0IG1lIGtub3cgdGhlIHJlc3VsdHMsIGl0J2xs
IGJlIG11Y2ggYXBwcmVjaWF0ZWQuICA6LSkKCj1pdGVtIENhbiBJIHNlbmQgc3BhbSB3aXRo
IHRoaXMgdGhpbmc/CgpOby4gIERvbid0IGJlIGEgamVyay4KCj1pdGVtIFNNVFAgcmVsYXk/
IFdhenphdD8KCkFsbCBNYWlsOjpCdWxrbWFpbCBkb2VzIGlzIHByb3ZpZGUgeW91IGEgcXVp
Y2sgd2F5IHRvIHJlbGF5IGluZm9ybWF0aW9uIGZyb20geW91ciBsb2NhbCBtYWNoaW5lIHRo
cm91Z2ggdG8geW91ciBTTVRQIHJlbGF5ICh3aGljaCBtYXkKYmUgdGhlIHNhbWUgbWFjaGlu
ZSkuIFlvdXIgU01UUCByZWxheSB0aGVuIHNlbmRzIHRoZSBtZXNzYWdlcyBvbiB0byB0aGUg
cmVzdCBvZiB0aGUgd29ybGQuCgpTbyB5b3VyIFNNVFAgc2VydmVyIG11c3QgYmUgY29uZmln
dXJlZCBwcm9wZXJseSB0byBhbGxvdyB5b3UgdG8gcmVsYXkgeW91ciBtZXNzYWdlcyBvdXQu
IEl0IGlzIHJlY29tbWVuZGVkIHRoYXQgdGhpcyBtYWNoaW5lIGJlIGtlcHQKYmVoaW5kIGEg
ZmlyZXdhbGwgZm9yIHNlY3VyaXR5IHJlYXNvbnMuIE1ha2Ugc3VyZSB0aGF0IGl0J3MgY29u
ZmlndXJlZCBwcm9wZXJseSBzbyBpdCdzIG5vdCBhbiBvcGVuIHJlbGF5LiBBc2sgeW91ciBT
eXNBZG1pbiBmb3IgaGVscC4KCj1pdGVtIFdoYXQgYWJvdXQgbXVsdGktcGFydCBtZXNzYWdl
cz8KCk5vdCB5ZXQgc3VwcG9ydGVkLiBJJ2xsIGRlZmluaXRlbHkgYWRkIGludGVybmFsIHN1
cHBvcnQgZm9yIG11bHRpLXBhcnQvYWx0ZXJuYXRpdmUgaW4gdGhlIGZ1dHVyZS4KClVudGls
IHRoZW4/IFlvdSBjYW4gYWx3YXlzIGRvIHRoZSBNSU1FIGVuY29kaW5nIHlvdXJzZWxmLCBz
ZXQgeW91ciBvd24gaGVhZGVycywgZXRjLiBJdCdzIHBlcmZlY3RseSBmaW5lIHRvIGRvIGl0
IHlvdXJzZWxmLCBidXQgeW91CndpbGwgaGF2ZSB0byBkbyBpdCB5b3Vyc2VsZiBmb3Igbm93
LgoKPWl0ZW0gTWFpbDo6QnVsa21haWwgaXMgcmVhbGx5IGNvb2wsIGJ1dCB3aGF0J2QgYmUg
ZXZlbiBjb29sZXIgaXMgYSBmcm9udCBlbmQgZm9yIHRoZSB0aGluZyEgRG8geW91IGhhdmUg
b25lIG9mIHRob3NlPwoKSSBkb24ndC4gQnV0IGNoZWNrIG91dCBNb2pvIE1haWw6CgogaHR0
cDovL21vam8uc2themF0LmNvbS8KCkFjdGl2ZSBjb21tdW5pdHksIGRldmVsb3BlciwgZXRj
LiBMb29rcyBsaWtlIGEgZ29vZCBwcm9kdWN0LgoKPWl0ZW0gWW91IGtub3csIHlvdSByZS1p
bnZlbnQgYSBsb3Qgb2Ygd2hlZWxzLgoKWWVhaCwgSSBkby4gSGV5LCBjJ21vbiwgSSB3cml0
ZSB0aGlzIHN0dWZmIGZvciB0aGUgZnVuIG9mIGl0LiBBbmQgdGhhdCBtZWFucyB0aGF0IEkn
bSBnb2luZyB0byBkbyBpdCB0aGUgd2F5IHRoYXQgSSB3YW50IHRvLiA6KQpCZXNpZGVzLCBJ
J3ZlIG5ldmVyIGhhZCBhbnkgcHJvYmxlbSB3aXRoIHJlLWludmVudGluZyB3aGVlbHMuIEFm
dGVyIGFsbCwgaWYgdGhlIHdoZWVsIGhhZG4ndCBiZWVuIHJlLWludmVudGVkIGEgZmV3IHRp
bWVzLCB3ZSdkCnN0aWxsIGJlIHVzaW5nIHNvbGlkIHBsYWluIHdvb2RlbiB3aGVlbHMuIE5v
dCB0byBzYXkgdGhhdCBJIG5lY2Vzc2FyaWx5IHRoaW5rIHRoYXQgSSd2ZSBpbnZlbnRlZCBi
ZXR0ZXIgdGhpbmdzIGhlcmUgdGhhbiBhcmUKYXZhaWxhYmxlIGVsc2V3aGVyZSwgYnV0IEkg
bWlnaHQgZXZlbnR1YWxseS4gV2hvIGtub3dzLgoKQW55d2F5LCB5b3UncmUgbW9yZSB0aGFu
IGZyZWUgdG8gc3ViY2xhc3MgYW5kIG92ZXItcmlkZSB0aGluZ3Mgd2l0aCAic3RhbmRhcmQi
IG1vZHVsZXMgaWYgeW91J2QgbGlrZS4gb3UgY2FuIG1ha2UgeW91cgpvd24gc2VydmVyIGlt
cGxlbWVudGF0aW9uIHVzaW5nIE5ldDo6U01UUCwgb3IgeW91ciBvd24gZHluYW1pYyBtZXNz
YWdlIHN5c3RlbSB1c2luZyBUZXh0OjpUZW1wbGF0ZSwgb3Igd2hhdGV2ZXIgZWxzZS4gRmVl
bCBmcmVlCnRvIHVzZSB0aGUgc3RhbmRhcmRzIGlmIHlvdSdkIHByZWZlci4KCk1lPyBJIGVu
am95IHJlLWludmVudGluZyB3aGVlbHMsIHNvIEknbGwgY29udGludWUgdG8gZG8gc28uCgo9
aXRlbSBEdWRlISBXYXJuaW5ncyBpcyBvbiEKClRoYXQncyBieSBkZXNpZ24uIE5vdGhpbmcg
aW4gdGhlIGNvZGUgZXZlciBzaG91bGQgZ2VuZXJhdGUgYSB3YXJuaW5nLCBidXQgaWYgaXQg
ZG9lcywgdGhlbiBwbGVhc2UgcGxlYXNlIEI8cGxlYXNlPiBsZXQgbWUga25vdwphYm91dCBp
dCBzbyBJIGNhbiBwYXRjaCBpdC4gWW91IGNhbiBhbHdheXMgdHVybiBvZmYgd2FybmluZ3Mg
eW91cnNlbGYgaWYgeW91J3JlIHdvcnJpZWQvYW5ub3llZC4KCj1pdGVtIFNvIHdoYXQgaXMg
aXQgd2l0aCB0aGVzZSB2ZXJzaW9uIG51bWJlcnMgYW55d2F5PwoKSSdtIGdvaW5nIHRvIEk8
dHJ5PiB0byBiZSBjb25zaXN0ZW50IGluIGhvdyBJIG51bWJlciB0aGUgcmVsZWFzZXMuCgpU
aGUgQjxodW5kcmVkdGhzPiBkaWdpdCB3aWxsIGluZGljYXRlIGJ1ZyBmaXhlcywgbWlub3Ig
YmVoaW5kLXRoZS1zY2VuZXMgY2hhbmdlcywgZXRjLgoKVGhlIEI8dGVudGhzPiBkaWdpdCB3
aWxsIGluZGljYXRlIG5ldyBhbmQvb3IgYmV0dGVyIGZ1bmN0aW9uYWxpdHksIGFzIHdlbGwg
YXMgc29tZSBtaW5vciBuZXcgZmVhdHVyZXMuCgpUaGUgQjxvbmVzPiBkaWdpdCB3aWxsIGlu
ZGljYXRlIGEgbWFqb3IgbmV3IGZlYXR1cmUgb3IgcmUtd3JpdGUuCgpCYXNpY2FsbHksIGlm
IHlvdSBoYXZlIHguYWIgYW5kIHguYWMgY29tZXMgb3V0LCB5b3Ugd2FudCB0byBnZXQgaXQg
Z3VhcmFudGVlZC4gIFNhbWUgZm9yIHguYWQsIHguYWUsIGV0Yy4KCklmIHlvdSBoYXZlIHgu
YWMgYW5kIHguYmEgY29tZXMgb3V0LCB5b3UnbGwgcHJvYmFibHkgd2FudCB0byBnZXQgaXQu
ICBJbnZhcmlhYmx5IHRoZXJlIHdpbGwgYmUgYnVnIGZpeGVzIGZyb20gdGhlIGxhc3QgImh1
bmRyZWR0aHMiCnJlbGVhc2UsIGJ1dCBpdCdsbCBhbHNvIGhhdmUgYWRkaXRpb25hbCBmZWF0
dXJlcy4gIFRoZXNlIHdpbGwgYmUgdGhlIHJlbGVhc2VzIHRvIGJlIHN1cmUgdG8gcmVhZCB1
cCBvbiB0byBtYWtlIHN1cmUgdGhhdCBub3RoaW5nCmRyYXN0aWMgaGFzIGNoYW5nZXMuCgpJ
ZiB5b3UgaGF2ZSB4LmFjIGFuZCB5LmFjIGNvbWVzIG91dCwgeW91J2xsIHdhbnQgdG8gZG8g
cmVzZWFyY2ggYmVmb3JlIHVwZ3JhZGluZy4gSSBicmVhayB0aGluZ3MsIEkgbG9zZSBiYWNr
d2FyZHMgY29tcGF0aWJpbGl0eSwKSSBjaGFuZ2Ugc3R1ZmYgYXJvdW5kIGEgbG90LiBKdXN0
IG15IG5hdHVyZS4gUG9ydGluZyBmcm9tIG9uZSBtYWpvciByZWxlYXNlIHRvIHRoZSBuZXh0
IGlzIHByZXR0eSBzdHJhaWdodGZvcndhcmQsIGJ1dCB0aGVyZSdzIHN0aWxsCndvcmsgdG8g
YmUgZG9uZSBvbiB5b3VyIHBhcnQgLSBpdCB3b24ndCBqdXN0IGJlIGEgZHJvcCBpbiByZXBs
YWNlbWVudC4gQW5kLCBkZXBlbmRpbmcgdXBvbiB5b3VyIGxpc3QgYW5kIHdoYXQgb3B0aW9u
cyB5b3UncmUgdXNpbmcsIHlvdQptYXkgb3IgbWF5IG5vdCBzZWUgYW55IGJlbmVmaXQgdG8g
dXBncmFkaW5nLiBSZWFkIHRoZSBkb2NzLCBhc2sgbWUgcXVlc3Rpb25zLCBhbmQgdGVzdCB0
ZXN0IHRlc3QuCgpEb24ndCBnZXQgbWUgd3JvbmcsIEknbSBub3QgZ29pbmcgdG8gaW50ZW50
aWFsbHkgKnRyeSogdG8gbWFrZSB0aGluZ3Mgbm90IGJhY2t3YXJkcyBjb21wYXRpYmxlLCBi
dXQgaWYgSSBjb21lIHVwIHdpdGggd2hhdCBJIHRoaW5rCmlzIGEgYmV0dGVyIHdheSBvZiBk
b2luZyB0aGluZ3MsIEknbSBnb2luZyB0byBnbyB3aXRoIGl0LiBBbmQgSSBkb24ndCBsaWtl
IHRvIHBvbGx1dGUgbW9kdWxlcyB3aXRoIGEgbG90IG9mIGNydWZ0IGJyaWRnZXdvcmtzIGZv
cgpiYWNrd2FyZHMgY29tcGF0aWJpbGl0eS4gVGhpcyB0aGluZyBpcyBodWdlIGVub3VnaCBh
cyBpcyB3aXRob3V0IGhhdmluZyB0byB3b3JyeSBhYm91dCBtYWtpbmcgc3VyZSBpbnRlcm5h
bCBiYW5kLWFpZHMgd29yay4KCklmIHRoaXMnbGwgYmUgYSBwcm9ibGVtLCB0aGVuIGRvbid0
IHVwZ3JhZGUuCgo9aXRlbSBJcyBhbnl0aGluZyBtaXNzaW5nIHZzLiB0aGUgb2xkIHZlcnNp
b25zPwoKWWVzLiBZb3UgY2FuJ3QgY3VycmVudGx5IGV4dHJhY3QgaGVhZGVycyBmcm9tIHRo
ZSBtZXNzYWdlIHlvdSdyZSBzZW5kaW5nLiBUaGlzIHdpbGwgcmV0dXJuIGluIHRoZSBmdXR1
cmUsIHByb2JhYmx5LgoKV2hlbiB1c2luZyBkeW5hbWljX2hlYWRlcl9kYXRhLCB5b3UgY2Fu
IG5vIGxvbmdlciBzZXQgYSBkZWZhdWx0IGhlYWRlciB0byBiZSB1c2VkIGlmIG5vIGhlYWRl
ciBpcyBkZWZpbmVkIGZvciB0aGUgaW5kaXZpZHVhbCB1c2VyLgpUaGlzIHdpbGwgYWxzbyBw
cm9iYWJseSByZXR1cm4gaW4gdGhlIGZ1dHVyZS4KCmxvY2FsIG1lcmdlcyBubyBsb25nZXIg
ZXhpc3QuIFlvdSBvbmx5IGhhdmUgZ2xvYmFsIG1lcmdlcyBhbmQgaW5kaXZpZHVhbCBvbmVz
LgoKSXQgd2lsbCBub3cgZGF0ZSBhbGwgbWVzc2FnZXMgdG8gdGhlIHRpbWUgb2YgdGhlIGZp
cnN0IHNlbnQgbWVzc2FnZS4KCllvdSBjYW4gbm8gbG9uZ2VyIGV4dGVybmFsbHkgbG9hZCBp
biBhIGxpc3Qgb2YgZHVwbGljYXRlcy4gQ29tZSBvbiwgZGlkICphbnlib2R5KiBldmVyIGFj
dHVhbGx5IGRvIHRoYXQ/Cgo9aXRlbSBXaGVuIEkgdHJ5IHRvIGJ1bGttYWlsLCBJIGdldCBh
biBlcnJvciB0aGF0IHNheXMgIkNhbm5vdCBidWxrbWFpbC4uLm5vIFRvIGFkZHJlc3MiIEhv
dyBkbyBJIGZpeCB0aGlzPwoKWWEga25vdywgSSBCPHRob3VnaHQ+IHRoaXMgZXJyb3Igd2Fz
IHNlbGYtZXhwbGFuYXRvcnksIGJ1dCBjb25zaWRlcmluZyB0aGUgbnVtYmVyIG9mIHBlb3Bs
ZSB0aGF0IGVtYWlsIG1lCmFib3V0IGl0LCBJIGd1ZXNzIGl0J3Mgbm90LgoKVGhlIGlzc3Vl
IGhlcmUgaXMgdGhhdCAoc2F5IGl0IHdpdGggbWUgbm93KSwgeW91IGNhbid0IGJ1bGttYWls
IGJlY2F1c2UgdGhlIFRvIGhlYWRlciBoYXNuJ3QgYmVlbiBzZXQuCklmIHlvdSdyZSB1c2lu
ZyBlbnZlbG9wZSBzZW5kaW5nIChvbiBieSBkZWZhdWx0IGluIE1haWw6OkJ1bGttYWlsKSwg
dGhlbiB5b3UgaGF2ZSB0byBzcGVjaWZ5IGFuIGFkZHJlc3MKdG8gc2V0IGluIHRoZSBUbzog
aGVhZGVyIG9mIHRoZSBtZXNzYWdlLiBUaGlzIGlzIHNwZWNpZmllZCB2aWEgdGhlIC0+VG8g
YWNjZXNzb3IuCgogJGJ1bGstPlRvKCJteWxpc3RAbXlzaXRlLmNvbSIpOwoKU28sIHNwZWNp
ZnkgdGhlIFRvIGhlYWRlciwgYW5kIHRoZW4geW91J2xsIGJlIGZpbmUuCgo9aXRlbSBXb3cs
IHRoaXMgbW9kdWxlIGlzIHJlYWxseSBjb29sLiAgSGF2ZSB5b3UgY29udHJpYnV0ZWQgYW55
dGhpbmcgZWxzZSB0byBDUEFOPwoKWWVzLCBDYXJwOjpOb3RpZnkgYW5kIFRleHQ6OkZsb3dj
aGFydAoKPWl0ZW0gV2FzIHRoYXQgYSBzaGFtZWxlc3MgcGx1Zz8KCldoeSwgeWVzLiAgWWVz
IGl0IHdhcy4KCj1pdGVtIEFueXRoaW5nIGVsc2UgeW91IHdhbnQgdG8gdGVsbCBtZT8KClN1
cmUsIGFueXRoaW5nIHlvdSBuZWVkIHRvIGtub3cuICBKdXN0IGRyb3AgbWUgYSBtZXNzYWdl
LgoKPWJhY2sKCj1oZWFkMSBFWEFNUExFUwoKI3NpbXBsZSBtYWlsaW5nIHdpdGggYSBsaXN0
IGNhbGxlZCAiLi9saXN0LnR4dCIKCiBteSAkYnVsayA9IE1haWw6OkJ1bGttYWlsLT5uZXco
CiAJIkxJU1QiIAkJPT4gIi4vbGlzdC50eHQiLAogCSJTdWJqZWN0Igk9PiAiQSB0ZXN0IG1l
c3NhZ2UiLAogCSJNZXNzYWdlIgk9PiAiVGhpcyBpcyBteSB0ZXN0IG1lc3NhZ2UiLAogCSJG
cm9tIgkJPT4gJ21lQG15ZG9tYWluLmNvbScsCiAJIlRvIgkJPT4gJ3NvbWVsaXN0QG15ZG9t
YWluLmNvbScsCiAJIlJlcGx5LVRvIgk9PiAncmVwbGllc0BteWRvbWFpbi5jb20nCiApIHx8
IGRpZSBNYWlsOjpCdWxrbWFpbC0+ZXJyb3IoKTsKCiAkYnVsay0+YnVsa21haWwgfHwgZGll
ICRidWxrLT5lcnJvcjsKCiNzYW1lIHRoaW5nLCBidXQgdHVybmluZyBvZmYgZW52ZWxvcGUg
c2VuZGluZwoKIG15ICRidWxrID0gTWFpbDo6QnVsa21haWwtPm5ldygKIAkiTElTVCIgCQkJ
PT4gIi4vbGlzdC50eHQiLAogCSJTdWJqZWN0IgkJPT4gIkEgdGVzdCBtZXNzYWdlIiwKIAki
TWVzc2FnZSIJCT0+ICJUaGlzIGlzIG15IHRlc3QgbWVzc2FnZSIsCiAJIkZyb20iCQkJPT4g
J21lQG15ZG9tYWluLmNvbScsCiAJIlJlcGx5LVRvIgkJPT4gJ3JlcGxpZXNAbXlkb21haW4u
Y29tJywKIAkidXNlX2VudmVsb3BlIiA9PiAwCiApIHx8IGRpZSBNYWlsOjpCdWxrbWFpbC0+
ZXJyb3IoKTsKCiAkYnVsay0+YnVsa21haWwgfHwgZGllICRidWxrLT5lcnJvcjsKCiNTbWFs
bCBleGFtcGxlLCB3aXRoIGEgbWluaWF0dXJlIGluIG1lbW9yeSBsaXN0CgogbXkgJGJ1bGsg
PSBNYWlsOjpCdWxrbWFpbC0+bmV3KAogCSJMSVNUIiAJCT0+IFtxdyh0ZXN0QG15ZG9tYWlu
LmNvbSBtZUBteWRvbWFpbi5jb20gdGVzdDJAbXlkb21haW4uY29tKV0sCiAJIlN1YmplY3Qi
CT0+ICJBIHRlc3QgbWVzc2FnZSIsCiAJIk1lc3NhZ2UiCT0+ICJUaGlzIGlzIG15IHRlc3Qg
bWVzc2FnZSIsCiAJIkZyb20iCQk9PiAnbWVAbXlkb21haW4uY29tJywKIAkiVG8iCQk9PiAn
c29tZWxpc3RAbXlkb21haW4uY29tJywKIAkiUmVwbHktVG8iCT0+ICdyZXBsaWVzQG15ZG9t
YWluLmNvbScsCiAJIlNlbmRlciIJPT4gJ3NlbmRlckBteWRvbWFpbi5jb20nCiApIHx8IGRp
ZSBNYWlsOjpCdWxrbWFpbC0+ZXJyb3IoKTsKCiAkYnVsay0+YnVsa21haWwgfHwgZGllICRi
dWxrLT5lcnJvcjsKCiNNYWtlIHN1cmUgb3VyIGVycm9yIGxvZ2dpbmcgaXMgb24gaW4gYSBk
aWZmZXJlbnQgcGxhY2UsIGFuZCBzZXQgdXAgYSBkaWZmZXJlbnQgc2VydmVyCgogbXkgJHNl
cnZlciA9IE1haWw6OkJ1bGttYWlsOjpTZXJ2ZXItPm5ldygKIAknU210cCcgPT4gInNtdHAu
bXlkb21haW4uY29tIiwKIAkiUG9ydCIgPT4gMjUKICkgfHwgZGllIE1haWw6OkJ1bGttYWls
OjpTZXJ2ZXItPmVycm9yKCk7CgogbXkgJGJ1bGsgPSBNYWlsOjpCdWxrbWFpbC0+bmV3KAog
CSJMSVNUIiAJCT0+ICIuL2xpc3QudHh0IiwKIAkiU3ViamVjdCIJPT4gIkEgdGVzdCBtZXNz
YWdlIiwKIAkiTWVzc2FnZSIJPT4gIlRoaXMgaXMgbXkgdGVzdCBtZXNzYWdlIiwKIAkiRnJv
bSIJCT0+ICdtZUBteWRvbWFpbi5jb20nLAogCSJUbyIJCT0+ICdzb21lbGlzdEBteWRvbWFp
bi5jb20nLAogCSJSZXBseS1UbyIJPT4gJ3JlcGxpZXNAbXlkb21haW4uY29tJywKIAkiRVJS
RklMRSIJPT4gJy9ldGMvbWIvZXJyb3IuZmlsZS50eHQnLAogCSJzZXJ2ZXJzIgk9PiBbJHNl
cnZlcl0JI291ciBuZXcgc2VydmVyCiApIHx8IGRpZSBNYWlsOjpCdWxrbWFpbC0+ZXJyb3Io
KTsKCiAkYnVsay0+YnVsa21haWwgfHwgZGllICRidWxrLT5lcnJvcjsKCiNNYWtlIHN1cmUg
b3VyIGVycm9yIGxvZ2dpbmcgaXMgb24gaW4gYSBkaWZmZXJlbnQgcGxhY2UsIGFuZCBzZXQg
dXAgYSBkaWZmZXJlbnQgc2VydmVyCiN0aGlzIHRpbWUsIHdlJ2xsIHVzZSBhIGR1bW15IHNl
cnZlciBmb3IgZGVidWdnaW5nIHB1cnBvc2VzCgogbXkgJGR1bW15X3NlcnZlciA9IE1haWw6
OkJ1bGttYWlsOjpEdW1teVNlcnZlci0+bmV3KAogCSJkdW1teV9maWxlIgk9PiAiL2V0Yy9t
Yi9kdW1teS5zZXJ2ZXIub3V0cHV0LnR4dCIKICkgfHwgZGllIE1haWw6OkJ1bGttYWlsOjpE
dW1teVNlcnZlci0+ZXJyb3IoKTsKCiBteSAkYnVsayA9IE1haWw6OkJ1bGttYWlsLT5uZXco
CiAJIkxJU1QiIAkJPT4gIi4vbGlzdC50eHQiLAogCSJTdWJqZWN0Igk9PiAiQSB0ZXN0IG1l
c3NhZ2UiLAogCSJNZXNzYWdlIgk9PiAiVGhpcyBpcyBteSB0ZXN0IG1lc3NhZ2UiLAogCSJG
cm9tIgkJPT4gJ21lQG15ZG9tYWluLmNvbScsCiAJIlRvJwkJPT4gJ3NvbWVsaXN0QG15ZG9t
YWluLmNvbScsCiAJIlJlcGx5LVRvIgk9PiAncmVwbGllc0BteWRvbWFpbi5jb20nLAogCSJF
UlJGSUxFIgk9PiAnL2V0Yy9tYi9lcnJvci5maWxlLnR4dCcsCiAJInNlcnZlcnMiCT0+IFsk
ZHVtbXlfc2VydmVyXQkjb3VyIG5ldyBzZXJ2ZXIsIHdoaWNoIGlzIGEgZHVtbXkgc2VydmVy
CiApIHx8IGRpZSBNYWlsOjpCdWxrbWFpbC0+ZXJyb3IoKTsKCiAkYnVsay0+YnVsa21haWwg
fHwgZGllICRidWxrLT5lcnJvcjsKCiNtYWlsaW5nIGp1c3QgdG8gb25lIGFkZHJlc3MKCiBt
eSAkYnVsayA9IE1haWw6OkJ1bGttYWlsLT5uZXcoCiAJIlN1YmplY3QiCT0+ICJBIHRlc3Qg
bWVzc2FnZSIsCiAJIk1lc3NhZ2UiCT0+ICJUaGlzIGlzIG15IHRlc3QgbWVzc2FnZSIsCiAJ
IkZyb20iCQk9PiAnbWVAbXlkb21haW4uY29tJywKIAkiUmVwbHktVG8iCT0+ICdyZXBsaWVz
QG15ZG9tYWluLmNvbScsCiAJIlNlbmRlciIJPT4gJ3NlbmRlckBteWRvbWFpbi5jb20nCiAp
IHx8IGRpZSBNYWlsOjpCdWxrbWFpbC0+ZXJyb3IoKTsKCiAkYnVsay0+bWFpbCgndGVzdEB5
b3VyZG9tYWluLmNvbScpIHx8IGRpZSAkYnVsay0+ZXJyb3I7CgojaGVyZSwgYSBmdW4gb25l
LiBVc2UgYSBjb2RlcmVmIGFzIG91ciBMSVNUCgogbXkgJHF1ZXJ5ID0gInNlbGVjdCBlbWFp
bCwgZG9tYWluIGZyb20gdGFibGUgb3JkZXIgYnkgZG9tYWluIjsKIG15ICRzdG10ID0gJGRi
aC0+cHJlcGFyZSgkcXVlcnkpIHx8IGRpZTsKCiAkc3RtdC0+ZXhlY3V0ZSB8fCBkaWU7Cgog
c3ViIGdldF9saXN0IHsKIAlteSAkYnVsayA9IHNoaWZ0OyAjd2UgYWx3YXlzIGdldCBvdXIg
YnVsa21haWwgb2JqZWN0IGZpcnN0CgogCW15ICRkYXRhID0gJHN0bXQtPmZldGNocm93X2hh
c2hyZWYoKTsKCiAJaWYgKCRkYXRhKSB7CiAJCXJldHVybiAkZGF0YS0+eyJlbWFpbCJ9Owog
CX0KIAllbHNlIHsKIAkJcmV0dXJuIHVuZGVmOwogCX07CiB9OwoKICRidWxrLT5MSVNUKFwm
Z2V0X2xpc3QpOwoKICNhbmQgbm93LCBsb2dnaW5nIHRvIGEgY29kZXJlZi4KCiBteSAkcXVl
cnkgPSAoJ2luc2VydCBpbnRvIHRhYmxlIGdvb2RfYWRkcmVzc2VzIChlbWFpbCkgdmFsdWVz
ICg/KScpOwogbXkgJHN0bXQgPSAkZGJoLT5wcmVwYXJlKCRxdWVyeSkgfHwgZGllOwoKIHN1
YiBzdG9yZV90b19kYiB7CiAJbXkgJGJ1bGsJPSBzaGlmdDsgI2Fsd2F5cyBnZXQgb3VyIGJ1
bGttYWlsIG9iamVjdCBmaXJzdAogCW15ICRlbWFpbAk9IHNoaWZ0OwoKIAkkc3RtdC0+ZXhl
Y3V0ZSgkZW1haWwpIHx8IHJldHVybiAkYnVsay0+ZXJyb3IoIkNvdWxkIG5vdCBzdG9yZSB0
byBEQiEiKTsKIAlyZXR1cm4gMTsKIH07CgogJGJ1bGstPkdPT0QoXCZzdG9yZV90b19kYik7
Cgo9aGVhZDEgU0FNUExFIENPTkZJRyBGSUxFCgpUaGlzIGlzIG15IGN1cnJlbnQgY29uZiBm
aWxlLiBJdCdzIGFib3V0IGFzIGNsb3NlIHRvIG9uZSB0aGF0IHlvdSB3YW50IHRvIHVzZSBh
cyBwb3NzaWJsZS4gUmVtZW1iZXIsIHlvdQpjYW4gc2V0IGFueSB2YWx1ZXMgeW91J2QgbGlr
ZSBpbiB0aGUgY29uZiBmaWxlLCBhcyBsb25nIGFzIHRoZXkncmUgc2NhbGFycyBvciBhcnJh
eXJlZnMgb2Ygc2NhbGFycy4gRm9yIGV4YW1wbGUsIGlmIHlvdQp3YW50IGEgZGVmYXVsdCAi
RnJvbSIgdmFsdWUsIHRoZW4gZGVmaW5lIGl0IGluIHRoZSBjb25mIGZpbGUuCgpGb3IgbW9y
ZSBpbmZvcm1hdGlvbiBvbiBjb25mIGZpbGVzLCBzZWUgTWFpbDo6QnVsa21haWw6Ok9iamVj
dC4gRm9yIG1vcmUgaW5mb3JtYXRpb24gb24gdGhlIHNlcnZlciBmaWxlLCBzZWUKTWFpbDo6
QnVsa21haWw6OlNlcnZlci4gVGhpcyBmaWxlIGlzIGFsc28gc3RvcmVkIGluIHRoZSBmaWxl
ICJzYW1wbGUuY2ZnLmZpbGUiCgogZGVmaW5lIHBhY2thZ2UgTWFpbDo6QnVsa21haWwKCiAj
c2VydmVyX2NsYXNzIHN0b3JlcyB0aGUgc2VydmVyIG9iamVjdCB0aGF0IHdlJ3JlIGdvaW5n
IHRvIHVzZS4KICN1bmNvbW1lbnQgdGhlIER1bW15U2VydmVyIGxpbmUgYW5kIGNvbW1lbnQg
b3V0IHRoZSBTZXJ2ZXIgbGluZSBmb3IgZGVidWdnaW5nCgogc2VydmVyX2NsYXNzID0gTWFp
bDo6QnVsa21haWw6OlNlcnZlcgogI3NlcnZlcl9jbGFzcyA9IE1haWw6OkJ1bGttYWlsOjpE
dW1teVNlcnZlcgoKICNsb2cgb3VyIGVycm9ycwogRVJSRklMRSA9IC9ldGMvbWIvZXJyb3Iu
dHh0CiBCQUQgICAgPSAvZXRjL21iL2JhZC50eHQKIEdPT0QgICA9IC9ldGMvbWIvZ29vZC50
eHQKIGJhbm5lZCA9IC9ldGMvbWIvYmFubmVkLnR4dAoKICNpZiB3ZSB3YW50IGEgZGVmYXVs
dCBGcm9tIHZhbHVlLCB5b3UgY2FuIHBsYWNlIGl0IGhlcmUuCiAjRnJvbSA9IG1lQG15ZG9t
YWluLmNvbQoKIGRlZmluZSBwYWNrYWdlIE1haWw6OkJ1bGttYWlsOjpTZXJ2ZXIKCiAjc2V0
IHVwIHRoZSBkb21haW4gd2UgdXNlIHRvIHNheSBIRUxPIHRvIG91ciByZWxheQogRG9tYWlu
ID0gbXlkb21haW4uY29tCgogI01vc3Qgc2VydmVycyBhcmUgZ29pbmcgdG8gY29ubmVjdCBv
biBwb3J0IDI1LCBzbyB3ZSdsbCBzZXQgdGhpcyBhcyB0aGUgZGVmYXVsdCBwb3J0IGhlcmUK
IFBvcnQgPSAyNQoKICNXZSdsbCBnaXZlIGl0IDUgdHJpZXMgdG8gY29ubmVjdCBiZWZvcmUg
d2UgbGV0IC0+Y29ubmVjdCBmYWlsCiBUcmllcyA9IDUKCiAjTGV0cyB0cnkgdG8gcmVjb25u
ZWN0IHRvIGEgc2VydmVyIDUgdGltZXMgaWYgLT5jb25uZWN0IGZhaWxzLgogbWF4X2Nvbm5l
Y3Rpb25fYXR0ZW1wdHMgPSA1CgogIzEwMCBpcyBhIGdvb2QgbnVtYmVyIGZvciB0aGUgZW52
ZWxvcGVfbGltaXQKIGVudmVsb3BlX2xpbWl0ID0gMTAwCgogI1NlbmQgMSwwMDAgbWVzc2Fn
ZXMgdG8gZWFjaCBzZXJ2ZXIgaW4gdGhlIHJvdW5kIGJlZm9yZSBnb2luZyB0byB0aGUgbmV4
dCBvbmUuCiAjc2V0IG1heF9tZXNzYWdlc19wZXJfcm9iaW4gdG8gMCBpZiB5b3UncmUgb25s
eSB1c2luZyBvbmUgc2VydmVyLCBvdGhlcndpc2UgeW91J2xsIGhhdmUgbmVlZGxlc3MKICNv
dmVyaGVhZAogbWF4X21lc3NhZ2VzX3Blcl9yb2JpbiA9IDAKCiAjbWF4aW11bSBudW1iZXIg
b2YgbWVzc2FnZXMgcGVyIGNvbm5lY3Rpb24uIFByb2JhYmx5IGJlc3QgdG8ga2VlcCB0aGlz
IDAgdW5sZXNzIHlvdSBoYXZlIGEgcmVhc29uCiAjdG8gZG8gb3RoZXJ3aXNlCiBtYXhfbWVz
c2FnZXNfcGVyX2Nvbm5lY3Rpb24gPSAwCgogI21heGltdW0gbnVtYmVyIG9mIG1lc3NhZ2Vz
IGZvciB0aGUgc2VydmVyLiBQcm9iYWJseSBiZXN0IHRvIGtlZXAgdGhpcyAwIHVubGVzcyB5
b3UgaGF2ZSBhIHJlYXNvbgogI3RvIGRvIG90aGVyd2lzZQogbWF4X21lc3NhZ2VzPSAwCgog
I21heGltdW0gbnVtYmVyIG9mIG1lc3NhZ2VzIHRvIHNlbmQgYmVmb3JlIHNsZWVwaW5nLCBw
cm9iYWJseSBiZXN0IHRvIGtlZXAgdGhpcyAwIHVubGVzcyB5b3UgbmVlZAogI3RvIGxldCB5
b3VyIHNlcnZlciByZWxheCBhbmQgc2xlZXAKIG1heF9tZXNzYWdlc193aGlsZV9hd2FrZSA9
IDAKCiAjc2xlZXAgZm9yIDEwIHNlY29uZHMgaWYgd2UncmUgc2xlZXBpbmcuIFRoaXMgbGlu
ZSBpcyBjb21tZW50ZWQgb3V0IGJlY2F1c2Ugd2UgZG9uJ3QgbmVlZCBpdC4KICNObyBoYXJt
IGluIHVuY29tbWVudGluZyBpdCwgdGhvdWdoLgogI3NsZWVwX2xlbmd0aCA9IDEwCgogI291
ciBsaXN0IG9mIHNlcnZlcnMKIHNlcnZlcl9maWxlID0gL2V0Yy9tYi9zZXJ2ZXJzLnR4dAoK
IGRlZmluZSBwYWNrYWdlIE1haWw6OkJ1bGttYWlsOjpEeW5hbWljCgogI2l0IGlzIGhpZ2hs
eSByZWNvbW1lbmRlZCB0aGF0IHF1b3RlbWV0YSBiZSAxCiBxdW90ZW1ldGEgPSAxCgogI3Nl
dCB1cCBvdXIgZGVmYXVsdCBkZWxpbWl0ZXJzCiBkeW5hbWljX21lc3NhZ2VfZGVsaW1pdGVy
CQkJPSA7CiBkeW5hbWljX21lc3NhZ2VfdmFsdWVfZGVsaW1pdGVyCT0gPQogZHluYW1pY19o
ZWFkZXJfZGVsaW1pdGVyCQkJPSA7CiBkeW5hbWljX2hlYWRlcl92YWx1ZV9kZWxpbWl0ZXIJ
CT0gPQoKICN3ZSdyZSBnb2luZyB0byBhc3N1bWUgdGhhdCBkdXBsaWNhdGVzIGhhdmUgYmVl
biB3ZWVkZWQgb3V0LCBzbyB3ZSdsbCBhbGxvdyB0aGVtLgogVHJ1c3RpbmcJQD0gZHVwbGlj
YXRlcwoKICNCeSBkZWZhdWx0LCB3ZSdsbCB0dXJuIG9uIG91ciBlbnZlbG9wZS4gTWFpbDo6
QnVsa21haWwgbWlnaHQgYXMgd2VsbCB1c2UgaXQuCiAjTWFpbDo6QnVsa21haWw6OkR5bmFt
aWMgZG9lc24ndCBjYXJlIGFib3V0IHRoaXMgdmFsdWUuCiB1c2VfZW52ZWxvcGUgICAgCT0g
MQoKIGRlZmluZSBwYWNrYWdlIE1haWw6OkJ1bGttYWlsOjpEdW1teVNlcnZlcgoKICNPdXIg
ZHVtbXkgZGF0YSBmaWxlLCBmb3Igd2hlbiB3ZSdyZSB1c2luZyBEdW1teVNlcnZlci4gSXQn
cyBhbHNvIHVzZWZ1bCB0byBzZW5kIHRoZSBkYXRhIHRvCiAjL2Rldi9udWxsIHRvIHRlc3Qg
dGhpbmdzIGlmIHlvdSBkb24ndCBjYXJlIGFib3V0IHRoZSBtZXNzYWdlIG91dHB1dC4KIGR1
bW15X2ZpbGUgPSAvZXRjL21iL2R1bW15LmZpbGUKICNkdW1teV9maWxlID0gL2Rldi9udWxs
Cgo9aGVhZDEgRElBR05PU1RJQ1MKCkJ1bGttYWlsIGRvZXNuJ3QgZGlyZWN0bHkgZ2VuZXJh
dGUgYW55IGVycm9ycy4gIElmIHNvbWV0aGluZyBmYWlscywgaXQgd2lsbCByZXR1cm4gdW5k
ZWYKYW5kIHNldCB0aGUgLT5lcnJvciBwcm9wZXJ0eSBvZiB0aGUgYnVsa21haWwgb2JqZWN0
LiAgSWYgeW91J3ZlIHByb3ZpZGVkIGFuIGVycm9yIGxvZyBmaWxlLAp0aGUgZXJyb3Igd2ls
bCBiZSBwcmludGVkIG91dCB0byB0aGUgbG9nIGZpbGUuCgpDaGVjayB0aGUgcmV0dXJuIG9m
IHlvdXIgZnVuY3Rpb25zLCBpZiBpdCdzIHVuZGVmLCBjaGVjayAtPmVycm9yIHRvIGZpbmQg
b3V0IHdoYXQgaGFwcGVuZWQuCgpCZSB3YXJuZWQgdGhhdCBpc0R1cGxpY2F0ZSBhbmQgaXNC
YW5uZWQgd2lsbCByZXR1cm4gMCBpZiBhbiBhZGRyZXNzIGlzIG5vdCBhIGR1cGxpY2F0ZSBv
ciBiYW5uZWQsIHJlc3BlY3RpdmVseSwKYnV0IHRoaXMgaXMgbm90IGFuIGVycm9yIGNvbmRp
dGlvbi4KCj1oZWFkMSBTRUUgQUxTTwoKTWFpbDo6QnVsa21haWw6Ok9iamVjdCwgTWFpbDo6
QnVsa21haWw6OlNlcnZlciwgTWFpbDo6QnVsa21haWw6OkR1bW15Cgo9aGVhZDEgQ09QWVJJ
R0hUIChhZ2FpbikKCkNvcHlyaWdodCBhbmQgKGMpIDE5OTksIDIwMDAsIDIwMDEsIDIwMDIs
IDIwMDMgSmFtZXMgQSBUaG9tYXNvbiBJSUkgKGppbUBqaW1hbmRrb2thLmNvbSkuIEFsbCBy
aWdodHMgcmVzZXJ2ZWQuCk1haWw6OkJ1bGttYWlsIGlzIGRpc3RyaWJ1dGVkIHVuZGVyIHRo
ZSB0ZXJtcyBvZiB0aGUgUGVybCBBcnRpc3RpYyBMaWNlbnNlLgoKPWhlYWQxIENPTlRBQ1Qg
SU5GTwoKU28geW91IGRvbid0IGhhdmUgdG8gc2Nyb2xsIGFsbCB0aGUgd2F5IGJhY2sgdG8g
dGhlIHRvcCwgSSdtIEppbSBUaG9tYXNvbiAoamltQGppbWFuZGtva2EuY29tKSBhbmQgZmVl
ZGJhY2sgaXMgYXBwcmVjaWF0ZWQuCkJ1ZyByZXBvcnRzL3N1Z2dlc3Rpb25zL3F1ZXN0aW9u
cy9ldGMuICBIZWxsLCBkcm9wIG1lIGEgbGluZSB0byBsZXQgbWUga25vdyB0aGF0IHlvdSdy
ZSB1c2luZyB0aGUgbW9kdWxlIGFuZCB0aGF0IGl0J3MKbWFkZSB5b3VyIGxpZmUgZWFzaWVy
LiAgOi0pCgpodHRwOi8vd3d3LmppbWFuZGtva2EuY29tL2ppbS9wZXJsLyBmb3IgbW9yZSBw
ZXJsIGluZm8sIGh0dHA6Ly93d3cuamltYW5ka29rYS5jb20gaW4gZ2VuZXJhbAoKPWN1dAo=
--------------040407030003050600030602--
