Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:39490
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 25577 invoked from network); 6 Apr 2005 02:09:14 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 6 Apr 2005 02:09:14 -0000
Received: (qmail 16817 invoked by uid 225); 6 Apr 2005 02:09:14 -0000
Delivered-To: modules@perl.org
Received: (qmail 16799 invoked by alias); 6 Apr 2005 02:09:13 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
Received: from pause.fiz-chemie.de (HELO pause.perl.org) (195.149.117.110)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Tue, 05 Apr 2005 19:09:10 -0700
Received: from pause.perl.org (localhost [127.0.0.1])
	by pause.perl.org (8.12.3/8.12.3/Debian-7.1) with ESMTP id j3629664013821
	for <modules@perl.org>; Wed, 6 Apr 2005 04:09:06 +0200
Received: (from nobody@localhost)
	by pause.perl.org (8.12.3/8.12.3/Debian-7.1) id j36296HD013819;
	Wed, 6 Apr 2005 04:09:06 +0200
Date: Wed, 6 Apr 2005 04:09:06 +0200
Message-ID: <200504060209.j36296HD013819@pause.perl.org>
MIME-Version: 1.0
Subject: PAUSE ID request (PHCOTE; =?UTF-8?Q?=20Philippe=20C=C3=83=C2=B4t=C3=83=C2=A9?=)
Content-Type: Text/Plain; Charset=ISO-8859-1
Reply-To: modules@perl.org
To: modules@perl.org
Content-Transfer-Encoding: 8bit
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")

Request to register new user

fullname: Philippe Côté
  userid: PHCOTE
    mail: CENSORED
homepage: http://nothing94.250x.com
     why:

    I will add a perl module that allows you to tracked down memory
    leaks and circular references. Memory leaks are tracked down by
    using a module that encapsulates the "tie" method. In fact, you can
    monitor ANY type of code using the same syntax (You don't have to
    know the variable type (StdArray, StdHash, etc)). Circular
    references print the complete circular reference, so you immediately
    see where it is, and if it is weaken. printCircularRef has a lot
    more features than Data::Structure::Util::has_circular_ref, and
    there is no segmentation faults...


The following links are only valid for PAUSE maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_user&USERID=b1900000_2bf94d3daa5584cd&SUBMIT_pause99_add_user_sub=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_user&USERID=b1900000_2bf94d3daa5584cd&SUBMIT_pause99_add_user_Definitely=1
