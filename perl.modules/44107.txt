Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:44107
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 2049 invoked from network); 15 Sep 2005 12:55:01 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 15 Sep 2005 12:55:01 -0000
Received: (qmail 2608 invoked by uid 225); 15 Sep 2005 12:55:01 -0000
Delivered-To: modules@perl.org
Received: (qmail 2603 invoked by alias); 15 Sep 2005 12:55:00 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
Received: from pause.fiz-chemie.de (HELO pause.perl.org) (195.149.117.110)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Thu, 15 Sep 2005 05:54:54 -0700
Received: from pause.perl.org (localhost [127.0.0.1])
	by pause.perl.org (8.12.3/8.12.3/Debian-7.1) with ESMTP id j8FCsmrd014224
	for <modules@perl.org>; Thu, 15 Sep 2005 14:54:48 +0200
Received: (from nobody@localhost)
	by pause.perl.org (8.12.3/8.12.3/Debian-7.1) id j8FCslpC014222;
	Thu, 15 Sep 2005 14:54:47 +0200
Date: Thu, 15 Sep 2005 14:54:47 +0200
Message-ID: <200509151254.j8FCslpC014222@pause.perl.org>
Subject: Module submission ORM
Reply-To: modules@perl.org
To: modules@perl.org
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       ORM
  DSLIP:       bdpOl
  description: Object Relational Mapper
  userid:      AKIMOV (Akimov Alexey)
  chapterid:   7 (Database_Interfaces)
  communities:
    http://sourceforge.net/forum/?group_id=146437

  similar:
    Class-DBI

  rationale:

    ORM stands for object relational mapper - the common definition of
    software which purpose is to store objects in relational databases.
    There are many tries to implement such kind of software for
    different languages and platforms. Some of them are very succesful
    and useful (eg. Hibernate for Java).

    This project was started after unsuccessful search of existing ORM
    with certain functionality for Perl. After lot of thinking and
    experimenting was created strict ORM-conception that allows to use
    all features of OOP with objects stored in database and guarantee
    data integrity. With all this going on programmer using ORM should
    not write SQL statements at all. All database operations are
    strongly generalized and collected in separate layer making it
    possible to use many different kinds of databases as storage engines
    for objects. At present in spite of beta-version this project
    successfully used in production environment at my job.

    Below is the brief list of features implemented or planned in ORM,
    notation as follow: "." - feature present in Class-DBI, "+" -
    implemented in beta and missed in Class-DBI, "-" - planned for
    release and missed in Class-DBI:

    + Inheritance of persistent objects . Transaction support + No SQL
    statement writings needed even for complex queries (more
    compatibility between database engines) + Full-featured search of
    objects in DB using perl expressions . One-to-many and many-to-many
    links between objects . Foreign keys emulation + Objects change
    history . Lazy loaded objects - Temporary objects - Suspended
    creation of objects + Objects statistics (utilizes GROUP BY) + Use
    objects of custom classes as properties of persistent object .
    Automatic methods for get and set object properties . Separate layer
    for database operations . Events (or triggers) support

    Object-relational mapping software becoming more popular every day
    and there is no doubt that it will be used as wide as usual
    interfaces to access SQL databases (eg. DBI). Therefore it is
    defensible to use Root namespace 'ORM' for ORM-module that you
    decide to become de facto for Perl.

    I beg your pardon that this message includes not so much
    information about features and information of why my module better
    than others and why particularly this module should obtain root
    namespace, but I am ready to answer your questions and explain its
    features with examples of code.

    I plan to publish my source code in one or two months.

  enteredby:   AKIMOV (Akimov Alexey)
  enteredon:   Thu Sep 15 12:54:43 2005 GMT

The resulting entry would be:

ORM               bdpOl Object Relational Mapper                     AKIMOV


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=23b00000_1fdbab0e9cad3cca&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=23b00000_1fdbab0e9cad3cca&SUBMIT_pause99_add_mod_insertit=1
