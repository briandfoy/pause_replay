Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:35624
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 10761 invoked from network); 12 Oct 2004 19:33:56 -0000
Received: from x1.develooper.com (63.251.223.170)
  by lists.develooper.com with SMTP; 12 Oct 2004 19:33:56 -0000
Received: (qmail 15997 invoked by uid 225); 12 Oct 2004 19:33:55 -0000
Delivered-To: modules@perl.org
Received: (qmail 15986 invoked by alias); 12 Oct 2004 19:33:54 -0000
X-Spam-Status: No, hits=-4.9 required=8.0
	tests=BAYES_00
X-Spam-Check-By: la.mx.develooper.com
Received: from pause.fiz-chemie.de (HELO pause.perl.org) (195.149.117.110)
  by la.mx.develooper.com (qpsmtpd/0.27.1) with ESMTP; Tue, 12 Oct 2004 12:33:52 -0700
Received: from pause.perl.org (localhost [127.0.0.1])
	by pause.perl.org (8.12.3/8.12.3/Debian-7.1) with ESMTP id i9CJXl64011543
	for <modules@perl.org>; Tue, 12 Oct 2004 21:33:47 +0200
Received: (from nobody@localhost)
	by pause.perl.org (8.12.3/8.12.3/Debian-7.1) id i9CJXlL7011541;
	Tue, 12 Oct 2004 21:33:47 +0200
Date: Tue, 12 Oct 2004 21:33:47 +0200
Message-ID: <200410121933.i9CJXlL7011541@pause.perl.org>
Subject: Module submission Hash::Type
Reply-To: modules@perl.org
To: modules@perl.org
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Hash::Type
  DSLIP:       Rdphp
  description: pseudo-hashes as arrays tied to a "type"
  userid:      DAMI (Laurent Dami)
  chapterid:    6 (Data_Type_Utilities)
  communities:

  similar:
    perlref fields Hash::Util Tie::Hash::FixedKeys Tie::StrictHash
    Sort::Fields

  rationale:

    The module has both a OO and a "tie" interface, so putting it in
    the "Tie" namespace would not be appropriate.

    I considered Hash::Pseudo, but this emphasizes too much the
    implementation aspect. I prefer Hash::Type because it reads more
    naturally in code like

    my $personType = new Hash::Type (...) tie %thisGuy, $personType; my
    $thisOtherGuy = new $personType (...)

    A Hash::Type is a collection of field names. Internally, an index
    is associated with each name. Such collections are created
    dynamically and can be extended. They are used to build tied hashes,
    either through C<tie> or through object-oriented method calls.

    The 'pseudo-hashes' documented in L<perlref> are very similar, but
    are deprecated starting from Perl 5.8.0. Each pseudo-hash holds its
    own copy of key names in position 0 of the underlying array, whereas
    hashes tied to C<Hash::Type> hold a reference to a shared collection
    of keys.

    Typed references together with the C<use fields> pragma provide
    support for compile-time translation of key names to array indices;
    see L<fields>. This will be faster, but will not help if field names
    are only known at runtime (like in the flat file parsing example of
    the synopsis).

    For other ways to restrict the keys of a hash to a fixed set, see
    L<Hash::Util/lock_keys>, L<Tie::Hash::FixedKeys>,
    L<Tie::StrictHash>.

    The L<Sort::Fields> module in CPAN uses similar techniques for
    dynamically building sorting criterias according to field positions;
    but it is intended for numbered fields, not for named fields, and
    has no support for caller-supplied comparison operators. The design
    is also a bit different : C<fieldsort> does everything at once
    (splitting, comparing and sorting), whereas C<Hash::Type::cmp> only
    compares, and leaves it to the caller to do the rest.

  enteredby:   DAMI (Laurent Dami)
  enteredon:   Tue Oct 12 19:33:47 2004 GMT

The resulting entry would be:

Hash::
::Type            Rdphp pseudo-hashes as arrays tied to a "type"     DAMI


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=3f600000_a7eeb8da2a2c4b14&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=3f600000_a7eeb8da2a2c4b14&SUBMIT_pause99_add_mod_insertit=1
