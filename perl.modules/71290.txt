Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:71290
Return-Path: <matthewt@agaton.scsys.co.uk>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 14400 invoked from network); 21 May 2010 15:14:21 -0000
Received: from x1.develooper.com (207.171.7.70)
  by x6.develooper.com with SMTP; 21 May 2010 15:14:21 -0000
Received: (qmail 28206 invoked by uid 225); 21 May 2010 15:14:20 -0000
Delivered-To: modules@perl.org
Received: (qmail 28088 invoked by alias); 21 May 2010 15:14:20 -0000
X-Spam-Status: No, hits=-0.0 required=8.0
	tests=T_RP_MATCHES_RCVD
X-Spam-Check-By: la.mx.develooper.com
Received: from jules.scsys.co.uk (HELO jules.scsys.co.uk) (217.168.153.160)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Fri, 21 May 2010 08:14:18 -0700
Received: from [217.168.150.167] (helo=agaton.scsys.co.uk)
	by jules.scsys.co.uk with esmtps (TLS-1.0:RSA_AES_256_CBC_SHA1:32)
	(Exim 4.60)
	(envelope-from <matthewt@agaton.scsys.co.uk>)
	id 1OFTvQ-0007mP-Ua; Fri, 21 May 2010 15:14:13 +0000
Received: from matthewt by agaton.scsys.co.uk with local (Exim 4.60)
	(envelope-from <matthewt@agaton.scsys.co.uk>)
	id 1OFTvP-0003Ld-PE; Fri, 21 May 2010 16:14:11 +0100
Date: Fri, 21 May 2010 16:14:11 +0100
To: Emanuele Zeppieri <emazep@gmail.com>
Cc: modules@perl.org
Subject: Re: Module submission DBIx::DoMore
Message-ID: <20100521151411.GZ15270@agaton.scsys.co.uk>
References: <201005200049.o4K0nthf021769@pause.fiz-chemie.de> <20100520181402.GY15270@agaton.scsys.co.uk> <4BF59ACE.2090006@gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <4BF59ACE.2090006@gmail.com>
User-Agent: Mutt/1.5.11
Approved: news@nntp.perl.org
From: mst@shadowcat.co.uk (Matt S Trout)

On Thu, May 20, 2010 at 10:25:50PM +0200, Emanuele Zeppieri wrote:
> On 20/05/2010 20.14, Matt S Trout wrote:
> 
> >How about DBIx::MultipleStatementDo then?
> 
> This is certainly a much more descriptive name.
> I'll rename my module as soon as I'll get your reply about the question 
> below.

Glad you like the idea.
 
> >Also, can we please have the splitting behaviour in a standalone module
> >so I can steal it for DBIx::Class to use without copy and paste :)
> 
> Sure!
> But, please, have a look at:
> http://search.cpan.org/~emazep/DBIx-DoMore-0.01002/lib/DBIx/DoMore.pm#split
> 
> where you can see that (the to be renamed) DBIx::DoMore already exposes 
> a public, documented (class) method which does precisely that (the 
> method is called "split" indeed ;-)

The guys working on the relevant DBIC bits are quite happy with it as is
since the new deployment management code is already Moose so we're not adding
any deps using it directly.

So sure, leave it in the main package. Thanks!

-- 
Matt S Trout - Shadowcat Systems - Perl consulting with a commit bit and a clue

http://shadowcat.co.uk/blog/matt-s-trout/   http://twitter.com/shadowcat_mst/

Email me now on mst (at) shadowcat.co.uk and let's chat about how our Catalyst
commercial support, training and consultancy packages could help your team.
