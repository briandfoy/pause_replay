Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:46361
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 18603 invoked from network); 9 Dec 2005 17:30:11 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 9 Dec 2005 17:30:11 -0000
Received: (qmail 19915 invoked by uid 225); 9 Dec 2005 17:30:10 -0000
Delivered-To: modules@perl.org
Received: (qmail 19908 invoked by alias); 9 Dec 2005 17:30:10 -0000
X-Spam-Status: No, hits=-2.5 required=8.0
	tests=BAYES_00,FORGED_RCVD_HELO
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
Received: from pause.fiz-chemie.de (HELO pause.perl.org) (195.149.117.110)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Fri, 09 Dec 2005 09:29:59 -0800
Received: from pause.perl.org (localhost [127.0.0.1])
	by pause.perl.org (8.13.4/8.13.4/Debian-3) with ESMTP id jB9HTmvI004912
	for <modules@perl.org>; Fri, 9 Dec 2005 18:29:48 +0100
Received: (from nobody@localhost)
	by pause.perl.org (8.13.4/8.13.4/Submit) id jB9HTmr2004910;
	Fri, 9 Dec 2005 18:29:48 +0100
Date: Fri, 9 Dec 2005 18:29:48 +0100
Message-ID: <200512091729.jB9HTmr2004910@pause.perl.org>
Subject: Module submission POSIX::SchedYield
Reply-To: modules@perl.org
To: modules@perl.org
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       POSIX::SchedYield
  DSLIP:       adcfg
  description: Execute POSIX sched_yield system call
  userid:      MARCB (Marc Beyer)
  chapterid:   4 (Operating_System_Interfaces)
  communities:
    http://perlmonks.org/?node_id=513598

  similar:
    threads

  rationale:

    This modules exposes the POSIX sched_yield(2) system call, which
    lets a process give control back to the processor, thus allowing
    another process to run immediately. The same effect can be achieved
    by calling threads->yield(), since it will call sched_yield(2)
    internally on most systems, but I think it's still worthwhile having
    POSIX::SchedYield, since it's more explicit (users may not know they
    can use threads->yield() for processes), will work on older Perl
    systems and will work on non-threaded versions of Perl. I originally
    suggested the name POSIX::Yield in the perlmonks thread, but after
    thinking about it some more I think POSIX::SchedYield is clearer.

    I intend to propose adding sched_yield to the POSIX module for the
    future (as proposed on the PM thread), but since that module in in
    core the change wouldn't be useable in older versions of Perl.

  enteredby:   MARCB (Marc Beyer)
  enteredon:   Fri Dec  9 17:29:47 2005 GMT

The resulting entry would be:

POSIX::
::SchedYield      adcfg Execute POSIX sched_yield system call        MARCB


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=7fb00000_df1dbd47223ab2ef&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=7fb00000_df1dbd47223ab2ef&SUBMIT_pause99_add_mod_insertit=1
