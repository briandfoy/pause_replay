Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:66724
Return-Path: <mons@cpan.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Delivered-To: moderator for modules@perl.org
Received: (qmail 4513 invoked from network); 17 Jul 2009 12:55:28 -0000
Received: from x1.develooper.com (207.171.7.70)
  by x6.develooper.com with SMTP; 17 Jul 2009 12:55:28 -0000
Received: (qmail 3649 invoked by uid 225); 17 Jul 2009 12:55:27 -0000
Delivered-To: modules@perl.org
Received: (qmail 3635 invoked by alias); 17 Jul 2009 12:55:27 -0000
X-Spam-Status: No, hits=0.0 required=8.0
	tests=
X-Spam-Check-By: la.mx.develooper.com
Received: from mailrelay1.rambler.ru (HELO mailrelay1.rambler.ru) (81.19.66.239)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Fri, 17 Jul 2009 05:55:19 -0700
Received: from kas30pipe.localhost (localhost [127.0.0.1])
	by mailrelay1.rambler.ru (Postfix) with ESMTP id AC033130FC3;
	Fri, 17 Jul 2009 16:55:14 +0400 (MSD)
Received: from prime.rambler.ramblermedia.com (prime.rambler.ramblermedia.com [81.19.90.10])
	by mailrelay1.rambler.ru (Postfix) with ESMTP id 33717130FC1;
	Fri, 17 Jul 2009 16:55:14 +0400 (MSD)
Received: from [81.19.90.198] ([81.19.90.198]) by prime.rambler.ramblermedia.com over TLS secured channel with Microsoft SMTPSVC(6.0.3790.3959);
	 Fri, 17 Jul 2009 16:55:14 +0400
To: Matt S Trout <mst@shadowcat.co.uk>
Subject: Re: Module submission self::init
Date: Fri, 17 Jul 2009 16:55:15 +0400
User-Agent: KMail/1.9.9
Cc: modules@perl.org
References: <200907130905.n6D95oZc022033@pause.perl.org> <20090716181112.GH17782@agaton.scsys.co.uk>
In-Reply-To: <20090716181112.GH17782@agaton.scsys.co.uk>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-ID: <200907171655.15475.mons@cpan.org>
X-OriginalArrivalTime: 17 Jul 2009 12:55:14.0124 (UTC) FILETIME=[D39C10C0:01CA06DD]
X-Anti-Virus: Kaspersky Anti-Virus for MailServers 5.5.33/RELEASE, bases: 17072009 #2481309, status: clean
X-SpamTest-Envelope-From: mons@cpan.org
X-SpamTest-Group-ID: 00000000
X-SpamTest-Info: Profiles 9071 [Jul 17 2009]
X-SpamTest-Method: none
X-SpamTest-Rate: 0
X-SpamTest-SPF: none
X-SpamTest-Status: Not detected
X-SpamTest-Status-Extended: not_detected
X-SpamTest-Version: SMTP-Filter Version 3.0.0 [0284], KAS30/Release
Approved: news@nntp.perl.org
From: mons@cpan.org (Mons Anderson)

On Thursday 16 July 2009 22:11:12 Matt S Trout wrote:
> On Mon, Jul 13, 2009 at 11:05:50AM +0200, Perl Authors Upload Server wrote:
> > The following module was proposed for inclusion in the Module List:
> >
> >   modid:       self::init
> >   DSLIP:       Rdppp
> >   description: Invoke package init methods at compile time
> >   userid:      MONS (Mons Anderson)
> >   chapterid:   27 (Pragma)
> >   communities:
> >
> >   similar:
> >
> >   rationale:
> >
> >     This module mainly used for initialization with such modules like
> >     Catalyst, DBIC, etc. So the main purpose is invoking self methods on
> >     "self". Since the usage is pragmatic, the name is in lower case
> >
> >   enteredby:   MONS (Mons Anderson)
> >   enteredon:   Mon Jul 13 09:05:49 2009 GMT
> >
> > The resulting entry would be:
> >
> > self::
> > ::init            Rdppp Invoke package init methods at compile time  MONS
>
> What would this achieve that simply having a BEGIN block wouldn't?
>
> BEGIN { __PACKAGE__->init }
>
> seems to me to achieve basically the same thing?

No, no
use self::init with out args is useless;

I'll give an example from live project:

package Friends::DB::Stream::Tags;
use strict;
use warnings;
use base 'DBIx::Class';
use self::init
  \-load_components => ("+Friends::DB::Core::Base", "Core"),
  \-table => ("tags"),
  \-add_columns => (
    id => {
      data_type => "integer",
      default_value => "nextval('tags_id_seq'::regclass)",
      is_nullable => 0,
      size => 4
    },
    title => {
      data_type => "character varying",
      default_value => undef,
      is_nullable => 0,
      size => 255
    },
    count => {
      data_type => "integer",
      default_value => 0,
      is_nullable => 1,
      size => 4
    },
  ),
  \-set_primary_key => ("id"),
  \-add_unique_constraint => ("tags_pkey", ["id"]),
  \-add_unique_constraint => ("idx_tags_title", ["title"]),
;

1;
##########
It's the same as 

package Friends::DB::Stream::Tags;
use strict;
use warnings;
use base 'DBIx::Class';
BEGIN {
  __PACKAGE__->
  __PACKAGE__->load_components("+Friends::DB::Core::Base", "Core");
  __PACKAGE__->table("tags");
  __PACKAGE__->add_columns(
    id => {
      data_type => "integer",
      default_value => "nextval('tags_id_seq'::regclass)",
      is_nullable => 0,
      size => 4
    },
    title => {
      data_type => "character varying",
      default_value => undef,
      is_nullable => 0,
      size => 255
    },
    count => {
      data_type => "integer",
      default_value => 0,
      is_nullable => 1,
      size => 4
    },
  );
  __PACKAGE__->set_primary_key("id");
  __PACKAGE__->add_unique_constraint("tags_pkey", ["id"]);
  __PACKAGE__->add_unique_constraint => ("idx_tags_title", ["title"]);
}
1;
#########

>
> And that's being called on the $class, not a $self object, so self::init
> would be the wrong name for it anyway.
Ok, agree.
Maybe rename it to class::init?
Or maybe you could propose more reasonable name?


-- 
Mons Anderson aka Vladimir Perepelitsa
<mons@cpan.org> / #99779956 / quanth@irc.freenode.net
