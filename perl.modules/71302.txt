Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:71302
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 30908 invoked from network); 22 May 2010 23:33:55 -0000
Received: from x1.develooper.com (207.171.7.70)
  by x6.develooper.com with SMTP; 22 May 2010 23:33:55 -0000
Received: (qmail 308 invoked by uid 225); 22 May 2010 23:33:55 -0000
Delivered-To: modules@perl.org
Received: (qmail 304 invoked by alias); 22 May 2010 23:33:54 -0000
X-Spam-Status: No, hits=0.0 required=8.0
	tests=
X-Spam-Check-By: la.mx.develooper.com
Received: from pause.fiz-chemie.de (HELO pause.fiz-chemie.de) (195.37.231.65)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Sat, 22 May 2010 16:33:53 -0700
Received: from pause.fiz-chemie.de (localhost.localdomain [127.0.0.1])
	by pause.fiz-chemie.de (8.13.8/8.13.8/Debian-3) with ESMTP id o4MNXXkp013214;
	Sun, 23 May 2010 01:33:33 +0200
Received: (from nobody@localhost)
	by pause.fiz-chemie.de (8.13.8/8.13.8/Submit) id o4MNXX0N013213;
	Sun, 23 May 2010 01:33:33 +0200
Date: Sun, 23 May 2010 01:33:33 +0200
Message-ID: <201005222333.o4MNXX0N013213@pause.fiz-chemie.de>
Subject: Module submission KappaCUDA
Reply-To: modules@perl.org
To: modules@perl.org, brian@cpan.org
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       KappaCUDA
  DSLIP:       Md+Op
  description: NVIDIA CUDA access via the Kappa Library
  userid:      BRIAN (Brian H. Dunford-Shore)
  chapterid:   24 (Commercial_Software_Interfaces)
  communities:
    http://psilambda.com/support/forum/

  similar:
    PDL

  rationale:

    For the first time Perl is given access to NVIDIA CUDA GPGPU
    processing. It gains this access using the commercial Kappa Library
    from Psi Lambda LLC.

    The Kappa Library provides control, access, and scheduling to the
    GPU processing and memory via the NVIDIA CUDA driver API. Access to
    the GPU data is via host memory pointers managed by the Kappa
    Library.

    Processing on GPU's is parallel data centric. The most appropriate
    interface modules for accessing, converting, and manipulating
    parallel data (matrix) arrays using Perl on a host CPU process are
    the modules under the PDL namespace. However PDL is host CPU centric
    and will not have capability of GPGPU functionality--PDL can work on
    a CPU but not a GPU and so is a related but not controlling
    namespace.

  enteredby:   BRIAN (Brian H. Dunford-Shore)
  enteredon:   Sat May 22 23:33:33 2010 GMT

The resulting entry would be:

KappaCUDA         Md+Op NVIDIA CUDA access via the Kappa Library     BRIAN


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=bf300000_7cc84da021028762&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=bf300000_7cc84da021028762&SUBMIT_pause99_add_mod_insertit=1
Peek at the current permissions:
  https://pause.perl.org/pause/authenquery?pause99_peek_perms_by=me&pause99_peek_perms_query=KappaCUDA
