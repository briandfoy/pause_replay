Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:13072
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 42594 invoked by uid 76); 7 Aug 2002 11:27:44 -0000
Received: from root@[212.40.160.59] (HELO pause.perl.org) (212.40.160.59)
  by onion.perl.org (qpsmtpd/0.07b) with SMTP; Wed Aug  7 11:27:44 2002 -0000
Received: (from nobody@localhost)
	by pause.perl.org (8.11.6/8.11.6) id g77BRFH17397;
	Wed, 7 Aug 2002 13:27:15 +0200
Date: Wed, 7 Aug 2002 13:27:15 +0200
Message-ID: <200208071127.g77BRFH17397@pause.perl.org>
Subject: Module submission Apache::SessionManager
Reply-To: modules@perl.org
To: modules@perl.org, enrys@cpan.org
Approved: news@nntp.perl.org
From: upload@p11.speed-link.de ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Apache::SessionManager
  DSLIP:       bdpOp
  description: Manage sessions over HTTP requests
  userid:      ENRYS (Enrico Sorcinelli)
  chapterid:   15 (World_Wide_Web_HTML_HTTP_CGI)
  communities:
    modperl@perl.apache.org

  similar:
    AxKit::XSP::Session

  rationale:

    Apache::SessionManager - simple Apache/mod_perl extension that uses
    Apache::Session to manage users sessions over HTTP requests.

    Apache::SessionManager creates an object session (in Header parsing
    phase, but not obligatorily) and makes it available to all other
    handlers transparently by putting in pnotes. Others handlers can
    retrieve session directly from pnotes or by calling the simple
    functions provided (but not yet exported) by this module
    (get_session($r), destroy_session($r), ecc).

    After some search on CPAN I haven't found a mod_perl module that
    does the same thing. The goal of Apache::SessionManager is to do a
    module with no glue with others appserver than mod_perl itself (and
    Apache::Session, of course). The module is work in progress, even if
    already I use it.

    I've used the root Apache:: namespace because it is a mod_perl
    extension.

    *

    It seems to be a pollution over the Apache::SessionManager
    namespace and I'll ask you an advice. Even if Apache::SessionManager
    isn't never registered on PAUSE (I verified this by searching over
    all modules@perl.org archives), an old RFC has submitted to
    modperl@apache.org, on October 2000. After some searches I've found
    the other (I think) module on sourceforge but last update is out of
    date (2000-10-29 16:00)!

    Moreover the two modules make _two_ different things!

    - Apache::SessionManager that I propose is a wrapper around the
    Apache::Session persistence framework for session data. - My module
    uses pnotes() to pass arbitrary data across handlers and has a
    session expiration mechanism. - I make this for transparent session
    management while I write my modules using Apache::Session.

    The other module hasn't support for persistence data over HTTP
    requests and it has his own ID generation algorithm. There is no
    glue with Apache::Session. It stores only session ID value into
    notes().

    The only thing that I can do is to mail to the authors at their
    last known addresses, saying that I propose the same namespace and
    wait for a reply...

    ---

    AxKit::XSP::Session tries to do the same but requires the AxKit
    framework (even if it is possible to use a included module
    Apache::AxKit::Plugins::Session without AxKit installed on the
    system, but this is not really documented!)

    --

  enteredby:   ENRYS (Enrico Sorcinelli)
  enteredon:   Wed Aug  7 11:27:15 2002 GMT

The resulting entry would be:

Apache::
::SessionManager  bdpOp Manage sessions over HTTP requests           ENRYS


Thanks for registering,
The Pause Team

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=2b100000_b8c1d7cc64f5e41d&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=2b100000_b8c1d7cc64f5e41d&SUBMIT_pause99_add_mod_insertit=1
