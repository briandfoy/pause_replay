Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:65433
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 23645 invoked from network); 15 Apr 2009 05:16:15 -0000
Received: from x1.develooper.com (207.171.7.70)
  by x6.develooper.com with SMTP; 15 Apr 2009 05:16:15 -0000
Received: (qmail 27446 invoked by uid 225); 15 Apr 2009 05:16:15 -0000
Delivered-To: modules@perl.org
Received: (qmail 27441 invoked by alias); 15 Apr 2009 05:16:14 -0000
X-Spam-Status: No, hits=0.0 required=8.0
	tests=
X-Spam-Check-By: la.mx.develooper.com
Received: from pause.fiz-chemie.de (HELO pause.perl.org) (195.149.117.110)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Tue, 14 Apr 2009 22:16:12 -0700
Received: from pause.perl.org (localhost.localdomain [127.0.0.1])
	by pause.perl.org (8.13.8/8.13.8/Debian-3) with ESMTP id n3F5G1sE019108;
	Wed, 15 Apr 2009 07:16:01 +0200
Received: (from nobody@localhost)
	by pause.perl.org (8.13.8/8.13.8/Submit) id n3F5G0pZ019107;
	Wed, 15 Apr 2009 07:16:00 +0200
Date: Wed, 15 Apr 2009 07:16:00 +0200
Message-ID: <200904150516.n3F5G0pZ019107@pause.perl.org>
Subject: Module submission IO::Journal
Reply-To: modules@perl.org
To: modules@perl.org, frequency@cpan.org
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       IO::Journal
  DSLIP:       cdhOd
  description: Perl interface for journalled file operation
  userid:      FREQUENCY (Jonathan Yu)
  chapterid:   21 (File_Handle_Input_Output)
  communities:
    reddit/programming (for the C implementation)

  similar:
    IO::AtomicFile

  rationale:

    This is a module based on libjio, a C library provided for
    journalled transaction-oriented I/O. It provides a means to
    atomically update files using a write-ahead log, and provides a way
    to commit or rollback transactions, in much the same way as
    databases.

    This is more complicated in implementation than IO::AtomicFile as
    it involves a lot of locking to ensure concurrent access with
    threads will work. However, it can also be faster and more reliable
    than doing unlink/rename as AtomicFile does. I think there is a
    chance those operations are not atomic...

    Moreover, every time files are modified, they would have to be
    fully duplicated to a temporary file which would be renamed
    in-place. So there is a performance hit there, too.

    And since this is written purely in C, it is fast. There are
    already some Python bindings available; I have been contacting the
    libjio author and have been working on the Perl bindings.

    This just provides a convenient way to avoid write-in-place for
    handling files, and will expose an interface similar to IO::Handle
    with an upcoming Tie module to provide convenient access via
    conventional file handles.

    More about libjio: http://blitiri.com.ar/p/libjio/

  enteredby:   FREQUENCY (Jonathan Yu)
  enteredon:   Wed Apr 15 05:16:00 2009 GMT

The resulting entry would be:

IO::
::Journal         cdhOd Perl interface for journalled file operation FREQUENCY


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=60610000_f91a09383e79f71a&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=60610000_f91a09383e79f71a&SUBMIT_pause99_add_mod_insertit=1
