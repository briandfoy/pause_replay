Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:47153
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 12141 invoked from network); 31 Jan 2006 17:41:26 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 31 Jan 2006 17:41:26 -0000
Received: (qmail 6221 invoked by uid 225); 31 Jan 2006 17:41:25 -0000
Delivered-To: modules@perl.org
Received: (qmail 6217 invoked by alias); 31 Jan 2006 17:41:24 -0000
X-Spam-Status: No, hits=-2.5 required=8.0
	tests=BAYES_00,FORGED_RCVD_HELO
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
Received: from pause.fiz-chemie.de (HELO pause.perl.org) (195.149.117.110)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Tue, 31 Jan 2006 09:41:16 -0800
Received: from pause.perl.org (localhost [127.0.0.1])
	by pause.perl.org (8.13.4/8.13.4/Debian-3) with ESMTP id k0VHf03T021647
	for <modules@perl.org>; Tue, 31 Jan 2006 18:41:03 +0100
Received: (from nobody@localhost)
	by pause.perl.org (8.13.4/8.13.4/Submit) id k0VHevb1021645;
	Tue, 31 Jan 2006 18:40:58 +0100
Date: Tue, 31 Jan 2006 18:40:58 +0100
Message-ID: <200601311740.k0VHevb1021645@pause.perl.org>
Subject: Module submission Parallel::Cluster
Reply-To: modules@perl.org
To: modules@perl.org
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Parallel::Cluster
  DSLIP:       RdpOa
  description: Distributed computing w/ multiple computers
  userid:      RJHARMON (Randy Harmon)
  chapterid:   5 (Networking_Devices_IPC)
  communities:
    A mailing list @perl.org or yahoo groups.

  similar:
    Penguin, Parallel::PVM

  rationale:

    I wrote this module to enable high-volume parallel processing for a
    project at Yahoo, and I've used it for 2 other projects since then
    for parallel processing.

    The module is currently in daily production use by multiple groups
    and is quite stable. I would like to see it get more use and more
    development, specifically to refine its job-argument marshalling and
    its communication protocol for performance and robustness. I have a
    paper on that which I'll include with the upload.

    This module enables an author to write a single script (instead of
    multiple programs, as in PVM) which controls the master *and* the
    workers. Unlike Penguin, it assumes that SSH access provides
    sufficient authentication.

    The script is then installed on the same location on each machine,
    possibly via NFS. Typically shared data areas are set up using NFS.

    Reading from the top of such a script, all code is executed on both
    master and the remote nodes. The remote node controller never
    returns from cluster->new(); it instead fork()s in response to
    start_worker() commands (more below).

    Following $cluster->new(), the remaining code is executed only on
    the master. The function referenced by the -child_function => option
    to $cluster->new() is executed only on the remote workers, in
    response to $cluster->start_job() commands.

    I'd love to see a new category for parallel data processing, though
    I understand that this is unlikely. Similarly, I'd like to name the
    module Cluster.pm at the top level (use Cluster;) if you think it's
    justifiable.

    Thanks!

    Randy

  enteredby:   RJHARMON (Randy Harmon)
  enteredon:   Tue Jan 31 17:40:53 2006 GMT

The resulting entry would be:

Parallel::
::Cluster         RdpOa Distributed computing w/ multiple computers  RJHARMON


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=f5b00000_325454fe0cb0287e&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=f5b00000_325454fe0cb0287e&SUBMIT_pause99_add_mod_insertit=1
