Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:11141
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 8263 invoked by uid 76); 12 Apr 2002 12:36:09 -0000
Received: from root@dubravka.kbx.de (HELO pause.perl.org) (212.40.160.59)
  by onion.perl.org (qpsmtpd/0.06) with SMTP; Fri Apr 12 12:36:09 2002 -0000
Received: (from nobody@localhost)
	by pause.perl.org (8.9.3/8.9.3) id OAA27459;
	Fri, 12 Apr 2002 14:36:05 +0200
Date: Fri, 12 Apr 2002 14:36:05 +0200
Message-ID: <200204121236.OAA27459@pause.perl.org>
Reply-To: modules@perl.org
Subject: Module submission Net::Google
To: modules@perl.org, ascope@cpan.org
Approved: news@nntp.perl.org
From: upload@p11.speed-link.de ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Net::Google
  DSLIP:       bdpOp
  description: Simple OOP-ish interface to the Google API
  userid:      ASCOPE (Aaron Straup Cope)
  chapterid:    5 (Networking_Devices_IPC)
  communities:

  similar:

  rationale:

    First, let me say I am very much open to the idea of another
    package name.

    Net::Google provides a simple OOP-ish wrapper to the SOAP API that
    Google released yesterday. I like SOAP as much as the next person,
    but all that typing gets old and I just want to be able to do :

    my $google = Net::Google->new(key=>LOCAL_GOOGLE_KEY); my $search =
    $google->search(); $search->query(qw(aaron cope)); map { print
    $_->title()."\n"; } @{$search->results()}; Is there a naming
    convention for wrapper-ish packages? I gave it the Net:: prefix
    since that seemed most appropriate.

    See also :
    http://aaronland.net/src/perl/net-google/Net-Google-0.1.tar.gz
    http://aaronland.net/src/perl/net-google/Net-Google.html

  enteredby:   ASCOPE (Aaron Straup Cope)
  enteredon:   Fri Apr 12 12:36:01 2002 GMT

The resulting entry would be:

Net::
::Google          bdpOp Simple OOP-ish interface to the Google API   ASCOPE


Thanks for registering,
The Pause Team

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=d3100000_6068479863264a55&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=d3100000_6068479863264a55&SUBMIT_pause99_add_mod_insertit=1
