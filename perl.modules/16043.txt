Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:16043
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 32597 invoked by uid 76); 7 Dec 2002 20:34:53 -0000
Received: from root@[212.40.160.59] (HELO pause.perl.org) (212.40.160.59) by onion.perl.org (qpsmtpd/0.12) with SMTP; 2002-12-07 20:34:53Z
Received: (from nobody@localhost)	by pause.perl.org (8.11.6/8.11.6) id gB7KYo119140;	Sat, 7 Dec 2002 21:34:50 +0100
Date: Sat, 7 Dec 2002 21:34:50 +0100
Message-ID: <200212072034.gB7KYo119140@pause.perl.org>
Reply-To: modules@perl.org
Subject: Module submission Table::ParentChild
To: modules@perl.org, mikewong@cpan.org
X-SMTPD: qpsmtpd/0.12, http://develooper.com/code/qpsmtpd/
Approved: news@nntp.perl.org
From: upload@p11.speed-link.de ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Table::ParentChild
  DSLIP:       cdhOp
  description: Fast and compact parent-child table lookup
  userid:      MIKEWONG (Mike Wong)
  chapterid:    6 (Data_Type_Utilities)
  communities:

  similar:

  rationale:

    Table::ParentChild implements a cross-linked list in a table with
    hashed headers. Given an unsigned long integer id,
    Table::ParentChild will tell you the unsigned long integer ids of
    all the parents of that item and/or all the children of the item.
    This works especially well with mod_perl, where your entire
    parent-child relationship table can be compactly held in memory for
    incredibly fast lookups. This module works very well with sparsely
    populated relationship tables.

  enteredby:   MIKEWONG (Mike Wong)
  enteredon:   Sat Dec  7 20:34:50 2002 GMT

The resulting entry would be:

Table::
::ParentChild     cdhOp Fast and compact parent-child table lookup   MIKEWONG


Thanks for registering,
The Pause Team

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=4e300000_7999639474b21845&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=4e300000_7999639474b21845&SUBMIT_pause99_add_mod_insertit=1
