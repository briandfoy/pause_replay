Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:5314
Return-Path: <nobody@pause.kbx.de>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 2162 invoked from network); 3 May 2001 18:46:01 -0000
Received: from dubravka.kbx.de (HELO pause.kbx.de) (root@212.40.160.59)
  by onion.valueclick.com with SMTP; 3 May 2001 18:46:01 -0000
Received: (from nobody@localhost)
	by pause.kbx.de (8.9.3/8.9.3) id UAA04019;
	Thu, 3 May 2001 20:45:59 +0200
Date: Thu, 3 May 2001 20:45:59 +0200
Message-ID: <200105031845.UAA04019@pause.kbx.de>
Subject: Module submission Detect::Module
To: modules@perl.org
X-Spam-Rating: onion.valueclick.com 1.6.2 0/1000/N
Approved: news@nntp.perl.org
From: upload@p11.speed-link.de ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Detect::Module
  DSLIP:       Mdpf?
  description: Autodetecting modules at runtime
  userid:      RPOLZER (Rudolf Polzer)
  chapterid:    2 (Perl_Core_Modules)
  communities:
    comp.lang.perl.misc

  similar:
    AnyDBM_File

  rationale:

    Detect::Module makes Perl more platform-independent. I noticed that
    not all modules are available on any platform. Using them, however,
    causes the Perl script to die, what is often not what one wants. You
    can just list many modules, from which the first one which exists is
    loaded, so manually editing scripts to make them work on another
    platform is not needed. AnyDBM_File does exactly this, but can only
    be used once in a program. So this module should be included in the
    CPAN because it can save you from installing many modules; Storable
    is an example of a module that is not always there. You could do
    this:

    use Detect::Module qw/:standard/; my $store = Load 'Storable',
    'FreezeThaw';

    Now you can just use $store->freeze () to freeze data structures
    and do not need to worry which module was used.

    Why this namespace? What does this do? It detects automatically.
    And what does it detect? Modules. So why not Detect::Module?

    And a note about the license: if I understand the GPL correctly, I
    would choose it. I allow changes to this module, and I of course do
    not want to recieve money for this, so it looks appropiate. But I am
    not really sure yet.

  enteredby:   RPOLZER (Rudolf Polzer)
  enteredon:   Thu May  3 18:45:59 2001 GMT

The resulting entry would be:

Detect::
::Module          Mdpf ?                                            Autodetecting modules at runtime


Thanks for registering,
The Pause Team

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  http://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=d2000000_8d376ce14024c06b&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  http://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=d2000000_8d376ce14024c06b&SUBMIT_pause99_add_mod_insertit=1
