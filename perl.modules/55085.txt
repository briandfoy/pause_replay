Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:55085
Return-Path: <jhietaniemi@gmail.com>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 17313 invoked from network); 26 Jun 2007 20:52:58 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 26 Jun 2007 20:52:58 -0000
Received: (qmail 11383 invoked by uid 225); 26 Jun 2007 20:52:57 -0000
Delivered-To: modules@perl.org
Received: (qmail 11366 invoked by alias); 26 Jun 2007 20:52:56 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: domain of jhietaniemi@gmail.com designates 209.85.146.178 as permitted sender)
Received: from wa-out-1112.google.com (HELO wa-out-1112.google.com) (209.85.146.178)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Tue, 26 Jun 2007 13:52:50 -0700
Received: by wa-out-1112.google.com with SMTP id v27so2420591wah
        for <modules@perl.org>; Tue, 26 Jun 2007 13:52:46 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:reply-to:sender:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references:x-google-sender-auth;
        b=eBqSHdW46H97m94RC+VpNXTYWyfWInVWEQ7qCzx2qLv9DhTMo5gaBEjb673FQ3dBilR0th4ca4vV+DZaqBJ1R2MMapF0oDSfR5l7VzCQLcoBkkUQtwWth3bDc/JiJvYeSRdNIdOM99QGX6vJa8DUD7Ynq/LoelZkxy6Fx+cjKBM=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:reply-to:sender:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references:x-google-sender-auth;
        b=OulNaT7cHbut2chncVMWJENJzUZlVDxC1aaDc53nQXuoTt0v5B2f+N8uYnYjA6mIwH2c/4/rMa6cIzZhMZI2r4spkvRARvEOJOgTugkNbVqDB/N1Hiq7GsElQpa1myib9jkxz1KgnJNP8xpxuyOhKfvqa3fn8xyoHCS6T7cUCWQ=
Received: by 10.114.15.1 with SMTP id 1mr6782322wao.1182891166641;
        Tue, 26 Jun 2007 13:52:46 -0700 (PDT)
Received: by 10.114.161.6 with HTTP; Tue, 26 Jun 2007 13:52:46 -0700 (PDT)
Message-ID: <aa5b09f00706261352k77eba2c7mdb8ab65bafd6bb2b@mail.gmail.com>
Date: Tue, 26 Jun 2007 16:52:46 -0400
Reply-To: jhi@iki.fi
Sender: jhietaniemi@gmail.com
To: "Daniel Muey" <webmaster@simplemood.com>
Subject: Re: Module submission Algorithm::Command
Cc: modules@perl.org, dmuey@cpan.org
In-Reply-To: <188108E1-58E8-4F7D-9446-43D901805209@simplemood.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <200706261913.l5QJDllL017045@pause.perl.org>
	 <260620071457181742%brian.d.foy@gmail.com>
	 <188108E1-58E8-4F7D-9446-43D901805209@simplemood.com>
X-Google-Sender-Auth: 68a3f0b1a03f6bca
Approved: news@nntp.perl.org
From: jhi@iki.fi ("Jarkko Hietaniemi")

What you describe is still not an algorithm in the sense the other
entries in that category are.  (Anymore than say, my Set::Scalar would
be an algorithm for doing set operations.) Your code (again, based on
the description) has more to do with e.g. transactions.

On 6/26/07, Daniel Muey <webmaster@simplemood.com> wrote:
>
>
> On Jun 26, 2007, at 2:57 PM, brian d foy wrote:
>
> [[ This message was both posted and mailed: see
>    the "To," "Cc," and "Newsgroups" headers for details. ]]
>
> In article <200706261913.l5QJDllL017045@pause.perl.org>,
> Perl Authors
> Upload Server <upload@pause.perl.org> wrote:
>
>
> The following module was proposed for inclusion in the Module List:
>
>   modid:       Algorithm::Command
>   DSLIP:       RdpOp
>   description: Command pattern obj re/undo,rollback actions
>   userid:      DMUEY (Daniel Muey)
>
> This isn't really an algorithm, but I don't have a suggestion about
> where else to put a design pattern sorta thing. A lot of them end up in
> Class::*
>
> Is there somewhere else this might live?
>
> I thought about it and decided on 'Algorithm::' because it is an algorithm
> based on first sentence at
> http://en.wikipedia.org/wiki/Algorithm
>
> "In mathematics, computing, linguistics, and related disciplines, an
> algorithm is a finite list of well-defined instructions for accomplishing
> some task that, given an initial state, will terminate in a defined
> end-state."
>
> This module will contain the 'finite list of well-defined instructions' to
> 'accomplish the task' of getting a list of tasks from one state to the other
> (Eg: no steps done to all 5 steps done, or if one fails undo whats been done
> already and/or try over again and/or handle failure)
>
> I'd hate to clutter Class:: with something thats not really a class...


-- 
There is this special biologist word we use for 'stable'. It is
'dead'. -- Jack Cohen
