Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:3137
Return-Path: <sorokine@buffalo.edu>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 12655 invoked from network); 19 Oct 2000 23:14:37 -0000
Received: from resnet186-206.resnet.buffalo.edu (HELO sorokine.resnet.buffalo.edu) (128.205.186.206)
  by tmtowtdi.perl.org with SMTP; 19 Oct 2000 23:14:37 -0000
Received: by sorokine.resnet.buffalo.edu (Postfix, from userid 501)
	id B024B25073; Thu, 19 Oct 2000 19:17:49 -0400 (EDT)
Date: Thu, 19 Oct 2000 19:17:49 -0400
To: modules@perl.org
Cc: kurtac1@users.sourceforge.net
Subject: Request for module registration
Message-ID: <20001019191749.A1034@sorokine.resnet.buffalo.edu>
Reply-To: sorokine@buffalo.edu
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.2.4i
Organization: University at Buffalo
Approved: news@nntp.perl.org
From: sorokine@buffalo.edu (Alexandre Sorokine)

Dear Maintainer,

I want to register our project on PAUSE.  Here is the registration
information:

name: Alexandre Sorokine

email address: sorokine@buffalo.edu

homepage: http://www.vtt.co.jp/staff/sorokin/

preferred user-ID on CPAN: SORO

Description in modules list format:

Name           DSLI  Description                                  Info
-------------  ----  -------------------------------------------- -----
GISI           ampO  Geographic Information Systems Interface     SORO
GISI::SHAPE    amcO  ArcView SHAPE file format driver             SORO
GISI::MIFMID   ampO  MapInfo MIFMID file format driver            SORO

Project developers:

    Alexandre Sorokine (sorokine@buffalo.edu)
    Kurt Ackermann (kurt@vtt.co.jp)

Additional information (from GISI pod):

=head2 What is GISI?

GISI is an experimental object-oriented API (Application Programming
Interface) to access spatial data from Perl programs.  GISI intention
is to define a set of classes and conventions to provide a consistent
interface to access spatial data independent of underlying file format
or access method.  GISI is based on the OpenGIS
Abstract Specification Version 4 (http://www.opengis.org/).

Similar to L<Perl DBI>, GISI is an interface layer providing
communication between Perl scripts utilizing GISI and drivers that
provide actual access to the sources of spatial data.  All effort was
done to keep GISI thin and limit its scope to the data access
purposes.  GISI is sought to be a glue between various pieces of the
GIS software and libraries written in a variety of programming
language, including but not limited to Perl.

GISI is work in progress.  GISI API is far from being final and its
current release is mostly intended to collect comments from the GIS
programmers community on the usability and utility of the framework.
The API is not stable and can experience severe changes in the future.

=head2 Architecture

GISI as implemented as a set of Perl modules of 'core GISI' and
optional drivers.  GISI itself performs the following actions: loading
of the specified driver(s), dispatching its method calls to the
drivers and error checking/handling.  All other actions should be
implemented outside of the GISI driver loader although they can share
GISI data model.  The drivers implement support for a given type of a
spatial data sources that can be a file in some format, a database
server or almost anything else.

In term of the abstract model of spatial data GISI relies on the
OpenGIS Abstract Specification, Version 4.  The best way to get a good
understanding of the matter is to download the specification and read
it.  Here is a short summary of how the specification is interpreted
in GISI:

[skipped...]

=cut

Discussions and publicity:

GISI.pm under the current name and architecture has been under
development for almost 2 years and some pieces of its code may be
traced back even to 1994.  Originally it was a set of Perl scripts to
convert between various GIS (Geographic Information Systems) formats,
later they were rewritten as modules and unified around the model of
the OpenGIS Abstract Specification
(http://www.opengis.org/techno/specs.htm).

We had made a presentation about GISI.pm at the Technical Committee
meeting of the OpenGIS Consortium (http://www.opengis.org/) this June.
Also we will be presenting a paper concerning GISI.pm design
philosophy and surrounding software architecture issues at the ACMGIS
Symposium on November 9-11 in Washington DC
(http://acmgis.cs.pusan.ac.kr/html/acmgis2000/index.html).  

Best Regards,
-- 
Alexandre Sorokine
Department of Geography
SUNY at Buffalo
sorokine@buffalo.edu
