Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:6551
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 41622 invoked from network); 11 Jul 2001 02:43:54 -0000
Received: from dubravka.kbx.de (HELO pause.perl.org) (root@212.40.160.59)
  by onion.valueclick.com with SMTP; 11 Jul 2001 02:43:54 -0000
Received: (from nobody@localhost)
	by pause.perl.org (8.9.3/8.9.3) id EAA28243;
	Wed, 11 Jul 2001 04:43:52 +0200
Date: Wed, 11 Jul 2001 04:43:52 +0200
Message-ID: <200107110243.EAA28243@pause.perl.org>
Reply-To: modules@perl.org
Subject: Module submission HTML::Macro
To: modules@perl.org, sokolov@cpan.org
X-Spam-Rating: onion.valueclick.com 1.6.2 0/1000/N
Approved: news@nntp.perl.org
From: upload@p11.speed-link.de ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       HTML::Macro
  DSLIP:       MdpOp
  description: processes HTML templates
  userid:      SOKOLOV (Michael Sokolov)
  chapterid:   15 (World_Wide_Web_HTML_HTTP_CGI)
  communities:
    comp.lang.perl.modules

  similar:
    HTML::Template

  rationale:

    HTML::Macro is provides functionality similar to the C
    pre-processor (with the addition of looping constructs). It provides
    macro-level programming capabilities, allowing some simple
    programming facilities (variable substitution, conditionals, file
    interpolation) to be built in to HTML templates while reserving more
    complex code for a separate perl file.

    HTML::Macro is almost completely identical in spirit to
    HTML::Template. In fact, I think it's a testament to the value of
    this software that it was independently invented in (at least) two
    places. Both packages seem to implement the same programming
    constructs and share the same philosophy of separating perl code
    from HTML formatting. In fact it's kind of scary. If I hadn't
    already developed this module to the point where it is completely
    functional I would probably just use HTML::Template. As it is, there
    are some things I think are better in this module:

    1) conditional expressions may be arbitrary Perl 2) The Perl you
    use for populating loops is easier to understand (IMO) than
    HTML::Template's. In particular, it is easy to use with DBI, which
    is how we usually use it. 3) Finally, HTML::Macro implements has a
    special quoting facility not present in HTML::Template. This
    postpones evaluation of its code so that templates can be processed
    in several passes. This is useful in a "meta-template" used to
    generate other templates.

  enteredby:   SOKOLOV (Michael Sokolov)
  enteredon:   Wed Jul 11 02:43:51 2001 GMT

The resulting entry would be:

HTML::
::Macro           MdpOp processes HTML templates                     SOKOLOV


Thanks for registering,
The Pause Team

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=52000000_658df88ded393c4a&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=52000000_658df88ded393c4a&SUBMIT_pause99_add_mod_insertit=1
