Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:33705
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 16015 invoked from network); 22 Jul 2004 19:16:54 -0000
Received: from x1.develooper.com (63.251.223.170)
  by onion.develooper.com with SMTP; 22 Jul 2004 19:16:54 -0000
Received: (qmail 7315 invoked by uid 225); 22 Jul 2004 19:16:53 -0000
Delivered-To: modules@perl.org
Received: (qmail 7310 invoked by alias); 22 Jul 2004 19:16:52 -0000
X-Spam-Status: No, hits=-4.9 required=8.0
	tests=BAYES_00
X-Spam-Check-By: la.mx.develooper.com
Received: from pause.fiz-chemie.de (HELO pause.perl.org) (195.149.117.110)
  by la.mx.develooper.com (qpsmtpd/0.27.1) with ESMTP; Thu, 22 Jul 2004 12:16:47 -0700
Received: from pause.perl.org (localhost [127.0.0.1])
	by pause.perl.org (8.12.3/8.12.3/Debian-6.6) with ESMTP id i6MJGFTB004994;
	Thu, 22 Jul 2004 21:16:22 +0200
Received: (from nobody@localhost)
	by pause.perl.org (8.12.3/8.12.3/Debian-6.6) id i6MJGDLI004992;
	Thu, 22 Jul 2004 21:16:13 +0200
Date: Thu, 22 Jul 2004 21:16:13 +0200
Message-ID: <200407221916.i6MJGDLI004992@pause.perl.org>
Subject: Module submission Class::MethodFilter
Reply-To: modules@perl.org
To: modules@perl.org, mstrout@cpan.org
X-Spam-Rating: onion.develooper.com 1.6.2 0/1000/N
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Class::MethodFilter
  DSLIP:       adpOp
  description: Easily add filters to accessor-based classes
  userid:      MSTROUT (Matt S Trout)
  chapterid:    6 (Data_Type_Utilities)
  communities:

  similar:
    Hook::LexWrap Class::Wrap Class::Wrapper

  rationale:

    The module is built as a simple means to add a filtered version of
    an accessor-style method (i.e. equivalent behaviour to a
    Class::Accessor-generated accessor) named accessor_filtered, for
    example for a web forum engine where the post body is filtered
    before display but the raw body is accessed for editing.

    It's main point of interest is its ability to detect the presence
    of accessor_filtered already and to use that as a caching accessor
    for the result (wrapping the main accessor to update the filtered
    result as it is called) so that e.g. when using Class::DBI, caching
    in the db can be implemented simply by adding a column_filtered
    column to the table and updating the Class::DBI class definition
    appropriately.

    Also, Class::MethodFilter provides a simple, repeatable resulting
    API in the class using it and a DWIMish filter installation
    mechanism in order to save as much hassle as possible for its users.

    Modules such as Class::Wrap[per] and Hook::LexWrap provide more
    general means of filtering and wrapping output, where
    Class::MethodFilter addresses an interface need rather than a
    mechanism need.

  enteredby:   MSTROUT (Matt S Trout)
  enteredon:   Thu Jul 22 19:16:03 2004 GMT

The resulting entry would be:

Class::
::MethodFilter    adpOp Easily add filters to accessor-based classes MSTROUT


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=ed500000_872e4d769f92b97f&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=ed500000_872e4d769f92b97f&SUBMIT_pause99_add_mod_insertit=1
