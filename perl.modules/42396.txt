Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:42396
Return-Path: <jac@natura.di.uminho.pt>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 24311 invoked from network); 8 Aug 2005 14:44:58 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 8 Aug 2005 14:44:58 -0000
Received: (qmail 744 invoked by uid 225); 8 Aug 2005 14:44:57 -0000
Delivered-To: modules@perl.org
Received: (qmail 733 invoked by alias); 8 Aug 2005 14:44:56 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
Received: from natura.di.uminho.pt (HELO natura.di.uminho.pt) (193.136.19.132)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Mon, 08 Aug 2005 07:44:51 -0700
Received: by natura.di.uminho.pt (Postfix, from userid 504)
	id 104ED108932; Mon,  8 Aug 2005 15:45:03 +0100 (WEST)
Date: Mon, 8 Aug 2005 15:45:03 +0100
To: modules@perl.org
Subject: Modules for validations
Message-ID: <20050808144503.GE20105@natura.di.uminho.pt>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.4.1i
Approved: news@nntp.perl.org
From: jac@natura.di.uminho.pt (=?iso-8859-1?Q?Jos=E9?= Castro)

I have a module that validates Portuguese Postal Codes,
PT::PostalCode.

Recently I was asked to do something to validate Portuguese NIFs
(Fiscal Identification Number, which is what identifies each entity
that has to pay taxes in Portugal).

The first thought was to create a module for this, but afterwards I
realized, upon conversation with several people, that there should
also be a way to validate Portuguese BIs (Identity Card), Social
Security numbers and Passport numbers.

In a way, I feel there should be a module for each of these things,
but that might not be the way to go... a module for all these things
could be in order, but:

1) would people searching for one of the functionalities easily find
   the module?

2) would this prevent standardization of APIs at world level from
   developing as they should? (imagine a module for doing several
   things with dates when one is only looking for holidays, or a
   module for *everything* regarding NLP when one is just looking for
   an hyphenation module)

So I guess my question is: should I create one module for each thing
or a module for all of those? The only thing that prevents me from
creating all these modules is that none of them will be that big a
module...

What do you think?

TIA,

jac

--
Jose Alves de Castro <cog@cpan.org>
      http://jose-castro.org/
