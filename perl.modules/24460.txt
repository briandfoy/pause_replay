Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:24460
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 65162 invoked by uid 76); 10 Nov 2003 13:01:01 -0000
Received: from x1.develooper.com (HELO x1.develooper.com) (63.251.223.170) by onion.perl.org (qpsmtpd/0.26) with SMTP; Mon, 10 Nov 2003 05:01:01 -0800
Received: (qmail 29233 invoked by uid 225); 10 Nov 2003 13:00:59 -0000
Delivered-To: modules@perl.org
Received: (qmail 29229 invoked by alias); 10 Nov 2003 13:00:59 -0000
Received: from pause.perl.org (HELO pause.perl.org) (212.40.160.59) by la.mx.develooper.com (qpsmtpd/0.27-dev) with ESMTP; Mon, 10 Nov 2003 05:00:47 -0800
Received: from pause.perl.org (localhost [127.0.0.1])	by pause.perl.org (8.12.3/8.12.3/Debian-6.6) with ESMTP id hAAD075c022069;	Mon, 10 Nov 2003 14:00:07 +0100
Received: (from nobody@localhost)	by pause.perl.org (8.12.3/8.12.3/Debian-6.6) id hAAD073p022067;	Mon, 10 Nov 2003 14:00:07 +0100
Date: Mon, 10 Nov 2003 14:00:07 +0100
Message-ID: <200311101300.hAAD073p022067@pause.perl.org>
Subject: Module submission IO::Tokenized
Reply-To: modules@perl.org
To: modules@perl.org, hobbit@cpan.org
X-Spam-Check-By: la.mx.develooper.com
X-Spam-Status: No, hits=1.1 required=7.0 tests=CARRIAGE_RETURNS,SPAM_PHRASE_00_01 version=2.44
X-SMTPD: qpsmtpd/0.26, http://develooper.com/code/qpsmtpd/
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       IO::Tokenized
  DSLIP:       adphp
  description: Add regex parsed input to filehandles
  userid:      HOBBIT (Leo Cacciari)
  chapterid:   21 (File_Handle_Input_Output)
  communities:
    mongers@perl.it (italian language) and the clpm newsgroup

  similar:
    Parse::Lex, Parse::Flex

  rationale:

    Lexical analysis, which is a fundamental step in all parsing,
    mainly consists in decomposing an input stream into smal chunks
    called tokens. The tokens are in turn defined by regular
    expressions.

    As Perl is good at handling regular expressions, one should expects
    that writing lexical analyser in Perl should be easy. In truth it is
    not, and tools like lex or flex are even been ported to Perl. There
    are also a whole lot of ad-hoc lexers for different parsing
    modules/programmes.

    Now, approaches to lexical analysis like those underlying
    Parse::Lex and Parse::Flex are general but fairly complexes to use,
    while ad-hoc solutions are obviously, well... ad-hoc.

    What I'd always sought was a way to tell to a file handle: "well,
    that is how the chunks I'm interested are. Please, found them in
    your input stream". It seems a simple thingh enough, but I could not
    found a module doing it.

    IO::Tokenized and its compagnon IO::Tokenized::File are the result
    of my attempt to produce such a module.

  enteredby:   HOBBIT (Leo Cacciari)
  enteredon:   Mon Nov 10 13:00:06 2003 GMT

The resulting entry would be:

IO::
::Tokenized       adphp Add regex parsed input to filehandles        HOBBIT


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=95500000_4aaaccd5a4ab6885&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=95500000_4aaaccd5a4ab6885&SUBMIT_pause99_add_mod_insertit=1
