Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:12547
Return-Path: <dhageman@dracken.com>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 64406 invoked by uid 76); 8 Jul 2002 14:15:17 -0000
Received: from 101.49.cm.sunflower.com (HELO localhost.localdomain) (24.124.49.101)
  by onion.perl.org (qpsmtpd/0.07b) with SMTP; Mon Jul  8 14:15:17 2002 -0000
Received: from localhost (dhageman@localhost)
	by localhost.localdomain (8.11.6/8.11.6) with ESMTP id g68DvVE02918;
	Mon, 8 Jul 2002 08:57:32 -0500
X-Authentication-Warning: localhost.localdomain: dhageman owned process doing -bs
Date: Mon, 8 Jul 2002 08:57:30 -0500 (CDT)
X-X-Sender: dhageman@localhost.localdomain
To: Robin Berjon <robin@knowscape.com>
cc: Tim.Bunce@pobox.com, <modules@perl.org>
Subject: Re: Module submission TEILite
In-Reply-To: <0207081333481I.15602@morgaine>
Message-ID: <Pine.LNX.4.44.0207080846480.2897-100000@localhost.localdomain>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Approved: news@nntp.perl.org
From: dhageman@dracken.com ("D. Hageman")
References: <0207081333481I.15602@morgaine>

On Mon, 8 Jul 2002, Robin Berjon wrote:

> On Monday 08 July 2002 12:48, Tim Bunce wrote:
> > > On Sat, 6 Jul 2002, Robin Berjon wrote:
> > > > Applications of XML often tend to go directly under the XML::
> > > > namespace.
> >
> > Be careful here... The XML namespace should be reserved for modules
> > where manipulating XML is the primary purpose. *Applications of XML*
> > to a specific problem (like Job Control :) should *not* go into the
> > XML namespace. Of course, that distinction can be a fine one sometimes.
> 
> What I meant (unfortunately not very clearly) but "applications" are 
> vocabularies used as such. That is, things like SVG, XHTML, XSLT, etc where 
> the fact that they are XML is an integral part of the technology. Obviously, 
> something that just happens to use XML doesn't fit there :)

I think the main distinction I used when thinking that it might need a top 
namespace is the fact at what point in time does one consider a XML schema 
a file format?  I noticed that file formats like PDF, HTML, etc all have 
top level namespaces based on the fact that they are file formats.  If a 
person were to make an abiword module would it go into XML:: or something 
else since the abiword format is/can be XML based?  Sorry - I can rattle 
on for hours on such a subject ... it can get very fuzzy based real quick 
which is a little hobby of mine.  This was the original reasoning I 
couldn't remember yesterday ... I think I might played to much this past 
holiday weekend.  :-)

> > I notice the text above says "The TEI specification is quite large"
> > (implying possibly more modules over time) and "the TEILite
> > specification that is based on XML" (implying there are non-XML
> > aspects to it).
> 
> I admit to having judged this almost only on this specific module which is a 
> DOM wrapper/extension in a way similar to the way in which, say, the SVG DOM, 
> wraps/extends the Core DOM.
> 
> > Given those points, and that the Text Encoding Initiative is a "big
> > thing" ("adopted by libraries and electronic document centers")
> > I'd go with a new top-level namespace: TEI.
> 
> Part of what motivated my answer was that "TEILite" didn't seem appropriate 
> as it is itself a subsection of TEI. What would you think of TEI::Lite then?

I think TEI::Lite wouldn't be a bad break down ... like I said before ... 
I don't know if it will take off or not and become a super popular format, 
but I always try to keep an eye on the future (while attempting to keep 
one eye on the ground so I don't stuble over my own two feet).

Thanks for your input guys, I am starting to understand how the process works!

-- 
//========================================================\\
||  D. Hageman                    <dhageman@dracken.com>  ||
\\========================================================//

