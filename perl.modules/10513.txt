Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:10513
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 64156 invoked by uid 76); 7 Mar 2002 20:03:34 -0000
Received: from root@dubravka.kbx.de (HELO pause.perl.org) (212.40.160.59)
  by onion.perl.org (qpsmtpd/0.06) with SMTP; Thu Mar  7 20:03:34 2002 -0000
Received: (from nobody@localhost)
	by pause.perl.org (8.9.3/8.9.3) id VAA05968;
	Thu, 7 Mar 2002 21:03:20 +0100
Date: Thu, 7 Mar 2002 21:03:20 +0100
Message-ID: <200203072003.VAA05968@pause.perl.org>
Reply-To: modules@perl.org
Subject: Module submission Constant::
To: modules@perl.org, roode@cpan.org
Approved: news@nntp.perl.org
From: upload@p11.speed-link.de ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Constant::
  DSLIP:       bdprp
  description: Create read-only scalars, arrays, hashes.
  userid:      ROODE (Eric J. Roode)
  chapterid:    2 (Perl_Core_Modules)
  communities:
    RPI lily server

  similar:
    "use constant" pragma

  rationale:

    Perl's built-in pragma creates only scalars and lists, creates
    variables that have no leading $ character, and which cannot be
    interpolated into strings. Also, it works only at compile time.

    Constant.pm, on the other hand, will work with global variables and
    with lexical ("my") variables. It will create scalars, arrays, or
    hashes, all of which look and work like normal, non-constant Perl
    variables.

    Constant.pm uses tied variables, so it has a performance penalty as
    compared to "use constant", but I believe it makes a valuable
    complement to the pragma.

  enteredby:   ROODE (Eric J. Roode)
  enteredon:   Thu Mar  7 20:03:19 2002 GMT

The resulting entry would be:

Constant::        bdprp Create read-only scalars, arrays, hashes.    ROODE


Thanks for registering,
The Pause Team

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=1d000000_8c0d809b927c429c&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=1d000000_8c0d809b927c429c&SUBMIT_pause99_add_mod_insertit=1
