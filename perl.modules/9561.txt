Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:9561
Return-Path: <muir@idiom.com>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 60077 invoked by uid 76); 7 Jan 2002 03:26:43 -0000
Received: from idiom.com (HELO idiom.com) (216.240.32.1)
  by onion.perl.org (qpsmtpd/0.05) with SMTP; Mon Jan  7 03:26:43 2002 -0000
Received: (from muir@localhost)
	by idiom.com (8.9.3/8.9.3) id TAA08243;
	Sun, 6 Jan 2002 19:26:36 -0800 (PST)
Date: Sun, 6 Jan 2002 19:26:36 -0800 (PST)
Message-ID: <200201070326.TAA08243@idiom.com>
To: Tim Bunce <Tim.Bunce@pobox.com>
Cc: modules@perl.org
Subject: Re: Need two module names allocated...  Net::SMTP::Receive Text::ParseRdist
Approved: news@nntp.perl.org
From: muir@idiom.com (David Muir Sharnoff)

* > * > * 	ParseConfig::Rdist
* > * > 
* > * > I'm happy with ParseConfig::Rdist.
* > * > 
* > * > Shall I use that?
* > * 
* > * Fine by me :)
* > 
* > I had another idea..  How about Emulate::Rdist?
* > 
* > That sounds better to my ear.
* 
* It's not a question of sound. If the primary purpose of the module is to 
* emulate the behaviour of rdist then the name should reflect that. If it's
* just to read rdist files then the name should reflect that.
* 
* In this case perhaps it could be two modules.
* 
* But an Emulate::* namespace doesn't appeal much. Many modules emulate
* something.
* 
* Perhaps Filesys::Rdist.

It does do both, but I see little point in making it two
modules. 

I don't think it fits with Filesys:: as the modules that are
there all deal with filesystems rather then the files in a
filesystem.

I would consider File::Rdist, but the module never actually uses
rdist.  Rather the purpose is to achieve the same ends using rsync.

File::Rdist2Rsync?

Rdist::Rsync?

Rdist::Parse?

I don't know.  Maybe I should stick with ParseConfig::Rdist.

Thanks,

-Dave
