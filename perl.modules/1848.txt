Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:1848
Return-Path: <joey@kitenet.net>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 19231 invoked from network); 13 May 2000 22:29:16 -0000
Received: from adsl-63-193-116-241.dsl.snfc21.pacbell.net (HELO kitenet.net) (postfix@63.193.116.241)
  by tmtowtdi.perl.org with SMTP; 13 May 2000 22:29:16 -0000
Received: by kitenet.net (Postfix, from userid 500)
	id A27D5BC009; Sat, 13 May 2000 15:29:15 -0700 (PDT)
Date: Sat, 13 May 2000 15:29:15 -0700
To: modules@perl.org
Subject: PAUSE application
Message-ID: <20000513152915.Q30699@kitenet.net>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
User-Agent: Mutt/1.0.1i
Approved: news@nntp.perl.org
From: joey@kitenet.net (Joey Hess)

I'd like to apply for a PAUSE account. 

Name: Joey Hess
Email: joey@kitenet.net
ID: JOEY			(second choice: JOEYH)

The first module I would like to contribute is HTML::Sanitizer.

  HTML::Sanitizer allows detailed control of what tags and tag attributes
  are allowed in html, and can also fully remove javascript from html,
  even if it is hidden in URLs or html entities.

  For example, you may allow users to post html comments on your website.
  Before putting the html up on the website for others to see, it should
  first be sanitized, to remove unwanted tags and possibly malicous
  javascript.

  use HTML::Sanitizer;
  $sanitizer=Html::Sanitizer->new(p => [], a => [qw{href name}]);
  $safehtml=$sanitizer->sanitize($html);

HTML::Sanitizer  bdpO  sanitize untrusted html

Where this has been discussed: 

I discussed this briefly on irc.openprojects.net irc channel #perl, and
several people expressed interest.

There's prior are in the backends of lots of websites, most of which get
it subtly wrong in one way or another (stripping javascript properly is
a beast).

-- 
see shy jo
