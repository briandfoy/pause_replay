Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:4095
Return-Path: <jv@squirrel.nl>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 5572 invoked from network); 4 Jan 2001 21:03:40 -0000
Received: from smtp9.xs4all.nl (194.109.127.135)
  by tmtowtdi.perl.org with SMTP; 4 Jan 2001 21:03:40 -0000
Received: from phoenix.squirrel.nl (asd-port169.dial.xs4all.nl [194.109.34.169] (may be forged))
	by smtp9.xs4all.nl (8.9.3/8.9.3) with ESMTP id WAA20200
	for <modules@perl.org>; Thu, 4 Jan 2001 22:03:38 +0100 (CET)
Received: by phoenix.squirrel.nl (Postfix, from userid 501)
	id C4F125781D; Thu,  4 Jan 2001 21:55:04 +0100 (CET)
MIME-Version: 1.0
Content-Type: multipart/mixed; boundary="nXwqKLxE2t"
Content-Transfer-Encoding: 7bit
Message-ID: <14932.58152.640696.892059@phoenix.squirrel.nl>
Date: Thu, 4 Jan 2001 21:55:04 +0100
To: modules@perl.org
Subject: forwarded message from Brian Ingerson
X-Mailer: VM 6.89 under Emacs 21.0.94.3
Sender: jv@squirrel.nl
Approved: news@nntp.perl.org
From: jvromans@squirrel.nl (Johan Vromans)

--nXwqKLxE2t
Content-Type: text/plain; charset=us-ascii
Content-Description: message body text
Content-Transfer-Encoding: 7bit

Fellow modulars,

What do you think?

-- Johan


--nXwqKLxE2t
Content-Type: message/rfc822
Content-Description: forwarded message
Content-Transfer-Encoding: 7bit

From: Brian Ingerson <briani@ActiveState.com>
To: modules@perl.org
Cc: neilw@cpan.org
Subject: Respecting the Inline namespace
Date: Wed, 20 Dec 2000 19:19:59 -0800
Content-Type: text/plain; charset=us-ascii
Mime-Version: 1.0

Hello,

Inline.pm version 0.30 has just been released, along with Inline::CPR.
Inline::Python and Inline::CPP (by NEILW) will follow very shortly.

I am writing this to make aware my intentions and concerns regarding the
Inline namespace. Version 0.30 provides a clear API for adding new
language support. It also provides documentation for doing so. I would
like to see Perl glued to as many languages as is useful. I have
intentions to start exploring Java, Fortran, Ruby, and bash. I have
hopes that this will become a community project. I have obtained the
inline@perl.org mailing list for that purpose.

My concern is that people will want to take over namespaces like
Inline::COBOL without consulting the Inline community. I would ask that
the moderators of modules@perl.org, please make sure that people
requesting Inline:: namespaces, have obtained the blessing of the Inline
community.

Please note that Inline support modules may be distributed under
different namespaces, and still work with Inline.pm. In other words
there can be more than one implementation of Lisp for Inline. But I want
to retain the right to insure that the author of the Inline-Lisp
distribution is working with the rest of the Inline community.

Here is what I wrote in Inline-API.pod:

The Inline Namespace:

Inline.pm has been set up so that anyone can write their
own language support modules. It further allows anyone to
write a different implementation of an existing Inline
language, like C for instance. You can distribute that
module on the CPAN.

If you have plans to implement and distribute an Inline
module, I would ask that you please work with the Inline
community. We can be reached at the Inline mailing list:
inline@perl.org (Send mail to inline-subscribe@perl.org to
subscribe). Here you should find the advice and assistance
needed to make your module a success.

The Inline community will decide if your implementation of
COBOL will be distributed as the official Inline::COBOL or
should use an alternate namespace. In matters of dispute,
I (Brian Ingerson) retain final authority. (and I hope not
to need use of it :-) Actually modules@perl.org retains
the final authority.

But even if you want to work alone, you are free and
welcome to write and distribute Inline language support
modules on CPAN. You'll just need to distribute them under
a different package name.
----------------------------------------------------------

Sincerely, Brian Ingerson <INGY@cpan.org>


-- 
perl -le 'use Inline C=>q{SV*JAxH(char*x){return newSVpvf
("Just Another %s Hacker",x);}};print JAxH+Perl'




--nXwqKLxE2t--
