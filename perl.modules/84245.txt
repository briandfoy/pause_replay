Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:84245
Return-Path: <mst@shadowcat.co.uk>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 4443 invoked from network); 21 Jan 2013 13:38:02 -0000
Received: from x1.develooper.com (207.171.7.70)
  by x6.develooper.com with SMTP; 21 Jan 2013 13:38:02 -0000
Received: (qmail 27159 invoked by uid 225); 21 Jan 2013 13:38:02 -0000
Delivered-To: modules@perl.org
Received: (qmail 27155 invoked by alias); 21 Jan 2013 13:38:01 -0000
X-Spam-Status: No, hits=-1.2 required=8.0
	tests=BAYES_00,SPF_SOFTFAIL
X-Spam-Check-By: la.mx.develooper.com
Received: from agaton.scsys.co.uk (HELO agaton.scsys.co.uk) (89.16.177.50)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Mon, 21 Jan 2013 05:37:58 -0800
Received: from matthewt by agaton.scsys.co.uk with local (Exim 4.72)
	(envelope-from <mst@shadowcat.co.uk>)
	id 1TxHZR-0004My-MM; Mon, 21 Jan 2013 13:37:53 +0000
Date: Mon, 21 Jan 2013 13:37:53 +0000
To: modules@perl.org
Cc: gryphon@cpan.org
Subject: Re: Module submission DBI::Query
Message-ID: <20130121133753.GV6412@newagaton.scsys.co.uk>
References: <20130118224229.D24BB1FF9B@pause.perl.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20130118224229.D24BB1FF9B@pause.perl.org>
User-Agent: Mutt/1.5.20 (2009-06-14)
Approved: news@nntp.perl.org
From: mst@shadowcat.co.uk (Matt S Trout)

On Fri, Jan 18, 2013 at 10:42:29PM +0000, Perl Authors Upload Server wrote:
> 
> The following module was proposed for inclusion in the Module List:
> 
>   modid:       DBI::Query
>   DSLIP:       bdpOp
>   description: Simplified abstracted chained DBI subclass
>   userid:      GRYPHON (Gryphon Shafer)
>   chapterid:   7 (Database_Interfaces)
>   communities:
> 
>   similar:
>     DBI DBI::Simple
> 
>   rationale:
> 
>     DBI::Query is a pure subclass of DBI that permits the use of
>     simplified, abstracted, chained database querying. The idea being
>     that you can use an interface similar to jQuery but drop into the
>     DBI superclass's methods at any time. There are methods like get()
>     that let you specify queries in SQL::Abstract-like ways and sql()
>     that let you specify queries in SQL. In both cases, DBI::Query
>     auto-builds in the other half. DBI::Query also provides an interface
>     to the data returned from the query, allowing for simplified,
>     abstracted, chained data interaction.

This belongs in the DBIx:: namespace - you've typo'ed DBIx::Simple as
DBI::Simple in your 'similar' section.

-- 
Matt S Trout - Shadowcat Systems - Perl consulting with a commit bit and a clue

http://shadowcat.co.uk/blog/matt-s-trout/   http://twitter.com/shadowcat_mst/

Email me now on mst (at) shadowcat.co.uk and let's chat about how our Catalyst
commercial support, training and consultancy packages could help your team.
