Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:11111
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 83007 invoked by uid 76); 10 Apr 2002 13:29:51 -0000
Received: from root@dubravka.kbx.de (HELO pause.perl.org) (212.40.160.59)
  by onion.perl.org (qpsmtpd/0.06) with SMTP; Wed Apr 10 13:29:51 2002 -0000
Received: (from nobody@localhost)
	by pause.perl.org (8.9.3/8.9.3) id PAA05927;
	Wed, 10 Apr 2002 15:29:48 +0200
Date: Wed, 10 Apr 2002 15:29:48 +0200
Message-ID: <200204101329.PAA05927@pause.perl.org>
Reply-To: modules@perl.org
Subject: Module submission Term::Interact
To: modules@perl.org, prl@cpan.org
Approved: news@nntp.perl.org
From: upload@p11.speed-link.de ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Term::Interact
  DSLIP:       bdpOp
  description: Easily Get Data Interactively From User
  userid:      PRL (Phil R Lawrence)
  chapterid:    8 (User_Interfaces)
  communities:
    clpm

  similar:
    Term::Prompt

  rationale:

    Other modules that deal with user-prompting are "type" fixated
    (asking the programmer: are you prompting for a floating point? a
    phone number? an international phone number?) This can often involve
    cryptic type codes when it comes time to interface with the module.

    Conversely, Term::Interact stays out of the business of building in
    types of data to ask the user for. Rather, it allows the programmer
    to specify one or more "checks" to apply against the user input. For
    example, if the programmer wants a phone number, he can pass (
    regex_check => qr/^\d{10}$/ ) to the module. Besides the built in
    checks (sql_check, list_check, regex_check, compare_check) the
    programmer can create custom checks if he wants to.

  enteredby:   PRL (Phil R Lawrence)
  enteredon:   Wed Apr 10 13:29:48 2002 GMT

The resulting entry would be:

Term::
::Interact        bdpOp Easily Get Data Interactively From User      PRL


Thanks for registering,
The Pause Team

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=73100000_c880d9c34dd061f9&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=73100000_c880d9c34dd061f9&SUBMIT_pause99_add_mod_insertit=1
