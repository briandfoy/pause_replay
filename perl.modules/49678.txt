Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:49678
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 12010 invoked from network); 1 Jul 2006 16:03:33 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 1 Jul 2006 16:03:33 -0000
Received: (qmail 1532 invoked by uid 225); 1 Jul 2006 16:03:33 -0000
Delivered-To: modules@perl.org
Received: (qmail 1514 invoked by alias); 1 Jul 2006 16:03:30 -0000
X-Spam-Status: No, hits=-2.5 required=8.0
	tests=BAYES_00,FORGED_RCVD_HELO
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
Received: from pause.fiz-chemie.de (HELO pause.perl.org) (195.149.117.110)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Sat, 01 Jul 2006 09:03:20 -0700
Received: from pause.perl.org (localhost.localdomain [127.0.0.1])
	by pause.perl.org (8.13.4/8.13.4/Debian-3sarge1) with ESMTP id k61G3BNd011184
	for <modules@perl.org>; Sat, 1 Jul 2006 18:03:11 +0200
Received: (from nobody@localhost)
	by pause.perl.org (8.13.4/8.13.4/Submit) id k61G3Bnc011183;
	Sat, 1 Jul 2006 18:03:11 +0200
Date: Sat, 1 Jul 2006 18:03:11 +0200
Message-ID: <200607011603.k61G3Bnc011183@pause.perl.org>
Subject: PAUSE ID request (ADUITSIS; Athanasios Douitsis)
Reply-To: modules@perl.org
To: modules@perl.org
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")

Request to register new user

fullname: Athanasios Douitsis
  userid: ADUITSIS
    mail: CENSORED
homepage: 
     why:

    I 've recently put together a rather small module that allows
    sharing of variables across processes. This module uses IPC::Mmap
    and Storable to provide an overly simplified way to share a scalar
    variable or a reference. Of course, there are a dozen other modules
    in CPAN which can do this and also cook dinner, but I was looking
    for a way to do it by 1)using a very simple OO way -- just invoke
    new, and then use set and get on the object to store and retrieve
    the variable. 2)using anonymous mmap. Many excellent modules are out
    there already that use shared memory, I wanted to use mmap on a
    memory segment. This probably does away with files hanging around or
    shared memory segments left behind. 3)Very simple locking, handled
    by the module, not by the user. 4)Not using tied variables.

    I was thinking that others might need the same thing, so why not
    share it!..

    Also, I am working on an SNMP helper library to ease use of the
    SNMP module from Net-SNMP. This is not ready to go though, so it
    will have to wait.

    Thanks for your attention!..

    Kind regards, Athanasios


The following links are only valid for PAUSE maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_user&USERID=7ab00000_162a5ea474640f1b&SUBMIT_pause99_add_user_sub=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_user&USERID=7ab00000_162a5ea474640f1b&SUBMIT_pause99_add_user_Definitely=1
