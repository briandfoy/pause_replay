Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:975
Return-Path: <ken@optusnet.com.au>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 9668 invoked from network); 25 Jan 2000 06:34:27 -0000
Received: from mail03.syd.optusnet.com.au (203.2.75.106)
  by 209.85.3.25 with SMTP; 25 Jan 2000 06:34:27 -0000
Received: from optusnet.com.au (thoth.optusnet.com.au [203.10.68.104])
	by mail03.syd.optusnet.com.au (8.9.3/8.9.3) with ESMTP id RAA21514
	for <modules@perl.org>; Tue, 25 Jan 2000 17:33:55 +1100
Sender: ken@mail03.syd.optusnet.com.au
Message-ID: <388D43D3.201D8CAD@optusnet.com.au>
Date: Tue, 25 Jan 2000 17:33:55 +1100
Reply-To: ken@optusnet.com.au
X-Mailer: Mozilla 4.61 [en] (X11; I; Linux 2.2.12-20 i686)
X-Accept-Language: en
MIME-Version: 1.0
To: modules@perl.org
Subject: IPC::QueLock ...
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Approved: news@nntp.perl.org
From: ken@optusnet.com.au (Ken Barber)

Hi There,

Thanks for setting up my space :-). I think I'm ready to upload, I just
wish to deliberate with you guys on the naming convention of my module.

Here is the description:

QueLock is a multi-host atomic nfs-safe (ahem) advisory queing locking
system. It uses file-based locking to acheive this. It is 95 % fair,
meaning that during periods of fast locking, que jumping can occur. This
is a resource locking scheme, not just for locking files/directories. So
it doesn't matter if your trying to lock a file or directory - the idea
is the same.

The queing system is essentially the key to this system, as I've found
in the past I've wanted to coordinate several scripts all editing the
same files and been unable to do this due to the lack of locking system
which can do this. I've basically had to coordinate what this module
does, into each script - so moving the class into a module seemed like a
reasonable idea.

The only other option close to this which is nfs safe is IPC::Locker,
however this is daemonic, which I wanted to avoid ... and it doesn't
support queing.

DLSI:

IPC::QueLock	adpO	An nfs-safe advisory queing locking system	KBARBER

I'd like to use IPC::QueLock because IPC is the closest high-level
system I can see which has something to do with Locks over nfs in this
manner. LockFile::QueLock is another type of though of, although again
this is a resource locking system - so "Lock_File_" is a little
misleading.

Anyways, what are your thoughts?

ken@.
