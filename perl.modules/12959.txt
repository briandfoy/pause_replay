Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:12959
Return-Path: <bigj@kamelfreund.de>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 87703 invoked by uid 1012); 30 Jul 2002 18:59:38 -0000
To: modules@perl.org
Subject: Re: New module ADT
Date: Tue, 30 Jul 2002 19:59:11 +0200
Message-ID: <pan.2002.07.30.17.58.48.72829.1788@kamelfreund.de>
References: <20020730154955.P598@dansat.data-plan.com> <83B318AE-A3CD-11D6-8235-003065D64CBE@contiller.se> <20020730171612.V598@dansat.data-plan.com>
User-Agent: Pan/0.11.3 (Unix)
Mime-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Transfer-Encoding: 8bit
X-Comment-To: "Tim Bunce" <Tim.Bunce@pobox.com>
X-Posted-By: 172.185.214.45
Approved: news@nntp.perl.org
From: bigj@kamelfreund.de (Janek Schleicher)

Tim Bunce wrote at Tue, 30 Jul 2002 18:16:12 +0200:

> Umm, Google found this for me:
> 
>     There is a need for a new set of data type modules on CPAN that
>     allows abstract defined interfaces to data types with multiple
>     implmentations.
> 
>     This comes from an attempt to remove the some Queue and Priority
>     Queue code from POE, and making it possible to switch implmentations
>     for different types of data.
> 
>     The current data type modules are spread out all over, they also
>     lack a standard interface, and many are, frankly extremely poorly
>     implemented.
> 
>     ADT stands for Adstract Data Types.
> 
> I follow that. And things like ADT::Queue::Priority make a lot of sense.

I also follow that,
it's something I missed on CPAN.

> 
>> New top level for implmentation of Abstract Data Types.
> 
> What I don't follow is what an ADT.pm would contain.

The OP said he wanted to register
  description: Abstract Data Type top level
ADT as a top level domain.

I do believe it's important to have this top level domain.
But I also do believe that it is important
that this top level domain is common,
what will mean,
that it isn't registered to anybody :-)

I would suggest to simply register
ADT::Specific::Datatype

and the community will register, too,
ADT::AnotherSpecific::Datatype


Greetings,
Janek

