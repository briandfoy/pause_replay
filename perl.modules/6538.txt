Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:6538
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 4060 invoked from network); 9 Jul 2001 16:18:34 -0000
Received: from dubravka.kbx.de (HELO pause.perl.org) (root@212.40.160.59)
  by onion.valueclick.com with SMTP; 9 Jul 2001 16:18:34 -0000
Received: (from nobody@localhost)
	by pause.perl.org (8.9.3/8.9.3) id SAA13276;
	Mon, 9 Jul 2001 18:18:32 +0200
Date: Mon, 9 Jul 2001 18:18:32 +0200
Message-ID: <200107091618.SAA13276@pause.perl.org>
Reply-To: modules@perl.org
Subject: Module submission Relations
To: modules@perl.org, gaffer@cpan.org
X-Spam-Rating: onion.valueclick.com 1.6.2 0/1000/N
Approved: news@nntp.perl.org
From: upload@p11.speed-link.de ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Relations
  DSLIP:       adphp
  description: Database, CGI, and Graph Interfunctionality
  userid:      GAFFER (George A. Fitch III)
  chapterid:    7 (Database_Interfaces)
  communities:

  similar:

  rationale:

    This is a collection of modules for connecting relational database,
    web interfaces, and dynamic graphs. Not only does it have an
    intermodule nature, it also has an interlanguage nature. Though most
    of it is currently written in Perl, with a little bit being written
    in PHP (both peppered with JavaScript), all modules will eventually
    exist in Perl, PHP, and possibly Java. Even though it falls under
    the Database Interface category, and DBIx has some weight for Perl,
    it doesn't work for PHP and Java. With, it can't take the name of an
    existing category in Perl. I chose the name Relations because: 1) It
    deals with relational databases. 2) It relates different modules. 3)
    It will have related classes in other languages.

    With respect to uniqueness, I admit Relations::Abstract is similar
    to DBIx::Abstract, (Oh no, that's done by someone at CPAN! :D ).
    Relations::Abstract, however, has a little more functionality, and
    this extra functionality is used heavily by other (specifically
    through Relations::Query) Relations modules, which are indeed
    unique: Relations::Admin (though only currently available for PHP)
    is a collection of classes for administering relational databases.
    Relations::Family is a highly flexible query engine.
    Relations::Display creates GD::Graph from Queries. Relations::Report
    (not avaialable yet and the name isn't settled either) provides a
    CGI interface for Family and Display.

    Finally, Relations should be on the module list because it can
    really help people out. These modules are the open source versions
    of a collection of routines that have had great success in a
    corporate enviroment, an enviroment that had high demands and low
    funding. Trust me, if it worked well there, (in the midst of open
    source fear, commerical solution competition, and ancient politics),
    Relations will work well anywhere

  enteredby:   GAFFER (George A. Fitch III)
  enteredon:   Mon Jul  9 16:18:32 2001 GMT

The resulting entry would be:

Relations         adphp Database, CGI, and Graph Interfunctionality  GAFFER


Thanks for registering,
The Pause Team

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=02000000_a1f41a4988548156&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=02000000_a1f41a4988548156&SUBMIT_pause99_add_mod_insertit=1
