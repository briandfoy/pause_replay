Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:85618
Return-Path: <ron@savage.net.au>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 31581 invoked from network); 15 Apr 2013 01:32:31 -0000
Received: from x1.develooper.com (207.171.7.70)
  by x6.develooper.com with SMTP; 15 Apr 2013 01:32:31 -0000
Received: (qmail 20681 invoked by uid 225); 15 Apr 2013 01:32:31 -0000
Delivered-To: modules@perl.org
Received: (qmail 20677 invoked by alias); 15 Apr 2013 01:32:31 -0000
X-Spam-Status: No, hits=0.1 required=8.0
	tests=BAYES_00,DEAR_SOMETHING,RCVD_IN_DNSWL_NONE,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received: from mail1.qnetau.com (HELO mail1.qnetau.com) (202.146.209.5)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Sun, 14 Apr 2013 18:32:22 -0700
Received: (qmail 22339 invoked by uid 399); 15 Apr 2013 01:32:11 -0000
Received: from unknown (HELO ?192.168.1.21?) (ron@savage.net.au@124.148.131.237)
  by mail1.qnetau.com with ESMTPAM; 15 Apr 2013 01:32:11 -0000
X-Originating-IP: 124.148.131.237
X-Sender: ron@savage.net.au
Message-ID: <516B5764.6040704@savage.net.au>
Date: Mon, 15 Apr 2013 11:27:00 +1000
User-Agent: Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.1.16) Gecko/20121215 Icedove/3.0.11
MIME-Version: 1.0
To: john@washburnresearch.org
CC: modules@perl.org, limaone@cpan.org
Subject: Re: Adoption of CPAN String::LCSS namespace by someone
References: <000001ce3965$67afaed0$370f0c70$@org>
In-Reply-To: <000001ce3965$67afaed0$370f0c70$@org>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-Virus-Checked: Checked
Approved: news@nntp.perl.org
From: ron@savage.net.au (Ron Savage)

Hi John

Anyone wishing to take over a namespace must chase up the existing 
holder of that namespace.

In other words, CPAN admins won't do it for you :-).

So, have you actully done that? If so, then give us some details and we 
can use that to decide how soon to transfer maint or co-maint to you, or 
to Marcus - whichever you prefer.

On 15/04/13 09:11, John Washburn wrote:
> Dear Sir/Madam:
>
>
>
> How do I or Markus Riester go about adopting the namespace: String::LCSS
> <http://search.cpan.org/~dyacob/String-LCSS-0.12/lib/String/LCSS.pm>  , so
> that the name space can be
>
> 1)      Populated with working code
>
> 2)      Managed by someone not lost in the wind.
>
>
>
> The most humorous defect against the code in this namespace is:
>
> 35736 lcss('b', 'ab') fails
> <https://rt.cpan.org/Public/Bug/Display.html?id=35736>  .
>
>
>
> The candidates for adoption of this name space are either myself or Markus
> Riester, author of: String::LCSS_XS
> <http://search.cpan.org/~limaone/String-LCSS_XS-1.2/lib/String/LCSS_XS.pm>  .
>
>
>
> More generally, there needs to be some framework similar to the Dutch legal
> concept from the water boards "The Law of the Shovel" for CPAN name spaces.
> People could lose their property interest in a polder if they did not
> maintain the dike that kept the polder dry.  The water board had the
> authority to transfer title of a polder to the person(s) putting in the
> spade work to keep the dike  sound and the polder dry.  By design, this is
> slow process similar to adverse possession in English law, but the concept
> is applicable to CPAN name spaces.  Interest in the property (e.g. the
> polder or the CPAN namespace) involves on-going efforts to maintain the
> property (the land in polder or the code in the CPAN namespace).
>
>
>
> The name space, String::LCSS
> <http://search.cpan.org/~dyacob/String-LCSS-0.12/lib/String/LCSS.pm>  , has
> become abandoned.  Please begin some proceedings remedy this.  At a minimum
> there should be a process that does the following:
>
> 1)      Attempt to find Daniel Yacob
>
> 2)      If found, request that he relinquish the name space to someone
> willing to maintain the space.
>
> 3)      If, after a long time of diligent searching, Daniel Yacob is still
> not found, then proceeding for transferring the CPAN name space should begin
>
> 4)      Publish on String::LCSS that the namespace has been declared
> abandoned.
>
> 5)      Request of the CPAN community volunteers who are willing t maintain
> the name space.
>
> 6)      If more than one volunteer emerges, then create some mechanism so
> the PERL community can decide which volunteer has the better candidate code
> for the name space.
>
> 7)      Re-assign the namespace to the new author.
>
>
>
>
>
> From: John Washburn [mailto:john@washburnresearch.org]
> Sent: Tuesday, January 01, 2013 6:03 PM
> To: 'ron@savage.net.au'
> Subject: CPAN namespace question for String::LCSS
>
>
>
> Dear Mr. Savage:
>
>
>
> Below is the email I sent to Stephen Woodbridge on my web-crawler.  I wanted
> to ask you a question regarding my post script (highlighted in brick red
> below) and this statement you made in a in a parallel email:
>
> As for a namespace, there is a long history in Perl (i.e. on CPAN) to add an
> X to the primary module's name, giving GedcomX::* as the prefix for all such
> modules. There's no doubt in my mind this is the best course.
>
>
>
> And since I've recently become one of the admins for CPAN itself, I do take
> module naming very seriously.
>
>
>
> Of course this is a bit confusing because we've just been discussing GEDCOM
> X. Sigh.
>
>
>
> So - what to do?
>
>
>
> Here's what I suggest: Last year I registered the new namespace
> Genealogy::*, so:
>
>
>
> 1) For modules using, or already based on, Gedcom.pm, I'd call them
> GedcomX::*.
>
>
>
> 2) For brand new modules, e.g. implementing GEDCOM X, or not using
> Gedcom.pm, e.g. me new parser we discussed on this list last year, I'd call
> them Genealogy::* or (for GEDCOM X) Genealogy::GedcomX::*.
>
>
>
> That way, we'd keep separate things separate.
>
>
>
> Would an acceptable alternative to my problem with String::LCSS
> <http://search.cpan.org/~dyacob/String-LCSS-0.12/lib/String/LCSS.pm>   be to
> register the StringX::LCSS namespace and upload my pure perl LCSS
> implementation to that namespace?  As you can see this particular name space
> has been a problem for more than 7 years. See: Bug reports in RT
> <https://rt.cpan.org/Public/Dist/Display.html?Name=String-LCSS>   and this
> notice at the PerlMonks: Does String::LCSS work?
> <http://www.perlmonks.org/?node_id=819398>  .  All my efforts over the last 3
> years to contact either Yacob or PAUSE
> <http://www.cpan.org/misc/cpan-faq.html#How_adopt_module>   have been in
> vain.
>
>
>
> Now that this irritant as returned to my attention I will make another
> effort to adopt this name space as described on the PAUSE
> <http://www.cpan.org/misc/cpan-faq.html#How_adopt_module>   section of the
> CPAN FAQs<http://www.cpan.org/misc/cpan-faq.html>   before going the route
> of creating a new StringX::LCSS namespace.
>
>
>
> But I was looking for some guidance on this namespace issue.
>
> 1.  Should I pursue creating the StringX::LCSS namespace as a stop gap to
> have working code in the CPAN while the longer term solution (i.e. adopt
> String::LCSS) proceeds?
>
> 2.  If I create StringX::LCSS and then I (or Lima One) get to adopt
> String::LCSS, then can I (we) collapse StringX::LCSS into String:LCSS so
> future references to StringX:LCSS redirect to String::LCSS?
>
>
>
> Thanks for any time you might give to this non-GEDCOM issue.
>
>
>
> John Washburn
>
>
>
> -----Original Message-----
> From: John Washburn [mailto:john@washburnresearch.org]
> Sent: Tuesday, January 01, 2013 11:15 AM
> To: 'Stephen Woodbridge'
> Subject: e-FamilyTreeSpider perl programming
>
>
>
> Dear Stephen:
>
>
>
> The promised code is attached.
>
>
>
> The perl program, e-FamilyTreeSpider-GedCom.pl, reads the INI file,
> e-FamilyTreeSpider.ini, for direction of how to walk the HTML files of the
> site.  The INI file designates such things as:
>
> 1. Where to store the work in progress files.
>
> 2. Where to store the GECOM
>
> 3. Append or re-create the GEDCOM upon execution.  This is used for
> debugging 4. Where to store the local copies of the HTML files.  The local
> copying speeds execution as any given HTML page may be read several times as
> parents, children and sibling pages are processed.
>
>
>
> The whole INI file is read into a hash that is then used by the perl
> programming proper.
>
>
>
> String::LCSS stands for Longest Common Sub-Sequence (or Longest Common
> Sub-String) is in the CPAN. But what is in the CPAN in this namespace is a
> broken piece of crap.  Included in the attached archive is a working version
> of the LCSS for either subsequences or substrings.  It is installable, but
> just be careful that your local working copy (installed from this archive)
> is not overwritten with the broken non-working copy from the CPAN.
>
>
>
> The LCSS algorithm is used when the HTML page is used to "improve" the
> current GEDCOM entry.  The idea is to take the string version with the
> longest common subsequence as the "better" version of the field data.  This
> "improvement" approach may be unnecessary for your application.
>
>
>
> Have fun.
>
>
>
> John Washburn
>
>
>
> P.S.
>
> As an aside if you know how to replace this namespace, String::LCSS, with a
> working version?  There are two of us that have been trying to get working
> code into that namespace.  All emails to the perl foundation go unanswered
> as have all the defect reports against Sting::LCSS.  Is there a way to have
> the perl foundation declare a namespace "abandoned" and thus open it up to
> people who actually want to share working code in the name space?
>
>
>
>
>
> -----Original Message-----
>
> From: Stephen Woodbridge [<mailto:woodbri@swoodbridge.com>
> mailto:woodbri@swoodbridge.com]
>
> Sent: Tuesday, January 01, 2013 9:49 AM
>
> To:<mailto:john@washburnresearch.org>  john@washburnresearch.org
>
> Cc:<mailto:perl-gedcom@perl.org>  perl-gedcom@perl.org; 'Ron Savage'
>
> Subject: Re: Gedcom.pm 1.17 released
>
>
>
> Hi John,
>
>
>
> Yes, I would love to get that and I'm willing to share my code once I have
> time to fix the most critical issues.
>
>
>
> Maybe Paul would like to create a "contrib" directory in the repository that
> could be used to make code like this available. I guess we could all make
> public repos on github if we have code to contribute but I think that makes
> it harder to find it. And/or we could create wiki
>
> page(s) that describes these contrib items and how to use them.
>
>
>
> Anyway, please send your code when you get a chance. It might be a month
>
> +- before I get to look at it and give it a try.
>
>
>
> Thanks,
>
>     -Steve
>
>
>
> On 1/1/2013 10:37 AM, John Washburn wrote:
>
>> Dear Stephen:
>
>>
>
>> I have a perl program that walks the HTML pages of e-FamilyTree.net
>
>> and pipes it out to a GEDCOM file.  It is also interruptible in that
>
>> you can run the program for a while, stop it and upon restart it will
>
>> pick up where the search left off.
>
>>
>
>> It uses the HTML:Tree builder and the wonderful look-down
>
>> functionality mentioned by Ron.  It also used Date::Manip quite heavily.
>
>>
>
>> I would be happy to zip up the code and send the archive to you if you
>
>> are interested.  The code is a bit bloated because the code grew over
>
>> time and I had to add special cases for some of the errors in the
>
>> e-familynet HTML structure and to implement the 1-generation look ahead.
>
>>
>
>>
>
>> -----Original Message-----
>
>> From: Ron Savage [<mailto:ron@savage.net.au>  mailto:ron@savage.net.au]
>
>> Sent: Saturday, December 29, 2012 10:06 PM
>
>> To:<mailto:perl-gedcom@perl.org>  perl-gedcom@perl.org
>
>> Subject: Re: Gedcom.pm 1.17 released
>
>>
>
>> Hi Stephen
>
>>
>
>> On 30/12/12 11:03, Stephen Woodbridge wrote:
>
>>> On 12/29/2012 5:26 PM, Paul Johnson wrote:
>
>>
>
>>> What I noticed was that the data way nicely tag in the HTML so I am
>
>>> writing a parser to read the HTML can generate a Gedcom file. I have
>
>>> the basics working, but I have to do more work on it to fix bugs and
>
>>> collect more of the data than I current am. I'm side tracked with
>
>>> work at the moment so it is on hold. When I'm done it will have
>
>>> generated a
>
>>> 40K+ person Gedcom file. This should be able able to create a gedcom
>
>>> from any "Second Site" generated website assuming it is similar to
>
>>> the link above. Or you can ask the site owner for a copy of the
>
>>> gedcom :), but this seemed like a worth challenge at the time.
>
>>
>
>> Are you using HTML::TreeBuilder and the v-e-r-y nice look_down() method?
>
>>
>
>> --
>
>> Ron Savage
>
>>   <http://savage.net.au/>  http://savage.net.au/
>
>> Ph: 0421 920 622
>
>> -----
>
>> No virus found in this message.
>
>> Checked by AVG -<http://www.avg.com>  www.avg.com
>
>> Version: 2013.0.2805 / Virus Database: 2637/5997 - Release Date:
>
>> 12/30/12
>
>>
>
>
>
> -----
>
> No virus found in this message.
>
> Checked by AVG -<http://www.avg.com>  www.avg.com
>
> Version: 2013.0.2805 / Virus Database: 2637/6001 - Release Date: 01/01/13
>
>

-- 
Ron Savage
http://savage.net.au/
Ph: 0421 920 622
