Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:881
Return-Path: <Jochen.Stenzel.gp@icn.siemens.de>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 18009 invoked from network); 13 Jan 2000 12:23:35 -0000
Received: from gorilla.mchh.siemens.de (194.138.158.18)
  by tmtowtdi.perl.org with SMTP; 13 Jan 2000 12:23:35 -0000
Received: from blues.mchh.siemens.de (mail3.mchh.siemens.de [194.138.158.227] (may be forged))
	by gorilla.mchh.siemens.de (8.9.3/8.9.3) with ESMTP id NAA19841
	for <modules@perl.org>; Thu, 13 Jan 2000 13:22:37 +0100 (MET)
Received: from demchh2msx.icn.siemens.de (root@ss-aladin [132.29.102.62])
	by blues.mchh.siemens.de (8.9.1/8.9.1) with ESMTP id NAA20869
	for <modules@perl.org>; Thu, 13 Jan 2000 13:21:09 +0100 (MET)
Received: from icn.siemens.de (s8a8263.mchh3.oen.siemens.de [132.37.1.114])
	by demchh2msx.icn.siemens.de (8.9.1/8.9.1) with ESMTP id NAA21628
	for <modules@perl.org>; Thu, 13 Jan 2000 13:23:26 +0100 (MET)
Sender: jochen.stenzel.gp@icn.siemens.de
Message-ID: <387DC3BA.2F7EE1B7@icn.siemens.de>
Date: Thu, 13 Jan 2000 13:23:22 +0100
X-Mailer: Mozilla 4.7 [en] (X11; I; SunOS 5.5.1 sun4u)
X-Accept-Language: German/Germany, de-DE, en
MIME-Version: 1.0
To: modules@perl.org
Subject: Module name search (suggesting IPC::LDT)
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Approved: news@nntp.perl.org
From: Jochen.Stenzel.gp@icn.siemens.de ("Hr. Jochen Stenzel")

Hello,

I'm on the way to publish a module and have to choose a name. It
implements a "length driven" IPC protocol: every message is preceded by
a fix number of bytes containing a number indicating the length of the
remaining message. E.g., if you want to send "msg" and the prefix length
is set to 4, it would send "0003msg". It's stable for about a year now.
(Some weeks ago I read that S. Srinivasan uses a similar protocol in an
"Advanced Perl Programming" example, but I found no CPAN module
implementing it.)

In addition to the basic protocol feature, my module can switch transfer
objects from ASCII to object mode and vice versa to transfer Perl data
structures (serialized via Storable) if required. Connections can be
protected by SSL on request. Finally, it enables to delay the delivery
of messages.

I suggest IPC::LDT for "length driven protocol". What do you think?

Greetings

                    J. Stenzel

