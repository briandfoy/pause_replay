Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:29596
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 22020 invoked by uid 76); 18 Mar 2004 19:23:17 -0000
Received: from x1.develooper.com (HELO x1.develooper.com) (63.251.223.170)
  by onion.perl.org (qpsmtpd/0.27.1) with SMTP; Thu, 18 Mar 2004 11:23:17 -0800
Received: (qmail 2290 invoked by uid 225); 18 Mar 2004 19:23:10 -0000
Delivered-To: modules@perl.org
Received: (qmail 2168 invoked by alias); 18 Mar 2004 19:22:50 -0000
Received: from [195.149.117.110] (HELO pause.perl.org) (195.149.117.110)
  by la.mx.develooper.com (qpsmtpd/0.27.1) with ESMTP; Thu, 18 Mar 2004 11:22:50 -0800
Received: from pause.perl.org (localhost [127.0.0.1])
	by pause.perl.org (8.12.3/8.12.3/Debian-6.6) with ESMTP id i2IJMhcj027112;
	Thu, 18 Mar 2004 20:22:43 +0100
Received: (from nobody@localhost)
	by pause.perl.org (8.12.3/8.12.3/Debian-6.6) id i2IJMhSe027110;
	Thu, 18 Mar 2004 20:22:43 +0100
Date: Thu, 18 Mar 2004 20:22:43 +0100
Message-ID: <200403181922.i2IJMhSe027110@pause.perl.org>
Subject: Module submission Iterator
Reply-To: modules@perl.org
To: modules@perl.org, stevan@cpan.org
X-Spam-Checker-Version: SpamAssassin 2.63 (2004-01-11) on x1.develooper.com
X-Spam-Status: No, hits=-4.9 required=8.0 tests=BAYES_00 autolearn=no 
	version=2.63
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Iterator
  DSLIP:       adpOp
  description: A basic Iterator class, built to be extended
  userid:      STEVAN (Stevan Little)
  chapterid:   20 (Control_Flow_Utilities)
  communities:

  similar:
    Data::Iter, Class::Iterator, and numerous *::Iterator modules

  rationale:

    I am proposing a new root level namespace called Iterator::.

    There seems to me to be no base class for Iterators, but tons of
    Iterator classes. I am not proposing to create across the board
    consistency, but instead a base class, built for extension, which
    could be used to create interchangeable and consistent iterators.
    Yes, yes interface polymorphism is what I am getting at. I know some
    might argue that with 'foreach', 'map', 'grep', and 'each', there
    already exists iterator like constructs in the perl language itself,
    so why do we need anything else. But that neglects the needs of more
    complex structures.

    This is nothing revolutionary for sure, but I think it is something
    the community could benefit from. I have suggested to place this
    under "Control Flow Utilities", but it could also possibly fit under
    "Data and Data-Types" I think.

    Thank you for your consideration,

    Stevan Litle stevan@iinteractive.com

  enteredby:   STEVAN (Stevan Little)
  enteredon:   Thu Mar 18 19:22:41 2004 GMT

The resulting entry would be:

Iterator          adpOp A basic Iterator class, built to be extended STEVAN


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=84700000_d39c84536986a398&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=84700000_d39c84536986a398&SUBMIT_pause99_add_mod_insertit=1
