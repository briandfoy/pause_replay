Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:11254
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 79017 invoked by uid 76); 17 Apr 2002 13:54:52 -0000
Received: from root@dubravka.kbx.de (HELO pause.perl.org) (212.40.160.59)
  by onion.perl.org (qpsmtpd/0.06) with SMTP; Wed Apr 17 13:54:52 2002 -0000
Received: (from nobody@localhost)
	by pause.perl.org (8.9.3/8.9.3) id PAA15069;
	Wed, 17 Apr 2002 15:54:39 +0200
Date: Wed, 17 Apr 2002 15:54:39 +0200
Message-ID: <200204171354.PAA15069@pause.perl.org>
Reply-To: modules@perl.org
Subject: Module submission DBIx::BLOB::Handle
To: modules@perl.org, msouthern@cpan.org
Approved: news@nntp.perl.org
From: upload@p11.speed-link.de ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       DBIx::BLOB::Handle
  DSLIP:       adphp
  description: A filehandle / IO::* interface to DB LOB's
  userid:      MSOUTHERN (Mark Southern)
  chapterid:    7 (Database_Interfaces)
  communities:

  similar:
    IO::BLOB::Pg DBI

  rationale:

    DBI has blob_copy_to_file method which takes a file handle argument
    and copies a database large binary object (LOB) to this file handle.
    However, this method is faulty. This module is a tied filehandle
    that also extends from IO::Handle and IO::Selectable. It wraps DBI's
    blob_read method. By making LOB's available as a file handle to read
    from we can process the data in a familiar perly way. Additionally,
    by making the module respect $/ and $. then we can read lines of
    text data from a textual LOB (CLOB) and treat it just as we would
    any other file handle.

  enteredby:   MSOUTHERN (Mark Southern)
  enteredon:   Wed Apr 17 13:54:38 2002 GMT

The resulting entry would be:

DBIx::BLOB::
::Handle          adphp A filehandle / IO::* interface to DB LOB's   MSOUTHERN


Thanks for registering,
The Pause Team

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=15100000_0661e9ce7b3f8c22&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=15100000_0661e9ce7b3f8c22&SUBMIT_pause99_add_mod_insertit=1
