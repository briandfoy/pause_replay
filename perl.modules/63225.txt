Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:63225
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 21351 invoked from network); 16 Nov 2008 18:49:07 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by x6.develooper.com with SMTP; 16 Nov 2008 18:49:07 -0000
Received: (qmail 17486 invoked by uid 225); 16 Nov 2008 18:49:06 -0000
Delivered-To: modules@perl.org
Received: (qmail 17482 invoked by alias); 16 Nov 2008 18:49:06 -0000
X-Spam-Status: No, hits=0.0 required=8.0
	tests=
X-Spam-Check-By: la.mx.develooper.com
Received: from pause.fiz-chemie.de (HELO pause.perl.org) (195.149.117.110)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Sun, 16 Nov 2008 10:49:04 -0800
Received: from pause.perl.org (localhost.localdomain [127.0.0.1])
	by pause.perl.org (8.13.8/8.13.8/Debian-3) with ESMTP id mAGImqFL013532;
	Sun, 16 Nov 2008 19:48:53 +0100
Received: (from nobody@localhost)
	by pause.perl.org (8.13.8/8.13.8/Submit) id mAGImqGC013531;
	Sun, 16 Nov 2008 19:48:52 +0100
Date: Sun, 16 Nov 2008 19:48:52 +0100
Message-ID: <200811161848.mAGImqGC013531@pause.perl.org>
Subject: Module submission EV::Stream
Reply-To: modules@perl.org
To: modules@perl.org, powerman@cpan.org
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       EV::Stream
  DSLIP:       RdpOp
  description: ease non-blocking I/O streams based on EV
  userid:      POWERMAN (Alex Efros)
  chapterid:   21 (File_Handle_Input_Output)
  communities:

  similar:
    AnyEvent::Handle

  rationale:

    Yeah, one more module trying to fight complexity of non-blocking
    event-based I/O programming.

    I stick to EV because I need high-performance and reliability.

    This module support only I/O streams - i.e. no listening sockets,
    no udp, etc. - only file, tty, unix socket, tcp socket, pipe, fifo
    supported.

    Another reason to have "stream" in module name - it support
    plugins, oriented to work with I/O streams. Already available and
    uploaded plugins add: RC4 encryption, SSL client/server support,
    HTTPS (CONNECT) proxy support.

    As example, use chain of 3 HTTPS proxies to connect to HTTPS web
    server:

    EV::Stream->new({ host => 'www.google.com', port => 443, cb =>
    \&process_server_reply, wait_for => IN|EOF, out_buf => "GET /
    HTTP/1.0\nHost: www.google.com\n\n", plugin => [ ssl =>
    EV::Stream::MatrixSSL::Client->new({ cb => \&server_cert_validate,
    }), proxy1 => EV::Stream::Proxy::HTTPS->new({ host =>
    'last.proxy.com', port => 3128, }), proxy2 =>
    EV::Stream::Proxy::HTTPS->new({ host => 'middle.proxy.com', port =>
    3128, }), proxy3 => EV::Stream::Proxy::HTTPS->new({ host =>
    'first.proxy.com', port => 3128, user => 'me', pass => 'mypass', }),
    ], });

    I plan to use EV::Stream::* name space for EV::Stream plugins, like
    shown in example above.

  enteredby:   POWERMAN (Alex Efros)
  enteredon:   Sun Nov 16 18:48:52 2008 GMT

The resulting entry would be:

EV::
::Stream          RdpOp ease non-blocking I/O streams based on EV    POWERMAN


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=a3410000_40aa8547075b5d10&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=a3410000_40aa8547075b5d10&SUBMIT_pause99_add_mod_insertit=1
