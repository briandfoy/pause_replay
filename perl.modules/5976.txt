Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:5976
Return-Path: <tripiecz@yahoo.com>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 51127 invoked from network); 2 Jun 2001 18:43:11 -0000
Received: from web10803.mail.yahoo.com (216.136.130.245)
  by onion.valueclick.com with SMTP; 2 Jun 2001 18:43:11 -0000
Message-ID: <20010602184301.57158.qmail@web10803.mail.yahoo.com>
Received: from [212.20.101.83] by web10803.mail.yahoo.com; Sat, 02 Jun 2001 11:43:01 PDT
Date: Sat, 2 Jun 2001 11:43:01 -0700 (PDT)
Subject: Re: CGI::CheckHTML [was: CPAN id registration]
To: modules@perl.org
In-Reply-To: <m366efz5sh.fsf@ak-71.mind.de>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Spam-Rating: onion.valueclick.com 1.6.2 0/1000/N
Approved: news@nntp.perl.org
From: tripiecz@yahoo.com (Tomas Styblo)
References: <m366efz5sh.fsf@ak-71.mind.de>

> If, on the
> other hand, it has
> some modular CGI interface constructor, it should
> not be limited to
> HTML checking because if it limits itself in what it
> is doing, it
> isn't very modular.

It's not limited to any interface, it has a
constructor that creates an object, which in turn can 
be configured and then repeatably used to check
strings with HTML that you pass to its method. 

So I think "HTML::CGIChecker" is quite an aproppriate
name for it.

The original idea of "CGI::CheckHTML" araised when I
bulit a message board and desperately needed a way to
deny users to break resulting pages by posting
malicious code, javascripts, porn etc, while still
allowing them to use *some* HTML. The first place I
looked for a solution was the CGI area.

Just my 0.02c.

Thanks, Tomas



__________________________________________________
Do You Yahoo!?
Get personalized email addresses from Yahoo! Mail - only $35 
a year!  http://personal.mail.yahoo.com/
