Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:31055
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 60187 invoked from network); 22 Apr 2004 03:07:25 -0000
Received: from x1.develooper.com (63.251.223.170)
  by onion.develooper.com with SMTP; 22 Apr 2004 03:07:25 -0000
Received: (qmail 7096 invoked by uid 225); 22 Apr 2004 03:07:25 -0000
Delivered-To: modules@perl.org
Received: (qmail 7089 invoked by alias); 22 Apr 2004 03:07:24 -0000
X-Spam-Status: No, hits=0.0 required=7.0
	tests=
X-Spam-Check-By: la.mx.develooper.com
Received: from pause.fiz-chemie.de (HELO pause.perl.org) (195.149.117.110)
  by la.mx.develooper.com (qpsmtpd/0.27.1) with ESMTP; Wed, 21 Apr 2004 20:07:24 -0700
Received: from pause.perl.org (localhost [127.0.0.1])
	by pause.perl.org (8.12.3/8.12.3/Debian-6.6) with ESMTP id i3M378TB021279;
	Thu, 22 Apr 2004 05:07:09 +0200
Received: (from nobody@localhost)
	by pause.perl.org (8.12.3/8.12.3/Debian-6.6) id i3M378In021277;
	Thu, 22 Apr 2004 05:07:08 +0200
Date: Thu, 22 Apr 2004 05:07:08 +0200
Message-ID: <200404220307.i3M378In021277@pause.perl.org>
Subject: Module submission Secure::UID
Reply-To: modules@perl.org
To: modules@perl.org, pjf@cpan.org
X-Spam-Rating: onion.develooper.com 1.6.2 0/1000/N
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Secure::UID
  DSLIP:       idhpp
  description: Manipulate Unix Saved UID privileges.
  userid:      PJF (Paul Jamieson Fenwick)
  chapterid:   14 (Security_and_Encryption)
  communities:
    Will be presented to Melbourne Perl Mongers, form part of a security
    tutorial at the SAGE-AU conference this year.

  similar:
    No modules with similar functionality. I'd love to be told I'm wrong
    here. ;)

  rationale:

    POSIX and System V Unixes, including Linux, have the following UID
    (and GID) concepts:

    * The Real UID. When executing a suid program, this is the UID of
    the person invoking the code. In Perl, this is represented by the
    special variable $<.

    * The Effective UID. Most operations are done with the privileges
    of the Effective UID. When executing a suid program, this is the UID
    of the program's owner. In Perl, this is represented by the special
    variable $>.

    * The Saved UID. This is the Effective UID of the process when it
    was started. It exists so that the Effective UID can be dropped and
    then later restored. Perl appears to have no concept of Saved UIDs.

    As Perl has no concept of the Saved UID, it is impossible in plain
    Perl to completely drop privileges when running in a suid-fashion,
    as the effective UID can always be set back to the saved UID, as
    demonstrated by the code at the end of this rationale (tested under
    (2.4.x Linux kernel, Perl 5.6.1 and 5.8.3).

    While I believe the overall goal should be to give Perl a concept
    of saved UID, and this may already exist in the development branch
    (I haven't checked yet), the purpose of this module would be to
    introduce a concept of saved UID to current 5.6.x and 5.8.x
    releases. Most importantly, this would allow for privileges to be
    dropped in an *irrevocable* fashion. This has obvious security
    benefits.

    This module may be extended to allow manipulation of other exotic
    UIDs (such as the filesystem UID under Linux) on systems that
    support them.

    Feedback, naming suggestions, and discussion is appreciated.

    Cheers,

    Paul

    #!/usr/bin/perl -wT use strict;

    my $old_euid = $>;

    print "Current EUID,UID: $> $<\n";

    $> = $<;

    print "Dropped privs. $> $<\n";

    $> = $old_euid;

    print "Regained privs? $> $<\n"; __END__

  enteredby:   PJF (Paul Jamieson Fenwick)
  enteredon:   Thu Apr 22 03:07:07 2004 GMT

The resulting entry would be:

Secure::
::UID             idhpp Manipulate Unix Saved UID privileges.        PJF


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=9a600000_7da553faf9cb17b3&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=9a600000_7da553faf9cb17b3&SUBMIT_pause99_add_mod_insertit=1
