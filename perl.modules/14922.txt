Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:14922
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 80148 invoked by uid 76); 1 Nov 2002 09:20:23 -0000
Received: from root@[212.40.160.59] (HELO pause.perl.org) (212.40.160.59) by onion.perl.org (qpsmtpd/0.12) with SMTP; 2002-11-01 09:20:23Z
Received: (from nobody@localhost)	by pause.perl.org (8.11.6/8.11.6) id gA19HHs20053;	Fri, 1 Nov 2002 10:17:17 +0100
Date: Fri, 1 Nov 2002 10:17:17 +0100
Message-ID: <200211010917.gA19HHs20053@pause.perl.org>
Reply-To: modules@perl.org
Subject: Module submission Variable::Alias
To: modules@perl.org, brentdax@cpan.org
X-SMTPD: qpsmtpd/0.12, http://develooper.com/code/qpsmtpd/
Approved: news@nntp.perl.org
From: upload@p11.speed-link.de ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Variable::Alias
  DSLIP:       bdpfp
  description: Make any variable an alias of another
  userid:      BRENTDAX (Brent Dax)
  chapterid:    3 (Development_Support)
  communities:

  similar:
    Lexical::Alias

  rationale:

    While the typeglob aliasing functionality exists in Perl, and the
    Lexical::Alias module is on the CPAN, there are two weaknesses:

    1) The techiques for using them are completely unrelated. 2)
    Neither of them allows you to alias something to the elements of an
    aggregate.

    Since I need the functionality of the latter for another module I'm
    working on, I wrapped it up in a module and uploaded it to CPAN.

    The name is by analogy to Lexical::Alias. It is in a new namespace,
    but one I think can be generally useful.

  enteredby:   BRENTDAX (Brent Dax)
  enteredon:   Fri Nov  1 09:17:15 2002 GMT

The resulting entry would be:

Variable::
::Alias           bdpfp Make any variable an alias of another        BRENTDAX


Thanks for registering,
The Pause Team

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=b6300000_cafe9ec7dd001efc&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=b6300000_cafe9ec7dd001efc&SUBMIT_pause99_add_mod_insertit=1
