Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:7703
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 6504 invoked from network); 23 Sep 2001 14:24:02 -0000
Received: from dubravka.kbx.de (HELO pause.perl.org) (root@212.40.160.59)
  by onion.valueclick.com with SMTP; 23 Sep 2001 14:24:02 -0000
Received: (from nobody@localhost)
	by pause.perl.org (8.9.3/8.9.3) id QAA14344;
	Sun, 23 Sep 2001 16:24:00 +0200
Date: Sun, 23 Sep 2001 16:24:00 +0200
Message-ID: <200109231424.QAA14344@pause.perl.org>
Reply-To: modules@perl.org
Subject: Module submission Date::Object
To: modules@perl.org
X-Spam-Rating: onion.valueclick.com 1.6.2 0/1000/N
Approved: news@nntp.perl.org
From: upload@p11.speed-link.de ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Date::Object
  DSLIP:       bdpOp
  description: OO wrapper that allows math operations
  userid:      MLUKER (Matt Luker)
  chapterid:    6 (Data_Type_Utilities)
  communities:
    mail newsgroups, CVS

  similar:
    OO-DateTime

  rationale:

    I wrote this module to solve a specific problem: iterating over
    dates in a for loop as if they were a mathematical quantity. In the
    process of solving that problem, I managed to create a pretty useful
    object that could be used in several other ways. It makes using
    dates much easier and simpler within code. You can add, subtract,
    compare, increment, use like a string or a number--all this while
    not having to worry about the tough things in dates, mainly when to
    wrap or reset, how to compare months from different years, etc.
    While much of this could be done or simulated by using seconds
    values, it requires a lot of conversion and checks. This set of
    objects does that for you and allows dates to just be treated like
    any other numerical quantity.

    I wrote this when I was bored because I didn't have internet
    access. So I couldn't check to see if someone had done it already or
    done it better. After finishing it, my internet access was up and I
    tried to find a better implementation in CPAN. Apparently no one
    else had done any similar work (to my surprise). OO-DateTime by
    TOBIX appears to be design work, but there doesn't appear to be
    anything to try or use. His module appears (from the README) to be
    Date::Time.

    I'd prefer just Date::, but I have several objects (Date and Time
    currently, DateTime and Timestamp in the future) and I thought it
    best to keep all my work in the same scoped package. Date::Object
    seems plain enough--an OO interface to dates. Thus the name choice.

    Again, I'm not trying to duplicate work and I don't want to dismiss
    anyone's hard work, but it appears that nothing else is done or
    ready to be used. While my module might have chosen some poor
    designs that I am unaware of, it appears to work nicely and get the
    job done. I'm hoping it will be useful to others as well, even if I
    did it in a non-optimal way.

  enteredby:   MLUKER (Matt Luker)
  enteredon:   Sun Sep 23 14:23:59 2001 GMT

The resulting entry would be:

Date::
::Object          bdpOp OO wrapper that allows math operations       MLUKER


Thanks for registering,
The Pause Team

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=01100000_09940a40ff9e3570&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=01100000_09940a40ff9e3570&SUBMIT_pause99_add_mod_insertit=1
