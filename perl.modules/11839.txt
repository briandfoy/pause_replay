Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:11839
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 77393 invoked by uid 76); 25 May 2002 16:32:18 -0000
Received: from root@dubravka.kbx.de (HELO pause.perl.org) (212.40.160.59)
  by onion.perl.org (qpsmtpd/0.07b) with SMTP; Sat May 25 16:32:18 2002 -0000
Received: (from nobody@localhost)
	by pause.perl.org (8.9.3/8.9.3) id SAA12110;
	Sat, 25 May 2002 18:32:15 +0200
Date: Sat, 25 May 2002 18:32:15 +0200
Message-ID: <200205251632.SAA12110@pause.perl.org>
Reply-To: modules@perl.org
Subject: Module submission Class::Default
To: modules@perl.org, adamk@cpan.org
Approved: news@nntp.perl.org
From: upload@p11.speed-link.de ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Class::Default
  DSLIP:       bdpOp
  description: Static method calls use default object
  userid:      ADAMK (Adam Kennedy)
  chapterid:    6 (Data_Type_Utilities)
  communities:

  similar:
    CGI.pm

  rationale:

    Inheriting from this class will allow a class to have static method
    applied to a default instantation of the class.

    A good exising example of the technique is CGI.pm, with which you
    can call CGI->header, and the call is made not on the class itself,
    but on a default instantation.

    In OO terminolgy, think a singleton you access through static
    methods, but retaining the ability to create a seperate copy should
    the need arise.

    I use it a lot for thing like Factory classes

  enteredby:   ADAMK (Adam Kennedy)
  enteredon:   Sat May 25 16:32:14 2002 GMT

The resulting entry would be:

Class::
::Default         bdpOp Static method calls use default object       ADAMK


Thanks for registering,
The Pause Team

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=ac100000_5245388642452f50&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=ac100000_5245388642452f50&SUBMIT_pause99_add_mod_insertit=1
