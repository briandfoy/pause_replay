Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:10039
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 85287 invoked by uid 76); 7 Feb 2002 00:14:12 -0000
Received: from root@dubravka.kbx.de (HELO pause.perl.org) (212.40.160.59)
  by onion.perl.org (qpsmtpd/0.06) with SMTP; Thu Feb  7 00:14:12 2002 -0000
Received: (from nobody@localhost)
	by pause.perl.org (8.9.3/8.9.3) id BAA16253;
	Thu, 7 Feb 2002 01:14:09 +0100
Date: Thu, 7 Feb 2002 01:14:09 +0100
Message-ID: <200202070014.BAA16253@pause.perl.org>
Reply-To: modules@perl.org
Subject: Module submission Schedule::Depend
To: modules@perl.org, lembark@cpan.org
Approved: news@nntp.perl.org
From: upload@p11.speed-link.de ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Schedule::Depend
  DSLIP:       adpOp
  description: Parallel execution w/ dependencies.
  userid:      LEMBARK (Steven Lembark)
  chapterid:    4 (Operating_System_Interfaces)
  communities:

  similar:
    Similar to pmake, not much else I can find.

  rationale:

    Schedule:: seems likely since this runs other jobs.

    Schedule::Depend is an OO variant of a makefile system for running

    tasks that depend on one another sequentially, can run in parallel

    and/or may have to be restarted after a general failure. It
    combines

    a simplified make-like syntax with the ability to overload token

    expansion and pre-post execution checks and the use of pidfiles

    with exit status that allow restarting the queue.

    The syntax of its dependncy list is similar to make. Rather than

    try to emulate make's target + exectuion format, however, this

    uses literal aliases as the baseline replacement, e.g.,

    bar = pwd

    foo = ls

    foo:bar

    will run "ls" after "pwd". Overloading the alias mechanism allows
    replacing "foo" with whatever the designer likes.

    The runnable jobs are forked, with the expanded string fed to the
    shell via exec $string; children are reaped via wait. Jobs are run
    in parallel, within limits set by a maxjob parameter in the alias
    list.

    The code itself is reasonably stable at this point, main reason for
    marking it "alpha" are likely changes in the interface as people
    play with it.

  enteredby:   LEMBARK (Steven Lembark)
  enteredon:   Thu Feb  7 00:14:09 2002 GMT

The resulting entry would be:

Schedule::
::Depend          adpOp Parallel execution w/ dependencies.          LEMBARK


Thanks for registering,
The Pause Team

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=c6000000_678800b2b38a459a&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=c6000000_678800b2b38a459a&SUBMIT_pause99_add_mod_insertit=1
