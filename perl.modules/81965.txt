Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:81965
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 30020 invoked from network); 29 Aug 2012 01:23:33 -0000
Received: from x1.develooper.com (207.171.7.70)
  by x6.develooper.com with SMTP; 29 Aug 2012 01:23:33 -0000
Received: (qmail 32061 invoked by uid 225); 29 Aug 2012 01:23:33 -0000
Delivered-To: modules@perl.org
Received: (qmail 32057 invoked by alias); 29 Aug 2012 01:23:32 -0000
X-Spam-Status: No, hits=-1.9 required=8.0
	tests=BAYES_00
X-Spam-Check-By: la.mx.develooper.com
Received: from pause.fiz-chemie.de (HELO pause.fiz-chemie.de) (195.37.231.65)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Tue, 28 Aug 2012 18:23:29 -0700
Received: from pause.fiz-chemie.de (localhost.localdomain [127.0.0.1])
	by pause.fiz-chemie.de (8.13.8/8.13.8/Debian-3) with ESMTP id q7T1NMel030714;
	Wed, 29 Aug 2012 03:23:22 +0200
Received: (from nobody@localhost)
	by pause.fiz-chemie.de (8.13.8/8.13.8/Submit) id q7T1NLmj030712;
	Wed, 29 Aug 2012 03:23:21 +0200
Date: Wed, 29 Aug 2012 03:23:21 +0200
Message-ID: <201208290123.q7T1NLmj030712@pause.fiz-chemie.de>
Subject: Module submission REST::Neo4p
Reply-To: modules@perl.org
To: modules@perl.org, majensen@cpan.org
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       REST::Neo4p
  DSLIP:       adpOp
  description: Perl object bindings for a Neo4j database
  userid:      MAJENSEN (Mark Allen Jensen)
  chapterid:   7 (Database_Interfaces)
  communities:
    Hope to run it past neo4j folks via chatroom/mailing lists

  similar:
    Neo4j

  rationale:

    To preserve namespace, I chose the REST top level, since the the
    ORM communicates with the Neo4j server through their very complete
    REST API. The only other module interfacing with Neo4j is the
    Moose-based 'Neo4j'. The high-level design appears similar, wherein
    objects associated with nodes, relationships and indexes are
    created, modified, and deleted in the database via actions on the
    objects. My system is plain Perl 5, with dependencies only on LWP
    and URI, which may appeal to some. I want to provide as complete an
    interface to the Neo4j API as possible, which will include support
    for Cypher queries; this has not yet appeared in Neo4j. My
    underlying REST client is built to be usable as a Neo4j client
    independently of the ORM, if the user desires more control or has
    other ideas. The client encapsulates the errors, so that I can
    provide more context-based error handling and more informative
    messages at the ORM level. It also allows the user to query the
    available actions, which are dynamically loaded from Neo4j
    responses. I think this approach will make the system more robust to
    changes in the API at Neo4j. These are some advantages I see, but
    I'm not so interested in competition, just would like to get the
    code out there and hope the peeps find it useful.

  enteredby:   MAJENSEN (Mark Allen Jensen)
  enteredon:   Wed Aug 29 01:23:21 2012 GMT

The resulting entry would be:

REST::
::Neo4p           adpOp Perl object bindings for a Neo4j database    MAJENSEN


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=13a00000_2267f0c510724639&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=13a00000_2267f0c510724639&SUBMIT_pause99_add_mod_insertit=1
Peek at the current permissions:
  https://pause.perl.org/pause/authenquery?pause99_peek_perms_by=me&pause99_peek_perms_query=REST%3A%3ANeo4p
