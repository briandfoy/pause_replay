Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:7404
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 30490 invoked from network); 6 Sep 2001 00:46:08 -0000
Received: from dubravka.kbx.de (HELO pause.perl.org) (root@212.40.160.59)
  by onion.valueclick.com with SMTP; 6 Sep 2001 00:46:08 -0000
Received: (from nobody@localhost)
	by pause.perl.org (8.9.3/8.9.3) id CAA01628;
	Thu, 6 Sep 2001 02:46:06 +0200
Date: Thu, 6 Sep 2001 02:46:06 +0200
Message-ID: <200109060046.CAA01628@pause.perl.org>
Reply-To: modules@perl.org
Subject: Module submission Config::Secure
To: modules@perl.org, suaveant@cpan.org
X-Spam-Rating: onion.valueclick.com 1.6.2 0/1000/N
Approved: news@nntp.perl.org
From: upload@p11.speed-link.de ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Config::Secure
  DSLIP:       ampfp
  description: Module to read protected conf data from PSC
  userid:      SUAVEANT (Anthony Ball)
  chapterid:   12 (Opt_Arg_Param_Proc)
  communities:
    http://www.perlmonks.org

  similar:

  rationale:

    Config::Secure goes hand in hand with another project of my PSC
    (Perl Secure Conf) http://psc.sourceforge.net. PSC is a setuid C
    program which serves as a wrapper to perl scripts. It opens a
    protected file and then drops priviledge, execing your perl script
    and leaving the protected file handle available to the script.
    Config::Secure reads and parses from this filehandle, and sets $0 to
    be the path of the wrapper. I don't know of any other modules that
    do anything similar, though I may be mistaken.

  enteredby:   SUAVEANT (Anthony Ball)
  enteredon:   Thu Sep  6 00:46:06 2001 GMT

The resulting entry would be:

Config::
::Secure          ampfp Module to read protected conf data from PSC  SUAVEANT


Thanks for registering,
The Pause Team

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=7e000000_bbc16de9f13460d2&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=7e000000_bbc16de9f13460d2&SUBMIT_pause99_add_mod_insertit=1
