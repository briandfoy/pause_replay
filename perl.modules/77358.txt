Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:77358
Return-Path: <suman.sourabh@gmail.com>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Delivered-To: moderator for modules@perl.org
Received: (qmail 2357 invoked from network); 19 Aug 2011 10:20:19 -0000
Received: from x1.develooper.com (207.171.7.70)
  by x6.develooper.com with SMTP; 19 Aug 2011 10:20:19 -0000
Received: (qmail 2962 invoked by uid 225); 19 Aug 2011 10:20:19 -0000
Delivered-To: modules@perl.org
Received: (qmail 2957 invoked by alias); 19 Aug 2011 10:20:18 -0000
X-Spam-Status: No, hits=-0.8 required=8.0
	tests=DKIM_SIGNED,DKIM_VALID,DKIM_VALID_AU,FREEMAIL_FROM,HTML_MESSAGE,RCVD_IN_DNSWL_LOW,SPF_PASS,T_TO_NO_BRKTS_FREEMAIL
X-Spam-Check-By: la.mx.develooper.com
Received: from mail-ew0-f41.google.com (HELO mail-ew0-f41.google.com) (209.85.215.41)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Fri, 19 Aug 2011 03:20:16 -0700
Received: by ewy9 with SMTP id 9so1733329ewy.14
        for <modules@perl.org>; Fri, 19 Aug 2011 03:20:11 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=gamma;
        h=mime-version:date:message-id:subject:from:to:content-type;
        bh=adTZoKNE/AKC9S+oeyXgTO87WxzebOpyqiNjW6WPBM4=;
        b=lBuoL4W21huPqH5fWLvcaR0Hd7W6SRe7RMW1NyCkHGWa+Tly+AFY+GHcEDj+4he4c4
         dei6C8HbXMkb8fEUUfDbHBxgNWZiZDF1jeYfrREYjTCHuMHGF2gJkJPx86QTiqzTbSC1
         NDt91H7Ex2lD2Pmizk7R4/8MvRdZo7eupoqGc=
MIME-Version: 1.0
Received: by 10.213.2.141 with SMTP id 13mr168189ebj.50.1313749211334; Fri, 19
 Aug 2011 03:20:11 -0700 (PDT)
Received: by 10.213.29.69 with HTTP; Fri, 19 Aug 2011 03:20:11 -0700 (PDT)
Date: Fri, 19 Aug 2011 15:50:11 +0530
Message-ID: <CAEPcTXVJLb-yS0iYbUOD6cMRX9U3xkmAC+pvhT51CPXaJ0Lg4w@mail.gmail.com>
Subject: Feeler for a New Module: REMOTE.pm
To: modules@perl.org
Content-Type: multipart/alternative; boundary=0015174be08010c82904aad9132a
X-Virus-Checked: Checked
Approved: news@nntp.perl.org
From: suman.sourabh@gmail.com (Suman Sourabh)

--0015174be08010c82904aad9132a
Content-Type: text/plain; charset=windows-1252
Content-Transfer-Encoding: quoted-printable

Hello,

I came across a though which I am putting it below. Opinions, Suggestions
are solicited from this group on the the idea/thought. Though this thought
has been implemented, I want get a feeler from the Group on the usefulness
of the idea/though to the Perl community.

Please put down your opinions and suggestions:

Here it goes : Please let me know if more clarification is required.

*Feeler for a New Module : Remote.pm*

*Problem :*

In the world of automated testing on multiple platforms, there is a constan=
t
need that all the testing control takes place from one central server. Let
me take an illustration : I have a product say X and it is supported on all
the flavors of UNIX viz. AIX, HPUX, LINUX, SuSE, Solaris  etc=85. I have a
code that does a basic sanity tests for this product build every day on a
daily build during the testing  cycle. I need to go on to all the different
machine flavors mentioned above, install the product, and then trigger the
run. A better example, I have about 1000 machines in my lab and I need all
the machine specific information, like the CPU frequency, Memory, Hard Disk
etc as a part of my lab management system on a periodic basis.  I have a
smart Perl code to do this, but then I need to go on all the machines, have
Perl installed and run these scripts.


*Solution:*

Have one central machine which will connect to all these remote machines an=
d
give the information required.


*How :*

Write a Driver Code to call the API=92s from the REMOTE.pm and then setup a
connection to the remote machine. The REMOTE.pm=92s API will connect to the
REMOTE machine specified by the caller code over an SSH or Telnet connectio=
n
and return back the connection handle of the remote machine. Once the
connection handle of the REMOTE machine is there with the driver code(
caller ) , it can perform n number of operations on  the REMOTE machine. Th=
e
scenarios mentioned above have been successfully centralized using the idea
discussed above. After the operations are done on the Remote machine, the
connection handle can be closed gracefully.

*
*

*Dependency:*

1.       Expect.pm


T

*SuKind Regards*

*SSuman Sourabh*

--0015174be08010c82904aad9132a
Content-Type: text/html; charset=windows-1252
Content-Transfer-Encoding: quoted-printable

Hello,<br><br>I came across a though which I am putting it below. Opinions,=
 Suggestions are solicited from this group on the the idea/thought. Though =
this thought has been implemented, I want get a feeler from the Group on th=
e usefulness of the idea/though to the Perl community.<br>
<br>Please put down your opinions and suggestions:<br><br>Here it goes : Pl=
ease let me know if more clarification is required.<br><br>

<p class=3D"MsoNormal" style=3D"margin-left:1.0in;text-align:justify;text-i=
ndent:
.5in"><b style=3D"mso-bidi-font-weight:normal"><u>Feeler for a New Module :
Remote.pm</u></b></p>

<p class=3D"MsoNormal" style=3D"text-align:justify"><b style=3D"mso-bidi-fo=
nt-weight:
normal"><u>Problem :</u></b></p>

<p class=3D"MsoNormal" style=3D"text-align: justify;">In the world of autom=
ated testing
on multiple platforms, there is a constant need that all the testing contro=
l
takes place from one central server. Let me take an illustration : I have a
product say X and it is supported on all the flavors of UNIX viz. AIX, HPUX=
,
LINUX, SuSE<span style=3D"mso-spacerun:yes">, Solaris=A0 </span>etc=85. I h=
ave a code that
does a basic sanity tests for this product build every day on a daily build
during the testing<span style=3D"mso-spacerun:yes">=A0 </span>cycle. I need=
 to go
on to all the different machine flavors mentioned above, install the produc=
t,
and then trigger the run. A better example, I have about 1000 machines in m=
y
lab and I need all the machine specific information, like the CPU frequency=
,
Memory, Hard Disk etc as a part of my lab management system on a periodic
basis. <span style=3D"mso-spacerun:yes">=A0</span>I have a smart Perl code =
to do
this, but then I need to go on all the machines, have Perl installed and ru=
n
these scripts. <br></p><p class=3D"MsoNormal" style=3D"text-align:justify">=
<br></p>

<p class=3D"MsoNormal" style=3D"text-align:justify"><b style=3D"mso-bidi-fo=
nt-weight:
normal"><u>Solution:</u></b></p>

<p class=3D"MsoNormal" style=3D"text-align: justify;">Have one central mach=
ine which will
connect to all these remote machines and give the information required.</p>=
<p class=3D"MsoNormal" style=3D"text-align:justify"><br></p>

<p class=3D"MsoNormal" style=3D"text-align:justify"><b style=3D"mso-bidi-fo=
nt-weight:
normal"><u>How :</u></b></p>

<p class=3D"MsoNormal" style=3D"text-align:justify">Write a Driver Code to =
call the
API=92s from the REMOTE.pm and then setup a connection to the remote machin=
e. The
REMOTE.pm=92s API will connect to the REMOTE machine specified by the calle=
r code
over an SSH or Telnet connection and return back the connection handle of t=
he
remote machine. Once the connection handle of the REMOTE machine is there w=
ith
the driver code( caller ) , it can perform n number of operations on <span =
style=3D"mso-spacerun:yes">=A0</span>the REMOTE machine. The scenarios ment=
ioned
above have been successfully centralized using the idea discussed above. Af=
ter
the operations are done on the Remote machine, the connection handle can be
closed gracefully.</p>

<p class=3D"MsoNormal" style=3D"text-align: justify;"><b style=3D""><u><br>=
</u></b></p><p class=3D"MsoNormal" style=3D"text-align:justify"><b style=3D=
"mso-bidi-font-weight:
normal"><u>Dependency:</u></b></p>



<p class=3D"MsoListParagraph" style=3D"text-align: justify; text-indent: -0=
.25in;"><span style=3D"mso-bidi-font-family:
Calibri"><span style=3D"mso-list:Ignore">1.<span style=3D"font:7.0pt &quot;=
Times New Roman&quot;">=A0=A0=A0=A0=A0=A0
</span></span></span>Expect.pm</p><p class=3D"MsoListParagraph" style=3D"te=
xt-align: justify; text-indent: -0.25in;"><br></p><p class=3D"MsoListParagr=
aph" style=3D"text-align: justify; text-indent: -0.25in;">T=A0</p><p class=
=3D"MsoListParagraph" style=3D"text-align: justify; text-indent: -0.25in;">
<b>SuKind Regards</b></p><p class=3D"MsoListParagraph" style=3D"text-align:=
justify;text-indent:-.25in;
mso-list:l0 level1 lfo1"><b>SSuman Sourabh</b><br></p>


--0015174be08010c82904aad9132a--
