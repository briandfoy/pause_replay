Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:88584
Return-Path: <jimiwills@gmail.com>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Delivered-To: moderator for modules@perl.org
Received: (qmail 11848 invoked from network); 20 Dec 2013 12:14:59 -0000
Received: from x1.develooper.com (207.171.7.70)
  by x6.develooper.com with SMTP; 20 Dec 2013 12:14:59 -0000
Received: (qmail 18657 invoked by uid 225); 20 Dec 2013 12:14:59 -0000
Delivered-To: modules@perl.org
Received: (qmail 18653 invoked by alias); 20 Dec 2013 12:14:59 -0000
X-Spam-Status: No, hits=-1.8 required=8.0
	tests=BAYES_00,DKIM_ADSP_CUSTOM_MED,FREEMAIL_FROM,NML_ADSP_CUSTOM_MED,RCVD_IN_DNSWL_HI,SPF_SOFTFAIL,TO_NO_BRKTS_MSFT
X-Spam-Check-By: la.mx.develooper.com
Received: from x6.develooper.com (HELO x6.develooper.com) (207.171.7.86)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Fri, 20 Dec 2013 04:14:56 -0800
Received: from lists-nntp.develooper.com (localhost.localdomain [127.0.0.1])
	by x6.develooper.com (Postfix) with SMTP id A23BC6CC
	for <modules@perl.org>; Fri, 20 Dec 2013 04:14:53 -0800 (PST)
Received: (qmail 11845 invoked by uid 515); 20 Dec 2013 12:14:53 -0000
Message-ID: <20131220121453.11844.qmail@lists-nntp.develooper.com>
To: modules@perl.org
Subject: Proposed Modules: Tk::MDTextBook
Date: Fri, 20 Dec 2013 12:10:55 -0000
Lines: 3
MIME-Version: 1.0
Content-Type: text/plain;
	format=flowed;
	charset="iso-8859-1";
	reply-type=original
Content-Transfer-Encoding: 7bit
X-Priority: 3
X-MSMail-Priority: Normal
Importance: Normal
X-Newsreader: Microsoft Windows Live Mail 16.4.3508.205
X-MimeOLE: Produced By Microsoft MimeOLE V16.4.3508.205
X-Antivirus: avast! (VPS 131220-1, 20/12/2013), Outbound message
X-Antivirus-Status: Clean
X-Posted-By: 129.215.14.16
Approved: news@nntp.perl.org
From: jimiwills@gmail.com ("Jimi Wills")

A set of modules that allow easy mixing of code types to be interpretted as 
a Tk application...
The input is in MIME-multipart/mixed format, and easy entity can be markdown 
(displayed formatted
in a Text with options to add Tk windows and behaviours), perl (eval()ed), 
yaml (structure made available
to app) or menu in yaml (posted on main mindow).

The purpose of this is to contribute to a compiled program (for 
Windows/Mac/Linux) that can run appended scripts in this format.  The reason 
for having this format is that resources can be included in the one file. 
The Markdown stuff
is to allow easy inclusion of controls in the context of a document.


Tk::MDText - a Tk::Text that displays Markdown with Tk "tags" to include 
widgets inline.

Tk::MDTextBook - a Tk::NoteBook that reads multipart document and contructs 
an app (using MDTexts)

Tk::MDTextBook::Data2Tk - quick sub to make a window and give <DATA> to 
Tk::MDTextBook

Does that make sense to anybody??  Here's an example:

E.g.:



use strict;
use Tk::MDTextBook::Data2Tk; # exports one sub:
data2tk;
__DATA__
MIME Version: 1.0
Content-Type: multipart/mixed; boundary=##--##--##--##--##
Title: Window Title

Here is a prologue
--##--##--##--##--##
Content-Type: application/x-ptk.markdown
Title: _Basic MarkDown
ID: Page1

# MarkDown Tk Text Thingy.

## Here is a sub-header

And a paragraph here
because I wanted to
check that it handles stuff
right over several lines.

--##--##--##--##--##
Content-Type: application/x-ptk.markdown
Title: _Tk and Scripting
ID: Page2

##### Tk windows and scripts

Here is my markdown.  Here is some stuff in a preformatted block:

    field label    <Tk::Entry>   <-- put stuff here!
    another label  <Tk::Entry>   ... and more
    and so on      <Tk::Button -text="Here is some text!">

--##--##--##--##--##
Content-Type: application/x-yaml.menu

---
- _File:
  - _Exit: exit
- '---' : '---'
- _Help:
  - _About: MyPackage::ShowPreamble
  - _Help : MyPackage::ShowEpilog

--##--##--##--##--##
Content-Type: application/x-perl

package MyPackage;

## the most useful of the following will get included in the module 
itself...

sub myScriptSub {
  print "Hello from script sub!\n";
}

sub getObjectList {
  my @shelf = @Tk::MDTextBook::Shelf;
  my $object = $shelf[$#shelf]; # get the last one!
  return $object->{Objects};
}

sub getMW {
  return $Tk::MDTextBook::Data2Tk::MW;
}

sub getPreamble {
  return getObjectList()->{Main}->{Preamble};
}

sub getEpilog {
  return getObjectList()->{Main}->{Epilog};
}

sub ShowPreamble {
  getMW()->messageBox(-message=>getPreamble());
}

sub ShowEpilog {
  getMW()->messageBox(-message=>getEpilog());
}

--##--##--##--##--##--
Here is the epilogue




---
This email is free from viruses and malware because avast! Antivirus protection is active.
http://www.avast.com

