Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:35765
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 7588 invoked from network); 19 Oct 2004 02:48:38 -0000
Received: from x1.develooper.com (63.251.223.170)
  by lists.develooper.com with SMTP; 19 Oct 2004 02:48:38 -0000
Received: (qmail 23994 invoked by uid 225); 19 Oct 2004 02:48:38 -0000
Delivered-To: modules@perl.org
Received: (qmail 23988 invoked by alias); 19 Oct 2004 02:48:37 -0000
X-Spam-Status: No, hits=-4.9 required=8.0
	tests=BAYES_00
X-Spam-Check-By: la.mx.develooper.com
Received: from pause.fiz-chemie.de (HELO pause.perl.org) (195.149.117.110)
  by la.mx.develooper.com (qpsmtpd/0.27.1) with ESMTP; Mon, 18 Oct 2004 19:48:35 -0700
Received: from pause.perl.org (localhost [127.0.0.1])
	by pause.perl.org (8.12.3/8.12.3/Debian-7.1) with ESMTP id i9J2mT64005294
	for <modules@perl.org>; Tue, 19 Oct 2004 04:48:31 +0200
Received: (from nobody@localhost)
	by pause.perl.org (8.12.3/8.12.3/Debian-7.1) id i9J2mS4R005292;
	Tue, 19 Oct 2004 04:48:29 +0200
Date: Tue, 19 Oct 2004 04:48:29 +0200
Message-ID: <200410190248.i9J2mS4R005292@pause.perl.org>
Subject: Module submission Class::Inheritance
Reply-To: modules@perl.org
To: modules@perl.org
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Class::Inheritance
  DSLIP:       bnpOp
  description: Debug or set multiple inheritance
  userid:      NIELSEN (Mark Nielsen)
  chapterid:    6 (Data_Type_Utilities)
  communities:
    linuxgzette.net

  similar:
    Class::Inspector

  rationale:

    The goal of this new class is to find out everything regarding
    parents or children of your class. I found some similar modules
    under Class which sort of do similar things, but not exactly what I
    want. I am specifically dealing with multiple inheritance. The only
    module that is in the same ballpark is Inspector. However, I don't
    think I want to merge my stuff with Inspector since what I am doing
    is specifically targeting multiple inheritance.

    Anyways, I don't see anything that I can easily incorporate my
    stuff into or I don't want to incorporate it into another module
    because I think "Class::Inheritance" would be an obvious place for
    people to find a module describing inheritance of a class. It is
    also heavily targeted towards multiple inheritnace and not general
    information about a class.

    I think inspector is good for general stuff about a class, but I
    think 99% of the people don't need to analyze multiple inheritance
    issues of their class. Inspector seems to have started on the
    children, but not the parents. There are also a lot of features I
    want to add to Inheritance that go beyond just analyzing the class
    (like print out text, html, xml, graphic files of the tree). Thus, I
    would like to have "Class::Inheritance" so that people who need a
    module addressing multiple inheritance can easily find it. I also
    plan to build a lot of stuff into it that go beyond
    Class::Inspector. In time, I would like Class::Inspector to actually
    use Class::Inheritance for inheritnace related issues.
    Class::Inheritance might actually inherit methods from
    Class::Inspector to get general information. We will see.

    For a look at a first rough draft,
    http://www.tcu-inc.com/Articles/38/Mysql_Part1.html and
    http://www.tcu-inc.com/Articles/38/Inheritance.pm

  enteredby:   NIELSEN (Mark Nielsen)
  enteredon:   Tue Oct 19 02:48:20 2004 GMT

The resulting entry would be:

Class::
::Inheritance     bnpOp Debug or set multiple inheritance            NIELSEN


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=92700000_f3f8f88f70a20924&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=92700000_f3f8f88f70a20924&SUBMIT_pause99_add_mod_insertit=1
