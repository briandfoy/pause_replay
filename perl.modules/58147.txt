Newsgroups: perl.modules,perl.module-authors
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:58147 perl.module-authors:6115
Return-Path: <brian.d.foy@gmail.com>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 16306 invoked from network); 10 Dec 2007 18:14:37 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 10 Dec 2007 18:14:37 -0000
Received: (qmail 8022 invoked by uid 225); 10 Dec 2007 18:14:36 -0000
Delivered-To: modules@perl.org
Received: (qmail 7994 invoked by alias); 10 Dec 2007 18:14:34 -0000
X-Spam-Status: No, hits=-1.9 required=8.0
	tests=BAYES_00,SPF_NEUTRAL
X-Spam-Check-By: la.mx.develooper.com
Received: from x6.develooper.com (HELO lists.develooper.com) (63.251.223.186)
    by la.mx.develooper.com (qpsmtpd/0.28) with SMTP; Mon, 10 Dec 2007 10:14:07 -0800
Received: (qmail 13939 invoked by uid 515); 10 Dec 2007 18:14:02 -0000
To: modules@perl.org, module-authors@perl.org, Tim.Bunce@pobox.com (Tim Bunce)
Subject: Re: Naming convention for thin wrappers around C lib<foo>.so ?
Date: Mon, 10 Dec 2007 12:14:00 -0600
Reply-To: modules@perl.org
Posted-And-Mailed: yes
Message-ID: <101220071214006739%brian.d.foy@gmail.com>
References: <20071206221132.GB682@timac.local> <D2F46975-4C9A-48DD-B50C-D4CBD1C9FBC6@free.fr> <20071210110738.GD2856@timac.local>
Organization: Perl Authors Upload Server
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-transfer-encoding: 8bit
User-Agent: Thoth/1.7.2 (Carbon/OS X)
X-Posted-By: 68.20.17.105
Approved: news@nntp.perl.org
From: brian.d.foy@gmail.com (brian d foy)

[[ This message was both posted and mailed: see
   the "To," "Cc," and "Newsgroups" headers for details. ]]

In article <20071210110738.GD2856@timac.local>, Tim Bunce
<Tim.Bunce@pobox.com> wrote:

> It's clear the "Category::Foo" scheme has the greater number of distributions.
> It's also clear there's no firmly established best practice here.

I tend to think that it depends on the library, so there isn't a best
rule for everything.


> I'm looking to build a very thin wrapper around libmemcached
> (http://tangent.org/552/libmemcached.html)
> a high-performance feature-rich interface to memcached.

For well known libraries that aren't going confuse a general case, I
don't see a problem with a top-level namespace such as Memcached.

> So, here's the point: does anyone have any good objections to my
> establishing a new precident by using the Lib:: namespace for this?
> (Or perhaps CLib:: or SysLib:: or ...)
> 
> Or should I just add to the general mess in the Cache:: namespace?

I'd prefer Lib:: to Cache::. As you say, Cache is a mess.

-- 
brian d foy (one of many PAUSE admins), http://pause.perl.org
archives at http://www.xray.mpe.mpg.de/mailing-lists/modules
please send all messages back to modules@perl.org
