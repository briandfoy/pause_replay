Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:62472
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 6709 invoked from network); 2 Oct 2008 18:51:52 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by x6.develooper.com with SMTP; 2 Oct 2008 18:51:52 -0000
Received: (qmail 32421 invoked by uid 225); 2 Oct 2008 18:51:52 -0000
Delivered-To: modules@perl.org
Received: (qmail 32417 invoked by alias); 2 Oct 2008 18:51:51 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00
X-Spam-Check-By: la.mx.develooper.com
Received: from pause.fiz-chemie.de (HELO pause.perl.org) (195.149.117.110)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Thu, 02 Oct 2008 11:51:49 -0700
Received: from pause.perl.org (localhost.localdomain [127.0.0.1])
	by pause.perl.org (8.13.8/8.13.8/Debian-3) with ESMTP id m92IpZMk019570;
	Thu, 2 Oct 2008 20:51:35 +0200
Received: (from nobody@localhost)
	by pause.perl.org (8.13.8/8.13.8/Submit) id m92IpZ4k019568;
	Thu, 2 Oct 2008 20:51:35 +0200
Date: Thu, 2 Oct 2008 20:51:35 +0200
Message-ID: <200810021851.m92IpZ4k019568@pause.perl.org>
Subject: Module submission Class::Proxy::Lite
Reply-To: modules@perl.org
To: modules@perl.org, nkuitse@cpan.org
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Class::Proxy::Lite
  DSLIP:       RdpOa
  description: Simple, lightweight object proxies
  userid:      NKUITSE (Paul Hoffman)
  chapterid:   6 (Data_Type_Utilities)
  communities:

  similar:
    Class::Proxy

  rationale:

    Class::Proxy::Lite is similar to Class::Proxy in its basic
    functionality, but is very lightweight and simple, has no
    prerequisites, and provides greater flexibility at the cost of
    lesser efficiency.

    A Class::Proxy::Lite instance is constructed from a _token_ --
    which can be any datum -- and a _resolver_ -- a coderef that is
    typically, but not necessarily, the same for all proxies. When a
    method is invoked on the proxy, it calls the resolver to resolve the
    token into an actual object reference (the proxied object). The
    method is then invoked on the proxied object. The proxy doesn't
    remember this reference; it must call the resolver for each method
    invocation.

    While this "late-binding" method invocation forwarding is more
    costly in execution time, it allows for more advanced object models.
    For example, objects might be loaded and unloaded dynamically with
    references to loaded objects stored in a master table. Or a resolver
    called multiple times with the same token might forward to a
    different object each time.

  enteredby:   NKUITSE (Paul Hoffman)
  enteredon:   Thu Oct  2 18:51:35 2008 GMT

The resulting entry would be:

Class::Proxy::
::Lite            RdpOa Simple, lightweight object proxies           NKUITSE


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=19210000_a6a1ccec9d0c02bd&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=19210000_a6a1ccec9d0c02bd&SUBMIT_pause99_add_mod_insertit=1
