Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:14788
Return-Path: <comdog@panix.com>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 39221 invoked by uid 76); 29 Oct 2002 16:51:45 -0000
Received: from relay1.pair.com (HELO relay.pair.com) (209.68.1.20) by onion.perl.org (qpsmtpd/0.12) with SMTP; 2002-10-29 16:51:45Z
Received: (qmail 11933 invoked from network); 29 Oct 2002 16:51:40 -0000
Received: from 12-247-38-191.client.attbi.com (HELO 10-0-1-2) (12.247.38.191)  by relay1.pair.com with SMTP; 29 Oct 2002 16:51:40 -0000
X-pair-Authenticated: 12.247.38.191
Subject: Re: Namespace for nonexistent modules
Date: Tue, 29 Oct 2002 10:52:05 -0600
To: ed@membled.com (Ed Avis)
Cc: modules@perl.org
Reply-To: modules@perl.org
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-transfer-encoding: 8bit
References: <Pine.LNX.4.20L2.0210291140450.31422-100000@budvar.future-i.net>
User-Agent: Thoth/1.4.6 (Carbon/OS X)
X-SMTPD: qpsmtpd/0.12, http://develooper.com/code/qpsmtpd/
Approved: news@nntp.perl.org
From: comdog@panix.com (_brian_d_foy)
Message-ID: <perl.modules-14788@nntp.perl.org>

In article <Pine.LNX.4.20L2.0210291140450.31422-100000@budvar.future-i.net>, Ed Avis <ed@membled.com> wrote:

> Is there a namespace for pretend modules, modules which do not exist
> and should not be installed?  I was thinking of using names beginning
> with an underscore, it's fairly certain that modules@perl.org will not
> allocate such a namespace to any real modules.

i've thought of this before when i needed to test various things.
i'd really like to see a reserved namespace that we promise never
to register (just like example.com is a fictitous domain).

people can still make whatever modules they like on their own 
systems, but i guess they can also set up local nameservers to
handle example.com too.

initially i thought that Perl 6 should know about this special
namespace, but decided against it.  it's not really that good if
you can't use it with the actual bits that process other modules.

to turn this into practice, we just need a gaggle of writers to
start using it as if it always existed. :)

some suggestions:

   Example::*
   Foo::*
   Pretend::*

-- 
brian d foy (one of many PAUSE admins), http://pause.perl.org
please send all messages back to modules@perl.org
