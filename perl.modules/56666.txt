Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:56666
Return-Path: <l2ot9pa02@sneakemail.com>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 24529 invoked from network); 18 Sep 2007 18:46:07 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 18 Sep 2007 18:46:07 -0000
Received: (qmail 1661 invoked by uid 225); 18 Sep 2007 18:46:06 -0000
Delivered-To: modules@perl.org
Received: (qmail 1657 invoked by alias); 18 Sep 2007 18:46:06 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00
X-Spam-Check-By: la.mx.develooper.com
Received: from sd-green-bigip-74.dreamhost.com (HELO spunkymail-a14.g.dreamhost.com) (208.97.132.74)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Tue, 18 Sep 2007 11:45:57 -0700
Received: from [10.59.0.18] (i3ED6FD4A.versanet.de [62.214.253.74])
	by spunkymail-a14.g.dreamhost.com (Postfix) with ESMTP id 8478D190E2C;
	Tue, 18 Sep 2007 11:47:33 -0700 (PDT)
Message-ID: <46F01CD1.1070308@sneakemail.com>
Date: Tue, 18 Sep 2007 20:45:37 +0200
User-Agent: Thunderbird 1.5.0.13 (X11/20070824)
MIME-Version: 1.0
To: lstein@cshl.edu
Cc: "modules@perl.org" <modules@perl.org>
Subject: Re: Old CPAN namespace registration for Boulder
References: <FZKMSX3ZnzbUKXTU4eR0001c22f@fzkmsx3.ka.fzk.de>	 <6dce9a0b0709171242w7a37c58ct35f71ed2cbb842ea@mail.gmail.com>	 <46EFD243.1030005@sneakemail.com> <6dce9a0b0709180907x37748645l4b6f4a145f6e1316@mail.gmail.com>
In-Reply-To: <6dce9a0b0709180907x37748645l4b6f4a145f6e1316@mail.gmail.com>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Approved: news@nntp.perl.org
From: l2ot9pa02@sneakemail.com (Steffen Mueller)

Hi Lincoln,

Lincoln Stein lstein-at-cshl.edu |newsgroups5| schrieb:
> Could you point me to an example of an almost-empty module? I'm not quite
> sure how to do what you describe. Should it be a module with a package
> statement and some POD documentation?

sure. Basically:

package Foo;
use strict;
1;

__END__

=pod

=head1 NAME

Foo - blah

=head1 DESCRIPTION

See L<Foo::Bar> in this distribution.

(or better docs)

=head1 COPYRIGHT AND LICENSE

Same as perl blah blah.

=head1 AUTHOR

Lincoln Stein <...>

=cut

Best regards,
Steffen
