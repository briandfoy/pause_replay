Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:7415
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 57225 invoked from network); 6 Sep 2001 11:26:19 -0000
Received: from dubravka.kbx.de (HELO pause.perl.org) (root@212.40.160.59)
  by onion.valueclick.com with SMTP; 6 Sep 2001 11:26:19 -0000
Received: (from nobody@localhost)
	by pause.perl.org (8.9.3/8.9.3) id NAA06169;
	Thu, 6 Sep 2001 13:26:17 +0200
Date: Thu, 6 Sep 2001 13:26:17 +0200
Message-ID: <200109061126.NAA06169@pause.perl.org>
Reply-To: modules@perl.org
Subject: Module submission Net::Server::Event
To: modules@perl.org, howard@cpan.org
X-Spam-Rating: onion.valueclick.com 1.6.2 0/1000/N
Approved: news@nntp.perl.org
From: upload@p11.speed-link.de ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Net::Server::Event
  DSLIP:       bdphp
  description: Module for event-loop based daemons
  userid:      HOWARD (Jeremy Howard)
  chapterid:   16 (Server_and_Daemon_Utilities)
  communities:

  similar:
    Net::Server NetServer::Generic

  rationale:

    This creates a socket server like the Net::Server package, but it
    uses an event loop (using Event.pm) rather than forking. Event-loop
    based daemons require a somewhat different interface to forking
    servers, so I have not managed to incorporate this into Paul
    Seamons' Net::Server package directly.

    Net::Server::Event is a good choice for server daemons that do
    their thing really fast (so as not to tie up the event loop). For
    instance, daemons that stick stuff into a queue are ideal.
    Socket::Pool uses Net::Server::Event.

  enteredby:   HOWARD (Jeremy Howard)
  enteredon:   Thu Sep  6 11:26:17 2001 GMT

The resulting entry would be:

Net::Server::
::Event           bdphp Module for event-loop based daemons          HOWARD


Thanks for registering,
The Pause Team

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=de000000_9699d39a38f5dc26&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=de000000_9699d39a38f5dc26&SUBMIT_pause99_add_mod_insertit=1
