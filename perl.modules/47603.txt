Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:47603
Return-Path: <uleobeh02@sneakemail.com>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Delivered-To: moderator for modules@perl.org
Received: (qmail 3121 invoked from network); 28 Feb 2006 08:26:21 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 28 Feb 2006 08:26:21 -0000
Received: (qmail 23101 invoked by uid 225); 28 Feb 2006 08:26:21 -0000
Delivered-To: modules@perl.org
Received: (qmail 23096 invoked by alias); 28 Feb 2006 08:26:20 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,SPF_HELO_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: neutral (x1.develooper.com: local policy)
Received: from can01.de (HELO can01.de) (213.203.199.108)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Tue, 28 Feb 2006 00:26:16 -0800
Received: from [10.0.0.18] (dslb-084-056-217-163.pools.arcor-ip.net [84.56.217.163])
	by can01.de (can01.de) with ESMTP id 8AB1D42C101;
	Tue, 28 Feb 2006 09:26:08 +0100 (CET)
Message-ID: <440408A5.80304@sneakemail.com>
Date: Tue, 28 Feb 2006 09:24:05 +0100
User-Agent: Mozilla Thunderbird 1.0 (X11/20041207)
X-Accept-Language: en-us, en
MIME-Version: 1.0
To: modules@perl.org
Cc: hollyking@cpan.org
Subject: Re: Module submission Math::Interval
References: <200602280310.k1S3AkSR017282@pause.perl.org>
In-Reply-To: <200602280310.k1S3AkSR017282@pause.perl.org>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Approved: news@nntp.perl.org
From: uleobeh02@sneakemail.com (Steffen Mueller)

Hi Brendan,

Perl Authors Upload Server wrote:
> The following module was proposed for inclusion in the Module List:
>   modid:       Math::Interval

>     An interval is a new type of number like a complex number.
>     Intervals are used to represent values in calculations where the
>     answer can not be exactly represented. For example, the quantity 1/3
>     does not have an exact binary representation so you must round the
>     answer to the nearest representable value. When evaluating
>     calculations with an interval the results are "rounded out" so that
>     the real answer is somewhere between a lower and upper bound.
>     (Roounding out is defined as rounding the lower bound down toward
>     negative infinity and rounding the upper bound up to positive
>     infinity.) So dividing 1 by 3 could result in the interval [0.333;
>     0.334].

How is this different from Number::Interval? See 
http://search.cpan.org/~tjenness/Number-Interval-0.01/Interval.pm

I was going to suggest using Number::Interval when I found it it already 
exists.

For integers, there's also Set::Window.

>     Another way to view intervals is the result of performing
>     calculations where the amount of error is known at the end of the
>     evaluation. Taking the 1/3 example from above we know that the true
>     answer lies somewhere between 0.333 and 0.334.

What does this do that Number::WithError doesn't? It's differs quite a 
bit in implementation, of course, but can it do anything different?

Would you consider working with the author of Number::Interval to 
improve it? Otherwise, having both Math::Interval and Number::Inverval 
might be a bad idea. (Think of somebody who looks for a module that 
deals with intervals. How should he decide which suits him better by the 
name?)

Otherwise, your module is a good idea.

Steffen
