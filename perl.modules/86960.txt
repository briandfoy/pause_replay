Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:86960
Return-Path: <apache@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 16574 invoked from network); 6 Aug 2013 22:41:27 -0000
Received: from x1.develooper.com (207.171.7.70)
  by x6.develooper.com with SMTP; 6 Aug 2013 22:41:27 -0000
Received: (qmail 681 invoked by uid 225); 6 Aug 2013 22:41:26 -0000
Delivered-To: modules@perl.org
Received: (qmail 677 invoked by alias); 6 Aug 2013 22:41:26 -0000
X-Spam-Status: No, hits=-2.9 required=8.0
	tests=ALL_TRUSTED,BAYES_00
X-Spam-Check-By: la.mx.develooper.com
Received: from pause2.develooper.com (HELO pause.perl.org) (207.171.7.119)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Tue, 06 Aug 2013 15:41:22 -0700
Received: by pause.perl.org (Postfix, from userid 48)
	id 3E2811F8CB; Tue,  6 Aug 2013 22:41:19 +0000 (UTC)
Subject: PAUSE ID request (LAURENTR; Laurent Rosenfeld)
Reply-To: modules@perl.org
To: modules@perl.org
Message-ID: <20130806224119.3E2811F8CB@pause.perl.org>
Date: Tue,  6 Aug 2013 22:41:19 +0000 (UTC)
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")

Request to register new user

fullname: Laurent Rosenfeld
  userid: LAURENTR
    mail: CENSORED
homepage: 
     why:

    I have made quite a few Perl modules in the last 10 years, but, so
    far, they were really all too specific to my company, project or
    context, no real interest outside the context.

    I have developped recently a generic pure-Perl module to finely
    compare data between two files supposed to have relatively similar
    structure, including very large files that would not fit into memory
    or even could probably not be used with most DBM packages. This
    module can perform the following tasks: 1. detect (and remove)
    duplicates according to a user defined key; 2. detect (and remove)
    "orphans" (i.e. records that are in one file and not the other, and
    vice versa, still according to a user defined key; 3. once the file
    structures match, check for other specific differences in the data
    not belonging to the user defined key. There are quite a few other
    options to make the work hopefully easy. This module is currently
    more or less complete and has been quite thoroughly tested on
    several platforms with real 10-GB+ files, POD documentation is
    fairly extensive and almost ready, I am still not sure on how to
    provide standard test suite, because I am not sure on how to deal
    with the fact that files have different records separators in
    different OS's. Any ideas are welcome.

    As an additional note, there is one sine qua non condition for this
    module described above to work: the files must be sorted in
    accordance with the comparison key that will be used. While many
    operating systems offer a sort utility, I am also working on a pure
    Perl utility to sort very large files when that functionality is not
    available in the OS or is not flexible enough for the desired
    purpose. This second module, which I consider as an auxiliary
    library to the first one, is still under relatively early
    development and far from being adequately tested, but ealy tests
    lead me to think that I have good hope of being able to provide a
    good working version of this auxiliary module within a few months.
    This pure-Perl sort utility is doomed to be slower than OS
    utilities, but there are numbers of cases where they might still be
    very useful. Well, enough with that, this is still under
    developement.

    Well, I have a few more ideas, but they are premature for the time
    being.


The following links are only valid for PAUSE maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_user&USERID=97c00000_ec803f712042435f&SUBMIT_pause99_add_user_sub=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_user&USERID=97c00000_ec803f712042435f&SUBMIT_pause99_add_user_Definitely=1
