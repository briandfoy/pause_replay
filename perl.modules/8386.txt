Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:8386
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 64625 invoked from network); 18 Oct 2001 22:57:09 -0000
Received: from dubravka.kbx.de (HELO pause.perl.org) (root@212.40.160.59)
  by onion.valueclick.com with SMTP; 18 Oct 2001 22:57:09 -0000
Received: (from nobody@localhost)
	by pause.perl.org (8.9.3/8.9.3) id AAA13469;
	Fri, 19 Oct 2001 00:57:06 +0200
Date: Fri, 19 Oct 2001 00:57:06 +0200
Message-ID: <200110182257.AAA13469@pause.perl.org>
Reply-To: modules@perl.org
Subject: Module submission Class::Functor
To: modules@perl.org, robwalker@cpan.org
X-Spam-Rating: onion.valueclick.com 1.6.2 0/1000/N
Approved: news@nntp.perl.org
From: upload@p11.speed-link.de ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Class::Functor
  DSLIP:       bdpOp
  description: implements the Functor design pattern
  userid:      ROBWALKER (Robby Walker)
  chapterid:    6 (Data_Type_Utilities)
  communities:
    comp.lang.perl.modules

  similar:

  rationale:

    Using the advice of comp.lang.perl.modules users, I decided on the
    namespace Class::Functor for the following reasons:

    * Root-level Functor was too general as there might be a few
    meanings of the word functor.

    * Class::Functor is desireable because Class::Singleton also
    represents a design pattern so this appeared to be the place to put
    design pattern type modules.

    Although the module itself is very simple, the power inherent
    behind the idea is substantial.

  enteredby:   ROBWALKER (Robby Walker)
  enteredon:   Thu Oct 18 22:57:06 2001 GMT

The resulting entry would be:

Class::
::Functor         bdpOp implements the Functor design pattern        ROBWALKER


Thanks for registering,
The Pause Team

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=8c100000_6b919007a9186153&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=8c100000_6b919007a9186153&SUBMIT_pause99_add_mod_insertit=1
