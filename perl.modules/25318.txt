Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:25318
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 3020 invoked by uid 76); 31 Dec 2003 03:08:16 -0000
Received: from x1.develooper.com (HELO x1.develooper.com) (63.251.223.170) by onion.perl.org (qpsmtpd/0.26) with SMTP; Tue, 30 Dec 2003 19:08:16 -0800
Received: (qmail 11640 invoked by uid 225); 31 Dec 2003 03:08:13 -0000
Delivered-To: modules@perl.org
Received: (qmail 11635 invoked by alias); 31 Dec 2003 03:08:13 -0000
Received: from pause.fiz-chemie.de (HELO pause.perl.org) (195.149.117.110) by la.mx.develooper.com (qpsmtpd/0.27-dev) with ESMTP; Tue, 30 Dec 2003 19:08:01 -0800
Received: from pause.perl.org (localhost [127.0.0.1])	by pause.perl.org (8.12.3/8.12.3/Debian-6.6) with ESMTP id hBV37Ncj001026;	Wed, 31 Dec 2003 04:07:23 +0100
Received: (from nobody@localhost)	by pause.perl.org (8.12.3/8.12.3/Debian-6.6) id hBV37NZd001024;	Wed, 31 Dec 2003 04:07:23 +0100
Date: Wed, 31 Dec 2003 04:07:23 +0100
Message-ID: <200312310307.hBV37NZd001024@pause.perl.org>
Subject: Module submission Algorithm::HowSimilar
Reply-To: modules@perl.org
To: modules@perl.org, jfreeman@cpan.org
X-Spam-Check-By: la.mx.develooper.com
X-Spam-Status: No, hits=1.1 required=7.0 tests=CARRIAGE_RETURNS,SPAM_PHRASE_00_01 version=2.44
X-SMTPD: qpsmtpd/0.26, http://develooper.com/code/qpsmtpd/
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Algorithm::HowSimilar
  DSLIP:       Rdpfp
  description: Compare similarity of strings and arrays
  userid:      JFREEMAN (Dr. James Freeman)
  chapterid:    6 (Data_Type_Utilities)
  communities:

  similar:
    String::Approx Text::Levensthein

  rationale:

    =head1 DESCRIPTION

    This module leverages Algorithm::Diff to let you compare the degree
    of sameness of arrays or strings. It returns a result set that
    defines exactly how similar these things are.

    =head1 METHODS

    =head2 compare( ARG1, ARG2, OPTIONAL_CALLBACK )

    You can call compare with either two strings compare( $str1, $str2
    ):

    my ( $av_similarity, $sim_str1_to_str2, $sim_str2_to_str1,
    $matches, $in_str1_but_not_str2, $in_str2_but_not_str1 ) = compare(
    'this is a string-a', 'this is a string bbb' );

    Note that the mathematical similarities of one string to another
    will be different unless the strings have the same length. The first
    result returned is the average similarity. Totally dissimilar
    strings will return 0. Identical strings will return 1. The degree
    of similarity therefore ranges from 0-1 and is reported as the
    biggest float your OS/Perl can manage.

    You can also compare two array refs compare( \@ary1, \@ary2 ):

    my ( $av_similarity, $sim_ary1_to_ary2, $sim_ary2_to_ary1,
    $ref_ary_matches, $ref_ary_in_ary1_but_not_ary2,
    $ref_ary_in_ary2_but_not_ary1 ) = compare( [ 1,2,3,4 ], [ 3,4,5,6,7
    ] );

    [snip]

  enteredby:   JFREEMAN (Dr. James Freeman)
  enteredon:   Wed Dec 31 03:07:21 2003 GMT

The resulting entry would be:

Algorithm::
::HowSimilar      Rdpfp Compare similarity of strings and arrays     JFREEMAN


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=e8600000_2a366854bbe4b798&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=e8600000_2a366854bbe4b798&SUBMIT_pause99_add_mod_insertit=1
