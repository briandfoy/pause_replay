Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:90573
Return-Path: <apache@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 9117 invoked from network); 30 Jun 2014 16:24:45 -0000
Received: from x1.develooper.com (207.171.7.70)
  by x6.develooper.com with SMTP; 30 Jun 2014 16:24:45 -0000
Received: (qmail 15114 invoked by uid 225); 30 Jun 2014 16:24:44 -0000
Delivered-To: modules@perl.org
Received: (qmail 15110 invoked by alias); 30 Jun 2014 16:24:44 -0000
X-Spam-Status: No, hits=-1.9 required=8.0
	tests=BAYES_00,SPF_HELO_PASS,SPF_PASS,URIBL_BLOCKED
X-Spam-Check-By: la.mx.develooper.com
Received: from pause2.develooper.com (HELO pause.perl.org) (207.171.7.119)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Mon, 30 Jun 2014 09:24:42 -0700
Received: by pause.perl.org (Postfix, from userid 48)
	id 63BDE1837; Mon, 30 Jun 2014 16:24:39 +0000 (UTC)
Subject: Module submission App::Dest
Reply-To: modules@perl.org
To: modules@perl.org,gryphon@cpan.org
Message-ID: <20140630162439.63BDE1837@pause.perl.org>
Date: Mon, 30 Jun 2014 16:24:39 +0000 (UTC)
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       App::Dest
  DSLIP:       Rdpfp
  description: Deployment State Manager
  userid:      GRYPHON (Gryphon Shafer)
  chapterid:   3 (Development_Support)
  communities:

  similar:

  rationale:

    I'd like to rename App::Depst (a.k.a. "depst") to App::Dest (a.k.a.
    "dest") because folks who are using "depst" hate having to pronounce
    it.

    There are some requested additional features that folks are asking
    for in depst, so I figure I'll add them to dest.

    dest (currently depst) is a simple "deployment state" change
    management tool. I really like what Sqitch is doing, but I wanted
    something that worked on more than just databases. And I'm not very
    smart, so I wanted something really simple. (Both simple to use and
    simple to maintain.) Thus, dest/depst was born.

    Let's say you're working with a group of other software engineers
    on a particular software project using your favorite revision
    control system. Let's also say that you have a database that
    undergoes schema changes as features are developed, and you have
    various system activities like the installation of libraries or
    other applications. Then let's also say the team braches, works on
    stuff, shares those branches, reverts, merges, etc. And also from
    time to time you want to go back in time a bit so you can reproduce
    a bug. Maintaining the database state and the state of the system
    across all that activity can be problematic. dest tries to solve
    this in a very simple way, letting you be able to deploy, revert,
    and verify to any point in time in the development history.

  enteredby:   GRYPHON (Gryphon Shafer)
  enteredon:   Mon Jun 30 16:24:39 2014 UTC

The resulting entry would be:

App::
::Dest            Rdpfp Deployment State Manager                     GRYPHON


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=85110000_80de4ba7e10dfa5c&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=85110000_80de4ba7e10dfa5c&SUBMIT_pause99_add_mod_insertit=1
Peek at the current permissions:
  https://pause.perl.org/pause/authenquery?pause99_peek_perms_by=me&pause99_peek_perms_query=App%3A%3ADest
