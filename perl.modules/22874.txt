Newsgroups: perl.dbi.users,perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.dbi.users:19830 perl.modules:22874
Return-Path: <darren@DarrenDuncan.net>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 37733 invoked by uid 76); 14 Aug 2003 04:32:23 -0000
Received: from qmailr@one.develooper.com (HELO ran-out.mx.develooper.com) (64.81.84.115) by onion.perl.org (qpsmtpd/0.26) with SMTP; Wed, 13 Aug 2003 21:32:23 -0700
Received: (qmail 30558 invoked by uid 225); 14 Aug 2003 02:45:37 -0000
Delivered-To: modules@perl.org
Received: (qmail 30547 invoked by uid 507); 14 Aug 2003 02:45:37 -0000
Received-SPF: unknown (domain of sender darren@darrenduncan.net does not designate mailers: NXDOMAIN)
Received: from palladium2.baremetal.com (HELO pd2.baremetal.com) (208.184.111.59) by one.develooper.com (qpsmtpd/0.27-dev) with SMTP; Wed, 13 Aug 2003 19:45:33 -0700
Received: from [24.108.166.215] (h24-108-166-215.gv.shawcable.net [24.108.166.215])	by pd2.baremetal.com (8.12.9/8.12.4) with ESMTP id h7E2jNDt029638;	Wed, 13 Aug 2003 19:45:25 -0700
Mime-Version: 1.0
Message-ID: <p05200f03bb60a48ee3df@[24.108.166.215]>
In-Reply-To: <B33C920E-CCF7-11D7-905E-003065AFEA5E@cavalletto.org>
References: <B33C920E-CCF7-11D7-905E-003065AFEA5E@cavalletto.org>
Date: Wed, 13 Aug 2003 19:45:00 -0700
To: modules@perl.org, poop-group@lists.sourceforge.net, dbi-users@perl.org,   victoria-pm@pm.org
Subject: Re: [RFC] SQL::AST (SQL Abstract Syntax Tree) - DBI related
Content-Type: text/plain; charset="us-ascii"
X-SMTPD: qpsmtpd/0.27-dev, http://develooper.com/code/qpsmtpd/
X-Spam-Check-By: one.develooper.com
X-Spam-Status: No, hits=-0.5 required=7.0 tests=CARRIAGE_RETURNS,IN_REP_TO,REFERENCES,SPAM_PHRASE_01_02,SUPERLONG_LINE version=2.44
X-SMTPD: qpsmtpd/0.26, http://develooper.com/code/qpsmtpd/
Approved: news@nntp.perl.org
From: darren@DarrenDuncan.net (Darren Duncan)

At 3:03 PM -0400 8/12/03, Matthew Simon Cavalletto wrote:
>I believe the convention is for the portable C library to be named something short like libSQLOM, with the Perl code either in SQL::ObjectModel or a related namespace like SQL::ObjectModelXS or SQL::ObjectModel::libSQLOM.

Thank you Matthew.  I think I will name the C library either "SQLOM" or "libSQLOM", unless someone else has used the name already (unlikely).  But the public face of the Perl module will still be "SQL::ObjectModel".

>Consider this guidance from perlmodlib: "Generally the name should reflect what is special about what the module does rather than how it does it."
>
>The name you pick should focus on the distinct purpose of the module -- ie, providing a static representation of various kinds of SQL statements.
>
>The fact that your module is implemented as a tree of objects, rather than as functions which operate on nested hash-refs or whatever, is an implementation detail.

Actually, the reason I use "Object" in the name is to describe what the module *is* conceptually.  I am not using it to refer to the implementation.  In fact, the C implementation will be very definately not a set of objects (but rather a set of structs that reference each other).  The fact that the Perl interface is object oriented is a convention that I like to use, and it goes with the conceptual idea of what the module is.

>In practice, many of the modules on CPAN are based on some kind of "object model," but don't use it in their class names -- for example, think of the many distributions that could have been named "XML::ObjectModel."
>
>-Simon

XML is different.  There is an official W3C standard called "Document Object Model" (DOM) which is a conceptual object holding an XML syntax tree.  My use of "Object Model" was inspired by the XML, since my module does with SQL what a DOM does with XML.

So, based on what I have seen and heard from the feedback (thank you all), including that 11-character thing, I think that this is what I will try to register:

SQL::
::ObjectModel adhOg An abstract syntax tree for SQL              DUNCAND

Have a good day. -- Darren Duncan
