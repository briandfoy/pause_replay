Newsgroups: perl.dbi.users,perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.dbi.users:19806 perl.modules:22828
Return-Path: <timbo@dansat.data-plan.com>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 56715 invoked by uid 76); 12 Aug 2003 14:30:12 -0000
Received: from qmailr@one.develooper.com (HELO ran-out.mx.develooper.com) (64.81.84.115) by onion.perl.org (qpsmtpd/0.26) with SMTP; Tue, 12 Aug 2003 07:30:12 -0700
Received: (qmail 20040 invoked by uid 225); 12 Aug 2003 14:30:09 -0000
Delivered-To: modules@perl.org
Received: (qmail 20029 invoked by uid 507); 12 Aug 2003 14:30:09 -0000
Received-SPF: unknown (domain of sender timbo@dansat.data-plan.com does not designate mailers: NOERROR)
Received: from mail04.svc.cra.dublin.eircom.net (HELO mail04.svc.cra.dublin.eircom.net) (159.134.118.20) by one.develooper.com (qpsmtpd/0.27-dev) with SMTP; Tue, 12 Aug 2003 07:30:08 -0700
Received: (qmail 15493 messnum 2202628 invoked from network[159.134.164.123/p123.as1.limerick1.eircom.net]); 12 Aug 2003 14:30:04 -0000
Received: from p123.as1.limerick1.eircom.net (HELO dansat.data-plan.com) (159.134.164.123)  by mail04.svc.cra.dublin.eircom.net (qp 15493) with SMTP; 12 Aug 2003 14:30:04 -0000
Received: from dansat.data-plan.com (localhost [127.0.0.1])	by dansat.data-plan.com (8.12.9/8.12.9) with ESMTP id h7CEU9LP013902;	Tue, 12 Aug 2003 15:30:09 +0100 (BST)	(envelope-from timbo@dansat.data-plan.com)
Received: (from timbo@localhost)	by dansat.data-plan.com (8.12.9/8.12.9/Submit) id h7CEU4jN013901;	Tue, 12 Aug 2003 15:30:04 +0100 (BST)
Date: Tue, 12 Aug 2003 15:30:04 +0100
To: Darren Duncan <darren@DarrenDuncan.net>
Cc: modules@perl.org, poop-group@lists.sourceforge.net, dbi-users@perl.org,   victoria-pm@pm.org
Subject: Re: [Poop-group] [RFC] SQL::AST (SQL Abstract Syntax Tree) - DBI related
Message-ID: <20030812143004.GC13812@dansat.data-plan.com>
References: <p05200f00bb5db9e2a236@[24.108.166.215]>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <p05200f00bb5db9e2a236@[24.108.166.215]>
User-Agent: Mutt/1.4i
X-SMTPD: qpsmtpd/0.27-dev, http://develooper.com/code/qpsmtpd/
X-Spam-Check-By: one.develooper.com
X-Spam-Status: No, hits=-1.9 required=7.0 tests=CARRIAGE_RETURNS,IN_REP_TO,REFERENCES,SPAM_PHRASE_00_01,SUPERLONG_LINE,USER_AGENT,USER_AGENT_MUTT version=2.44
X-SMTPD: qpsmtpd/0.26, http://develooper.com/code/qpsmtpd/
Approved: news@nntp.perl.org
From: Tim.Bunce@pobox.com (Tim Bunce)

On Mon, Aug 11, 2003 at 02:58:59PM -0700, Darren Duncan wrote:
> Hello, this request for comment is in particular aimed at those of you who use databases and/or DBI with Perl.
> 
> Thanks to a topic covered in Piers Cawley's most recent Perl 6 Summary (generic Parrot code generators), I think I have finally figured out what is the standard industry terminology to describe and/or use to name a new module I am making: "AST" or "Abstract Syntax Tree".
> 
> P.S.  Please CC your reply directly to my address (darren@DarrenDuncan.net) in addition to sending it to the discussion list.
> 
> I am writing you today to get second opinions for proposed names on my new module, which I would like to register as soon as possible.
> 
> The current working title I have, which came out of a productive RFC I did on May 29th, is "SQL::ObjectModel".  I did submit that name on June 2nd to get registered; it never got registered, but on the bright side it gave me time to come up with the possibly better title.
> 
> I propose something like "SQL::AST" or "SQL::AbstractSyntax" or "SQL::AbstractSyntaxTree".  I like the first one best, because it is short.  Or maybe "SQL::AS".

Short names are generally not good names. SQL::AbstractSyntaxTree
sounds okay, as does SQL::ObjectModel. I think SQL::ObjectModel is
a more "friendly" name.

> On a related question, after I have finished the PurePerl implementation of this module, I plan to make a C library implementation, and so what would be a good name for that?  In my experience, C libraries often have names like "libABC" (such as libXML); might I be best to have a name like that, such as "libSQLAST".   Or would it sound better without that, such as "SQLAST"?

As a counter example I offer Data::Dumper and DBI. Both come with
C and pure-perl implementations that are selected automatically.
Much simpler for the user.

Tim.
