Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:730
Return-Path: <jon@powells.com>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 21216 invoked from network); 17 Dec 1999 01:10:38 -0000
Received: from reese.internet.powells.com (HELO powells.com) (199.2.105.146)
  by tmtowtdi.perl.org with SMTP; 17 Dec 1999 01:10:38 -0000
Received: from localhost (jon@localhost)
          by powells.com (8.8.8/8.8.4) with ESMTP
	  id RAA27195 for <modules@perl.org>; Thu, 16 Dec 1999 17:08:39 -0800 (PST)
Date: Thu, 16 Dec 1999 17:08:39 -0800 (PST)
X-Sender: jon@reese.internet.powells.com
To: modules@perl.org
Subject: Registering for CPAN
Message-ID: <Pine.GSO.4.10.9912161641130.18986-100000@reese.internet.powells.com>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Approved: news@nntp.perl.org
From: jon@powells.com (Jon Brandon)

Hello, I want to see about registering for a CPAN ID.

  My name: is Jon Brandon
    email: is jon@powells.com
home page: www.thebooklocator.com is my site, no personal info about me though.

My preferred user-ID would be JONJAY.

I have written several modules that I seem to get lots of mileage out
of over the years and thought it might be nice to contribute them.  I
would want to start out with just one however, gotta get past the,
OMG I have a module on CPAN you know.

OK first module, is a way to keep persistent information between program
runs.  There are those times where using a database to store just a
few things is a bit much, when all you want to do is keep some information
about that run of the program so the program will know what it did last time.
There are also times where I have wanted to have a persistent cache, and
it works well for that also.

The module is a tied hash, information from the last run of that program
is loaded as soon as you tie to it.  You can work with it through out
your program, then when the program ends it writes the information back
out for the next run.

The current name is INI_file.pm, a more valid name would be
TIE::Persistent_hash.

example of how it works.
tie(%ini, "INI_file");
or tie(%ini, "INI_file", "path_to_ini_file");

$ini{'one'} = 'one';
$ini{'two'} = ['one','two','three'];
$ini{'three'} = {'jon' => 'brandon', 'chris' => 'valaas'};

or even

$ini{'four'} = {'jon' => ['one','two','three']};

The program ends and information is saved, next time it loads
it will know what $ini{'four'}->{'jon'}->[1] was last time.

Other modules listed by thier current names,
Email.pm => used for easily reading in emails from stdin.
Config_file.pm => Simple way to add config file support into your program.

Thanks

-Jon Brandon


