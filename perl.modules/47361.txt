Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:47361
Return-Path: <cpan@ali.as>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 10754 invoked from network); 13 Feb 2006 04:18:22 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 13 Feb 2006 04:18:22 -0000
Received: (qmail 6324 invoked by uid 225); 13 Feb 2006 04:18:19 -0000
Delivered-To: modules@perl.org
Received: (qmail 6318 invoked by alias); 13 Feb 2006 04:18:18 -0000
X-Spam-Status: No, hits=-4.4 required=8.0
	tests=ALL_TRUSTED,BAYES_00
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: neutral (x1.develooper.com: local policy)
Received: from x6.develooper.com (HELO lists.develooper.com) (63.251.223.186)
    by la.mx.develooper.com (qpsmtpd/0.28) with SMTP; Sun, 12 Feb 2006 20:17:32 -0800
Received: (qmail 10602 invoked by uid 515); 13 Feb 2006 04:17:26 -0000
Message-ID: <20060213041726.10601.qmail@lists.develooper.com>
To: modules@perl.org
Date: Mon, 13 Feb 2006 15:15:12 +1100
User-Agent: Thunderbird 1.5 (Windows/20051201)
MIME-Version: 1.0
Subject: Re: Module submission Math::Sparse::Vector
References: <200602111651.k1BGpqBU010360@pause.perl.org> <43EE2CF2.2000101@sneakemail.com>
In-Reply-To: <43EE2CF2.2000101@sneakemail.com>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-Posted-By: 202.90.48.125
Approved: news@nntp.perl.org
From: cpan@ali.as (Adam Kennedy)

Steffen Mueller wrote:
> Hello,
> 
> Perl Authors Upload Server wrote:
>>   modid:       Math::Sparse::Vector
>>   description: Sparse Vector Operations in Perl
> 
> You state that you will use the Math::Sparse namespace for common 
> functionality of ::Vector and ::Matrix. In that context, I would think 
> you should make a Math-Sparse distribution which contains three (or 
> more) modules: Math::Sparse (as a base class) and Math::Sparse::Vector 
> and ::Matrix. What do you think?

This is especially the case if the the modules all share common 
dependencies.

By default you should pack multiple related modules into a single 
distribution that address an entire area of work.

The reason you would then want to split out packages into their own 
distributions is that it would impose additional dependency bloat on the 
core package for the people that didn't want to use that one particular 
module out of the whole distribution, or because different people need 
to maintain the different parts, or similar structural reasons to the above.

If one person is doing the primary maintaining for all of them, and they 
all use more or less the same dependencies, going with a single 
distribution is probably the best option.

Adam K
