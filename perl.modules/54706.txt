Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:54706
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 1813 invoked from network); 3 Jun 2007 09:29:33 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 3 Jun 2007 09:29:33 -0000
Received: (qmail 1696 invoked by uid 225); 3 Jun 2007 09:29:33 -0000
Delivered-To: modules@perl.org
Received: (qmail 1690 invoked by alias); 3 Jun 2007 09:29:33 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
Received: from pause.fiz-chemie.de (HELO pause.perl.org) (195.149.117.110)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Sun, 03 Jun 2007 02:29:17 -0700
Received: from pause.perl.org (localhost.localdomain [127.0.0.1])
	by pause.perl.org (8.13.4/8.13.4/Debian-3sarge3) with ESMTP id l539SlJv020606;
	Sun, 3 Jun 2007 11:28:47 +0200
Received: (from nobody@localhost)
	by pause.perl.org (8.13.4/8.13.4/Submit) id l539Sl3W020605;
	Sun, 3 Jun 2007 11:28:47 +0200
Date: Sun, 3 Jun 2007 11:28:47 +0200
Message-ID: <200706030928.l539Sl3W020605@pause.perl.org>
Subject: Module submission Fukurama::Base
Reply-To: modules@perl.org
To: modules@perl.org, tobiwan@cpan.org
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Fukurama::Base
  DSLIP:       adppp
  description: better control of class + method definition
  userid:      TOBIWAN (Tobias Tacke)
  chapterid:   2 (Language_Extensions)
  communities:
    http://www.fukurama.org

  similar:
    Object::Interface

  rationale:

    These is the base functionality of the Fukurama-framework. All
    classes will be based on it.

    This Module allows users:

    -to define and implement abstract classes and methods and avoid any
    usage of it

    -to implement interfaces an force the implementation in child class

    -to define method-signatures and check it at runtime

    -to check signatures in inheritance for any inconsistence

    -to use strict datatypes, which will basicly supported by this
    module. Other, i.e. datatypes from cpan, can be integrated

    -to force the usage of the pragmas strict and warnings

    the difference to the "Object::Interface" is, that you can define
    your abstract methods as normal subs, you can define the whole class
    as abstract and you can import implemented classes as an abstract
    interface. And at least: you can do much more things than in
    Object::Interface.

  enteredby:   TOBIWAN (Tobias Tacke)
  enteredon:   Sun Jun  3 09:28:47 2007 GMT

The resulting entry would be:

Fukurama::
::Base            adppp better control of class + method definition  TOBIWAN


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=b9110000_6a2da8d62ee4e160&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=b9110000_6a2da8d62ee4e160&SUBMIT_pause99_add_mod_insertit=1
