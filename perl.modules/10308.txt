Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:10308
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 23449 invoked by uid 76); 22 Feb 2002 11:21:32 -0000
Received: from root@dubravka.kbx.de (HELO pause.perl.org) (212.40.160.59)
  by onion.perl.org (qpsmtpd/0.06) with SMTP; Fri Feb 22 11:21:32 2002 -0000
Received: (from nobody@localhost)
	by pause.perl.org (8.9.3/8.9.3) id MAA10800;
	Fri, 22 Feb 2002 12:21:28 +0100
Date: Fri, 22 Feb 2002 12:21:28 +0100
Message-ID: <200202221121.MAA10800@pause.perl.org>
Reply-To: modules@perl.org
Subject: Module submission Class::Data::TIN
To: modules@perl.org, domm@cpan.org
Approved: news@nntp.perl.org
From: upload@p11.speed-link.de ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Class::Data::TIN
  DSLIP:       bdphp
  description: Translucent Inheritable Nonpollut ClassData
  userid:      DOMM (Thomas Klausner)
  chapterid:    6 (Data_Type_Utilities)
  communities:
    vienna perl mongers, privat mail to Michael G. Schwern

  similar:
    Class::Data::Inheritable

  rationale:

    Class::Data::Inheritable generates a lot of accessor methods in
    your namespace.

    Class::Data::TIN works around this "problem" by storing the Class
    Data in its own namespace (mirroring the namespace and @ISA
    hierarchies of the modules using it) and supplying the using
    packages with (at this time) three meta-accessors called
    C<get_classdata> (or just C<get>), C<set_classdata> (C<set>) and
    C<append_classdata> (C<append>). It achieves this with some black
    magic (namespace munging & evaling).

    You can preview it at:
    http://domm.zsi.at/source_code/modules/Class-Data-TIN-0.02.tar.gz

  enteredby:   DOMM (Thomas Klausner)
  enteredon:   Fri Feb 22 11:21:27 2002 GMT

The resulting entry would be:

Class::Data::
::TIN             bdphp Translucent Inheritable Nonpollut ClassData  DOMM


Thanks for registering,
The Pause Team

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=ba000000_fe5ed22fbf057244&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=ba000000_fe5ed22fbf057244&SUBMIT_pause99_add_mod_insertit=1
