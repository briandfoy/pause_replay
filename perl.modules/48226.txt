Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:48226
Return-Path: <coneill@oneill.net>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Delivered-To: moderator for modules@perl.org
Received: (qmail 23778 invoked from network); 10 Apr 2006 17:14:02 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 10 Apr 2006 17:14:02 -0000
Received: (qmail 25664 invoked by uid 225); 10 Apr 2006 17:14:01 -0000
Delivered-To: modules@perl.org
Received: (qmail 25659 invoked by alias); 10 Apr 2006 17:14:01 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: domain of coneill@oneill.net designates 24.249.249.242 as permitted sender)
Received: from firefly.fnord.net (HELO firefly.fnord.net) (24.249.249.242)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Mon, 10 Apr 2006 10:13:59 -0700
Received: from luser.fnord.net ([24.249.249.241])
	by firefly.fnord.net with esmtpa (Exim 4.50)
	id 1FSzx6-0001d4-4H; Mon, 10 Apr 2006 13:13:45 -0400
Message-ID: <443A91F9.5060201@oneill.net>
Date: Mon, 10 Apr 2006 13:12:25 -0400
User-Agent: Thunderbird 1.5 (Windows/20051201)
MIME-Version: 1.0
To:  brian.d.foy@gmail.com
CC:  modules@perl.org
Subject: Re: Module submission Numbers::Base::DWIM
References: <200604100122.k3A1Mh79004663@pause.perl.org> <100420061007005925%brian.d.foy@gmail.com>
In-Reply-To: <100420061007005925%brian.d.foy@gmail.com>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-Spam-Score: 0.0 (/)
X-Spam-Report: Spam detection software, running on the system "firefly.fnord.net", has
	identified this incoming email as possible spam.  The original message
	has been attached to this so you can view it (if it isn't spam) or label
	similar future email.  If you have any questions, see
	the administrator of that system for details.
	Content preview:  brian d foy wrote: > How about using a dualvar so that 
	there are number and string > components? > You mean as in the thing 
	that Scalar::Util makes? I hadn't really looked at Scalar::Util until 
	now. I'll take a look at it, but that seems to make sense from my 
	first look. I imagine that might > What did they find confusing about 
	that? Just that they weren't using a > string? How did you finally 
	explain it to them? > > And, this particular example seems like a good 
	candidate for some > obfuscated Perl if you need to generate a 0. :) > 
	> [...] 
	Content analysis details:   (0.0 points, 5.0 required)
	pts rule name              description
	---- ---------------------- --------------------------------------------------
X-Old-Spam-Flag: NO
Approved: news@nntp.perl.org
From: coneill@oneill.net (Clayton O'Neill)

brian d foy wrote:
> How about using a dualvar so that there are number and string
> components? 
>   
You mean as in the thing that Scalar::Util makes?  I hadn't really 
looked at Scalar::Util until now.  I'll take a look at it, but that 
seems to make sense from my first look.  I imagine that might
> What did they find confusing about that? Just that they weren't using a
> string? How did you finally explain it to them?
>
> And, this particular example seems like a good candidate for some
> obfuscated Perl if you need to generate a 0. :)
>
>   

I think they expected oct to provide a string context to the constant, 
and that it would just DTRT.  Once I managed to explain that the number 
gets converted during tokenization, they seemed to catch on.  It was a 
long "we're all bored on saturday night" discussion on irc.perl.org.
