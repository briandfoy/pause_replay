Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:36704
Return-Path: <simonm@cavalletto.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 27040 invoked from network); 28 Nov 2004 17:11:46 -0000
Received: from x1.develooper.com (63.251.223.170)
  by lists.develooper.com with SMTP; 28 Nov 2004 17:11:46 -0000
Received: (qmail 16318 invoked by uid 225); 28 Nov 2004 17:11:45 -0000
Delivered-To: modules@perl.org
Received: (qmail 16314 invoked by alias); 28 Nov 2004 17:11:45 -0000
X-Spam-Status: No, hits=-4.9 required=8.0
	tests=BAYES_00
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy includes SPF record at spf.trusted-forwarder.org)
Received: from mail3.panix.com (HELO mail3.panix.com) (166.84.1.74)
  by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Sun, 28 Nov 2004 09:11:41 -0800
Received: from mailspool2.panix.com (mailspool2.panix.com [166.84.1.79])
	by mail3.panix.com (Postfix) with ESMTP id 67AA4981E3;
	Sun, 28 Nov 2004 12:11:37 -0500 (EST)
Received: from cavalletto.org (unknown [207.18.115.52])
	by mailspool2.panix.com (Postfix) with ESMTP id 1164E1229C9;
	Sun, 28 Nov 2004 12:11:36 -0500 (EST)
Date: Sun, 28 Nov 2004 12:11:43 -0500
Subject: Re: [sw-design] Perl Software::Design CPAN-based Magazine - Input and	Volunteers Requested
Content-Type: text/plain; delsp=yes; charset=US-ASCII; format=flowed
Mime-Version: 1.0 (Apple Message framework v553)
Cc: modules@perl.org
To: "Perl Software::Design mailing list" <sw-design@metaperl.com>
In-Reply-To: <41A9533C.6060400@metaperl.com>
Message-ID: <93B3CF06-4160-11D9-992F-003065AFEA5E@cavalletto.org>
Content-Transfer-Encoding: 7bit
X-Mailer: Apple Mail (2.553)
Approved: news@nntp.perl.org
From: simonm@cavalletto.org (Matthew Simon Cavalletto)
References: <41A9533C.6060400@metaperl.com>

On Saturday, November 27, 2004, at 11:25  PM, Terrence Brannon wrote:

> However, there is little on CPAN to group a collection of related  
> modules. I often spend time trying to get author a and author b to add  
> each other to their SEE ALSO section. [...] Ideally the overarching  
> theme(s) behind a module might be browseable along with the module  
> itself: you search for DBIx::DBO2 and up comes  
> DBIx::Wrapper::Evaluation for you to peruse a "Consumer Reports"  
> evaluation of DBIx::DBO2 along with DBIx::Easy, etc...

I like this idea, but I don't think it's a good fit for the "magazine"  
model.

If you're going to post that kind of guide on CPAN, I think it would  
benefit from being like the POOP-Group summary, which is updated over  
time and accepts patches from contributors, rather than being like a  
magazine article with the opinion of one person which is published one  
time and not maintained.

As a concrete example, "A Guide to Method Generator Modules" sounds  
like a good subject for a CPAN-published manpage, but "Terrence Is Not  
Impressed By Mason AutoHandlers" would be better off published in  
another channel.

>> - What choices would lead authors to submit an article to this forum,  
>> rather than to the current choices, like Perl Monks, Perl Review,  
>> Perl.com, etc?
>
> I think it boils down to how you like to author things and how much  
> peer-review you want.  I don't like HTML authoring so much. Writing  
> something for intensive peer review is good, but I prefer something  
> along the lines of comp.lang.perl.moderated in terms of how much  
> scrutiny I want.

I think the fact that you're going to publish on CPAN is an argument  
for much more peer review than if you were posting to c.l.p.m or  
PerlMonks; you're asking hundreds of sites to mirror your article for  
years and years, and the only way people can effectively respond is by  
publishing their own article as  
Software::Design::HTML::Mason::autohandler_vs_perl_oop_heres_what_I_thin 
k.

> We also have the option of packaging working code with our articles.  
> The HTML::Mason::vs_perl_oop distribution had working pure Perl to  
> emulation Mason autohandling. That is easy with CPAN publishing.

You can also include source code (or a link to a tarball) with an  
article submitted to c.l.p.m or any of the web or paper magazines,  
without worrying about CPAN accidentally indexing your examples (eg,  
modules like Huffy::Base).

On Sunday, November 28, 2004, at 07:29  AM, Terrence Brannon wrote:
> I have supported those channels and intend to in the future... when I  
> get some spare time, which might not be for another 10 years.

Being the editor of a magazine seems like a larger commitment than  
writing an occasional article. (You could try asking some of the  
various people who've worked on past and present Perl magazines about  
their experiences.) If your time is so limited, I would worry that  
you'd only get around to publishing a few "issues", which wouldn't  
really serve the community.

> CPAN [...] can be used and abused in a variety of ways based on who  
> decides to get involved with it.

Yes -- and part of that framework is that the people who are heavily  
involved with it are expected to speak up against the abuses. Feel free  
to "abuse" software, but don't please actually abuse the community.

(I could publish a daily blog about what I had for dinner as CPAN  
modules, Simon's::Dinner::Fajitas_11_28_2004,  
Simon's::Dinner::Lasagna_11_29_2004, and so on -- but that'd be  
abusive, and one would expect that the community would provide negative  
feedback.)

> I really like the way that CPAN goes from general to specific when  
> naming a module. Most magazines publish articles with freeform titles.  
> By strictly following naming conventions, we develop a collection of  
> writings on a particular topic or CPAN module available in a single  
> place.

This makes some sense as an indexing and cataloging technique --  
creating a well-named manpage that directs users to information  
scattered in other locations that they might not otherwise find -- but  
there's no need to publish hundreds of short essays of individual  
author's opinions this way.

So, if you want to undertake a community effort to build and publish a  
DBIx::WrapperGuide manpage, I'd be all for it and glad to help -- it  
can replace the crufty one I put together earlier this year:
   http://search.cpan.org/dist/DBIx-SQLEngine/SQLEngine/Docs/Related.pod

But as to Software::Design::HTML::Mason::autohandler_vs_perl_oop, I  
remain unconvinced that this belongs on CPAN -- why not post this on  
PerlMonks instead, where lots of people who use Mason have an  
opportunity to comment?

-Simon

