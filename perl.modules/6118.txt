Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:6118
Return-Path: <acme@astray.com>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 96689 invoked from network); 13 Jun 2001 20:56:00 -0000
Received: from unknown (HELO ns0.astray.com) (195.82.114.160)
  by onion.valueclick.com with SMTP; 13 Jun 2001 20:56:00 -0000
Received: from acme by ns0.astray.com with local (Exim 3.13 #1)
	id 15AHgU-0002Up-00
	for modules@perl.org; Wed, 13 Jun 2001 21:56:14 +0100
Date: Wed, 13 Jun 2001 21:56:14 +0100
To: modules@perl.org
Subject: Tie::GHash
Message-ID: <20010613215614.A8510@ns0.astray.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.2.4i
X-Perl-Mongers: Amsterdam.pm, Bath.pm, Croydon.pm, ... London.pm
Organisation: Iterative Software Ltd.
X-Spam-Rating: onion.valueclick.com 1.6.2 0/1000/N
Approved: news@nntp.perl.org
From: acme@astray.com (Leon Brocard)

Tie::GHash   adcfp A smaller hash     LBROCARD

Is Tie::GHash acceptable? ghash is how they're called in glib...

=head1 NAME

Tie::GHash - A smaller hash

=head1 SYNOPSIS

  tie my %words, 'Tie::GHash';
  my $i;
  foreach (@words) {
    $words{$_} = $i++;
  }

=head1 DESCRIPTION

This module provides an interface to the Gnome glib library's hashes,
which are smaller (although possibly slower) than Perl's internal
hashes.

Typically, Perl sacrifices memory for speed, and this is the case with
its built-in hashes. Occasionally, you have a need for a large in-memory
hash, where it would be useful to sacrifice speed for low memory
usage. This module provides that functionality.

Using C<Tie::GHash> is very simple: just use the hash in exactly the
same way as you would use a normal Perl hash, with the exception that
you need to C<tie> it before use as in the synopsis.

For example, reading in a typical /usr/share/dict/words using Perl's
built in hashes took up 8,672K. Doing the same with Tie::GHash took up
7,212K, albeit about six times slower due to the tie interface.

Available here for now: http://astray.com/Tie-GHash-0.10.tar.gz

Leon
-- 
Leon Brocard.............................http://www.astray.com/
Iterative Software...........http://www.iterative-software.com/

... If you can't do it in assembler, it's not worth doing
