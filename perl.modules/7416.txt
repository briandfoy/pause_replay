Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:7416
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 59286 invoked from network); 6 Sep 2001 11:37:22 -0000
Received: from dubravka.kbx.de (HELO pause.perl.org) (root@212.40.160.59)
  by onion.valueclick.com with SMTP; 6 Sep 2001 11:37:22 -0000
Received: (from nobody@localhost)
	by pause.perl.org (8.9.3/8.9.3) id NAA06262;
	Thu, 6 Sep 2001 13:37:20 +0200
Date: Thu, 6 Sep 2001 13:37:20 +0200
Message-ID: <200109061137.NAA06262@pause.perl.org>
Reply-To: modules@perl.org
Subject: Module submission Mail::IMAPTalk
To: modules@perl.org, howard@cpan.org
X-Spam-Rating: onion.valueclick.com 1.6.2 0/1000/N
Approved: news@nntp.perl.org
From: upload@p11.speed-link.de ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Mail::IMAPTalk
  DSLIP:       bdpOp
  description: RFC-compliant IMAP client module
  userid:      HOWARD (Jeremy Howard)
  chapterid:   19 (Mail_and_Usenet_News)
  communities:

  similar:
    Mail::IMAPClient Net::IMAP

  rationale:

    Yes, it's yet another IMAP client module. Mail::IMAPTalk fully
    parses IMAP return structures strictly following RFC 2060, whereas
    other modules we have tried use heuristics to approximate
    RFC-compliant parsing. In practice we have found that the other IMAP
    modules too often fail to parse complex return structures, such as
    for complex MIME messages. After trying to patch existing modules we
    ended up writing our own since we found that the existing code was
    not well-suited for this requirement.

  enteredby:   HOWARD (Jeremy Howard)
  enteredon:   Thu Sep  6 11:37:20 2001 GMT

The resulting entry would be:

Mail::
::IMAPTalk        bdpOp RFC-compliant IMAP client module             HOWARD


Thanks for registering,
The Pause Team

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=ee000000_aca5d599b8273b7e&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=ee000000_aca5d599b8273b7e&SUBMIT_pause99_add_mod_insertit=1
