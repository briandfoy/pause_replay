Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:73649
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 29494 invoked from network); 19 Nov 2010 18:58:04 -0000
Received: from x1.develooper.com (207.171.7.70)
  by x6.develooper.com with SMTP; 19 Nov 2010 18:58:04 -0000
Received: (qmail 4213 invoked by uid 225); 19 Nov 2010 18:58:04 -0000
Delivered-To: modules@perl.org
Received: (qmail 4207 invoked by alias); 19 Nov 2010 18:58:04 -0000
X-Spam-Status: No, hits=0.0 required=8.0
	tests=
X-Spam-Check-By: la.mx.develooper.com
Received: from pause.fiz-chemie.de (HELO pause.fiz-chemie.de) (195.37.231.65)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Fri, 19 Nov 2010 10:58:02 -0800
Received: from pause.fiz-chemie.de (localhost.localdomain [127.0.0.1])
	by pause.fiz-chemie.de (8.13.8/8.13.8/Debian-3) with ESMTP id oAJIv1oa025521;
	Fri, 19 Nov 2010 19:57:01 +0100
Received: (from nobody@localhost)
	by pause.fiz-chemie.de (8.13.8/8.13.8/Submit) id oAJIv1Ap025510;
	Fri, 19 Nov 2010 19:57:01 +0100
Date: Fri, 19 Nov 2010 19:57:01 +0100
Message-ID: <201011191857.oAJIv1Ap025510@pause.fiz-chemie.de>
Subject: Module submission Data::PrettyPrintObjects
Reply-To: modules@perl.org
To: modules@perl.org, sbeck@cpan.org
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Data::PrettyPrintObjects
  DSLIP:       bdpfp
  description: pretty printing with good support for object
  userid:      SBECK (Sullivan Beck)
  chapterid:   6 (Data_Type_Utilities)
  communities:

  similar:
    Data::Dumper

  rationale:

    I use Data::Dumper to examine data structures (primarily when
    debugging), but if the structure has embedded objects in it (created
    by another module that I'm not debugging), Dumper prints out the
    entire structure of these objects which I'm not interested in (and
    if the object is large enough, it makes it very difficult to examine
    the structure that I'm actually interested in).

    I want a pretty printer that prints the data structure (similar to
    Data::Dumper) but if can be configured to use whatever method is
    convenient to print an object.

    For example, if I have a structure containing an embedded
    Array::Zip object (referring to an object that contains two files
    'a.txt' and 'b.txt'), and the structure is something like:

    $var = { key1 => val1, key2 => val2, key3 => Array::Zip object }

    when debugging, I'd like to be able to examine this structure and
    see something like:

    $var = { key1 => val1, key2 => val2, key3 => Archive::Zip(0x123456)
    [ a.txt, b.txt ] }

    instead of:

    $var = { key1 => val1, key2 => val2, key3 => bless { 'eocdOffset'
    => 0, 'fileName' => '', 'writeEOCDOffset' => 0, ... } Archive::Zip }

    Since I'm not debugging the Archive::Zip module, I really don't
    care about the internal structure of the object... just the
    information that may be useful to me.

    This module is nearly complete. I'm already using it internally,
    and am just doing some last-minute stuff to it, but I want to
    release it under an approved name.

    Thanks

  enteredby:   SBECK (Sullivan Beck)
  enteredon:   Fri Nov 19 18:57:01 2010 GMT

The resulting entry would be:

Data::
::PrettyPrintObjects bdpfp pretty printing with good support for object SBECK


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=52400000_a7e3f9ea749ee33f&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=52400000_a7e3f9ea749ee33f&SUBMIT_pause99_add_mod_insertit=1
Peek at the current permissions:
  https://pause.perl.org/pause/authenquery?pause99_peek_perms_by=me&pause99_peek_perms_query=Data%3A%3APrettyPrintObjects
