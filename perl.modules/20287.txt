Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:20287
Return-Path: <nobody@pause.x.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 45732 invoked by uid 76); 8 Apr 2003 17:30:57 -0000
Received: from qmailr@one.develooper.com (HELO ran-out.mx.develooper.com) (64.81.84.115) by onion.perl.org (qpsmtpd/0.25) with SMTP; Tue, 08 Apr 2003 10:30:57 -0700
Received: (qmail 23517 invoked by uid 225); 8 Apr 2003 17:30:55 -0000
Delivered-To: modules@perl.org
Received: (qmail 23508 invoked by uid 507); 8 Apr 2003 17:30:55 -0000
Received: from pause.perl.org (HELO pause.perl.org) (212.40.160.59) by one.develooper.com (qpsmtpd/0.25) with SMTP; Tue, 08 Apr 2003 10:30:53 -0700
Received: from pause.perl.org (IDENT:nobody@localhost [127.0.0.1])	by pause.perl.org (8.12.9/8.12.9) with ESMTP id h38HUoI3006333;	Tue, 8 Apr 2003 19:30:50 +0200
Received: (from nobody@localhost)	by pause.perl.org (8.12.9/8.12.9/Submit) id h38HUok9006332;	Tue, 8 Apr 2003 19:30:50 +0200
Date: Tue, 8 Apr 2003 19:30:50 +0200
Message-ID: <200304081730.h38HUok9006332@pause.perl.org>
Subject: Module submission Tie::Atomic
Reply-To: modules@perl.org
To: modules@perl.org, ivorw@cpan.org
X-SMTPD: qpsmtpd/0.25, http://develooper.com/code/qpsmtpd/
X-Spam-Check-By: one.develooper.com
X-Spam-Status: No, hits=1.1 required=7.0 tests=CARRIAGE_RETURNS,SPAM_PHRASE_00_01 version=2.44
X-SMTPD: qpsmtpd/0.25, http://develooper.com/code/qpsmtpd/
Approved: news@nntp.perl.org
From: upload@pause.x.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Tie::Atomic
  DSLIP:       idprp
  description: Locking and thread safety for variables
  userid:      IVORW (Ivor Williams)
  chapterid:    6 (Data_Type_Utilities)
  communities:
    Perl monks, london.pm list, #london.pm, Private email with Elisabeth
    Mattijsen (ELISABETH@cpan.org)

  similar:
    Threads::Shared, Thread::Barrier, Thread::Tie

  rationale:

    When faced with a problem of interference between Tk callbacks, I
    realised that perl variables are not intrinsically re-entrant.

    I have seen discussion to the effect that Perl 5 is not thread
    safe, but I had assumed that this was only of relevance when using
    threads inside Perl. In fact, the problem exists with any form of
    parallelism as I discovered with Tk callbacks.

    The underlying issues may well be sorted out in Perl 6, but how
    many people are prepared to wait that long?

    My proposed module is a tie wrapper which can be used anywhere that
    code needs to be re-entrant, including signal handlers.

    Besides implicit atomicity of all operations on the variable,
    including for example, push, pop, shift and unshift on arrays, there
    are lock and unlock methods provided to the underlying object, so
    that the programmer can hold their own locks if they need to.

  enteredby:   IVORW (Ivor Williams)
  enteredon:   Tue Apr  8 17:30:50 2003 GMT

The resulting entry would be:

Tie::
::Atomic          idprp Locking and thread safety for variables      IVORW


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=68200000_09518cf9fb7b8fd9&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=68200000_09518cf9fb7b8fd9&SUBMIT_pause99_add_mod_insertit=1
