Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:5729
Return-Path: <rob@roobik.com>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 11016 invoked from network); 21 May 2001 17:02:24 -0000
Received: from hookbot.dsl.xmission.com (HELO mail.roobik.com) (@198.60.114.163)
  by onion.valueclick.com with SMTP; 21 May 2001 17:02:24 -0000
Received: by mail.roobik.com (Postfix, from userid 500)
	id 3A51F366AD; Mon, 21 May 2001 11:02:04 -0600 (MDT)
Received: from localhost (localhost [127.0.0.1])
	by mail.roobik.com (Postfix) with ESMTP
	id 37AD631065; Mon, 21 May 2001 11:02:04 -0600 (MDT)
Date: Mon, 21 May 2001 11:02:04 -0600 (MDT)
To: modules@perl.org
Cc: rob@roobik.com
Subject: I need a registered PAUSE account
Message-ID: <Pine.LNX.4.21.0105211014280.31619-100000@rox.roobik.com>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-Spam-Rating: onion.valueclick.com 1.6.2 0/1000/N
Approved: news@nntp.perl.org
From: rob@roobik.com (Rob Brown)

PAUSE,

Name:     Rob Brown
Email:    rob@roobik.com
URL:      n/a
UserID:   BBB
  (I'm already using this handle other places and it will
  help people to recognize me.  They are my initials - of
  which I am very proud of - Bob B. Brown.)
Moduel:   Net::DNSServer

I'm ready to publish my work on Net::DNSServer to opensource.
It's had a lot of feedback and interest over the past year.
My module is basically a combination of Net::DNS, Net::Server,
IPC::SharedCache, and utilizes many other modules already
on CPAN.

Why now?

1) When we got hacked (yes again) from using bind 8, I decided
it was time to come up with an alternative.  Net::DNSServer
is meant to be used as a drop-in replacement for bind.  Since
it is tainted perl, it is much less likely to be exploited.

2) Now that Michael Fuhr has patched his Net::DNS with my
root zone bug fix and published the changes, my module is
ready for the public.

3) My module is much more easily configured and adapted than
bind, since it's written in Perl.  It is implemented using
what I call Resolver Modules each with different phases that
can be hooked.  (I got this idea from the Apache module
concept, but it works slick with Perl ISA stuff.)

4) It can out perform bind in several ways when dealing with
both ridiculously large numbers of zones and very large single
zones (if configured properly).  This will provide a wonderful
solution for ISPs with tens of thousands of zones that all
need to be updated frequently through a web interface.  And
the changes can be immediate without a HUP to the server!


It still does not have all the features I want, but I was
hoping to provide others with this module that they may
benefit from it as I have and hopefully find things that
could help improve it.

Thanks,

Rob Brown

