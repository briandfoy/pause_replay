Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:65228
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 5825 invoked from network); 1 Apr 2009 10:30:05 -0000
Received: from x1.develooper.com (207.171.7.70)
  by x6.develooper.com with SMTP; 1 Apr 2009 10:30:05 -0000
Received: (qmail 23304 invoked by uid 225); 1 Apr 2009 10:30:05 -0000
Delivered-To: modules@perl.org
Received: (qmail 23299 invoked by alias); 1 Apr 2009 10:30:04 -0000
X-Spam-Status: No, hits=0.0 required=8.0
	tests=
X-Spam-Check-By: la.mx.develooper.com
Received: from pause.fiz-chemie.de (HELO pause.perl.org) (195.149.117.110)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Wed, 01 Apr 2009 03:30:00 -0700
Received: from pause.perl.org (localhost.localdomain [127.0.0.1])
	by pause.perl.org (8.13.8/8.13.8/Debian-3) with ESMTP id n31ATrIA013507
	for <modules@perl.org>; Wed, 1 Apr 2009 12:29:53 +0200
Received: (from nobody@localhost)
	by pause.perl.org (8.13.8/8.13.8/Submit) id n31ATrYA013505;
	Wed, 1 Apr 2009 12:29:53 +0200
Date: Wed, 1 Apr 2009 12:29:53 +0200
Message-ID: <200904011029.n31ATrYA013505@pause.perl.org>
Subject: Module submission LWP::UserAgent::Mockable
Reply-To: modules@perl.org
To: modules@perl.org
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       LWP::UserAgent::Mockable
  DSLIP:       bdphp
  description: Mostly transparent mocking of LWP.
  userid:      MMORGAN (Mark Morgan)
  chapterid:   15 (World_Wide_Web_HTML_HTTP_CGI)
  communities:

  similar:
    none that have similar approach

  rationale:

    LWP::UserAgent::Mockable is a wrapper for LWP::UserAgent. It wraps
    the LWP::simple_request method with hooks to allow for recording of
    LWP sessions to a file. During subsequent running of similar LWP
    requests, the responses will be read from the file, rather than
    performing the actual LWP action.

    There are a couple of modules which allow LWP mocking, though their
    approach is quite different; they require specifying exactly what
    mock responses should be returned, and are very verbose and
    impractical when trying to mock large numbers of external requests
    in unittests.

    Mark.

  enteredby:   MMORGAN (Mark Morgan)
  enteredon:   Wed Apr  1 10:29:53 2009 GMT

The resulting entry would be:

LWP::UserAgent::
::Mockable        bdphp Mostly transparent mocking of LWP.           MMORGAN


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=07510000_4a4705bbc96525e8&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=07510000_4a4705bbc96525e8&SUBMIT_pause99_add_mod_insertit=1
