Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:40713
Return-Path: <marvin@rectangular.com>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 28593 invoked from network); 30 May 2005 18:56:20 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 30 May 2005 18:56:20 -0000
Received: (qmail 19522 invoked by uid 225); 30 May 2005 18:56:20 -0000
Delivered-To: modules@perl.org
Received: (qmail 19518 invoked by alias); 30 May 2005 18:56:19 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
Received: from www.rectangular.com (HELO rectangular.com) (12.154.210.214)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Mon, 30 May 2005 11:56:16 -0700
Received: from c-24-21-47-23.hsd1.or.comcast.net ([24.21.47.23] helo=[10.0.1.3])
	by rectangular.com with esmtpa (Exim 4.44)
	id 1DcpVQ-0000Y7-O4; Mon, 30 May 2005 12:00:56 -0700
In-Reply-To: <429B51AB.2080204@gmail.com>
References: <200505290400.j4T40MOu026604@pause.perl.org> <290520052001310765%comdog@panix.com> <BECA2314-1DA3-4D62-A01D-AFD1CCD22D6A@rectangular.com> <429B51AB.2080204@gmail.com>
Mime-Version: 1.0 (Apple Message framework v730)
Content-Type: text/plain; charset=US-ASCII; delsp=yes; format=flowed
Message-ID: <4BDE3CFC-6B6C-4E9C-B687-93A72B2057F8@rectangular.com>
Cc: jhi@iki.fi
Content-Transfer-Encoding: 7bit
Subject: Re: Module submission Sort::MonsterSort
Date: Mon, 30 May 2005 11:56:11 -0700
To: modules@perl.org
X-Mailer: Apple Mail (2.730)
Approved: news@nntp.perl.org
From: marvin@rectangular.com (Marvin Humphrey)

On May 30, 2005, at 10:47 AM, Jarkko Hietaniemi wrote:
> There is a reasonably standard (at least in computer science and
> software engineering terms) term for this: external sorting.

Ha!  I googled "external sorting", and arrived here:

http://cis.stvincent.edu/swd/extsort/extsort.html

The algorithm described is EXACTLY what's in my module.  Initial  
runs, multiway merge, extensive use of memory caching (down to the  
scalar output buffer), the whole bit.

So, Sort::External would seem to be another namespace candidate.   
Unfortunately, 'Sort::External' suffers from the the same problem  
which afflicts 'Sort::MonsterSort' -- a lot of people wouldn't know  
what it does, and thus wouldn't find it when they needed it.  For non- 
CS people like myself, the word 'external' on its own has no  
association with the problem the module is designed to solve: "My  
list is too big -- how do I sort something really big?"  And though  
"external sorting" is standard enough to end up in Knuth, it's not  
standard enough to end up in my "Mastering Algorithms With C" book  
along with ubiquitous standbys like mergesort and quicksort.

We have two reasonably good options: I can call the module  
Sort::External, or I can call it Sort::Huge and explain that it  
implements an "external sorting algorithm" in the documentation.   
Sort::External has the advantage of academic accuracy, but I'm  
willing to bet Sort::Huge will reach more users, so I'm more  
comfortable with the latter.

Opinions?

Marvin Humphrey
Rectangular Research
http://www.rectangular.com/

