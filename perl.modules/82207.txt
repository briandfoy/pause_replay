Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:82207
Return-Path: <rkitover@gmail.com>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Delivered-To: moderator for modules@perl.org
Received: (qmail 7133 invoked from network); 11 Sep 2012 21:34:52 -0000
Received: from x1.develooper.com (207.171.7.70)
  by x6.develooper.com with SMTP; 11 Sep 2012 21:34:52 -0000
Received: (qmail 5413 invoked by uid 225); 11 Sep 2012 21:34:52 -0000
Delivered-To: modules@perl.org
Received: (qmail 5409 invoked by alias); 11 Sep 2012 21:34:51 -0000
X-Spam-Status: No, hits=-2.7 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VALID,DKIM_VALID_AU,FREEMAIL_FROM,RCVD_IN_DNSWL_LOW,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received: from mail-qa0-f41.google.com (HELO mail-qa0-f41.google.com) (209.85.216.41)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Tue, 11 Sep 2012 14:34:47 -0700
Received: by qafk30 with SMTP id k30so2169401qaf.14
        for <modules@perl.org>; Tue, 11 Sep 2012 14:34:43 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=date:from:to:message-id:subject:x-mailer:mime-version:content-type;
        bh=pptqCV/s9h7ovPydabDArvTTNxB9KWVc4EBQxKJ6TQ0=;
        b=COiNCjg18FaldZ/f2Hhgl3BlkTbr4s0biiRu+AVB5Two8UEBGJ+JXigjNNXute8yiC
         RwJhuvndQAPyW7NpUZBC9t0v4C0OCzEj0BLH3cM94tXzZkEivmZNdmCc0yd3mJF2sE8L
         c7Y1SvjIxL+ehn189PTR/L1IkLD8oUstzyccJW5qf94VROsuU4LfLg0nhwjjgcIi5HhN
         rBiqa+QLBsi4/i8pXvgzTsF95m3CKIMxrDfeXO0YrWqMeBhDmd9dwXejC0H4erJ5pq4I
         cddJHcDNTzjJKUS1UwftYcMX7YIT32ghXjw5q1af3xJqiqrv91GE06i7az0SBZsRhNrK
         Sk6w==
Received: by 10.224.58.147 with SMTP id g19mr1153860qah.77.1347399283101;
        Tue, 11 Sep 2012 14:34:43 -0700 (PDT)
Received: from [192.168.1.4] (c-98-225-202-124.hsd1.pa.comcast.net. [98.225.202.124])
        by mx.google.com with ESMTPS id et6sm7506453qab.8.2012.09.11.14.34.41
        (version=TLSv1/SSLv3 cipher=OTHER);
        Tue, 11 Sep 2012 14:34:42 -0700 (PDT)
Date: Tue, 11 Sep 2012 17:34:40 -0400
To: modules@perl.org
Message-ID: <2661F172C9F34ABBB769B91C441E1FB6@gmail.com>
Subject: Matt S. Trout abusing his CPAN admin privileges
X-Mailer: sparrow 1.6.3 (build 1172)
MIME-Version: 1.0
Content-Type: multipart/mixed; boundary="504fae70_79a1deaa_1f8"
X-Virus-Checked: Checked
Approved: news@nntp.perl.org
From: rkitover@gmail.com (Rafael Kitover)

--504fae70_79a1deaa_1f8
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

Hello,

I have been the maintainer for DBIx::Class::Schema::Loader for the past 4 years, most of the code in that module is mine, as well as a few modules I wrote that it depends on, as you can see from the repository here:

https://github.com/dbsrgits/dbix-class-schema-loader

My CPAN id RKITOVER.

Today, Matt S. Trout took away my comaint on the module with no justification, as well as for Catalyst::Model::DBIC::Schema, most of which I wrote as well.

Attached is the irc log.

He said I "don't work well with others" etc. when I worked with many people over the last few years on changes to this module and no one ever complained except him.

Not that that matters of course, because he never wrote any code for this module or ever maintained it, somehow it is magically part of "his project" anyway.

I don't see how the modules belongs to him just because they have "DBIx::Class" in the name, when all the work was done by me.

I want my maint rights for both of these modules back.

If that's impossible, then I will continue to maintain them under a different name. 


--504fae70_79a1deaa_1f8
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Disposition: attachment; filename="=?utf-8?Q?mst=5Flog.txt?="

MTQ6NDkgPENhZWx1bT4gbXN0OiBjYW4geW91IGxvb2sgYXQgcGVvcGxlL2lsbWFyaS9kZWZlcnJl
ZC1leGNlcHRpb24tcHJvcGFnYXRpb24gPyBJIGFjdHVhbGx5IHdhbnRlZCB0byBkbyBtb3JlIHdv
cmsgb24gd2l0aF9kZWZlcnJlZF9ma19jaGVja3MKMTQ6NTEgPENhZWx1bT4gbXN0OiBhbmQgeW91
IHNhaWQgcmliYXN1c2hpIGlzIHJldmlld2luZyBteSBibG9iIGJyYW5jaCwgaXMgdGhhdCBsaWtl
bHkgdG8gaGFwcGVuIGJlZm9yZSAyMDEzPwoxNDo1MiA8QG1zdD4gQ2FlbHVtOiBsZXNzIGxpa2Vs
eSBldmVyeSB0aW1lIHlvdSBtYWtlIGEgc25hcmt5IGNvbW1lbnQgbGlrZSB0aGF0LgoxNDo1MyA8
Q2FlbHVtPiBtc3Q6IHlvdSBrbm93LCB0aGlzIGlzbid0IGZvciBtZSwgaXQncyBhYm91dCBtYWtp
bmcgZGJpYyBtb3JlIGZ1bmN0aW9uYWwgZm9yIHBlb3BsZSB3aG8gdXNlIGl0LCBhbmQgaXQgZG9l
c24ndCBoZWxwIHRoZW0gYXQgYWxsIGlmIHRoZSBjb2RlIHJvdHMgaW4gZ2l0IGZvciBtb250aHMK
MTQ6NTcgPEBtc3Q+IENhZWx1bTogdGhhdCdzIHJpZ2h0LCBpdCBpcyB3aGF0IGl0J3MgYWJvdXQu
IHdoaWNoIGlzIHdoeSB5b3Ugc2hvdWxkbid0IGJlIHNuYXJreSBhYm91dCB0aGUgcGVvcGxlIGhl
bHBpbmcgeW91IGFjaGlldmUgdGhhdC4KMTQ6NTcgPENhZWx1bT4gImhlbHBpbmcgbWU/IiBnaXZl
IG1lIGEgZnVja2luZyBicmVhawoxNTowMCA8Q2FlbHVtPiBtc3Q6IHNvIHdoYXQga2luZCBvZiAi
c3BlYyIgZGlkIHlvdSB3YW50IGZvciB0aGUgc3RycHRpbWUgYnJhbmNoCjE1OjAwIDxAbXN0PiBh
biBhY3R1YWwgc3BlYyBmb3Igd2hhdCB0aGUgZmVhdHVyZSBpcyB0cnlpbmcgdG8gYWNoaWV2ZQox
NTowMCA8QG1zdD4gYmFzaWNhbGx5LCBJIG5lZWQgeW91IHRvIC9hY2hpZXZlIHlvdXJzZWxmCjE1
OjAwIDxAbXN0PiBhbmQgY29tbWl0IHRoZSByZXN1bHRzCjE1OjAwIDxDYWVsdW0+IGEgd2F5IHRv
IGRlZmluZSBwYXJzZXJzIGFzIHN0cnB0aW1lIGZvcm1hdHMKMTU6MDEgPENhZWx1bT4gdGhhdCdz
IHdoYXQgaXQgZG9lcwoxNTowMSA8QG1zdD4gbm8sIGZ1Y2tvLCB0aGF0J3Mgd2hhdCB5b3UncmUg
ZmFpbGluZyB0byBpbXBsZW1lbnQKMTU6MDEgPEBtc3Q+IHlvdSBrbm93IGhvdyB0aGlzIHdvcmtz
CjE1OjAxIDxAbXN0PiBzdGVwIGJhY2ssIGV4cGxhaW4gUFJPUEVSTFkKMTU6MDEgPEBtc3Q+IGJl
Y2F1c2UgeW91ciBsYXVnaGFibGUgZXhjdXNlIGZvciBhbiBpbXBsZW1lbnRhdGlvbiB0b2xkIG1l
IGZ1Y2sgYWxsCjE1OjAxIDxDYWVsdW0+IGl0J3MgdGhpcyBraW5kIG9mIGF0dGl0dWRlIHRoYXQg
bWFrZXMgbWUgd2FudCB0byBzdG9wIHdvcmtpbmcgb24gZGJpYyBhbGwgdG9nZXRoZXIKMTU6MDEg
PENhZWx1bT4gSSBkb24ndCByZWFsbHkgZ2l2ZSBhIGZ1Y2sgd2hhdCBpdCB0b2xkIHlvdSBvciBk
aWRuJ3QgdGVsbCB5b3UKMTU6MDEgPEBtc3Q+IHdoYXQsIHRoZSBhdHRpdHVkZSBvZiAibGV0J3Mg
dW5kZXJzdGFuZCB0aGUgZmVhdHVyZSBmaXJzdCwgdGhlbiBkZXNpZ24gaXQsIFRIRU4gaW1wbGVt
ZW50IGl0IiA/CjE1OjAyIDxDYWVsdW0+IHRoZSBmZWF0dXJlIGlzICJtYWtlIGEgbWV0aG9kIHRv
IG1ha2Ugc3RycHRpbWUgcGFyc2VycyIsIHdoaWNoIGlzIHdoYXQgaXQgZG9lcwoxNTowMyA8QG1z
dD4gdGhhdCdzIG5vdCBhIGZlYXR1cmUKMTU6MDMgPENhZWx1bT4geW91IHNhdyB0aGUgY29kZSBp
dCByZXBsYWNlcywgc29tZXRoaW5nIHRvIHJlcGxhY2UgdGhhdCBjb2RlCjE1OjAzIDxAbXN0PiBE
Qkl4OjpDbGFzcyBpcyBub3QgYSBwYXJzZXIgZ2VuZXJhdG9yCjE1OjAzIDxDYWVsdW0+IHdoeSBu
b3Q/CjE1OjA0IDxAbXN0PiB0aGUgc3RvcmFnZSBsYXllciBzaG91bGQgYmUgKmNvbnN0cnVjdGlu
ZyogYW4gKm9iamVjdCogdGhhdCBkb2VzIHdoYXQgd2UgbmVlZC4KMTU6MDQgPEBtc3Q+IHdoeSBj
YW4ndCB3ZSBqdXN0IGNyZWF0ZSBhIHN0cnB0aW1lIG9iamVjdCBhbmQgdXNlIGl0PwoxNTowNCA8
Q2FlbHVtPiBiZWNhdXNlIElDOjpEVCBjYWxscyBtZXRob2RzIGJhc2VkIG9uIHRoZSBkYXRhX3R5
cGUKMTU6MDUgPEBtc3Q+IHRoYXQncyBub3QgYW4gYW5zd2VyLiB0cnkgYWdhaW4uCjE1OjA1IDxD
YWVsdW0+IGhvdyBkb2VzIHRoZSBvYmplY3QgaGF2ZSBvciBub3QgaGF2ZSBhIHBhcnNlX3NtYWxs
ZGF0ZXRpbWUgbWV0aG9kPwoxNTowNiA8QG1zdD4gSSB3YXMgb2YgdGhlIHVuZGVyc3RhbmRpbmcg
dGhhdCB0aGUgbWFqb3JpdHkgb2YgcGFyc2VycyBjYW4gaGFuZGxlIGF0IGxlYXN0IHBhcnNlX2Rh
dGV0aW1lIGFuZCBwYXJzZV9kYXRlCjE1OjA2IDxAbXN0PiBoYXZlIHlvdSBmb3VuZCBvbmUgdGhh
dCBkb2Vzbid0IHlldD8KMTU6MDcgLSEtIGNnZ29lYmVsIFt+Z2dvZWJlbEBjLTI0LTMwLTk4LTIy
Ni5oc2QxLmdhLmNvbWNhc3QubmV0XSBoYXMgcXVpdCBbUGluZyB0aW1lb3V0OiAzNjAgc2Vjb25k
c10KMTU6MDcgPEBtc3Q+IENhZWx1bTogaGVsbG8/CjE1OjA5IC0hLSBmaGVsbWJlcl8gW35maGVs
bWJlcmdAOTEtMTE1LTE3NC01NS5hZHNsLmhpZ2h3YXkudGVsZWtvbS5hdF0gaGFzIGpvaW5lZCAj
ZGJpeC1jbGFzcwoxNTowOSA8Q2FlbHVtPiBJIHRoaW5rIHRoZXkgYWxsIGNhbiBoYW5kbGUgcGFy
c2VfZGF0ZXRpbWUsIG5vdCBhbGwgREJzIGhhdmUgYSBkYXRlIGRhdGF0eXBlIHRob3VnaCwgYW5k
IGZvciBNU1NRTCB0aGUgZm9ybWF0IGlzIGRpZmZlcmVudCBmb3IgZGF0ZXRpbWUgdmVyc3VzIHNt
YWxsZGF0ZXRpbWUKMTU6MTAgPEBtc3Q+IHNvIC4uLiB3cml0ZSBhIERhdGVUaW1lOjpGb3JtYXQ6
Ok1TU1FMIHRoYXQgaGFuZGxlcyBpdD8KMTU6MTEgPEBtc3Q+IG9yIHBhdGNoIEZvcm1hdDo6U3Ry
cHRpbWUgdG8gcHJvdmlkZSB0aGUgZXh0cmEgbWV0aG9kcwoxNToxMSAtIS0gY2dnb2ViZWwgW35n
Z29lYmVsQGMtMjQtMzAtOTgtMjI2LmhzZDEuZ2EuY29tY2FzdC5uZXRdIGhhcyBqb2luZWQgI2Ri
aXgtY2xhc3MKMTU6MTEgPEBtc3Q+IHRoZSB3aG9sZSBwb2ludCBvZiBqdXN0IGNhbGxpbmcgYSBk
YXRldGltZSBwYXJzZXIgY2xhc3MKMTU6MTEgPEBtc3Q+IHdhcyB0aGF0IERCSXg6OkNsYXNzIGlz
IHN1cHBvc2VkIHRvIG91dHNvdXJjZSB0aGUgZGF0ZXRpbWUgcGFyc2luZyB0byBDUEFOCjE1OjEx
IDxDYWVsdW0+IHRoYXQgd29uJ3Qgd29yayBiZWNhdXNlIHRoZSBmb3JtYXRzIGFyZSBkaWZmZXJl
bnQgZGVwZW5kaW5nIG9uIHRoZSBkcml2ZXIKMTU6MTEgLSEtIGZoZWxtYmVfXyBbfmZoZWxtYmVy
Z0A5MS0xMTUtMTc0LTU1LmFkc2wuaGlnaHdheS50ZWxla29tLmF0XSBoYXMgam9pbmVkICNkYml4
LWNsYXNzCjE1OjExIDxDYWVsdW0+IGNvbm5lY3RpbmcgdGhyb3VnaCBEQkQ6OlN5YmFzZSwgZGVw
ZW5kaW5nIG9uIHdoYXQgb3B0aW9ucyB5b3UgdXNlZCB0b28sIHdpbGwgaGF2ZSBkaWZmZXJlbnQg
Zm9ybWF0cyB0aGFuIE9EQkMKMTU6MTEgPEBtc3Q+IHdlbGwsIGZpZ3VyZSBvdXQgc29tZXRoaW5n
IHRoYXQgd2lsbCB3b3JrLCBnZXQgQ1BBTiBmaXhlZCwgdGhlbiB3ZSBjYW4gb3V0c291cmNlIHRv
IHRoZSBmaXhlZCB2ZXJzaW9uCjE1OjEyIDxAbXN0PiByaWdodCwgc28gd2UgYWxsb3cgZm9yIGEg
ZGF0ZXRpbWUgcGFyc2VyIGNsYXNzLCBhbmQgY29uc3RydWN0b3IgYXJncwoxNToxMiA8QG1zdD4g
YW5kIHdlIGZpeCBzdHJwdGltZSBzbyBpdCB3b3JrcwoxNToxMiA8Q2FlbHVtPiBmaXggc3RycHRp
bWUgaG93CjE1OjEyIDxAbXN0PiBzbyBJIHN0aWxsIGRvbid0IHVuZGVyc3RhbmQgd2h5IERCSXg6
OkNsYXNzIHNob3VsZCBiZSBnZW5lcmF0aW5nIGludGVybmFsIGNsYXNzZXMKMTU6MTIgPEBtc3Q+
IEkgZG9uJ3Qga25vdywgeW91IHN0aWxsIGRpZG4ndCBnaXZlIG1lIGEgc3BlYyBmb3IgYWxsIHRo
ZSBvcHRpb25zCjE1OjEzIDxAbXN0PiB0aGUgU3liYXNlL09EQkMgdGhpbmcgaXMgdGhlIHNvcnQg
b2YgL2FjaGlldmUgeW91IG5lZWQgdG8gZG9jdW1lbnQKMTU6MTMgPEBtc3Q+IG9uY2UgeW91IGhh
dmUsIHdlIGNhbiByZXZpc2l0IGl0CjE1OjEzIDxDYWVsdW0+IHdoYXQgZG8geW91IG1lYW4gYWxs
IHRoZSBvcHRpb25zCjE1OjEzIDxDYWVsdW0+IElDOjpEVCBjYWxscyBwYXJzZV8kZGF0YV90eXBl
CjE1OjEzIDxAbXN0PiBmdWNrIHdoYXQgSUM6OkRUIGRvZXMKMTU6MTMgPEBtc3Q+IEkgZG9uJ3Qg
ZnVja2luZyBjYXJlCjE1OjEzIDxAbXN0PiB0aGF0J3Mgbm90IHJlbGV2YW50LCBhdCBhbGwKMTU6
MTQgPEBtc3Q+IElDOjpEVCBhbmQgdGhlIFN0b3JhZ2U6OiogY2xhc3NlcyBhcmUgaW4gdGhlIHNh
bWUgZnVja2luZyBkaXN0CjE1OjE0IDxDYWVsdW0+IG9mIGNvdXJzZSBub3QsIHlvdSBqdXN0IGZl
ZWwgbGlrZSBiZWluZyBhIGRpY2sgYW5kIGdpdmluZyBtZSBzaGl0CjE1OjE0IDxAbXN0PiB3ZSBj
YW4gY2hhbmdlIGJvdGggaWYgd2UgbmVlZCB0bwoxNToxNCA8QG1zdD4gd2hhdCBJIG5lZWQgaXMg
YSAqU1BFQyoKMTU6MTQgPEBtc3Q+IGkuZS4gYSBsaXN0IG9mIHRoZSBkaWZmZXJlbnQgdXNlIGNh
c2VzIHlvdSd2ZSBlbmNvdW50ZXJlZAoxNToxNCA8QG1zdD4gc28gaW5zdGVhZCBvZiBhZGRpbmcg
eWV0IGFub3RoZXIgbGF5ZXIgb2YgaGFja3MKMTU6MTQgPEBtc3Q+IHdlIGNhbiBhY3R1YWxseSB1
bmRlcnN0YW5kIHRoZSBwcm9ibGVtIHNwYWNlLCBhbmQgZmlndXJlIG91dCBhIC1nb29kLSBzb2x1
dGlvbiBmb3IgaXQKMTU6MTQgPENhZWx1bT4gSSBkb24ndCBzZWUgd2h5IEkgaGF2ZSB0byBkbyBh
bGwgdGhhdCB3b3JrIGZvciBhIG1ldGhvZCBvbmx5IEkgdXNlCjE1OjE1IDxAbXN0PiBlaD8KMTU6
MTUgPENhZWx1bT4gSSB3cm90ZSBhbGwgdGhlIGR0IHBhcnNlcnMKMTU6MTYgLSEtIGZoZWxtYmVy
XyBbfmZoZWxtYmVyZ0A5MS0xMTUtMTc0LTU1LmFkc2wuaGlnaHdheS50ZWxla29tLmF0XSBoYXMg
cXVpdCBbUGluZyB0aW1lb3V0OiAzNjAgc2Vjb25kc10KMTU6MTYgPEBtc3Q+IHlvdSBkaWRuJ3Qg
d3JpdGUgRGF0ZVRpbWU6OkZvcm1hdDo6TXlTUUwKMTU6MTYgPEBtc3Q+IG9yIDo6U1FMaXRlCjE1
OjE2IDxDYWVsdW0+IG5vLCBJIG1lYW4gdGhlIG9uZXMgaW4gREJJQwoxNToxNiA8QG1zdD4gb3Ig
OjpQZwoxNToxNyA8Q2FlbHVtPiBJIHdyb3RlIDo6U3liYXNlIHRob3VnaAoxNToxNyA8QG1zdD4g
eWVzLCBidXQgSSB3YW50IHRvIHByb2R1Y2UgYSBzYW5lIHNvbHV0aW9uIHRoYXQgZW5jb21wYXNz
ZXMgYWxsIG9mIHRoZSBwcm9ibGVtIHNwYWNlCjE1OjE3IDxAbXN0PiBEQkl4OjpDbGFzcyBoYXMg
LWFsd2F5cy0gdHJpZWQgdG8gc29sdmUgcHJvYmxlbXMgYXMgZ2VuZXJhbGx5IGFzIHBvc3NpYmxl
CjE1OjE3IDxDYWVsdW0+IHRoYXQncyBqdXN0IGdlbmVyaWMgZm9yICJmdWNrIHlvdSBJIGZlZWwg
bGlrZSBiZWluZyBhIGRpY2sgc28gSSB3b24ndCBtZXJnZSB5b3VyIGNvZGUiCjE1OjE4IDxAbXN0
PiBubywgaXQgaXNuJ3QuIGl0J3MgIkknO20gbm90IG1lcmdpbmcgdGhpcyBzaGl0dHkgZnVja3N0
dXBpZCBoYWNrIG5vIG1hdHRlciBob3cgYmlnIGEgdGFudHJ1bSB5b3UgdGhyb3cgeW91IGxpdHRs
ZSBzaGl0LCBwbGVhc2UgdHJ5IGFjdGluZyBsaWtlIGFuIGFkdWx0IGFuZCBsZXR0aW5nIG1lIGhl
bHAgeW91IGRvIGl0IHByb3Blcmx5IgoxNToxOCA8Q2FlbHVtPiBvaCBub3cgSSdtIGEgImxpdHRs
ZSBzaGl0IiB5b3UncmUgdGhlIDIzIHllYXIgb2xkCjE1OjE5IDxAbXN0PiBub3QgZm9yIHNvbWUg
eWVhcnMuCjE1OjE5IDxAbXN0PiB5b3VyIGJyYW5jaGVzIHdvdWxkbid0IGVuZCB1cCBseWluZyBh
cm91bmQgZm9yIDYgbW9udGhzIGlmIHlvdSB0b29rIGEgbGl0dGxlIG1vcmUgdGltZSB0byBnZXQg
dGhlbSByaWdodCBpbiB0aGUgZmlyc3QgcGxhY2UsIGJ5IHRoZSB3YXkKMTU6MjAgPEBtc3Q+IHRo
IGZhY3QgeW91IGRvbid0IGFuZCB0aGVuIGRlY2lkZSB0byBpbnRlcnByZXQgImhlcmUgaXMgYSBw
cm9ibGVtIiBhcyAiZnVjayB5b3UiIGlzIHdoYXQgbWFrZXMgaXQgdGFrZXMgc28gbG9uZwoxNToy
MCA8QG1zdD4gc2luY2UgeW91IG1ha2UgaXQgaW5jcmVkaWJseSBoYXJkIHdvcmsgdG8gZ2V0IGNv
bXBldGVudCBjb2RlIG91dCBvZiB5b3UKMTU6MjAgLSEtIGZoZWxtYmVfXyBbfmZoZWxtYmVyZ0A5
MS0xMTUtMTc0LTU1LmFkc2wuaGlnaHdheS50ZWxla29tLmF0XSBoYXMgcXVpdCBbUmVtb3RlIGhv
c3QgY2xvc2VkIHRoZSBjb25uZWN0aW9uXQoxNToyMCA8QG1zdD4gdGhlIGNob2ljZSBpcyB2ZXJ5
IG11Y2ggeW91cnMgaGVyZSAtIGxldCBtZSBoZWxwIHlvdSBkbyBpdCBwcm9wZXJseSAuLi4gb3Ig
ZG9uJ3QgZG8gaXQgYXQgYWxsLCBiZWNhdXNlIEkgd29uJ3QgbWVyZ2Ugc2hpdC4KMTU6MjAgPENh
ZWx1bT4geWVzIGFuZCB5b3VyIGNvZGUgaXMgYWx3YXlzIHJpZ2h0IHRoZSBmaXJzdCB0aW1lCjE1
OjIxIDxDYWVsdW0+IHdoYXQgdGhlIGZ1Y2sgZG8geW91IHdhbnQgaW4gYSAic3BlYyIKMTU6MjEg
PEBtc3Q+IGEgbGlzdCBvZiBvdXIgY3VycmVudCBkYXRldGltZSBwYXJzaW5nIGFuZCBmb3JtYXR0
aW5nIHJlcXVpcmVtZW50cyBhbmQgaG93IHRoZXkncmUgY3VycmVudGx5IGltcGxlbWVudGVkCjE1
OjIxIDxDYWVsdW0+IGFuZCB3aHkgc2hvdWxkIEkgd2FzdGUgdGltZSBvbiB0aGlzIHJhdGhlciB0
aGFuIGNvbnRpbnVlIHdyaXRpbmcgdWdseSBpbmxpbmUgcGFyc2VyIGNsYXNzZXMgYmVjYXVzZSB5
b3Ugd29uJ3QgbWVyZ2UgbXkgYnJhbmNoCjE1OjIxICAqIGRhbXMgeWF3bnMKMTU6MjIgPEBtc3Q+
IGJlY2F1c2UgSSB3b24ndCBiZSBtZXJnaW5nIGFub3RoZXIgdWdseSBpbmxpbmUgcGFyc2VyIGNs
YXNzIGVpdGhlcgoxNToyMiA8QG1zdD4gSSB3YW50IHRob3NlIG91dCBvZiBjb3JlLgoxNToyMiA8
QG1zdD4gcmliYXN1c2hpIG1pZ2h0IGhhdmUgbGV0IHlvdSBtZXJnZSB0aGlzLCBidXQgSSB3b24n
dCwgYmVjYXVzZSBJIHdhbnQgYSBjb2RlYmFzZSB0aGF0IGRvZXNuJ3QgdGFrZSBhZ2VzIHRvIGRv
IGEgYnJhbmNoIHJldmlldyBvbgoxNToyMiA8QG1zdD4gYW5kIHRoYXQgbWVhbnMgZW5mb3JjaW5n
IGEgaGlnaGVyIHN0YW5kYXJkCjE1OjIyIDxAbXN0PiBvbmNlIHdlJ3ZlIGRvbmUgdGhhdCBmb3Ig
YSB3aGlsZSwgcmV2aWV3cyBhbmQgbWVyZ2VzIHdpbGwgc3BlZWQgdXAKMTU6MjMgPENhZWx1bT4g
b2sgSSB3YW50ZWQgdG8gbWFrZSBhIHV0aWxpdHkgbWV0aG9kIGJ1dCBub3cgSSBoYXZlIHRvIGRv
IGEgcmVzZWFyY2ggcHJvamVjdD8gd2h5IHdvdWxkIEkgd2FzdGUgdGltZSBvbiB0aGF0PwoxNToy
MyA8QG1zdD4gYmVjYXVzZSB3ZSB0cnkgdG8gc29sdmUgcHJvYmxlbXMgZ2VuZXJhbGx5CjE1OjI0
IDxAbXN0PiBpdCBpc24ndCB0aW1lIHdhc3RlZCwgaXQncyB0aW1lIGludmVzdGVkIHRvIGdldCBh
IGRlY2VudCBjb2RlYmFzZQoxNToyNSA8Q2FlbHVtPiBvaywgd2VsbCwgSSdtIGdvaW5nIHRvIHdh
aXQgdG8gc2VlIHdoYXQgaGFwcGVucyB0byBteSBvdGhlciB0d28gYnJhbmNoZXMgYmVmb3JlIEkg
ZG8gYW55IG1vcmUgd29yayBvbiBkYmljCjE1OjI1IDxDYWVsdW0+IGl0IHNlZW1zIGxpa2VseSBJ
IHdvbid0IGRvIGFueW1vcmUgd29yayBvbiBkYmljIGF0IGFsbAoxNToyNiA8QG1zdD4gSSd2ZSBq
dXN0IHNwZW50IDI1IG1pbnV0ZXMgZGlzY3Vzc2luZyB0aGlzIHdpdGggeW91IHRvIHRyeSBhbmQg
Z2V0IHRoZSBzdHJwdGltZSBzdHVmZiB0byBiZSBhYmxlIHRvIG1vdmUgZm9yd2FyZHMKMTU6MjYg
PENhZWx1bT4gc29ycnkgZm9yIHdhc3RpbmcgeW91ciBwcmVjaW91cyB0aW1lCjE1OjI2IDxAbXN0
PiB1bnRpbCB5b3UgcHJvZHVjZSBhIHJlc3VsdCBmcm9tIHRoaXMsIEkgd29uJ3QgYmUgbG9va2lu
ZyBhdCBhbnltb3JlIGJyYW5jaGVzIG9mIHlvdXJzCjE1OjI3IDxAbXN0PiBJIG5lZWQgdG8ga25v
dyB5b3UgYWN0dWFsbHkgY2FyZSBhYm91dCB3cml0aW5nIC1nb29kLSBjb2RlCjE1OjI3IDxAbXN0
PiByYXRoZXIgdGhhbiB0dXJuaW5nIERCSVg6OkNsYXNzIGludG8gRm9ybU1haWwuUEwgb25lICJn
b29kIGVub3VnaCBoYWNrIiBhdCBhIHRpbWUKMTU6MjcgPENhZWx1bT4gYmVjYXVzZSBJIG9ubHkg
d3JpdGUgYmFkIGNvZGUsIHJpZ2h0CjE1OjI3IDxAbXN0PiB5b3UgZG9uJ3Qgc2VlbSB0byB3YW50
IHRvIGxpc3RlbiB3aGVuIEkgcG9pbnQgb3V0IHNvbWV0aGluZyAtaXMtIGJhZAoxNToyNyA8Q2Fl
bHVtPiBvaywgd2UncmUgZG9uZSB0aGVuLiBJJ2xsIGp1c3QgYmUgd29ya2luZyBvbiBzbCB3aGVy
ZSBJIGRvbid0IGhhdmUgdG8gdGFrZSBhbnkgc2hpdCBmcm9tIGFueW9uZS4KMTU6MjcgPENhZWx1
bT4gbGV0J3MganVzdCBzYXkgSSBkaXNhZ3JlZQoxNToyOCA8QG1zdD4geW91IHdhbnQgdGhlIGZh
c3QgaGFjayBpbnN0ZWFkIG9mIHRoZSBkb25lIHByb3Blcmx5LiBJJ20gYXdhcmUuCjE1OjI4IDxA
bXN0PiB0aGF0IGNhbid0IGJlIGRvbmUgaW4gY29yZS4KMTU6MjggPEBtc3Q+IHlvdSdyZSB3ZWxj
b21lIHRvIHByb3Bvc2UgZGVzaWducyB0byBtYWtlIGl0IHBvc3NpYmxlIHRvIGRvIGEgZmFzdCBo
YWNrIC1vdXRzaWRlLSBjb3JlLgoxNTozMCA8ZGFtcz4gQ2FlbHVtOiBtYXliZSB5b3Ugc2hvdWxk
IHBhdXNlIGZvciAxIG1pbiwgdGFrZSBhIGRlZXAgYnJlYXRoIGFuZCBjb25jZW50cmF0ZSBvbiB0
aGUgdGVjaG5pY2FsIHN0dWZmICBtc3Qgc2F5cywgbm90IGhvdyBoZSBzYXlzIGl0LiBmb3JnZXQg
YWJvdXQgaGlzIG1hbmVycyBmb3IgNSBtaW4uIE1zdCA6IG1heWJlIHlvdSBjYW4gc3VtbWFyaXpl
IGluIDIgc2VudGVuY2Ugd2hhdCBzaG91bGQgYmUgZG9uZSwgaG93IG11Y2ggZWZmb3J0IGl0IHdv
dWxkIHJlcXVpcmUsIGFuZCB3aGF0IGJlbmVmaXQgLWJlc2lkZXMgcHJpZGUtIGl0IHdvdWxkIGdp
dmUgPwoxNTozMCAtIS0gZ2hlbnJ5IFt+Z2hlbnJ5QGdoZW5yeS5wbHVzLmNvbV0gaGFzIGpvaW5l
ZCAjZGJpeC1jbGFzcwoxNTozMiA8ZGFtcz4gc29ycnkgaWYgdGhpcyBsYW1lIG1lZGlhdGlvbiBh
dHRlbXB0IGRvZXNuJ3QgaGVscCA6KQoxNTozMyA8QG1zdD4gaXQgd291bGQgbWVhbiB0aGF0IHdl
IGNvdWxkIG91dHNvdXJjZSBEYXRlVGltZSBoYW5kbGluZyB0byBDUEFOIGFnYWluCjE1OjMzIDxA
bXN0PiB3aGljaCB3b3VsZCB0aGVuIG1lYW4gbW9kdWxlcyB0aGF0IGRvbid0IGhhdmUgdG8gYmUg
c2hpcHBlZCBpbiBjb3JlCjE1OjMzIDxAbXN0PiBEQkl4OjpDbGFzcyBpcyBub3QgYSBkYXRldGlt
ZSBwYXJzZXIuCjE1OjM1IDxDYWVsdW0+IGRhbXM6IGJhc2ljYWxseSB3aGF0IG1zdCBzYXlzIGlz
IHRvdGFsIGJ1bGxzaGl0LCBoZSBqdXN0IHdhbnRlZCB0byBiZSBhIGRpY2sgYW5kIG5vdCBtZXJn
ZSBteSBicmFuY2ggYW5kIGlzIG5vdyBqdXN0IG1ha2luZyB1cCBleGN1c2VzIGZvciBkb2luZyBz
bwoxNTozNyA8ZGFtcz4gQ2FlbHVtOiBvZiBjb3Vyc2UgaGUgaXMgISBoZSAqaXMqIGFuIGFzc2hv
bGUgYW5kIHNoaXQsIEkgYWdyZWUgd2l0aCB5b3UuIEhvd2V2ZXIsIGluIGFkZGl0aW9uIHRvIHRo
YXQsIGhlIGdlbmVyYWxseSBoYXMgZ29vZCB0ZWNobmljYWwgcmVhc29ucyB0b28uIEl0J3MgdmVy
eSBoYXJkIHRvIHNlcGVyYXRlIHRoZSAyLCBidXQgaXQncyB3b3J0aHdoaWxlIHRvIGRvIHNvLiBT
byBsZXQncyBmb2N1cyBvbiB0aGUgdGVjaG5pY2FsIGlzc3VlIG9ubHkuCjE1OjM3IDxkYW1zPiBD
YWVsdW06IEknbSBzdXJlIGlmIHlvdSBzdGFydCBzb21lIHRoZSBvdXRzb3VyY2luZywgeW91IHdv
bid0IGJlIGFsb25lIGRvaW5nIHNvLCBhbmQgcGVvcGxlIG1heSBndWlkZSwgaGVscCBhbmQgY29k
ZSBvbiB0aGF0LiBTbyB0aGUgQWRkaXRpb25hbCBjb2RpbmcgZWZmb3J0IHNob3VsZCBiZSBtaW5p
bWFsIG9yIG5vbiBleGlzdGFudAoxNTozOCA8ZGFtcz4gaXMgdGhlcmUgYW55dGhpbmcgZWxzZSB0
aGF0IG1ha2VzIHlvdSByZWx1Y3RhbnQgdG8gb3V0c291cmNpbmcgRGF0ZVRpbWUgaGFuZGxpbmcg
ZnJvbSBEQklDID8gdW5sZXNzIHlvdSBkb24ndCBhZ3JlZSBpdCdzIGEgZ29vZCBpZGVhIC0gaW4g
dGhpcyBjYXNlLCB3aHkgPwoxNTozOCA8Q2FlbHVtPiBkYW1zOiBqdXN0IGEgY291cGxlIG1vbnRo
cyBhZ28gaGUgd2FzIG1ha2luZyBteSBsaWZlIG1pc2VyYWJsZSBiZWNhdXNlIEkgZGlkbid0IHdh
bnQgdG8gY2hhbmdlIGEgZGVmYXVsdCBpbiBzbCBhbmQgaGUgd2FzIHRocmVhdGVuaW5nIHRvICJm
aW5kIGEgbmV3IG1haW50YWluZXIiIChsaWtlIHRoYXQncyBnb2luZyB0byBoYXBwZW4pIGhpcyB0
ZWNobmljYWwgcmVhc29uIGZvciBjaGFuZ2luZyB0aGUgb3B0aW9uPyAiaXQgd2FzIGxvbmciICJp
dCBtaWdodCBjYXVzZSBiYWQgZGF0YSAoZXZlbiB0aG91Z2ggaGUgZGlkbid0IHNheSBob3csIGJl
Y2F1c2UgdGhhdCdzIGltcG9zc2libGUpIgoxNTozOSAtIS0gZHJvc3MgW35kcm9zc0Bwb29sLTE3
My03NS0zNS0yNDcucGl0YnBhLmZpb3MudmVyaXpvbi5uZXRdIGhhcyBqb2luZWQgI2RiaXgtY2xh
c3MKMTU6MzkgPENhZWx1bT4gZGFtczogdGhlIGR0IGZvcm1hdCBkZXBlbmRzIG9uIHRoZSBkcml2
ZXIgYW5kIHRoZSBvcHRpb25zIHlvdSBnaXZlIHRvIHNhaWQgZHJpdmVyCjE1OjQxIDxDYWVsdW0+
IGRhbXM6IHNvIGl0J3MgcGVyZmVjdGx5IGxvZ2ljYWwgdG8gZGVmaW5lIHRoZSBzdHJwdGltZSBm
b3JtYXQgaW4gdGhlIGRyaXZlcgoxNTo0MSAtIS0gbXJmIFt+bXJmQDQ2LjQzLjQ5LjEwNV0gaGFz
IGpvaW5lZCAjZGJpeC1jbGFzcwoxNTo0MyA8QG1zdD4gQ2FlbHVtOiBJJ20gYWZyYWlkIEkgZG9u
J3QgbWFrZSB1cCBleGN1c2VzIGZvciB0aGluZ3MuCjE1OjQzIDxtY2RhdmU+IGNhZWx1bTogIEl0
IHNlZW1zIHRoYXQgdGhlIHN1Z2dlc3Rpb24gaXMgb25lIG5lZWRzIHRvIGZpbmQgYSB3YXkgdG8g
Z2V0IHRoZSBhcHByb3ByaWF0ZSBvcHRpb25zIG91dCBvZiB0aGUgZHJpdmVyIGFuZCBpbnRvIHRo
ZSByaWdodCBEVCBwYXJzZXIuICBUbyBwYXJhcGhyYXNlLiAgVGhhdCBkb2Vzbid0IHNvdW5kIGxp
a2UgYSB0b3RhbGx5IGR1bWIgc3VnZ2VzdGlvbi4gIE1heWJlIG5vdCB0aGUgb25seSB3YXkgdG8g
ZG8gaXQuCjE1OjQzIDxAbXN0PiBDYWVsdW06IGFuZCB0aGUgb2JzZXNzaW9uIHdpdGggY29ycmVj
dG5lc3MgdGhhdCBjaGFyYWN0ZXJpc2VkIGVhcmx5IERCSUMgd29yayBsZWQgYnkgbWUgaXMgd2hh
dCBnYXZlIHVzIGUuZy4gcnN1bHRzZXQgY2hhaW5pbmcgLSB3aGljaCBmZWxsICpieSBhY2NpZGVu
dCogb3V0IG9mIHdvcmtpbmcgb24gdGhlIGRlc2lnbgoxNTo0NSA8ZGFtcz4gd2hhdCA/IHlvdSBk
aWRuJ3QgcGxhbiB0aGF0IHVwZnJvbnQgPyBJIGRpZG4ndCBrbm93IHRoYXQuIEl0J3MgdGhlIGZp
cnN0IHRoaW5nIEkgd291bGQgaGF2ZSBwdXQgaW4gYSBPUk0gZGVzaWduIHNwZWMgOikKMTU6NDUg
PGRhbXM+IHlldCBJIHdvdWxkIGhhdmUgbWlzc2VkIHRoZSBvdGhlciA5MCUgYXdlc29tZSBpZGVh
cwoxNTo0NSA8QG1zdD4gZGFtczogaXQgd2Fzbid0IGEgZmVhdHVyZSBhdmFpbGFibGUgaW4gYW55
IG9mIHRoZSBleGlzdGluZyBPUk1zIEkgbG9va2VkIGF0IGF0IHRoZSB0aW1lCjE1OjQ2IDxAbXN0
PiBldmVuIG5vdywgd2UncmUgdGhlIG9ubHkgcGVybCBPUk0gdG8gZG8gaXQgbXVjaAoxNTo0NyAt
IS0gY2dnb2ViZWwgW35nZ29lYmVsQGMtMjQtMzAtOTgtMjI2LmhzZDEuZ2EuY29tY2FzdC5uZXRd
IGhhcyBxdWl0IFtQaW5nIHRpbWVvdXQ6IDM2MCBzZWNvbmRzXQoxNTo0OCA8ZGFtcz4gaXQncyBh
IGRhbW4gZ29vZCBmZWF0dXJlIGFueXdheQoxNTo0OSAtIS0gbXN0IGNoYW5nZWQgdGhlIHRvcGlj
IG9mICNkYml4LWNsYXNzIHRvOiBHaXQtc2Vhc29uIGlzIE9QRU4hIEFzayBhYm91dCAnZGJpYyBj
b21taXQ/JywgYW5kIGdpdCBidXN5IDopIHwgREJJQzogMC4wODE5OSB8IE5PIFBBU1RJTkcsIHVz
ZSBodHRwOi8vcGFzdGUuc2NzeXMuY28udWsgfCBRdWVyeSBzeW50YXggaXMgcGVybGRvYyBTUUw6
OkFic3RyYWN0IHwgIm1hbnlfdG9fbWFueSIgaXMgbm90IGEgcmVsYXRpb25zaGlwIHwgREJJQ19U
UkFDRT0xIHwgREJJQy9EQklDU0wvQzo6TSBSTSAtIHRlbXBvcmFyaWx5IG1zdCB8IGNvbHVtbnMg
PiBzZWxlY3QvYXMgfCBNeVNRTCAtIGJyb3VnaHQgdG8geW91IGJ5IHJldGFyZG8gdGhlIHN5cGhp
bGl0aWMgY2xvd24gCjE1OjUwIDxAbXN0PiBDYWVsdW06IEknbGwgYmUgZG9pbmcgcmVsZWFzZSBt
YW5hZ2VyIGR1dGllcyB3aXRoIHJldmlldyBmb3IgU2NoZW1hOjpMb2FkZXIgYW5kIEM6Ok06OkRC
SUM6OlNjaGVtYSBmb3IgdGhlIG1vbWVudDsgdW50aWwgd2UgZ2V0IGludG8gYSBkZWNlbnQgcmV2
aWV3IHJoeXRobSB0aGVyZSdzIG5vIG90aGVyIHdheSB0byBhdm9pZCBjb21wcm9taXNpbmcgdGhl
IHN0YWJpbGl0eSBvZiB0aGUgcGFja2FnZXMuCjE1OjUwIDxDYWVsdW0+IG1zdDogd2hhdCBpcyB5
b3VyIGNsYWltIHRvIHNsPyB5b3UgbmV2ZXIgd3JvdGUgYW55IGNvZGUgZm9yIGl0CjE1OjUwIDxA
bXN0PiBDYWVsdW06IHJpZ2h0IG5vdywgbXkgY2xhaW0gaXMgdGhhdCBJIGhhdmUgY28tbWFpbnQg
YW5kIHlvdSBkb24ndC4KMTU6NTEgLSEtIGNnZ29lYmVsIFt+Z2dvZWJlbEBjLTI0LTMwLTk4LTIy
Ni5oc2QxLmdhLmNvbWNhc3QubmV0XSBoYXMgam9pbmVkICNkYml4LWNsYXNzCjE1OjUxIDxAbXN0
PiBJJ20gdW5pbnRlcmVzdGVkIGluIGFyZ3VpbmcgYWJvdXQgY29kZSB2ZXJzdXMgZGVzaWduIHZl
cnN1cyBvdGhlciB0eXBlcyBvZiBpbnB1dC4KMTU6NTEgPENhZWx1bT4gbXN0OiBhYnVzaW5nIHlv
dXIgY3BhbiBhZG1pbiBwcml2aWxlZ2VzPyB0aGF0J3MganVzdCBhd2Vzb21lCjE1OjUxIDxDYWVs
dW0+IG1zdDogZmluZSwgSSdsbCBiZSByZWxlYXNpbmcgaXQgdW5kZXIgYSBkaWZmZXJlbnQgbmFt
ZQoxNTo1MiA8QG1zdD4gbWFraW5nIHVzZSBvZiB0aGUgZmFjdCB0aGF0IEkgaGF2ZSBwZXJtaXNz
aW9uIHRvIHB1bGwgdGhlIG5lY2Vzc2FyeSBrbm9icywgYmVjYXVzZSBJJ20gbm90IHRoZSBvbmx5
IG9uZSB3aG8ncyBiZWVuIGNvbmNlcm5lZCBhYm91dCB5b3VyIGFiaWxpdHkgdG8gd29yayB3aXRo
IG90aGVyczsgSSdtIGp1c3QgdGhlIG9ubHkgb25lIHdpdGggYSB0aGljayBlbm91Z2ggc2tpbiB0
byBzdGlsbCBiZSB0cnlpbmcKMTU6NTIgPEBtc3Q+IHlvdSd2ZSBwaXNzZWQgb2ZmIGV2ZXJ5Ym9k
eSBlbHNlIHRvbyBtdWNoIGZvciB0aGVtIHRvIHRoaW5rIHlvdSdyIHdvcnRoIGJvdGhlcmluZyB3
aXRoCjE1OjUzIDxDYWVsdW0+IHJlYWxseT8gd2hvIGRpZCBJIHBpc3Mgb2ZmCjE1OjUzIDxAbXN0
PiBtZSwgSSB0aGluayB3ZSdyZSBib3RoIGRpY2tzLCBhbmQgSSdkIGxpa2UgeW91ciBjb2RlIHN0
aWxsIHRvIGdvIGludG8gdGhlIHByb2plY3RzLCBiZWNhdXNlIHdoZW4geW91J3JlIGdvb2QgeW91
J3JlIGFjdHVhbGx5IGdvb2QuCjE1OjUzIDxDYWVsdW0+IHlvdSBzYWlkIEkgcGlzc2VkIG9mZiBl
dmVyeWJvZHkgYW5kIEkgY2FuJ3Qgd29yayB3aXRoIG90aGVycwoxNTo1MyA8QG1zdD4gSSBmaWd1
cmUgeW91IGNhbiB3b3JrIHdpdGggbWUsIHNpbmNlIEkgZG9uJ3QgYWN0dWFsbHkgY2FyZSBpZiB5
b3Uga2VlcCBjYWxsaW5nIG1lIGEgZGljawoxNTo1NCA8QG1zdD4gSSBqdXN0IGNhcmUgdGhhdCB0
aGUgcmlnaHQgY29kZSB0dXJucyB1cAoxNTo1NCAgKiBtc3Qgc2hydWdzCjE1OjU1IDxAbXN0PiB0
aGUgY2hvaWNlIGlzIHlvdXJzLCByZWFsbHkgLSBsZXQgbWUgaGVscCB5b3UgcHJvZHVjZSBzb21l
dGhpbmcgdGhhdCdzIHJlYWxseSBnb29kLCBvciBkb24ndAoxNTo1NSA8Q2FlbHVtPiB3aGF0IG90
aGVyIHBlb3BsZSBhcmUgY29uY2VybmVkIGFib3V0IG15IGFiaWxpdHkgdG8gbWFpbnRhaW4gc2w/
IHNob3VsZCBJIHRha2UgdGhpcyB1cCB3aXRoIG1vZHVsZXM/CjE1OjU2IDxAbXN0PiB3aHkgd291
bGQgeW91IHRha2UgaXQgdXAgd2l0aCBhbnlib2R5PyBJIGhhZCBwZXJtaXNzaW9uIHRvIGRvIHRo
aXMuCjE1OjU2IDxAbXN0PiBtb2R1bGVzQCBoYXMgbm8gcmlnaHQgdG8gaW50ZXJmZXJlCjE1OjU3
IC0hLSBjZ2dvZWJlbCBbfmdnb2ViZWxAYy0yNC0zMC05OC0yMjYuaHNkMS5nYS5jb21jYXN0Lm5l
dF0gaGFzIHF1aXQgW1BpbmcgdGltZW91dDogMzYwIHNlY29uZHNdCjE1OjU3IDxDYWVsdW0+IHlv
dSBoYXZlIHRoZSByaWdodCB0byB0YWtlIG92ZXIgb3RoZXIgcGVvcGxlJ3MgbW9kdWxlcyBhdCB3
aWxsPyBJIGRvbid0IHRoaW5rIHNvCjE1OjU3IDxAbXN0PiBJIGRvbid0LCBhbmQgSSBkaWRuJ3Qg
ZG8gdGhhdC4KMTU6NTggPEBtc3Q+IEkgbWVyZWx5IHJlbW92ZWQgb25lIHNwZWNpZmljIHNldCBv
ZiBjby1tYWludCBwcml2aWxpZ2VzLCBzb21ldGhpbmcgd2hpY2ggSSBhbHJlYWR5IGhhZCBwZXJt
aXNzaW9uIHRvIGRvIGlmIEkgYmVsaWV2ZWQgaXQgdG8gYmUgbmVjZXNzYXJ5CjE1OjU4IDxAbXN0
PiBJJ20gYWZyYWlkIHlvdXIgaW50cmFuc2lnZW5jZSBvdmVyIGNvbGxhYm9yYXRpb24gaGFzIGxl
ZCBtZSB0byBiZWxpZXZlIGl0IHdhcyBuZWNlc3NhcnkuCjE1OjU5IC0hLSBkamggW35kamhANDYu
NDMuNDkuMTA1XSBoYXMgam9pbmVkICNkYml4LWNsYXNzCjE1OjU5IDxDYWVsdW0+IHllYWggSSBv
bmx5IHdyb3RlIG1vc3Qgb2YgaXQgYW5kIGhhdmUgYmVlbiBtYWludGFpbmluZyBpdCBmb3IgNCB5
ZWFycywgb2YgY291cnNlIHRoYXQgZG9lc24ndCBtYXR0ZXIKMTY6MDAgLSEtIGRqaCBbfmRqaEA0
Ni40My40OS4xMDVdIGhhcyBxdWl0IFtdCjE2OjAwIDxAbXN0PiBJIHRoaW5rIG5vdyBtaWdodCBi
ZSBhIGdvb2QgdGltZSBmb3IgeW91IHRvIGdpdmUgc2VyaW91cyB0aG91Z2h0IGFzIHRvIHdoZXRo
ZXIgeW91IHdhbnQgdG8gc2hpcCBwcm9kdWN0aW9uIHF1YWxpdHkgY29kZSBhcyBwYXJ0IG9mIGEg
dGVhbSwgb3IganVzdCBkbyB5b3VyIG93biB0aGluZyBpbiBhIHNlcGFyYXRlIG5hbWVzcGFjZQox
NjowMSA8QG1zdD4gYXQgdGhpcyBzdGFnZSBJJ20gb3BlbiB0byBlaXRoZXIsIHRob3VnaCBJJ2Qg
c3RpbGwgcHJlZmVyIHlvdSB0byBzdGF5IGhhY2tpbmcgb24gdGhlc2UgcHJvamVjdHMgaWYgcG9z
c2libGUKMTY6MDEgLSEtIGNnZ29lYmVsIFt+Z2dvZWJlbEBjLTI0LTMwLTk4LTIyNi5oc2QxLmdh
LmNvbWNhc3QubmV0XSBoYXMgam9pbmVkICNkYml4LWNsYXNzCjE2OjAxIDxDYWVsdW0+IGdvb2Qg
bHVjayBmaW5kaW5nIGEgbmV3IG1haW50YWluZXIgZm9yIHNsCjE2OjAyIDxAbXN0PiBpdCBjYW4g
c3RpbGwgYmUgeW91IGlmIHlvdSB3YW50CjE2OjAyIDxDYWVsdW0+IGJ1dCBJJ20gZ29pbmcgdG8g
d3JpdGUgdG8gbW9kdWxlcyBhbnl3YXkKMTY6MDIgPEBtc3Q+IEknbSBqdXN0IGdvaW5nIHRvIGRv
IHRoZSByZWxlYXNlIGN1dHRpbmcgZm9yIGEgYml0CjE2OjA2IC0hLSBkcGV0cm92XyBbYjIxYjc0
N2ZAaXJjaXA0Lm1pYmJpdC5jb21dIGhhcyBqb2luZWQgI2RiaXgtY2xhc3MKMTY6MDYgPEBtc3Q+
IENhZWx1bTogcmVhbGx5PwoxNjowNiA8QG1zdD4gZG8gSSByZWFsbHkgaGF2ZSB0byBzZW5kIG1h
aWwgZXhwbGFpbmluZyB3aGF0J3MgZ29pbmcgb24/IHRoZXNlIHRoaW5ncyBhcmUgbm9ybWFsbHkg
bm90IGRvbmUgYnkgeWVsbGluZyBmcm9tIHRoZSByb29mdG9wcywgZXNwZWNpYWxseSB3aGVuIHlv
dSBkb24ndCBhY3R1YWxseSBoYXZlIGEgY2FzZQoxNjowOSAtIS0gd2sgW35xdWFzc2VsQHNhLTg0
LTUyLTQ3LTIxMy5zYXR1cm4uaW5mb25ldC5lZV0gaGFzIGpvaW5lZCAjZGJpeC1jbGFzcwoxNjow
OSAgKiBtc3Qgc2hydWdzLCBzZW5kcyB0aGUgbWFpbCBqdXN0IGluIGNhc2UKMTY6MTEgLSEtIHBp
bmd1cDNybCBbfm5peHVzQEM4RUNEMUJFLmR5bmFtaWMuc2hkLnRlc2EubmV0LmJyXSBoYXMgam9p
bmVkICNkYml4LWNsYXNzCjE2OjE3IDxDYWVsdW0+IGFuZCBJJ20gZ29pbmcgdG8gYXR0YWNoIHRo
ZSBpcmMgbG9nCg==

--504fae70_79a1deaa_1f8--

