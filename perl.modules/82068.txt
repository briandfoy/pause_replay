Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:82068
Return-Path: <gnanaratne@alcatel-lucent.com>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Delivered-To: moderator for modules@perl.org
Received: (qmail 8796 invoked from network); 4 Sep 2012 14:40:14 -0000
Received: from x1.develooper.com (207.171.7.70)
  by x6.develooper.com with SMTP; 4 Sep 2012 14:40:14 -0000
Received: (qmail 7629 invoked by uid 225); 4 Sep 2012 14:40:14 -0000
Delivered-To: modules@perl.org
Delivered-To: modules@cpan.org
Received: (qmail 7625 invoked by uid 103); 4 Sep 2012 14:40:13 -0000
Received: from xx1.dev (10.0.100.115)
  by x1.dev with QMQP; 4 Sep 2012 14:40:13 -0000
Received: from localhost (HELO xx1.develooper.com) (127.0.0.1)
    by xx1.develooper.com (qpsmtpd/0.84/v0.84-36-g0b0e4e9) with ESMTP; Tue, 04 Sep 2012 07:40:13 -0700
Received: from xx1.develooper.com (xx1.develooper.com [127.0.0.1])
	by localhost (Postfix) with SMTP id C952F1210C8
	for <modules@cpan.org>; Tue,  4 Sep 2012 07:40:13 -0700 (PDT)
Received: from ihemail4.lucent.com (ihemail4.lucent.com [135.245.0.39])
	by xx1.develooper.com (Postfix) with ESMTP id AE7801210F1
	for <modules@cpan.org>; Tue,  4 Sep 2012 07:40:08 -0700 (PDT)
Received: from usnavsmail3.ndc.alcatel-lucent.com (usnavsmail3.ndc.alcatel-lucent.com [135.3.39.11])
	by ihemail4.lucent.com (8.13.8/IER-o) with ESMTP id q84Ee4wI001197
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=FAIL)
	for <modules@cpan.org>; Tue, 4 Sep 2012 09:40:04 -0500 (CDT)
Received: from umail.lucent.com (umail-ce2.ndc.lucent.com [135.3.40.63])
	by usnavsmail3.ndc.alcatel-lucent.com (8.14.3/8.14.3/GMO) with ESMTP id q84Ee3kM019358
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NOT)
	for <modules@cpan.org>; Tue, 4 Sep 2012 09:40:03 -0500
Received: from [135.185.93.115] (USNAVN0L023834.ih.lucent.com [135.185.93.115])
	by umail.lucent.com (8.13.8/TPES) with ESMTP id q84Ee0jH002542
	for <modules@cpan.org>; Tue, 4 Sep 2012 09:40:03 -0500 (CDT)
Message-ID: <504612C0.9050500@alcatel-lucent.com>
Date: Tue, 04 Sep 2012 09:40:00 -0500
User-Agent: Mozilla/5.0 (Windows NT 5.1; rv:13.0) Gecko/20120614 Thunderbird/13.0.1
MIME-Version: 1.0
To: modules@cpan.org
Subject: how to force perl:expect stdout put to display on perl::tk::Text
 window and still perl:Expect:expect to parse the output sting
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-Scanned-By: MIMEDefang 2.57 on 135.245.2.39
X-Scanned-By: MIMEDefang 2.64 on 135.3.39.11
X-PMX-Version: 5.6.1.2065439, Antispam-Engine: 2.7.2.376379, Antispam-Data: 2012.9.4.143027
X-PMX-Spam: Gauge=IIIIIIII, Probability=8%, Report='
 HTML_00_01 0.05, HTML_00_10 0.05, BODY_SIZE_5000_5999 0, BODY_SIZE_7000_LESS 0, DATE_TZ_NA 0, __ANY_URI 0, __CT 0, __CTE 0, __CT_TEXT_PLAIN 0, __FRAUD_CONTACT_NAME 0, __HAS_FROM 0, __HAS_MSGID 0, __MIME_TEXT_ONLY 0, __MIME_VERSION 0, __MOZILLA_MSGID 0, __PHISH_SPEAR_PASSWORD_1 0, __SANE_MSGID 0, __STOCK_PHRASE_7 0, __SUBJ_ALPHA_END 0, __SUBJ_ALPHA_START 0, __SUBJ_ALPHA_START_END 0, __TO_MALFORMED_2 0, __TO_NO_NAME 0, __URI_NO_MAILTO 0, __URI_NO_PATH 0, __URI_NO_WWW 0, __USER_AGENT 0, __zen.spamhaus.org_ERROR '
Approved: news@nntp.perl.org
From: gnanaratne@alcatel-lucent.com ("K.Gnanaratne")

Hi:
  I am trying use the following gui program to  let user to
login to a remote box dump the some process information.
What I wanted is that let the perl:expect:spawn session
stdout dump on the to TK:Text window. If I use tie to display
text on the  tk window,  the expect:spawn is failing. If I commected
out the tie command line the code works fine, bu t out put appears
on the unix shell window and not the perl:tk:text window.
How do I resolve this issue. Any help is greatly appreciated.

Below you can see the error and the code segment.

Thanks
Kohila Gnanaratne

Here is the error I get when stdout is tied to tk widow using ( tie 
*STDOUT, 'Tk::Text', $t;)

Tk::Error: Can't locate auto/Tk/Text/CLOSE.al in @INC (@INC contains: 
/usr/lib/perl5/site_perl/5.8.8/i386-linux-thread-multi 
/usr/lib/perl5/site_perl/5.8.7/i386-linux-thread-multi 
/usr/lib/perl5/site_perl/5.8.6/i386-linux-thread-multi 
/usr/lib/perl5/site_perl/5.8.5/i386-linux-thread-multi 
/usr/lib/perl5/site_perl/5.8.8 /usr/lib/perl5/site_perl/5.8.7 
/usr/lib/perl5/site_perl/5.8.6 /usr/lib/perl5/site_perl/5.8.5 
/usr/lib/perl5/site_perl 
/usr/lib/perl5/vendor_perl/5.8.8/i386-linux-thread-multi 
/usr/lib/perl5/vendor_perl/5.8.7/i386-linux-thread-multi 
/usr/lib/perl5/vendor_perl/5.8.6/i386-linux-thread-multi 
/usr/lib/perl5/vendor_perl/5.8.5/i386-linux-thread-multi 
/usr/lib/perl5/vendor_perl/5.8.8 /usr/lib/perl5/vendor_perl/5.8.7 
/usr/lib/perl5/vendor_perl/5.8.6 /usr/lib/perl5/vendor_perl/5.8.5 
/usr/lib/perl5/vendor_perl /usr/lib/perl5/5.8.8/i386-linux-thread-multi 
/usr/lib/perl5/5.8.8 .) at 
/usr/lib/perl5/site_perl/5.8.8/i386-linux-thread-multi/Tk/Derived.pm 
line 469
  Carp::croak at /usr/lib/perl5/5.8.8/Carp.pm line 269
  AutoLoader::AUTOLOAD at /usr/lib/perl5/5.8.8/AutoLoader.pm line 112
  Tk::Derived::Delegate at 
/usr/lib/perl5/site_perl/5.8.8/i386-linux-thread-multi/Tk/Derived.pm 
line 469
  Tk::Widget::__ANON__ at 
/usr/lib/perl5/site_perl/5.8.8/i386-linux-thread-multi/Tk/Widget.pm line 322
  Expect::spawn at /usr/lib/perl5/vendor_perl/5.8.8/Expect.pm line 163
  main::doInstallation at ./xx.pl line 61
  Tk callback for .frame.button
  Tk::__ANON__ at 
/usr/lib/perl5/site_perl/5.8.8/i386-linux-thread-multi/Tk.pm line 247
  Tk::Button::butUp at 
/usr/lib/perl5/site_perl/5.8.8/i386-linux-thread-multi/Tk/Button.pm line 111
  <ButtonRelease-1>
  (command bound to event)
X Error of failed request:  BadGC (invalid GC parameter)
   Major opcode of failed request:  60 (X_FreeGC)
   Resource id in failed request:  0x6000028
   Serial number of failed request:  768
   Current serial number in output stream:  567



Here is the code of the program:
#!/usr/bin/perl  -w - for linux with debugging on

use Shell qw(uname pwd);
use Tk;
use Expect;
#use strict;
require Tk::Dialog;
require Tk::Radiobutton;

$Expect::Exp_Internal=0;
$Expect::Log_Stdout=1;

my $sftpusr="muser";
my $sftppswd="mpswd";
my $timeout=5;

my $location="";
my $lab;

my @labName = ();
@labSet = (
         [ "", "", "", 0],
         [ "m5", "192.168.200.14", "41", 1],
         );
#######################################################################
$mw = MainWindow->new(-title => "LOGVIEW");
$ft = $mw->Frame->pack(-side => 'top', -fill => 'x');
$fb = $mw->Frame->pack(-side => 'bottom', -fill => 'x');

foreach (@labSet) { push( @labName, $_->[0]); }
$ft->Label(-text => "Lab Name:")->pack(-side =>'left', -anchor => 'w' );
my $opt = $ft -> Optionmenu(-options =>\@labName,
         -command => \&displayLoads, -variable => \$location,  -relief 
=> 'sunken')->pack(-side =>'left', -anchor => 'w');
$fb->Button(-text => "Exit", -command => sub{exit;})->pack( -side => 
'right');
$ft->Button(-text => "Display", -command => \&displayInfo )->pack( -side 
=> 'right');

$t = $mw->Scrolled("Text")->pack(-side => 'left', -fill => 'x', -expand 
=> 1);

$ssh = new Expect;

# forever loop
MainLoop;
##################################################################################################

sub displayLoads {
         foreach( @labSet) {
                 if (  $_->[0] eq $location ) { $lab = $_; last; }
         }
}sub  displayInfo {

         tie *STDOUT, 'Tk::Text', $t;

         my $parms=sprintf("%s@%s", ${sftpusr}, $lab->[1]);
         print "**** pram $parms\n";

         $ssh->spawn("ssh", $parms) or die "Cannot ssh to $lab->[1]\n";
         $ssh->expect( $timeout,
         #       ["Password Authentication"],
                 ["Are you sure you want to continue connecting 
(yes/no)?", sub { my $self = shift; $self->send("yes\n"); exp_continue;} ],
                 [".*password: ", sub { my $self = shift; 
$self->send("$sftppswd\n");  exp_continue; } ],
                 [ 'timeout', sub { print "Error ssh login timeout\n"; 
exit} ],
                 [".*-root>"],
                 );

         # check board type
         $ssh->send( "cat \/proc\/cpuinfo | grep platform | awk \'{print 
\$3}\'\n");
         $ssh->expect( $timeout,
                 ["XXXX", sub { my $self = shift; print "\n*** FAILED: 
Target board is not p$lab->[2] cpu **\n"; $self->soft_close();  exit();  
} ],
#               [".*-root>"] ,
                 [ 'timeout', sub { print "Error ssh cmd cpuinfo 
timeout\n"; exit(); } ]
              );
}






