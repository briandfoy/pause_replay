Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:64543
Return-Path: <mackenna@animalhead.com>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Delivered-To: moderator for modules@perl.org
Received: (qmail 14807 invoked from network); 16 Feb 2009 02:54:37 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by x6.develooper.com with SMTP; 16 Feb 2009 02:54:37 -0000
Received: (qmail 25506 invoked by uid 225); 16 Feb 2009 02:54:37 -0000
Delivered-To: modules@perl.org
Received: (qmail 25502 invoked by alias); 16 Feb 2009 02:54:36 -0000
X-Spam-Status: No, hits=-0.0 required=8.0
	tests=SPF_HELO_PASS,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received: from animalhead.com (HELO animalhead.com) (198.66.255.31)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Sun, 15 Feb 2009 18:54:33 -0800
Received: from [192.168.0.2] (pool-71-116-96-45.snfcca.dsl-w.verizon.net [71.116.96.45])
	(authenticated bits=0)
	by animalhead.com (8.13.6.20060614/8.13.6) with ESMTP id n1G2sSDL011630
	(version=TLSv1/SSLv3 cipher=AES128-SHA bits=128 verify=NOT)
	for <modules@perl.org>; Sun, 15 Feb 2009 18:54:29 -0800 (PST)
Mime-Version: 1.0 (Apple Message framework v753.1)
In-Reply-To: <150220091637504917%brian.d.foy@gmail.com>
References: <200902140622.n1E6MU7O011669@pause.perl.org> <150220091637504917%brian.d.foy@gmail.com>
Content-Type: text/plain; charset=US-ASCII; delsp=yes; format=flowed
Message-ID: <CB87E2B7-952F-4553-B761-A3D7DB6F4E3A@animalhead.com>
Content-Transfer-Encoding: 7bit
Subject: Re: Module submission IPC::MMA
Date: Sun, 15 Feb 2009 18:54:21 -0800
To: modules@perl.org
X-Mailer: Apple Mail (2.753.1)
Approved: news@nntp.perl.org
From: mackenna@animalhead.com

Fairly obviously, not in my opinion.  Worse than treating keys
as ASCII strings, worse than the fact that IPC::MM includes no
tests at all, the locking strategy of the author of the
underlying mm module was flawed.

He created good multi-platform lock and unlock routines, but then
used them in his own memory-allocation routines as well as offering
them for use by those writing higher-level routines.  This makes
for a curious locking scheme: if one sets a lock at a higher level,
and then calls one of the routines in mm, one's lock is gone
before the mm routine returns.

IPC::MMA solves that, and extends the use of the same lock and
unlock routines to its users as well.

IPC::MMA installation includes about 6700 subtests to help ensure
its usability on various platforms.  I am eager to how the package
holds up to the diversity of Unix systems and the dedication of
the Perl porters.

But your question is the kind that should be asked.  Please read
the documentation.  If you have any further questions, I'll be
happy to answer them.

Craig MacKenna
www.animalhead.com


On Feb 15, 2009, at 2:37 PM, brian d foy wrote:

> [[ This message was both posted and mailed: see
>    the "To," "Cc," and "Newsgroups" headers for details. ]]
>
> In article <200902140622.n1E6MU7O011669@pause.perl.org>, Perl Authors
> Upload Server <upload@pause.perl.org> wrote:
>
>> The following module was proposed for inclusion in the Module List:
>>
>>   modid:       IPC::MMA
>>   DSLIP:       bdchp
>>   description: Unix/Linux Interprocess Shared Data
>>   userid:      MACKENNA (Craig MacKenna)
>
>
>>     The existing IPC::MM hash feature is considered by many to be
>>     "broken" because its keys must be ASCII strings rather than  
>> general
>>     Perl scalars.
>
> Would it be better to fix IPC::MM rather than make a new module?
>
> -- 
> brian d foy (one of many PAUSE admins), http://pause.perl.org
> archives at http://www.xray.mpe.mpg.de/mailing-lists/modules
> please send all messages back to modules@perl.org

