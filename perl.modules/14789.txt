Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:14789
Return-Path: <comdog@panix.com>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 54721 invoked by uid 76); 29 Oct 2002 16:59:14 -0000
Received: from relay1.pair.com (HELO relay.pair.com) (209.68.1.20) by onion.perl.org (qpsmtpd/0.12) with SMTP; 2002-10-29 16:59:14Z
Received: (qmail 14520 invoked from network); 29 Oct 2002 16:59:12 -0000
Received: from 12-247-38-191.client.attbi.com (HELO 10-0-1-2) (12.247.38.191)  by relay1.pair.com with SMTP; 29 Oct 2002 16:59:12 -0000
X-pair-Authenticated: 12.247.38.191
Subject: Re: Remote Object Server Modules
Date: Tue, 29 Oct 2002 10:59:40 -0600
To: philcrow2000@yahoo.com (Phil Crow)
Cc: modules@perl.org
Reply-To: modules@perl.org
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-transfer-encoding: 8bit
References: <20021029141333.84221.qmail@web13709.mail.yahoo.com>
User-Agent: Thoth/1.4.6 (Carbon/OS X)
X-SMTPD: qpsmtpd/0.12, http://develooper.com/code/qpsmtpd/
Approved: news@nntp.perl.org
From: comdog@panix.com (_brian_d_foy)
Message-ID: <perl.modules-14789@nntp.perl.org>

In article <20021029141333.84221.qmail@web13709.mail.yahoo.com>, Phil Crow <philcrow2000@yahoo.com> wrote:

> I'm working a scheme similar to Enterprise Java Beans
> (EJB) for Perl.  This allows servers to maintain
> persistent objects for remote (or local) clients.
> There's an example of the API below.  Let me know what
> you think at philcrow2000@yahoo.com.
> 
> If you like this idea I'd like to get it a namespace
> perhaps Net::Prim.  Please advise on the best name. 
> Prim stands for Perl Remote Invocation of Methods (a
> dislexic revision of Perl RMI).

we wouldn't put it in Net::*, but maybe (maybe) Netx::

i think this should go where the other RPCish sorts of
things go.

> Prim is an xml based tcp protocol which allows you to
> call Perl functions and methods inside a server Perl
> interpreter from a client Perl interpreter.

are you sure you're not reinventing the wheel?  

how does this differe from SOAP, XML-RPC, POE, and so on?
is it just the persistence part that is different?

could you hack the persistent bit into one of the other
frameworks?

-- 
brian d foy (one of many PAUSE admins), http://pause.perl.org
please send all messages back to modules@perl.org
