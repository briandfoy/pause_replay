Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:2241
Return-Path: <autarch@urth.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 27533 invoked from network); 26 Jun 2000 14:58:54 -0000
Received: from urth.org (autarch@216.161.20.244)
  by tmtowtdi.perl.org with SMTP; 26 Jun 2000 14:58:54 -0000
Received: from localhost (autarch@localhost)
	by urth.org (8.9.3/8.9.3) with ESMTP id KAA05466
	for <modules@perl.org>; Mon, 26 Jun 2000 10:08:21 -0500
Date: Mon, 26 Jun 2000 10:08:21 -0500 (CDT)
To: modules@perl.org
Subject: two new ones
Message-ID: <Pine.LNX.4.21.0006260942440.5094-100000@urth.org>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Approved: news@nntp.perl.org
From: autarch@urth.org (Autarch)

I'll be uploading two new modules to CPAN that I'd like to register if
possible (CPAN id DROLSKY).

1. StackTrace - This provides a stacktrace object very similar to what you
get from confess or cluck but you don't have to actually issue a
warning.  Plus you can step through the stack and examine the information
in it (it has all the info caller() provides for each stack level).  This
is primarily used by the next module I'm uploading but has the potential
to be useful on its own, particularly if you just want to pass around the
stack for some reason.

2. Class::Exceptions (also includes the class BaseException internally but
I don't want to register that).  This module lets you 'declare' a
hierarchical set of exception objects (with any root, not just
BaseException) at compile time via the 'use' command.  It does not
implement any sort of try/catch syntax as this is already covered
elsewhere and I don't like it anyway dammit.  It could probably be used
with G. Barr's Error module if you want that stuff.


I emailed way back when about these modules but the exception module had a
different name (Exception) and didn't hear back.  I don't feel comfortable
trying to claim that namespace anyway and this one seems a lot more
reasonable.  With the StackTrace namespace, I think that even though its
top level this implementation is fairly reasonable as _the_
implementation.  OTOH, I could always change it later if you want.

both DLSI's are RdpO


Thanks,

-dave

/*==================
www.urth.org
We await the New Sun
==================*/

