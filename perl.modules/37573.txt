Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:37573
Return-Path: <sjs@sonic.net>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 27222 invoked from network); 10 Jan 2005 14:52:14 -0000
Received: from x1.develooper.com (63.251.223.170)
  by lists.develooper.com with SMTP; 10 Jan 2005 14:52:14 -0000
Received: (qmail 4152 invoked by uid 225); 10 Jan 2005 14:52:13 -0000
Delivered-To: modules@perl.org
Received: (qmail 4146 invoked by alias); 10 Jan 2005 14:52:13 -0000
X-Spam-Status: No, hits=-4.9 required=8.0
	tests=BAYES_00
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
Received: from a.mail.sonic.net (HELO a.mail.sonic.net) (64.142.16.245)
  by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Mon, 10 Jan 2005 06:52:10 -0800
Received: from bolt.sonic.net (bolt.sonic.net [208.201.242.18])
	by a.mail.sonic.net (8.12.11/8.12.11) with ESMTP id j0AEq606007307
	for <modules@perl.org>; Mon, 10 Jan 2005 06:52:06 -0800
Received: from bolt.sonic.net (IDENT:sjs@localhost [127.0.0.1])
	by bolt.sonic.net (8.12.10/8.12.1) with ESMTP id j0AEq6v5017596
	for <modules@perl.org>; Mon, 10 Jan 2005 06:52:06 -0800
Received: from localhost (sjs@localhost)
	by bolt.sonic.net (8.12.10/8.12.1/Submit) with ESMTP id j0AEq6bV017593
	for <modules@perl.org>; Mon, 10 Jan 2005 06:52:06 -0800
Date: Mon, 10 Jan 2005 06:52:06 -0800 (PST)
To: modules@perl.org
Subject: Re: Module submission Getopt:::OO
In-Reply-To: <16866.23136.708553.152255@phoenix.squirrel.nl>
Message-ID: <Pine.LNX.4.50L0.0501100639440.17047-100000@bolt.sonic.net>
References: <200501092317.j09NHrKt026616@pause.perl.org>
 <16866.23136.708553.152255@phoenix.squirrel.nl>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Approved: news@nntp.perl.org
From: sjs@sonic.net (Steve Smith)



On Mon, 10 Jan 2005, Johan Vromans wrote:

> [Quoting Perl Authors Upload Server, on January 10 2005, 00:17, in "Module submission Ge"]
> >
> > The following module was proposed for inclusion in the Module List:
> >
> >   modid:       Getopt:::OO
> >
> >   rationale:
> >
> >     object oriented and I hope simple interface.
I know.  For what it's worth, I think this one has a simpler
and more flexable interface.
>
> Getopt::Long and many other Getopt:: modules do this already.
>
> >     Integrates help/usage into template for parsing command line
> >     options.
>
> Several other Getopt:: modules do this already.
>
> However, as often discussed, this is a bogus approach since you need
> to repeat the help info in the POD anyway. Getopt::Long has automatic
> support for POD help info.
Not necessarily.  I have over 100 scripts in use where I
work and most are pretty simple.  In many cases all you want
is something that will remind you what the module does, and
what arguments it expects.  In a case like that, usage
without pod is sufficient, and that describes at least 50%
of my code.

>
> >     Flexable -- handles simple single character and long multi character
> >     options.
>
> Getopt::Long and many other Getopt:: modules do this already.
The thing that started me on this was that a friend needed
to handle the same option multiple times,and we could not
figure out how to do this.
>
> >     Parsing starts as very simple and increases in complexity
> >     in such a way that (I hope) it behaves as a beginning programmer
> >     would expect with simple command line parameters but will also
> >     handle very complex command line parameters as well.
>
> Getopt::Long and many other Getopt:: modules do this already.
>
>  4) Parses
> >     command line and saves options so user doesn't need to handle
> >     variables. Access is like $x = $h->Values(opt) or if
> >     ($h->Values(opt)) ...
>
> This is a matter of taste. But does it validate yet another Getopt::
> module?
And you can do either with this module...
>
> The bottom line is: did you really consider using any of the many
> Getopt:: modules that already exist? And if they did not meet your
> specific needs, did you contact the authors to discuss improvements?
I did not contact any of the other authors, but I did look
into other modules.  I didn't see any that used a hash as
their template -- and many of the object oriented modules
now do.

Yes -- I did consider the other modules and have used many.
I think another module is justified.

>
> -- Johan
>
>

Have you looked at the module or just it's description?

To summarize, this has been an evolutionary process.  I've
used a number of different techniques for parsing command
line arguments.  The interface for this jelled out of
development I've been doing for a number of years.  I think
it's a different approach than I've seen elsewhere for
parsing command lines, and I think it's a worthwhile
addition to the CPAN modules.

Steve S.
