Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:63862
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 29598 invoked from network); 2 Jan 2009 01:32:56 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by x6.develooper.com with SMTP; 2 Jan 2009 01:32:56 -0000
Received: (qmail 27707 invoked by uid 225); 2 Jan 2009 01:32:56 -0000
Delivered-To: modules@perl.org
Received: (qmail 27700 invoked by alias); 2 Jan 2009 01:32:55 -0000
X-Spam-Status: No, hits=0.0 required=8.0
	tests=
X-Spam-Check-By: la.mx.develooper.com
Received: from pause.fiz-chemie.de (HELO pause.perl.org) (195.149.117.110)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Thu, 01 Jan 2009 17:32:53 -0800
Received: from pause.perl.org (localhost.localdomain [127.0.0.1])
	by pause.perl.org (8.13.8/8.13.8/Debian-3) with ESMTP id n021Wm5w012949
	for <modules@perl.org>; Fri, 2 Jan 2009 02:32:48 +0100
Received: (from nobody@localhost)
	by pause.perl.org (8.13.8/8.13.8/Submit) id n021WmC4012948;
	Fri, 2 Jan 2009 02:32:48 +0100
Date: Fri, 2 Jan 2009 02:32:48 +0100
Message-ID: <200901020132.n021WmC4012948@pause.perl.org>
Subject: Module submission Heap::MinMax
Reply-To: modules@perl.org
To: modules@perl.org
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Heap::MinMax
  DSLIP:       RdpOp
  description: Min-Max (Dual-partial-ordered) Heap
  userid:      MBEEBE (Matthias Beebe)
  chapterid:   6 (Data_Type_Utilities)
  communities:

  similar:
    Heap::Binary

  rationale:

    Hello,

    Heap::MinMax is an implementation of a Min-Max Binary Heap, based
    on 1986 article "Min-Max Heaps and Generalized Priority Queues" by
    Atkinson, Sack, Santoro, and Strothotte, published in Communications
    of the ACM.

    Min-Max heaps are similar to regular Binary Heaps, except that in a
    Min-Max heap, objects are stored in 'dual' partial order such that
    both the minimum element and maximum element are available in
    constant time. This is accomplished through a modification of the
    standard heap algorithm that introduces the notion of 'min' (even)
    levels and 'max' (odd) levels in the binary tree structure of the
    heap.

    Interestingly enough, insertion into a Min-Max heap is actually
    *faster* than with a normal binary heap (by a constant factor of
    0.5).

    For further information about the algorithm, please see the article
    "Min-Max Heaps and Generalized Priority Queues" by Atkinson, Sack,
    Santoro, and Strothotte, published in Communications of the ACM in
    1986.

    Thank you,

    Matt Beebe

  enteredby:   MBEEBE (Matthias Beebe)
  enteredon:   Fri Jan  2 01:32:48 2009 GMT

The resulting entry would be:

Heap::
::MinMax          RdpOp Min-Max (Dual-partial-ordered) Heap          MBEEBE


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=85410000_0544105edae63fda&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=85410000_0544105edae63fda&SUBMIT_pause99_add_mod_insertit=1
