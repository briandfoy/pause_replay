Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:14710
Return-Path: <cpan@aquacade.net>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 32010 invoked by uid 76); 26 Oct 2002 03:57:56 -0000
Received: from m1101.hostcentric.net (HELO m1101.hostcentric.net) (209.25.197.253) by onion.perl.org (qpsmtpd/0.12-dev) with SMTP; 2002-10-26 03:57:56Z
Received: (qmail 4552 invoked by alias); 26 Oct 2002 03:57:55 -0000
Received: from unknown (HELO m1001.hostcentric.net) (209.25.225.253)  by 0 with SMTP; 26 Oct 2002 03:57:55 -0000
Received: (qmail 9142 invoked by uid 500); 26 Oct 2002 03:57:55 -0000
Received: from unknown (HELO cc2418055c) (68.50.205.252)  by 0 with SMTP; 26 Oct 2002 03:57:55 -0000
Message-ID: <000a01c27ca3$dd4e39c0$6401a8c0@hyatsv01.md.comcast.net>
To: <modules@perl.org>
Subject: Please register me as a new module contributor
Date: Fri, 25 Oct 2002 23:57:54 -0400
Organization: Atlantic Telesis
MIME-Version: 1.0
Content-Type: multipart/alternative;	boundary="----=_NextPart_000_0007_01C27C82.55BF7A80"
X-Priority: 3
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook Express 6.00.2800.1106
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2800.1106
X-SMTPD: qpsmtpd/0.12-dev, http://develooper.com/code/qpsmtpd/
Approved: news@nntp.perl.org
From: cpan@aquacade.net ("cpan")

------=_NextPart_000_0007_01C27C82.55BF7A80
Content-Type: text/plain;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable

Name:  Lawrence Hixson
Email:  cpan@aquacade.net
Homepage:  http://aquacade.net
UserID:  aquacade

I'd like to contribute a module for Julian Day (JD) number to/from =
conversions that are absolutely accurate from 1/1/9999 BC to 12/31/9999 =
AD to the second (perhaps a wider range of years if my testing proves =
the routines reliable).

My module differs from other CPAN contributions in that it:

1) Assumes our current 7-day week as a continuous series of days from =
ancient to future, completely incorporating full rules of leap years as =
though leap year rules existed across the range of all years as well.

2) It uses fractional part of number to encode time of day to the second

3) Uses 12:00:00 UTC as it's change of day as per it's intended purpose =
(astronomical observations done during night so midnight is JD fraction =
..5

4) JD 0 is 1/1/4713 BC  12:00:00 UTC

5) For ease of use I assume that non-existent year zero is treated as 1 =
BC and the Gregorian shift is handled seemlessly by forcing all the days =
from 5-OCT-1582 to 14-OCT-1582 to JD 2299161 to maintain unbroken 7-day =
weeks

6) Day-of-the-week function included due to 12:00:00 UTC bias as =
$dow=3Dabs(floor($jd+.5)) % 7

7) Day-of-the-year function also included.

I will probably include a few other date/time related function (not =
parsing) as yet to be determined.

Thanks!
------=_NextPart_000_0007_01C27C82.55BF7A80
Content-Type: text/html;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD>
<META http-equiv=3DContent-Type content=3D"text/html; =
charset=3Diso-8859-1">
<META content=3D"MSHTML 6.00.2800.1106" name=3DGENERATOR>
<STYLE></STYLE>
</HEAD>
<BODY bgColor=3D#ffffff>
<DIV><FONT size=3D2>Name:&nbsp;&nbsp;Lawrence Hixson</FONT></DIV>
<DIV><FONT size=3D2>Email:&nbsp; <A=20
href=3D"mailto:cpan@aquacade.net">cpan@aquacade.net</A></FONT></DIV>
<DIV><FONT size=3D2>Homepage: &nbsp;<A=20
href=3D"http://aquacade.net">http://aquacade.net</A></FONT></DIV>
<DIV><FONT size=3D2>UserID:&nbsp; aquacade</FONT></DIV>
<DIV><FONT size=3D2></FONT>&nbsp;</DIV>
<DIV><FONT size=3D2>I'd like to contribute a module for Julian Day (JD) =
number=20
to/from conversions that are absolutely accurate from 1/1/9999 BC to =
12/31/9999=20
AD to the second (perhaps a wider range of years if my testing =
proves&nbsp;the=20
routines reliable).</FONT></DIV>
<DIV><FONT size=3D2></FONT>&nbsp;</DIV>
<DIV><FONT size=3D2>My module differs from other CPAN contributions in =
that=20
it:</FONT></DIV>
<DIV><FONT size=3D2></FONT>&nbsp;</DIV>
<DIV><FONT size=3D2>1) Assumes our current 7-day week as a continuous =
series of=20
days from ancient to future, completely incorporating full rules of leap =
years=20
as though leap year rules existed across&nbsp;the range of all years as=20
well.</FONT></DIV>
<DIV><FONT size=3D2></FONT>&nbsp;</DIV>
<DIV><FONT size=3D2>2) It uses fractional part of number to encode time =
of day to=20
the&nbsp;second</FONT></DIV>
<DIV><FONT size=3D2></FONT>&nbsp;</DIV>
<DIV>
<DIV><FONT size=3D2>3) Uses 12:00:00 UTC as it's change of day&nbsp;as =
per it's=20
intended purpose (astronomical observations done during night so =
midnight is JD=20
fraction .5</FONT></DIV>
<DIV><FONT size=3D2></FONT>&nbsp;</DIV>
<DIV><FONT size=3D2>4) JD 0 is 1/1/4713 BC&nbsp; 12:00:00 =
UTC</FONT></DIV>
<DIV><FONT size=3D2></FONT>&nbsp;</DIV>
<DIV><FONT size=3D2>5) For ease of use I assume that non-existent year =
zero is=20
treated as 1 BC and the Gregorian shift is handled seemlessly by forcing =
all the=20
days from 5-OCT-1582 to 14-OCT-1582 to JD 2299161 to maintain unbroken =
7-day=20
weeks</FONT></DIV>
<DIV><FONT size=3D2></FONT>&nbsp;</DIV>
<DIV><FONT size=3D2>6) Day-of-the-week function included due to 12:00:00 =
UTC=20
bias&nbsp;as $dow=3Dabs(floor($jd+.5)) % 7</FONT></DIV>
<DIV><FONT size=3D2></FONT>&nbsp;</DIV>
<DIV><FONT size=3D2>7) Day-of-the-year function also =
included.</FONT></DIV>
<DIV><FONT size=3D2></FONT>&nbsp;</DIV>
<DIV><FONT size=3D2>I will probably include a few other date/time =
related function=20
(not parsing) as yet to be determined.</FONT></DIV>
<DIV><FONT size=3D2></FONT>&nbsp;</DIV>
<DIV><FONT size=3D2>Thanks!</FONT></DIV></DIV></BODY></HTML>

------=_NextPart_000_0007_01C27C82.55BF7A80--

