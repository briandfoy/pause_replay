Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:63043
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 24071 invoked from network); 6 Nov 2008 15:47:45 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by x6.develooper.com with SMTP; 6 Nov 2008 15:47:45 -0000
Received: (qmail 3954 invoked by uid 225); 6 Nov 2008 15:47:45 -0000
Delivered-To: modules@perl.org
Received: (qmail 3949 invoked by alias); 6 Nov 2008 15:47:44 -0000
X-Spam-Status: No, hits=1.6 required=8.0
	tests=SARE_MLB_Stock6
X-Spam-Check-By: la.mx.develooper.com
Received: from pause.fiz-chemie.de (HELO pause.perl.org) (195.149.117.110)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Thu, 06 Nov 2008 07:47:42 -0800
Received: from pause.perl.org (localhost.localdomain [127.0.0.1])
	by pause.perl.org (8.13.8/8.13.8/Debian-3) with ESMTP id mA6FlbMU018846
	for <modules@perl.org>; Thu, 6 Nov 2008 16:47:37 +0100
Received: (from nobody@localhost)
	by pause.perl.org (8.13.8/8.13.8/Submit) id mA6FlbKl018845;
	Thu, 6 Nov 2008 16:47:37 +0100
Date: Thu, 6 Nov 2008 16:47:37 +0100
Message-ID: <200811061547.mA6FlbKl018845@pause.perl.org>
Subject: Module submission Getopt::XML
Reply-To: modules@perl.org
To: modules@perl.org
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Getopt::XML
  DSLIP:       Rdpfo
  description: Use an XML Doc as input args to Getopt::Long
  userid:      RGLAUE (Russell E Glaue)
  chapterid:   12 (Opt_Arg_Param_Proc)
  communities:
    Module's Project Web Site on CodePin.org

  similar:

  rationale:

    The Getopt::XML module is a wrapper to the Getopt::Long module. It
    essentially converts an XML tree into an arguments list which is
    able to be passed into the Getopt::Long->GetOptionsFromArray(
    \%options, @arg_list ) method.

    The power is that you can use this to populate the %options hash
    with application default values from the XML document. Then call
    Getopt::Long->GetOptions( \%options ) to overwrite these default
    values with the user's actual input.

    No more hard coding default values. User defined preferences are
    now easy. And prefs can be centrally stored and accessed with the
    XML::TreePP->parsehttp() method.

    That is pretty much it.

  enteredby:   RGLAUE (Russell E Glaue)
  enteredon:   Thu Nov  6 15:47:37 2008 GMT

The resulting entry would be:

Getopt::
::XML             Rdpfo Use an XML Doc as input args to Getopt::Long RGLAUE


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=3d310000_2c47dc18f6c384d5&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=3d310000_2c47dc18f6c384d5&SUBMIT_pause99_add_mod_insertit=1
