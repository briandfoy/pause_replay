Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:24551
Return-Path: <timbo@dansat.data-plan.com>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 56934 invoked by uid 76); 14 Nov 2003 15:34:35 -0000
Received: from qmailr@one.develooper.com (HELO ran-out.mx.develooper.com) (64.81.84.115) by onion.perl.org (qpsmtpd/0.26) with SMTP; Fri, 14 Nov 2003 07:34:35 -0800
Received: (qmail 28804 invoked by uid 225); 14 Nov 2003 15:34:33 -0000
Delivered-To: modules@perl.org
Received: (qmail 28799 invoked by uid 507); 14 Nov 2003 15:34:33 -0000
Received: from mail06.svc.cra.dublin.eircom.net (HELO mail06.svc.cra.dublin.eircom.net) (159.134.118.22) by one.develooper.com (qpsmtpd/0.27-dev) with SMTP; Fri, 14 Nov 2003 07:34:02 -0800
Received: (qmail 7471 messnum 171146 invoked from network[213.94.228.233/unknown]); 14 Nov 2003 15:33:23 -0000
Received: from unknown (HELO dansat.data-plan.com) (213.94.228.233)  by mail06.svc.cra.dublin.eircom.net (qp 7471) with SMTP; 14 Nov 2003 15:33:23 -0000
Received: from dansat.data-plan.com (localhost [127.0.0.1])	by dansat.data-plan.com (8.12.9/8.12.9) with ESMTP id hAEFXRC3092275;	Fri, 14 Nov 2003 15:33:27 GMT	(envelope-from timbo@dansat.data-plan.com)
Received: (from timbo@localhost)	by dansat.data-plan.com (8.12.9/8.12.9/Submit) id hAEFXQcL092274;	Fri, 14 Nov 2003 15:33:26 GMT
Date: Fri, 14 Nov 2003 15:33:26 +0000
To: modules@perl.org
Cc: reece@cpan.org
Subject: Re: Module submission Prospect
Message-ID: <20031114153326.GB92210@dansat.data-plan.com>
References: <200311141423.hAEENTAh027291@pause.perl.org>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <200311141423.hAEENTAh027291@pause.perl.org>
User-Agent: Mutt/1.4i
X-Spam-Check-By: one.develooper.com
X-Spam-Status: No, hits=-2.7 required=7.0 tests=CARRIAGE_RETURNS,IN_REP_TO,QUOTED_EMAIL_TEXT,REFERENCES,SPAM_PHRASE_00_01,USER_AGENT,USER_AGENT_MUTT version=2.44
X-SMTPD: qpsmtpd/0.26, http://develooper.com/code/qpsmtpd/
Approved: news@nntp.perl.org
From: Tim.Bunce@pobox.com (Tim Bunce)

On Fri, Nov 14, 2003 at 03:23:29PM +0100, Perl Authors Upload Server wrote:
> 
> The following module was proposed for inclusion in the Module List:
> 
>   modid:       Prospect
>   DSLIP:       bdpOo
>   description: I'face to Prospect protein threading package
>   userid:      REECE (Reece Hart)
>   chapterid:   24 (Commercial_Software_Interfaces)
>   communities:
>     SourceForge (project pending)
> 
>   similar:
>     none similar; related: Bio:: and CompBio:: trees
> 
>   rationale:
> 
>     Rationale for the module ------------------------ There are no
>     existing perl interfaces to the Prospect package; this module is
>     unique. We have endeavored to use other packages where possible
>     (e.g., Bio:: (aka bioperl)).
> 
>     Rationale for the namespace --------------------------- The major
>     reason for choosing Prospect:: over a package name within the Bio::
>     or CompBio:: trees is that those are to be broad names assigned to
>     small groups of individuals. In particular, Bio:: is a big chunk of
>     namespace assigned to a group with enforced coding guidelines.
>     bioperl would probably not accept any package which doesn't adhere
>     to their coding guidelines.

That doesn't mean you can't create modules in the Bio:: namespace.
Your module does not have to become part of the bioperl project.
But couldn't you work within their guidelines anyway?

>     I like ontologies and organization. If you can think of an
>     appropriate place to stick this module (be nice) then I'm happy to
>     discuss it. One possibility is to start a new tree with a designed
>     hierarchy and that is not owned by a single group.

As far as I'm aware the bioperl group do not 'own' the Bio:: namespace.

>     E.g., Biology::
>     Entities:: Sequence Structure Gene Protein Alignment ... GUI:: ...
>     Tools:: Prospect:: BLAST::
> 
>     I know that there has been discussion on the bioperl mailing list
>     regarding breaking Bio:: up into subtrees in order to address this
>     issue, but I'm not aware of any progress on this yet.

Meanwhile I think you can use Bio:: (or CompBio::).

In general frameworks of related modules seeking to 'own' a namespace
should invent a top-level namespace that acts as a 'brand name' for the
framework (eg Tangram::*). Top level names that relate directly to
a topic (like Bio::) are viewed as the natural home for other modules
related to that topic.

Tim.
