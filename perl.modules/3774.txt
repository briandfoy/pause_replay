Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:3774
Return-Path: <perl_dummy@bloodgate.com>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 16275 invoked from network); 5 Dec 2000 18:32:44 -0000
Received: from circe.tops.net (HELO circe.bonn-online.com) (194.162.222.100)
  by tmtowtdi.perl.org with SMTP; 5 Dec 2000 18:32:44 -0000
Received: from null (ppp147.dialin.bonn-online.com [194.162.223.147])
	by circe.bonn-online.com (8.10.1/8.10.1) with ESMTP id eB5IWfm17976
	for <modules@perl.org>; Tue, 5 Dec 2000 19:32:42 +0100
Message-ID: <200012051832.eB5IWfm17976@circe.bonn-online.com>
X-Mailer: XFMail 1.4.0 on Linux
X-Priority: 3 (Normal)
Content-Type: text/plain; charset=iso-8859-1
Content-Transfer-Encoding: 8bit
MIME-Version: 1.0
Date: Tue, 05 Dec 2000 19:36:31 +0100 (CET)
Organization: none
To: modules@perl.org
Subject: PAUSE Access, Math::* series
Approved: news@nntp.perl.org
From: perl_dummy@bloodgate.com (Tels)

-----BEGIN PGP SIGNED MESSAGE-----

Name: Tels
Email: None [or please use: perl_dummy@bloodgate.com]
Homepage: http://bloodgate.com/
User-ID: TELS

The following modules will be submitted when ich mal ne PAUSE hab ;)


Math::String - Treats strings/passwords/keys as number-sequence and you can
calculate with them like they were big integers. Uses overload. Child of
the new Math::BigInt. Does what you $a++ always wanted to do ;o)


Math::Roman - Convert Roman numbers to decimals and back, allows
calculation with (infintely large) Roman numbers via overload and
as child of Math::BigInt. Since it can do Egyptian numbers, too, should
probably be Math::Ancient. !?
I know that there is Roman.pm, but it is actually a very small (but
faster) subset of Math::Roman. One could think of Math::Roman::simple as a
method to incorparate Roman into it. Please see also:
http://www.xray.mpe.mpg.de/mailing-lists/modules/2000-08/msg00021.htm
http://www.xray.mpe.mpg.de/mailing-lists/modules/1997-10/msg00106.html
The first doesnt seem to have happened yet, the second confuses me.
There is also Text::Roman (which seems to be rendundand to Roman::). Ugh!

My Math::Roman differs in that you can do things like $a += 'MCM' / 'XII';


Convert::Morse (or Text::Morse?). Allows conversion between ASCII
text and Morse code sequences consisting of '.', '-' and ' '.
 .- -. --- - .... . .-.  .--. . .-. .-..  .... .- -.-. -.- . .-.


Convert::Phonetic, (or Text::Phonetic) convert ASCII text to phonetic
alphabet (AB => ALPHA BRAVO) and back. I think, Math::Roman, Morse and
Phonetic could benefit from a general token-parser, since they all do
actually use some in their internals. Is their already something like a
lexx-scanner in Perl? There was a proposed Text::Tokens, which has not yet
happened (And it seemed to to some slightly different). I would venture for
Text::TokenParser (break a text via s/\G$tokenlist/ do($1); /gec; into
tokens).

Thanx for all your time,

Tels

PS: I had some severe email problems. If you did not get emails from me
you expected, please ask me again. In case of doubles, please discard. Thank
you in advance.

- - --
 "Why do you go so slowly? Do you think this is some kind of game?"
 http://bloodgate.com/thief/     Thief - The Dark Project
 http://bloodgate.com/aifilter   Rewriting the HTML as we know it.
 http://freedomforlinks.de       Fight for your right to link.
 PGP key available on http://bloodgate.com/tels.asc or via email.


-----BEGIN PGP SIGNATURE-----
Version: 2.6.3i
Charset: latin1

iQEVAwUBOi01qXcLPEOTuEwVAQFwLQf+NzLEDbXBdFZoIemrem98zXJwtA62ZJ6M
m7Tui9HICcciD1wsrShcIroLk8YNbvS0bImNxkJVHv4TAZQdhmvcNNaqUMT432cK
cIxobkLKfK4BBCI+N24W24EPyomuXSuYmNT5xlnnzb9Gv7kcqJ5BbwB7n2WDLk21
1ogbhtof06XYiK5+5fExdUKpWhTElOmIgoNP0WpC9cnpnPyd27Lh+JTB2s8NCwSW
PbcDX4UjRAeUmUBI+3FogxMB24/MztIju9jw7Vvu+mj9ihr6IZeteWUwTrZrx7/0
KQ7hirAMWOoDIidkxU2cudQLRTlKW9rBpoTKovPCpU2Yu4kVKxZqdA==
=Vs4k
-----END PGP SIGNATURE-----
