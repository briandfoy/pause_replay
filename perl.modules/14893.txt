Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:14893
Return-Path: <module-support@clyman.com>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 45647 invoked by uid 76); 31 Oct 2002 01:50:34 -0000
Received: from maynard.mail.mindspring.net (HELO maynard.mail.mindspring.net) (207.69.200.243) by onion.perl.org (qpsmtpd/0.12) with SMTP; 2002-10-31 01:50:34Z
Received: from user-2inia5b.dialup.mindspring.com ([165.121.40.171] helo=jcnote.clyman.com)	by maynard.mail.mindspring.net with esmtp (Exim 3.33 #1)	id 1874Tc-0004x2-00	for modules@perl.org; Wed, 30 Oct 2002 20:50:28 -0500
Message-ID: <5.1.1.6.0.20021030173032.00a6e4c8@mail.clyman.com>
X-Sender: module-support@mail.clyman.com (Unverified)
X-Mailer: QUALCOMM Windows Eudora Version 5.1.1
Date: Wed, 30 Oct 2002 17:46:34 -0800
To: modules@perl.org
Subject: Re: Re: Module submission Text::MessageLibrary
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"; format=flowed
X-SMTPD: qpsmtpd/0.12, http://develooper.com/code/qpsmtpd/
Approved: news@nntp.perl.org
From: module-support@clyman.com (John Clyman)

The module's purpose is to let developers centralize text strings (which 
may contain placeholders to be filled in at run time) in one location 
instead of keeping them in string literals scattered throughout the code. 
So instead of the typical:

   open FILE, $filename or die "Couldn't open..."

you could write something like:

   open FILE, $filename or die $message->open_failed($filename)

brian, you suggested perhaps Class::* in a previous message, but that seems 
like emphasizing what is essentially syntactic sugar to make the calling 
interface friendly. (Really all the latter statement above is doing is 
something that in procedural code would read something like 
"construct_message('open_failed', $filename)".)

When I originally looked at CPAN to see if anything like this existed, I 
found myself gravitating to the String::* and Text::* sections. Thus my 
inclination to put it in one of those.

The "Library" suffix wasn't intended in the sense of "module", but in the 
sense of a set of text/string resources to draw upon. Perhaps "List" would 
have been a better choice. Or maybe I need to avoid nouns describing the 
data class encapsulates and find one that describes its function. 
String::Manager?

I could just be in a deep rut here and unable to think creatively about 
what to call this thing. I'm certainly open to alternative suggestions.

John Clyman

-----Original Message-----
From: _brian_d_foy [mailto:comdog@panix.com]
Sent: Wednesday, October 30, 2002 5:04 PM
To: modules@perl.org
Cc: JCLYMAN@cpan.org
Subject: Re: Module submission Text::MessageLibrary


In article <200210302044.g9UKiLG02065@pause.perl.org>, Perl Authors Upload 
Server <upload@p11.speed-link.de> wrote:

 > The following module was proposed for inclusion in the Module List:
 >
 >   modid:       Text::MessageLibrary

why do you think this belongs in Text?

also, the "Library" is implied since it's a module.

-- 
brian d foy (one of many PAUSE admins), http://pause.perl.org
please send all messages back to modules@perl.org

