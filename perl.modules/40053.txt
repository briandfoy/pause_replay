Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:40053
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 16369 invoked from network); 1 May 2005 15:47:46 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 1 May 2005 15:47:46 -0000
Received: (qmail 25865 invoked by uid 225); 1 May 2005 15:47:45 -0000
Delivered-To: modules@perl.org
Received: (qmail 25860 invoked by alias); 1 May 2005 15:47:45 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
Received: from pause.fiz-chemie.de (HELO pause.perl.org) (195.149.117.110)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Sun, 01 May 2005 08:47:42 -0700
Received: from pause.perl.org (localhost [127.0.0.1])
	by pause.perl.org (8.12.3/8.12.3/Debian-7.1) with ESMTP id j41FlTrd008144;
	Sun, 1 May 2005 17:47:30 +0200
Received: (from nobody@localhost)
	by pause.perl.org (8.12.3/8.12.3/Debian-7.1) id j41FlScV008142;
	Sun, 1 May 2005 17:47:28 +0200
Date: Sun, 1 May 2005 17:47:28 +0200
Message-ID: <200505011547.j41FlScV008142@pause.perl.org>
Subject: Module submission Spreadsheet::ReadSXC
Reply-To: modules@perl.org
To: modules@perl.org, terhechte@cpan.org
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Spreadsheet::ReadSXC
  DSLIP:       bdpfp
  description: Extract OpenOffice 1.x spreadsheet data
  userid:      TERHECHTE (Christoph Terhechte)
  chapterid:   7 (Database_Interfaces)
  communities:

  similar:
    OpenOffice::Parse::SXC

  rationale:

    Spreadsheet::ReadSXC is a Perl only module to extract data from
    .sxc files. It is based on the Perl only XML::Parser::Lite::Tree. I
    designed it for simplicity. It does not require the user to write
    handlers, but still allows for easy access to individual sheets,
    rows, and cells. The only exported function of the module returns a
    hash reference. The keys of the hash correspond to worksheet names,
    the values are references to arrays of array references which
    correspond to rows and cells, respectively.

    OpenOffice::Parse::SXC, on the other hand, is based on XML::Parser
    which interfaces to the expat C library for parsing XML. Although it
    has a simple function-oriented interface, its wider possibilities
    can only be utilized by writing handlers for the object-oriented
    interfaces which makes it less easy to use.

    Spreadsheet::ReadSXC allows easy access to different worksheets by
    name. It truncates sheets to the highest row and column number
    automatically to avoid redundancy. It returns cell contents as XML
    strings instead of Unicode escape sequences. Empty cells are
    returned as undef values instead of empty strings which is
    convenient for SQL database import to make sure data is supplied for
    NOT NULL table fields.

    The emphasis of the module is not on parsing XML as is the case
    with OpenOffice::Parse::SXC, but instead on reading Spreadsheet
    data, hence the choice of "Spreadsheet::ReadSXC" as the module name.

  enteredby:   TERHECHTE (Christoph Terhechte)
  enteredon:   Sun May  1 15:47:26 2005 GMT

The resulting entry would be:

Spreadsheet::
::ReadSXC         bdpfp Extract OpenOffice 1.x spreadsheet data      TERHECHTE


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=fe900000_580248a46fe80015&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=fe900000_580248a46fe80015&SUBMIT_pause99_add_mod_insertit=1
