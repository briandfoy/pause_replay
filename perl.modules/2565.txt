Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:2565
Return-Path: <rhanson@blast.net>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 19412 invoked from network); 30 Jul 2000 02:53:18 -0000
Received: from fireball.blast.net (207.162.131.33)
  by tmtowtdi.perl.org with SMTP; 30 Jul 2000 02:53:18 -0000
Received: from homo (wppp396.blast.net [207.162.143.196])
	by fireball.blast.net (8.9.3/8.9.3) with SMTP id WAA95456
	for <modules@perl.org>; Sat, 29 Jul 2000 22:49:34 -0400 (EDT)
	(envelope-from rhanson@blast.net)
Message-ID: <006b01bff9d1$3557f0a0$4b8fa2cf@sayswhat>
To: <modules@perl.org>
Subject: ANNOUNCE: XML::EasyOBJ
Date: Sat, 29 Jul 2000 22:52:31 -0400
MIME-Version: 1.0
Content-Type: text/plain;
	charset="Windows-1252"
Content-Transfer-Encoding: 7bit
X-Priority: 3
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook Express 5.00.2919.6600
X-MimeOLE: Produced By Microsoft MimeOLE V5.00.2919.6600
Approved: news@nntp.perl.org
From: rhanson@blast.net ("Robert Hanson")


-----------------------------------------
NAME
-----------------------------------------

XML::EasyOBJ - Easy XML object navigation 


-----------------------------------------
VERSION
-----------------------------------------

Version 1.0 


-----------------------------------------
SYNOPSIS
-----------------------------------------

 # create the object
 my $doc = new XML::EasyOBJ('my_xml_document.xml');


 # print some text from the document
 print $doc->some_element(1)->getString;


 # print an attribute value
 print $doc->some_element(0)->getAttr('foo')."\n";


 # iterate over a list of elements
 foreach my $x ( $foo->some_element ) {
   print $x->getString."\n";
   }


-----------------------------------------
DESCRIPTION
-----------------------------------------

XML::EasyOBJ lets you take an XML page and essentially 
create an object out of it. Each element becomes a 
method, which makes it really easy to navigate an XML 
page (if you know the structure). The motivation behind 
this module was to create an interface so simple that 
anyone who knows the basic functionality of Perl can 
learn how to read data from an XML document in less 
than 10 minutes. 

This module is also a time saver even if you are 
familiar with the other modules available, but want 
something simple so that you can throw together a 
script in a few minutes (unless of course you know the 
DOM like the back of your hand). 


-----------------------------------------
REQUIREMENTS
-----------------------------------------

XML::EasyOBJ uses XML::DOM. XML::DOM is 
available from CPAN (www.cpan.org). 


-----------------------------------------
INSTALLATION
-----------------------------------------

This module installs in the normal way...

perl Makefile.pl
make
make install


-----------------------------------------
AUTHOR/COPYRIGHT
-----------------------------------------

Robert Hanson (rhanson@blast.net) 

Copyright 2000, Robert Hanson. All rights reserved. 

This library is free software; you can redistribute 
it and/or modify it under the same terms as Perl itself. 



