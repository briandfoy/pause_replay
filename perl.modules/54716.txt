Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:54716
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 23377 invoked from network); 4 Jun 2007 06:24:01 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 4 Jun 2007 06:24:01 -0000
Received: (qmail 7613 invoked by uid 225); 4 Jun 2007 06:24:01 -0000
Delivered-To: modules@perl.org
Received: (qmail 7609 invoked by alias); 4 Jun 2007 06:24:00 -0000
X-Spam-Status: No, hits=2.0 required=8.0
	tests=BAYES_50,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,KARMA_CONNECT_NEGATIVE,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
Received: from pause.fiz-chemie.de (HELO pause.perl.org) (195.149.117.110)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Sun, 03 Jun 2007 23:22:54 -0700
Received: from pause.perl.org (localhost.localdomain [127.0.0.1])
	by pause.perl.org (8.13.4/8.13.4/Debian-3sarge3) with ESMTP id l546MTJj031342;
	Mon, 4 Jun 2007 08:22:30 +0200
Received: (from nobody@localhost)
	by pause.perl.org (8.13.4/8.13.4/Submit) id l546MTDs031341;
	Mon, 4 Jun 2007 08:22:29 +0200
Date: Mon, 4 Jun 2007 08:22:29 +0200
Message-ID: <200706040622.l546MTDs031341@pause.perl.org>
Subject: Module submission Muldis::DB
Reply-To: modules@perl.org
To: modules@perl.org, duncand@cpan.org
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Muldis::DB
  DSLIP:       cmpOg
  description: Full-featured truly relational DBMS in Perl
  userid:      DUNCAND (Darren Duncan)
  chapterid:   7 (Database_Interfaces)
  communities:
    muldis-db-*@mm.DarrenDuncan.net, dbi-users, perl6-language,
    #perl6@freenode, dbix-class and other DB-related lists

  similar:
    Rosetta (which it replaces), Genezzo, DBI, DBD::*, various DBI
    wrappers, ORMs, persistence solutions, Set implementing modules,
    language implementations

  rationale:

    First and foremost, Muldis::DB is a ground-up rewrite of Rosetta
    and is its official successor; unlike Rosetta, Muldis::DB actually
    works. Rosetta was granted a place in the module list on 2003-01-21.

    I recently deleted Rosetta from the module list

    Muldis::DB should be added instead.

    Muldis::DB is in twin Perl 5 and Perl 6 versions, the Perl 5
    version being what is on CPAN standalone right now, and the Perl 6
    version is bundled with Pugs, whenever that next comes out.

    With both initial versions, Muldis::DB has zero external
    dependencies but for Perl/Pugs itself and what is bundled with it;
    this should ease installation.

    For the best explanation at the moment of what Muldis::DB is, see
    the DESCRIPTION POD in file lib/Muldis::DB.pm at the url above. But
    to summarize:

    Muldis::DB defines and implements a computationally complete
    programming language with integrated database functionality. It is a
    framework with a separate programmatic API and pluggable
    implementing engines, one of which is bundled with the core so it
    works out of the box. Structurally the framework resembles the DBI,
    but that its native input and output is a tree of Muldis::DB::AST
    objects rather than strings of SQL or something else. The AST is
    fully expressive and can represent anything SQL can, but in a more
    deterministic fashion, and it can represent many things that SQL
    can't easily. Muldis::DB implements a D language according to Darwin
    and Date (see docs).

    Conceptually speaking, Muldis::DB is either a replacement for DBI,
    or a replacement for any SQL DBMS itself, depending on how you use
    it; out of the box it replaces both, but plug-in bridges can be made
    that bridge to either.

    As far as the whole package goes, perhaps Genezzo on CPAN is the
    most similar, as both are written in Perl and implement a
    self-contained DBMS.

    In general, I like to think that Muldis::DB is truly unique and
    nothing on CPAN comes close to it; any resemblences are more at a
    distance.

    In addition, there are no Perl 6 modules at all that work with
    databases, so in that area Muldis::DB for Perl 6 would be the first.

    As a rationale for my choice of name, I intended to register a
    business soon that will produce a line of database products, most of
    these being more towards the end of actual
    consumer/business/whatever applications, but some being modules.

    I would probably name the business Muldis (or rather, that would be
    its short name), and the products would probably be all named in a
    manner like Muldis Foo and Muldis Bar; eventually, this business
    should evolve into a Foundation, since the ultimate goal of all this
    database stuff I'm doing is altrustic (improving the comprehension,
    preservation, and spread of knowledge or useful data, due to the
    benefits derived from that).

    I made up the word Muldis from scratch (its actually an acronym,
    but I won't reveal the meaning now, but it is significant to my
    long-term mission), and as far as I know that word has never been
    used anywhere, so I should be able to use it as a brand for both the
    business and its products, and trademark it. I did also register all
    the generic second-level internet domains of that word, several
    years ago.

    The module itself that this registration is for would need to have
    a name in the Muldis::* namespace, and I thought thereby that
    something easy to remember and type, as well as very common already
    for similar functionality, that is, relational databases, or
    databases, is "DB", hence we get Muldis::DB.

  enteredby:   DUNCAND (Darren Duncan)
  enteredon:   Mon Jun  4 06:22:29 2007 GMT

The resulting entry would be:

Muldis::
::DB              cmpOg Full-featured truly relational DBMS in Perl  DUNCAND


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=2a110000_db22a930c47ee3b1&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=2a110000_db22a930c47ee3b1&SUBMIT_pause99_add_mod_insertit=1
