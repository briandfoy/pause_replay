Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:37987
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 17869 invoked from network); 27 Jan 2005 19:51:41 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 27 Jan 2005 19:51:41 -0000
Received: (qmail 4396 invoked by uid 225); 27 Jan 2005 19:51:41 -0000
Delivered-To: modules@perl.org
Received: (qmail 4391 invoked by alias); 27 Jan 2005 19:51:40 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
Received: from pause.fiz-chemie.de (HELO pause.perl.org) (195.149.117.110)
  by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Thu, 27 Jan 2005 11:51:37 -0800
Received: from pause.perl.org (localhost [127.0.0.1])
	by pause.perl.org (8.12.3/8.12.3/Debian-7.1) with ESMTP id j0RJpV64029692
	for <modules@perl.org>; Thu, 27 Jan 2005 20:51:33 +0100
Received: (from nobody@localhost)
	by pause.perl.org (8.12.3/8.12.3/Debian-7.1) id j0RJpVHB029690;
	Thu, 27 Jan 2005 20:51:31 +0100
Date: Thu, 27 Jan 2005 20:51:31 +0100
Message-ID: <200501271951.j0RJpVHB029690@pause.perl.org>
Subject: Module submission DBI::Transaction
Reply-To: modules@perl.org
To: modules@perl.org
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       DBI::Transaction
  DSLIP:       cdphg
  description: Advanced database transactions with DBI
  userid:      PORTON (Victor Porton)
  chapterid:    7 (Database_Interfaces)
  communities:

  similar:

  rationale:

    It is two packages in one .tar.gz:

    DBI::Transaction - advanced object-oriented support for database
    transactions. It can do "subtransactions" (transactions which are
    parts of other transactions).

    DBI::Transaction::Repeated - repeat database transaction until
    success.

    At the first glance it may seem that

    local $dbh->{AutoCommit} = 0;

    is enough for implementing transactions. But for subtle reasons
    (which I now don't spend time to explain), it is not enough. But
    instead special OO-style module DBI::Transaction is needed.

    DBI::Transaction is the name for OO class for transactions in DBI.
    I wrote it, THOROUGHLY thought about the API, made it sophisticated
    as true OO style requires (Oh, I enumerated in my mind and had
    thrown away many variants which at first glance may seem better but
    are broken or not well fit with actual specification of DBI) and
    implemented it (well, pre-alpha).

    If you don't suffice with my reasoning that it cannot be simple but
    should be complex as for support of subtransactions which are paarts
    of other transactions etc., write broken DBI::Transaction::Simple or
    use broken "local $dbh->{AutoCommit} = 0;". (Well, it may be
    reasonable when you need higher performance than my complex module.)

    Well, who don't want to use my module, can use "local
    $dbh->{AutoCommit} = 0;" and keep his problems.

    This module should be listed at least for the reason that it
    revolutionarizes DB transactions in Perl programming, including
    repeated transactions with MySQL / InnoDB :-) Well, I wrote this
    module for a real work on a Web site. "local $dbh->{AutoCommit} =
    0;" and this module is needed for correct reliable database
    transactions processing written in modular OO-ish style.

    See more at http://ex-code.com/dbi-transactions/

  enteredby:   PORTON (Victor Porton)
  enteredon:   Thu Jan 27 19:51:26 2005 GMT

The resulting entry would be:

DBI::
::Transaction     cdphg Advanced database transactions with DBI      PORTON


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=88800000_50fbc14f3d411c78&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=88800000_50fbc14f3d411c78&SUBMIT_pause99_add_mod_insertit=1
