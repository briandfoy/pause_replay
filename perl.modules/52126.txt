Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:52126
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 26269 invoked from network); 7 Dec 2006 12:52:52 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 7 Dec 2006 12:52:52 -0000
Received: (qmail 6121 invoked by uid 225); 7 Dec 2006 12:52:51 -0000
Delivered-To: modules@perl.org
Received: (qmail 6108 invoked by alias); 7 Dec 2006 12:52:50 -0000
X-Spam-Status: No, hits=-2.5 required=8.0
	tests=BAYES_00,FORGED_RCVD_HELO
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
Received: from pause.fiz-chemie.de (HELO pause.perl.org) (195.149.117.110)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Thu, 07 Dec 2006 04:52:48 -0800
Received: from pause.perl.org (localhost.localdomain [127.0.0.1])
	by pause.perl.org (8.13.4/8.13.4/Debian-3sarge3) with ESMTP id kB7CqHeM010954;
	Thu, 7 Dec 2006 13:52:17 +0100
Received: (from nobody@localhost)
	by pause.perl.org (8.13.4/8.13.4/Submit) id kB7CqHF7010953;
	Thu, 7 Dec 2006 13:52:17 +0100
Date: Thu, 7 Dec 2006 13:52:17 +0100
Message-ID: <200612071252.kB7CqHF7010953@pause.perl.org>
Subject: Module submission Closure::Loop
Reply-To: modules@perl.org
To: modules@perl.org, andya@cpan.org
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Closure::Loop
  DSLIP:       bdpOp
  description: redo, last, next for closure based iterators
  userid:      ANDYA (Andy Armstrong)
  chapterid:   20 (Control_Flow_Utilities)
  communities:
    london.pm

  similar:

  rationale:

    Ruby iterators are implemented by passing a block to a method and
    calling back to that block periodically using yield. The same thing
    can be done in Perl using a closure

    $obj->forAll(sub { my $i = shift; # do stuff });

    This module is a mixin that provides a convenient way for the
    iterator to support next, last and redo within the loop body:

    $obj->forAll(sub { my $i = shift; $obj->last if $i > 1000; });

  enteredby:   ANDYA (Andy Armstrong)
  enteredon:   Thu Dec  7 12:52:17 2006 GMT

The resulting entry would be:

Closure::
::Loop            bdpOp redo, last, next for closure based iterators ANDYA


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=3be00000_7490dc70d97635f1&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=3be00000_7490dc70d97635f1&SUBMIT_pause99_add_mod_insertit=1
