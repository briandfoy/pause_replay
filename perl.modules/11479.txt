Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:11479
Return-Path: <whoelse@elitedigital.net>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 63840 invoked by uid 76); 1 May 2002 17:00:28 -0000
Received: from root@[63.97.42.15] (HELO altair.elitedigital.net) (63.97.42.15)
  by onion.perl.org (qpsmtpd/0.07) with SMTP; Wed May  1 17:00:28 2002 -0000
Received: from duh.elitedigital.net (duh [64.192.163.205])
	by altair.elitedigital.net (8.11.6/8.11.6) with ESMTP id g41HLvf30543
	(using TLSv1/SSLv3 with cipher DES-CBC3-SHA (168 bits) verified NO)
	for <modules@perl.org>; Wed, 1 May 2002 13:21:58 -0400
Message-ID: <5.1.0.14.2.20020501124507.02816798@elitedigital.net>
X-Sender: whoelse@elitedigital.net
Disposition-Notification-To: <whoelse@elitedigital.net>
X-Mailer: QUALCOMM Windows Eudora Version 5.1
Date: Wed, 01 May 2002 13:04:26 -0400
To: modules@perl.org
Subject: New Registration
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"; format=flowed
Approved: news@nntp.perl.org
From: whoelse@elitedigital.net (WhoElse?)

I am interested in submitting some of my work to CPAN; at this time I have 
one module packaged and documented for submission.  Thus, my 
request/information is provided herein.

Name: Ralph Padron
Email: whoelse@elitedigital.net
Preferred user ID for CPAN: WHOELSE
Reasons:
Initially, I've documented an old routine I wrote to find the "longitudinal 
redundancy check" (LRC) of a string.  LRC is a one byte character commonly 
used as a check-byte-field in data transmissions that are line-by-line and 
enclosed in STX-ETX characters.  I've used this in transmitting analog 
modem data as well as sometimes TCP socket transmission for financial 
protocols that are currently in use (credit card, debit card, check and 
other electronic payments: list of current users undisclosed).

I've found no module on CPAN that would provide the LRC of a string and 
although the routine is a fairly simple loop mechanism, a pre-existing 
module may help other authors not have to research the algorithm in any books.

I expect that I will be able to document some of my existing code and 
package this in subsequent modules related to error-detection for data 
transmission, financial protocols, or whatever else I manage to find on my 
old hard drives.

