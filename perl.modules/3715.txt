Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:3715
Return-Path: <nate@west.sun.com>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 25384 invoked from network); 29 Nov 2000 18:41:44 -0000
Received: from patan.sun.com (192.18.98.43)
  by tmtowtdi.perl.org with SMTP; 29 Nov 2000 18:41:44 -0000
Received: from westmail1.West.Sun.COM ([129.153.100.31])
	by patan.sun.com (8.9.3+Sun/8.9.3) with ESMTP id KAA17430;
	Wed, 29 Nov 2000 10:41:38 -0800 (PST)
Received: from matrix.West.Sun.COM (matrix.West.Sun.COM [129.153.51.97])
	by westmail1.West.Sun.COM (8.9.3+Sun/8.9.3/ENSMAIL,v1.7) with ESMTP id KAA01965;
	Wed, 29 Nov 2000 10:41:38 -0800 (PST)
Received: from west.sun.com (localhost [127.0.0.1])
	by matrix.West.Sun.COM (8.9.3+Sun/8.9.3) with ESMTP id KAA25865;
	Wed, 29 Nov 2000 10:41:37 -0800 (PST)
Sender: nwiger@matrix.West.Sun.COM
Message-ID: <3A254DE1.8F989C3C@west.sun.com>
Date: Wed, 29 Nov 2000 10:41:37 -0800
X-Mailer: Mozilla 4.61 [en] (X11; U; SunOS 5.8 sun4u)
X-Accept-Language: en
MIME-Version: 1.0
To: Chris Nandor <pudge@pobox.com>
CC: modules@perl.org
Subject: Re: Potential module - Module::Interface??
References: <3A24459D.9253E65D@west.sun.com>
	 <p05010409b649fe995e9c@[10.0.1.177]> <3A253B9B.5DA83232@west.sun.com> <p05010411b64af840551a@[10.0.1.177]>
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Approved: news@nntp.perl.org
From: nate@west.sun.com (Nathan Wiger)

Chris Nandor wrote:
> 
> Maybe you and I have different definitions of stub module.  It certainly
> doesn't set up OOP, but perhaps it could be extended to provide default
> constructors, etc., as an option to h2xs.  Just in case you don't know,
> here is what it does now:
> 
> [pudge@yaz pudge]$ h2xs -a -n Foo
> Writing Foo/Foo.pm
> Writing Foo/Foo.xs
> Writing Foo/Makefile.PL
> Writing Foo/test.pl
> Writing Foo/Changes
> Writing Foo/MANIFEST
> [pudge@yaz pudge]$ less Foo/Foo.pm
> package Foo;

Yeah, I was aware of that stuff. Your idea of putting new() and stuff
like that in h2xs I like better than mine - it makes more sense. Maybe a
flag to h2xs like you said that allows setting up OO stuff. -oo maybe.
:-) 

If it provided a simple new() and a little config() method which
provided simple attribute accessor methods that would be neat. In fact,
one could argue that the -a and the "-oo" flags could almost be
separated entirely, since OOP doesn't need @EXPORT_OK, Exporter, or any
of that other stuff.

If anyone's at all interested I could put together a patch for this.
What's the current version of h2xs? Should I email p5p about this?
Thanks.

-Nate
