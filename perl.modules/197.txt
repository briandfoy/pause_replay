Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:197
Return-Path: <k@hohenstaufen.in-berlin.de>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 31320 invoked from network); 23 Oct 1999 07:34:52 -0000
Received: from dubravka.in-berlin.de (HELO hohenstaufen.in-berlin.de) (0@193.175.21.65)
  by tmtowtdi.perl.org with SMTP; 23 Oct 1999 07:34:52 -0000
Received: (from k@localhost)
	by hohenstaufen.in-berlin.de (8.9.1a/8.9.1) id JAA29676;
	Sat, 23 Oct 1999 09:34:32 +0200
Sender: k@hohenstaufen.in-berlin.de
To: Tim Potter <tpot@acsys.anu.edu.au>
Cc: modules@perl.org
Subject: Re: New module Config::Access
References: <Pine.GSO.3.96.980806102826.996E-100000@acsys>
Date: 23 Oct 1999 09:34:31 +0200
In-Reply-To: Tim Potter's message of "Thu, 6 Aug 1998 10:40:36 +1000 (EST)"
Message-ID: <sfcln8upm2g.fsf@hohenstaufen.in-berlin.de>
Lines: 71
User-Agent: Gnus/5.070097 (Pterodactyl Gnus v0.97) Emacs/20.3
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Approved: news@nntp.perl.org
From: andreas.koenig@anima.de ((Andreas J. Koenig))

I just discovered this very old posting of Tim Potter and I'm not sure
what to do with it now. Config::Access is on CPAN for over a year. I
can just add it to the module list and approve the de facto
development or I can refuse to do so and maybe cause pain for
somebody.

So what do you think? Maybe the author should have the final word.

I really dislike Config:: as rootlevel namespace for something that
handles "authenticating of arbitrary client/service pairs" like
tcpwrappers does. Something like NetAccess:: would probably give a
good rootlevel namespace. But above all we need to consider how much
pain a rename would cause nowadays.

>>>>> On Thu, 6 Aug 1998 10:40:36 +1000 (EST), Tim Potter <tpot@acsys.anu.edu.au> said:

 > Hello.  I've put together a module from some code that I used in an
 > application at work.  It implements access control in a very similar form
 > to the /etc/hosts.{allow,deny} files in the well-known TCP wrappers
 > program.  

 > Name           DSLI  Description                                  Info
 > -------------  ----  -------------------------------------------- -----
 > Config::Access cdpO  Defines fcntl() constants (see File::Lock)   P5P

 > Hmmm...  On second thoughts maybe Config isn't such a good prefix since it
 > is so closely tied to low level perl stuff.  I thought it was pretty neat
 > at the time though. 

 > Here's the first part of the POD documentation for Config::Access.

 > NAME
 >        Config::Access - Perform simple access control

 > SYNOPSIS
 >            use strict;                  # not optional (-:
 >            use Config::Access;


 > DESCRIPTION
 >        The Config::Access module provides a method of
 >        authenticating arbitrary client/service pairs in a way
 >        very similar to that provided by the TCP wrappers by
 >        Wietse Venema <wietse@wzv.win.tue.nl>.

 >        This module can be useful for restricting access to
 >        certain parts of a script to a certain domain.  For
 >        example, a front end program to some device might deny
 >        certain users access to certain commands or only allow
 >        trusted users access to dangerous commands.

 >        The access control language is very similar to the access
 >        control language specified in hosts_access(5) for the TCP
 >        wrappers.  Two configuration files specify access rules.
 >        A file ending in .allow specifies rules to allow access
 >        and a file ending in .deny specifies rules to deny access.
 >        The prefix of these files is specified when a
 >        Config::Access object is created.


 > Tim.

 > -------------------------------------------------------------------------
 > modules@perl.org isn't a mailing list, just an alias for the front desk
 > of the Perl 5 modules list. Please do not subscribe. Visit the archive at
 > http://www.xray.mpe.mpg.de/mailing-lists/modules instead. Thanks!



-- 
andreas
