Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:37756
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 16527 invoked from network); 19 Jan 2005 15:57:44 -0000
Received: from x1.develooper.com (63.251.223.170)
  by lists.develooper.com with SMTP; 19 Jan 2005 15:57:44 -0000
Received: (qmail 16421 invoked by uid 225); 19 Jan 2005 15:57:43 -0000
Delivered-To: modules@perl.org
Received: (qmail 16414 invoked by alias); 19 Jan 2005 15:57:42 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
Received: from pause.fiz-chemie.de (HELO pause.perl.org) (195.149.117.110)
  by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Wed, 19 Jan 2005 07:57:40 -0800
Received: from pause.perl.org (localhost [127.0.0.1])
	by pause.perl.org (8.12.3/8.12.3/Debian-7.1) with ESMTP id j0JFvP64014413;
	Wed, 19 Jan 2005 16:57:28 +0100
Received: (from nobody@localhost)
	by pause.perl.org (8.12.3/8.12.3/Debian-7.1) id j0JFvOhE014411;
	Wed, 19 Jan 2005 16:57:24 +0100
Date: Wed, 19 Jan 2005 16:57:24 +0100
Message-ID: <200501191557.j0JFvOhE014411@pause.perl.org>
Subject: Module submission Test::MockDBI
Reply-To: modules@perl.org
To: modules@perl.org, mlfisher@cpan.org
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Test::MockDBI
  DSLIP:       adpOp
  description: Test by mocking-up DBI
  userid:      MLFISHER (Mark Leighton Fisher)
  chapterid:    3 (Development_Support)
  communities:
    comp.lang.perl.modules

  similar:
    DBD::Mock DBI::trace

  rationale:

    Test::MockDBI is a module for testing DBI interfaces by mocking-up
    the DBI with Test::MockObject::Extends. It is a testing module, so
    it belongs in Test::. It uses Test::MockObject, but does not
    subclass Test::MockObject (HAS-A Test::MockObject), so MockDBI is
    probably the right choice for the second-level name, as it is a
    testing module that mocks the DBI.

    Test::MockDBI allows you to modify the DBI's behavior however you
    choose by creating rules for the DBI's behavior, where the rules can
    be sensitive to what SQL is being processed and what DBI testing
    mode(s) you choose. This is an improvement over DBD::Mock or
    DBI::trace(), as you can change the behavior as well as never having
    to hit an actual database (unless you want to).

    The advantage of using Test::MockObject::Extends for testing the
    DBI with Test::MockDBI is that Test::MockDBI can be used to test
    programs that use DBI without changing the base code of the program
    -- the Test::MockDBI code can be added without the rest of the
    program even having to know about Test::MockDBI (very handy for us
    consultants).

    Test::MockDBI is listed as alpha, because although the code I have
    written so far is probably beta or release quality, I have not
    mocked-up the whole DBI interface yet -- just the pieces I needed.

  enteredby:   MLFISHER (Mark Leighton Fisher)
  enteredon:   Wed Jan 19 15:57:19 2005 GMT

The resulting entry would be:

Test::
::MockDBI         adpOp Test by mocking-up DBI                       MLFISHER


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=74800000_15b6968b77b1cf03&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=74800000_15b6968b77b1cf03&SUBMIT_pause99_add_mod_insertit=1
