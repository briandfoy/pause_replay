Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:15215
Return-Path: <vze4rnqz@verizon.net>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 51866 invoked by uid 76); 11 Nov 2002 19:54:47 -0000
Received: from pop016pub.verizon.net (HELO pop016.verizon.net) (206.46.170.173) by onion.perl.org (qpsmtpd/0.12) with SMTP; 2002-11-11 19:54:47Z
Received: from verizon.net ([68.161.124.20]) by pop016.verizon.net          (InterMail vM.5.01.05.09 201-253-122-126-109-20020611) with ESMTP          id <20021111195414.WNND1630.pop016.verizon.net@verizon.net>;          Mon, 11 Nov 2002 13:54:14 -0600
Received: from verizon.net (localhost [127.0.0.1])	by verizon.net (8.12.6/8.12.6/Debian-8) with ESMTP id gABJrf0e017454;	Mon, 11 Nov 2002 14:53:41 -0500
Received: (from kstar@localhost)	by verizon.net (8.12.6/8.12.6/Debian-8) id gABJrflM017452;	Mon, 11 Nov 2002 14:53:41 -0500
X-Authentication-Warning: border.my.domain: kstar set sender to vze4rnqz@verizon.net using -f
Date: Mon, 11 Nov 2002 14:53:40 -0500
To: David Muir Sharnoff <muir@idiom.com>
Cc: _brian_d_foy <comdog@panix.com>, modules@perl.org
Subject: Re: Tie::LookupAsFunction
Message-ID: <20021111195340.GA17392@verizon.net>
References: <0BBD61E4-F48B-11D6-8CF8-003065D64CBE@contiller.se> <200211102012.gAAKCo0U036444@idiom.com> <20021111104220.PCOG20487.sccrmhc02.attbi.com@10-0-1-2> <200211111916.gABJGmsG074878@idiom.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <200211111916.gABJGmsG074878@idiom.com>
User-Agent: Mutt/1.4i
X-Authentication-Info: Submitted using SMTP AUTH PLAIN at pop016.verizon.net from [68.161.124.20] at Mon, 11 Nov 2002 13:54:14 -0600
X-SMTPD: qpsmtpd/0.12, http://develooper.com/code/qpsmtpd/
Approved: news@nntp.perl.org
From: kstar@cpan.org ("Kurt D. Starsinic")

On Nov 11, David Muir Sharnoff wrote:
> 
> * In article <200211102012.gAAKCo0U036444@idiom.com>, David Muir Sharnoff <muir@idiom.com> wrote:
> * 
> * > * 
> * > * Or even better, Hash::ComputedValue  ?
> * 
> * > Hmmm.  The way I think it will be used is mostly to do minor
> * > transformations on values like adding commas to a number eg: 1,000.
> * 
> * that's still a computed value, though.
> * 
> * > So, how about Hash::Transforms?
> * 
> * i don't like that one so much.  it is much less clear.
> 
> Okay, that one is nixed.
> 
> * and, just out of curiousity, what advantage does your module
> * have over a closure?  it seems you have to do more work to get
> * the same effect.
> 
> How so?  I don't use closures that often so maybe I'm missing
> something, but it seems to me that there isn't any similarity
> at all.  The purpose of my module is to save a few characters.
> 
> Instead of:
> 
> 	sub xyz {
> 		code
> 	}
> 
> 	" some string @{[ xyz(abc) ]} "
> 
> You have
> 
> 	use my_module;
> 	tie %xyz, 'my_module', 
> 		sub {
> 			code
> 		};
> 
> 	" some string $xyz{abc} "
> 
> 
> Useful if you're going to want to interpolate a function a lot.
> Worse that useless otherwize.

    So, how is yours different from MJD's Interpolation.pm?

    - Kurt

