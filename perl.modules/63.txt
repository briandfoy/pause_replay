Newsgroups: perl.perl5.porters,perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.perl5.porters:2325 perl.modules:63
Return-Path: <John.Redford@fmr.com>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 11718 invoked from network); 15 Oct 1999 01:25:38 -0000
Received: from gw16e.fmr.com (HELO gw16i.fmr.com) (192.223.252.80)
  by tmtowtdi.perl.org with SMTP; 15 Oct 1999 01:25:38 -0000
Received: (from smtp@localhost)
	by gw16i.fmr.com (8.8.7/8.8.7) id VAA18975;
	Thu, 14 Oct 1999 21:25:36 -0400 (EDT)
Received: from msgmmk101nts.fmr.com(172.25.150.20) by gw16i.fmr.com via smap (V2.0)
	id xma018198; Thu, 14 Oct 99 21:24:36 -0400
Received: by msgmmk101nts.fmr.com with Internet Mail Service (5.5.2448.0)
	id <48P3HK6M>; Thu, 14 Oct 1999 21:24:34 -0400
Message-ID: <C139F4D49384D2118EB60008C7A4337B578491@MSGBOS675NTS.fmr.com>
To: "'Ronald J Kimball'" <rjk@linguist.dartmouth.edu>,
        Michael King
	 <mike808@my-Deja.com>
Cc: modules@perl.org, perl5-porters@perl.org
Subject: RE: NEW MODULE (pragma): import.pm
Date: Thu, 14 Oct 1999 12:03:51 -0400
MIME-Version: 1.0
X-Mailer: Internet Mail Service (5.5.2448.0)
Content-Type: text/plain;
	charset="iso-8859-1"
Approved: news@nntp.perl.org
From: John.Redford@fmr.com ("Redford, John")

This essentially is asking for a way for Module A to move symbols from
Module B to Module C. See my previous mail. This could easily be done by
dynamically setting up Module C as a "reflector" for another module or
modules.

Interesting questions would be around what to do when there are symbols
conflicts, and should it be legal to export into Module C if Module C
already exists!


		-----Original Message-----
		From:	Ronald J Kimball [mailto:rjk@linguist.dartmouth.edu]
		Sent:	Thursday, October 14, 1999 11:47 AM
		To:	Michael King
		Cc:	modules@perl.org; perl5-porters@perl.org
		Subject:	Re: NEW MODULE (pragma): import.pm


		I would suggest a different syntax for that functionality,
which I think
		has several advantages.  Something like this:

		use alias qw(Really::Long::Package::Name Name);

		which would require Really/Long/Package/Name.pm, call its
import function,
		and then alias Name to the long package name.

		Ronald
