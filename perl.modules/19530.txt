Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:19530
Return-Path: <dude@chrismaloney.com>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 26176 invoked by uid 76); 18 Mar 2003 01:22:01 -0000
Received: from qmailr@one.develooper.com (HELO ran-out.mx.develooper.com) (64.81.84.115) by onion.perl.org (qpsmtpd/0.20) with SMTP; 2003-03-18 01:22:01Z
Received: (qmail 4035 invoked by uid 225); 18 Mar 2003 01:21:39 -0000
Delivered-To: modules@perl.org
Received: (qmail 4002 invoked by uid 507); 18 Mar 2003 01:21:02 -0000
Received: from rly-ip03.mx.aol.com (HELO rly-ip03.mx.aol.com) (64.12.138.7) by one.develooper.com (qpsmtpd/0.21-dev) with SMTP; Mon, 17 Mar 2003 17:20:57 -0800
Received: from  logs-wm.proxy.aol.com (logs-wm.proxy.aol.com [205.188.199.132]) by rly-ip03.mx.aol.com (v89.10) with ESMTP id RELAYIN8-0317201923; Mon, 17 Mar 2003 20:19:23 1900
Received: from DreadNought.chrismaloney.com (AC8A97BE.ipt.aol.com [172.138.151.190])	by logs-wm.proxy.aol.com (8.12.8/8.12.8) with ESMTP id h2I1GkZ8156194;	Mon, 17 Mar 2003 20:16:47 -0500 (EST)
Message-ID: <5.1.1.6.0.20030317194934.00bbc9f8@pop3.friend.ly.net>
X-Sender: watermalon@pop3.friend.ly.net
X-Mailer: QUALCOMM Windows Eudora Version 5.1.1
Date: Mon, 17 Mar 2003 20:16:39 -0500
To: modules@perl.org
Subject: New module:  Physics::Unit
Cc: Gene Boggs <gene@ology.net>
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"
X-Apparently-From: Dreadn0@aol.com
X-SMTPD: qpsmtpd/0.21-dev, http://develooper.com/code/qpsmtpd/
X-Spam-Check-By: one.develooper.com
X-Spam-Status: No, hits=3.3 required=7.0 tests=CARRIAGE_RETURNS,RCVD_IN_OSIRUSOFT_COM,SPAM_PHRASE_05_08,X_OSIRU_DUL,X_OSIRU_DUL_FH version=2.44
X-SMTPD: qpsmtpd/0.20, http://develooper.com/code/qpsmtpd/
Approved: news@nntp.perl.org
From: dude@chrismaloney.com (Christopher Maloney)

Physics::Unit  RdpO   Units and scalars corresponding to physical quantities    KLORTHO

I've recently uploaded this module, with the help of GENE - Gene Boggs.

I understand that you'll want a justification for the use of a new root
namespace.  Though this is similar to a few other modules already on the
CPAN, we feel that this has significant new functionality, and definitely
does belong in the Physics::* namespace.

The related modules that we've investigated are:
  Convert::Units
  Data::Dimensions
  Math::Units
  Math::Calc::Units

Each of these modules has unique and interesting features.  However, one big  
drawback of all of them is a severe lack of documentation.  I'm in the process
of corresponding with each of the authors of these modules, to talk about the
possibility of merging them all under the Physics::Unit module.  All of these
modules are somewhat "stale"; i.e. they haven't been updated in quite a long
time.

An alternative would be to update one of the above modules with the new 
functionality of Physics::Unit.  This is not a good idea, IMO, because 
Physics::Unit is already more mature than any of the above modules.  The
documentation and examples are quite thorough, and quite a few tests are 
included (although they haven't as yet been integrated in to the "make
test" command.  Right now the tests reside in the eg/ directory.)
Also, I hope to convince you that the Physics::* namespace makes more
sense than any of the above, and that's another reason why my new module
should become the "master".


The objects of the Physics::Unit and related classes are designed to hold data 
values that represent physical quantities.  

They are not just for doing unit conversions; they can be used in any program 
which simulates or models the real world.  Hence the Convert::* namespace is
not appropriate.

The Data::Dimensions module is very similar in some respects to my module.
However, it lacks the nice unit expression parser that mine does.
I feel that the Data::* root namespace is too vague and general for this
module.  The Data::Dimensions module itself is not well-named.  "dimensions"
could refer to any number of things other than physical units.

Finally, the Math::* root namespace is clearly not appropriate.  This
module has very little to do with pure mathematics.  Furthermore, we would
argue, that since there is a Math::* root namespace, it only makes sense 
that there should be a Physics::* root namespace as well.  These are two
realms of knowledge and algorithms, that, for example,
universities around the world recognize as distinct.


Thanks for your consideration, and please let me know if you want more
information, or if there are any other hoops we need to jump through to 
make this module see the glorious light of the CPAN module lists!

