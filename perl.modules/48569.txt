Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:48569
Return-Path: <IGuthrie@aol.com>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 13834 invoked from network); 28 Apr 2006 04:55:05 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 28 Apr 2006 04:55:05 -0000
Received: (qmail 10815 invoked by uid 225); 28 Apr 2006 04:55:05 -0000
Delivered-To: modules@perl.org
Received: (qmail 10809 invoked by alias); 28 Apr 2006 04:55:05 -0000
X-Spam-Status: No, hits=0.6 required=8.0
	tests=BAYES_20,HTML_30_40,HTML_MESSAGE,NO_REAL_NAME,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: domain of IGuthrie@aol.com designates 205.188.144.208 as permitted sender)
Received: from imo-d22.mx.aol.com (HELO imo-d22.mx.aol.com) (205.188.144.208)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Thu, 27 Apr 2006 21:55:03 -0700
Received: from IGuthrie@aol.com
	by imo-d22.mx.aol.com (mail_out_v38_r7.5.) id d.21d.b49ff55 (48576)
	 for <modules@perl.org>; Fri, 28 Apr 2006 00:54:50 -0400 (EDT)
Message-ID: <21d.b49ff55.3182fa1a@aol.com>
Date: Fri, 28 Apr 2006 00:54:50 EDT
Subject: Filesys.pm root module.
To: modules@perl.org
MIME-Version: 1.0
Content-Type: multipart/alternative; boundary="-----------------------------1146200090"
X-Mailer: 9.0 Security Edition for Windows sub 2340
X-Old-Spam-Flag: NO
Approved: news@nntp.perl.org
From: IGuthrie@aol.com

-------------------------------1146200090
Content-Type: text/plain; charset="US-ASCII"
Content-Transfer-Encoding: 7bit

 
I currently have 3 modules under the Filesys namespace: Df, Statvfs, and  
Statfs. I plan to add two more, Fstatfs, Fstatvfs, and update Df to take  
filehandles as an option. I also want to include a more portable  version of the Df 
module that works on Unix and Windows, for which I  haven't decided on a name 
yet.
 
I would like to bundle all of these modules as one package. My original  
intent was to ask for the Filesys::Utils namespace and move all the modules  under 
that (Filesys::Utils::Statvfs, etc). It would be easier, neater, and make  
more sense to keep them under Filesys namespace. 
 
Since most of my modules use XS, to do this I would have to  create a 
Filesys.pm module that each of my modules would 'use' to access  the XSUBs. I know of 
no other way for multiple modules in one bundle to  handle this. This is how 
the IO module is implemented for instance, and is the  way described in the XS 
documentation.
 
Currently no one seems to own Filesys.pm and I wanted to know if this is an  
option? It would be implemented almost in the exact same way IO.pm is, where 
the  bulk of the work is distributed to the modules under it.
 
There aren't very many modules under the Filesys namespace and there  doesn't 
seem to be any coherent bundle for the more central modules. Is this a  
possibility, or should I just request a new namespace to put everything  under? 
What are your thoughts on the best options? What goes into deciding how a  root 
module is owned and when it is time to implement one?
 
Cheers,
Ian Guthrie


-------------------------------1146200090
Content-Type: text/html; charset="US-ASCII"
Content-Transfer-Encoding: quoted-printable

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD>
<META http-equiv=3DContent-Type content=3D"text/html; charset=3DUS-ASCII">
<META content=3D"MSHTML 6.00.2900.2873" name=3DGENERATOR></HEAD>
<BODY id=3Drole_body style=3D"FONT-SIZE: 10pt; COLOR: #000000; FONT-FAMILY:=20=
Arial"=20
bottomMargin=3D7 leftMargin=3D7 topMargin=3D7 rightMargin=3D7><FONT id=3Drol=
e_document=20
face=3DArial color=3D#000000 size=3D2>
<DIV>
<DIV>I currently have 3 modules under the Filesys namespace: Df, Statvfs, an=
d=20
Statfs. I plan to add two more, Fstatfs, Fstatvfs, and update Df to take=20
filehandles as an&nbsp;option.&nbsp;I also want to include a more portable=20
version of the Df module that works on&nbsp;Unix and Windows,&nbsp;for which=
 I=20
haven't decided on a name yet.</DIV>
<DIV>&nbsp;</DIV>
<DIV>I would like to bundle all of these modules as one package. My original=
=20
intent was to ask for the Filesys::Utils namespace and move all the modules=20
under that (Filesys::Utils::Statvfs, etc). It would be easier, neater, and m=
ake=20
more sense to keep them under Filesys namespace. </DIV>
<DIV>&nbsp;</DIV>
<DIV>Since&nbsp;most of my modules use XS,&nbsp;to do this I would have to=20
create a&nbsp;Filesys.pm module that each of my modules would 'use' to acces=
s=20
the XSUBs. I know of no other way&nbsp;for multiple modules in one bundle to=
=20
handle this. This is how the IO module is implemented for instance, and is t=
he=20
way described&nbsp;in the XS documentation.</DIV>
<DIV>&nbsp;</DIV>
<DIV>Currently no one seems to own Filesys.pm and I wanted to know if this i=
s an=20
option? It would be implemented almost in the exact same way IO.pm is, where=
 the=20
bulk of the work is distributed to the modules under it.</DIV>
<DIV>&nbsp;</DIV>
<DIV>There aren't very many modules under the Filesys namespace and there=20
doesn't seem to be any coherent bundle for the more central modules. Is this=
 a=20
possibility, or should I just&nbsp;request a new namespace to put everything=
=20
under? What are your thoughts on the best options? What goes into deciding h=
ow a=20
root module is owned and when it is time to implement one?</DIV>
<DIV>&nbsp;</DIV>
<DIV>Cheers,</DIV>
<DIV>Ian Guthrie</DIV></DIV></FONT></BODY></HTML>

-------------------------------1146200090--
