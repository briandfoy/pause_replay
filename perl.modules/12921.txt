Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:12921
Return-Path: <liz@dijkmat.nl>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 14943 invoked by uid 76); 29 Jul 2002 12:32:46 -0000
Received: from smtpzilla3.xs4all.nl (HELO smtpzilla3.xs4all.nl) (194.109.127.139)
  by onion.perl.org (qpsmtpd/0.07b) with SMTP; Mon Jul 29 12:32:46 2002 -0000
Received: from valizo (a80-127-233-4.dial.xs4all.nl [80.127.233.4])
	by smtpzilla3.xs4all.nl (8.12.0/8.12.0) with ESMTP id g6TCWD7g081945;
	Mon, 29 Jul 2002 14:32:13 +0200 (CEST)
Message-ID: <4.2.0.58.20020729142531.035c3920@mickey.dijkmat.nl>
X-Sender: lm@mickey.dijkmat.nl
X-Mailer: QUALCOMM Windows Eudora Pro Version 4.2.0.58 
Date: Mon, 29 Jul 2002 14:32:05 +0200
To: Arthur Bergman <arthur@contiller.se>
Subject: Re: CPAN Upload: E/EL/ELIZABETH/Thread-Needs-0.01.tar.gz
Cc: Tim Bunce <Tim.Bunce@pobox.com>, modules@perl.org
In-Reply-To: <4171F8FF-A2EA-11D6-972A-003065D64CBE@contiller.se>
References: <4.2.0.58.20020729124708.025d1d20@mickey.dijkmat.nl>
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"; format=flowed
Approved: news@nntp.perl.org
From: liz@dijkmat.nl (Elizabeth Mattijsen)

At 01:56 PM 7/29/02 +0200, Arthur Bergman wrote:
>>At 10:44 AM 7/29/02 +0100, Tim Bunce wrote:
>>>"Thread::Needs" isn't a very descriptive name - it's too general.
>>>Something like "Thread::NeedsModules" would be better.
>>Hmmm...  if that's the only problem you have with it, I'm glad...  ;-)
>I have been thinking maybe it should be called Thread::Modules;
>
>use Thread::Modules qw(foo bar baz); #these must be cloned
>no Thread::Modules qw(don't need this); #these should not be cloned

Thread::Modules gives me the impression that you're listing modules that 
should be C<use>d within the thread only.  Which is not what it does.  And 
telling a thread which modules to use, is action at a distance.  But it 
could be useful...

I guess we need to find a way to emphasize that the module _removes_ 
modules from the memory of a thread _when_ the thread has started.  It 
doesn't add anything, it merely removes stuff that we don't need after it 
has been copied.

I agree, we need a better way for specifying which modules wind up in which 
threads, but this is the best thing I've been able to come up with.  And it 
does work right now, with 5.8.0...


Liz

