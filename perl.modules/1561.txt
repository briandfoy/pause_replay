Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:1561
Return-Path: <gem@mccarroll.demon.co.uk>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 16927 invoked from network); 6 Apr 2000 14:18:29 -0000
Received: from unknown (HELO mccarroll.demon.co.uk) (212.111.38.232)
  by tmtowtdi.perl.org with SMTP; 6 Apr 2000 14:18:29 -0000
Received: (from gem@localhost)
	by mccarroll.demon.co.uk (8.9.3/8.9.3/SuSE Linux 8.9.3-0.1) id PAA06047
	for modules@perl.org; Thu, 6 Apr 2000 15:10:55 +0100
Date: Thu, 6 Apr 2000 15:10:55 +0100
To: modules@perl.org
Subject: New module naming
Message-ID: <20000406151055.A5996@mccarroll>
Reply-To: greg@mccarroll.demon.co.uk
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.1.9i
X-Operating-System: Linux 2.2.13 i686
Approved: news@nntp.perl.org
From: greg@mccarroll.demon.co.uk (Greg McCarroll)


Following on from discussions on London.pm i've implemented a small
module called Mutator, Mutator once inherited allows a module to
dynamically overload another packages methods ontop of itself creating
a third holding module (or mutant). 

Not sure which namespace to put it in, either Class::Mutator or
Silly::Mutator would work depending on your feelings on dynamic
polymorphism.

DSLI potentially is

Class::Mutator  bdpO  Dynamic polymorphism implemented in Perl  GMCCAR

-- 
Greg McCarroll                        http://www.mccarroll.uklinux.net
                            "To iterate is human, to recurse, divine." 
                                                    - L. Peter Deutsch

