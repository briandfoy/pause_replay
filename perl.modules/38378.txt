Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:38378
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 23111 invoked from network); 14 Feb 2005 15:48:20 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 14 Feb 2005 15:48:20 -0000
Received: (qmail 9012 invoked by uid 225); 14 Feb 2005 15:48:20 -0000
Delivered-To: modules@perl.org
Received: (qmail 9008 invoked by alias); 14 Feb 2005 15:48:19 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
Received: from pause.fiz-chemie.de (HELO pause.perl.org) (195.149.117.110)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Mon, 14 Feb 2005 07:48:17 -0800
Received: from pause.perl.org (localhost [127.0.0.1])
	by pause.perl.org (8.12.3/8.12.3/Debian-7.1) with ESMTP id j1EFmA64015203
	for <modules@perl.org>; Mon, 14 Feb 2005 16:48:12 +0100
Received: (from nobody@localhost)
	by pause.perl.org (8.12.3/8.12.3/Debian-7.1) id j1EFm8Sq015201;
	Mon, 14 Feb 2005 16:48:08 +0100
Date: Mon, 14 Feb 2005 16:48:08 +0100
Message-ID: <200502141548.j1EFm8Sq015201@pause.perl.org>
Subject: Module submission Class::Multi
Reply-To: modules@perl.org
To: modules@perl.org
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Class::Multi
  DSLIP:       adpfl
  description: Tools for dealing with multiple inheritance.
  userid:      KCODY (K Cody)
  chapterid:    2 (Perl_Core_Modules)
  communities:
    SourceForge http://sourceforge.net/projects/class-multi

  similar:
    Class::ISA

  rationale:

    A more robust set of tools for making decisions based on an @ISA
    tree. In fact, Class::ISA itself could easily be rewritten to use
    this module as its implementation.

    Provides three functions:

    Generic traversal function: $rc = walk { BLOCK } $subclass,
    @avoidance;

    Caller-relative equivalent of can(): $methref = other( $class,
    $name );

    Same, but returns class name instead of code ref: $class =
    otherpkg( $class, $name );

    Provides one syntactic sweetener:

    Caller-relative equivalent of SUPER:: $rc = $self->OTHER::method(
    @_ );

    'other' and friends look for the specified method name that occurs
    -AFTER- the calling package in the inheritance tree.

    Written as a new class because Class::ISA is part of the core
    distribution, and therefore not so easily updated.

  enteredby:   KCODY (K Cody)
  enteredon:   Mon Feb 14 15:48:03 2005 GMT

The resulting entry would be:

Class::
::Multi           adpfl Tools for dealing with multiple inheritance. KCODY


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=f0900000_ee7139e1741d850e&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=f0900000_ee7139e1741d850e&SUBMIT_pause99_add_mod_insertit=1
