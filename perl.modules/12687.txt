Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:12687
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 64979 invoked by uid 76); 15 Jul 2002 20:49:56 -0000
Received: from root@[212.40.160.59] (HELO pause.perl.org) (212.40.160.59)
  by onion.perl.org (qpsmtpd/0.07b) with SMTP; Mon Jul 15 20:49:56 2002 -0000
Received: (from nobody@localhost)
	by pause.perl.org (8.11.6/8.11.6) id g6FKnL131730;
	Mon, 15 Jul 2002 22:49:21 +0200
Date: Mon, 15 Jul 2002 22:49:21 +0200
Message-ID: <200207152049.g6FKnL131730@pause.perl.org>
Subject: Module submission Crypt::Tea
Reply-To: modules@perl.org
To: modules@perl.org, pjb@cpan.org
Approved: news@nntp.perl.org
From: upload@p11.speed-link.de ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Crypt::Tea
  DSLIP:       Rdpfp
  description: TEA in Perl and JavaScript
  userid:      PJB (Peter Billam)
  chapterid:   14 (Security_and_Encryption)
  communities:

  similar:

  rationale:

    Crypt::Tea because it's encryption and it implements TEA, the the
    Tiny Encryption Algorithm. I think it'll be useful because it
    implements TEA compatibly in both Perl and JavaScript thus enabling
    CGIs to communicate with browsers. Subroutines offer encryption,
    decryption and digest and all cyphertext is ascii-encoded to prevent
    munging. Another subroutine returns JavaScript code which offers
    identical functions in JS, and this will be used by GCIs to feed the
    browser. A wrapper executable 'tea' is included for command-line
    use. Tea.pm is used by the CGI::Htauth.pm authentication module ...

  enteredby:   PJB (Peter Billam)
  enteredon:   Mon Jul 15 20:49:21 2002 GMT

The resulting entry would be:

Crypt::
::Tea             Rdpfp TEA in Perl and JavaScript                   PJB


Thanks for registering,
The Pause Team

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=66100000_d71a47bb1d9e5ff9&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=66100000_d71a47bb1d9e5ff9&SUBMIT_pause99_add_mod_insertit=1
