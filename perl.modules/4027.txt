Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:4027
Return-Path: <darren@DarrenDuncan.net>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 24081 invoked from network); 31 Dec 2000 02:03:05 -0000
Received: from palladium.baremetal.com (208.184.111.7)
  by tmtowtdi.perl.org with SMTP; 31 Dec 2000 02:03:05 -0000
Received: from [24.66.166.9] (h24-66-166-9.gv.shawcable.net [24.66.166.9])
	by palladium.baremetal.com (8.9.3/8.9.3) with ESMTP id RAA24478;
	Sat, 30 Dec 2000 17:55:05 -0800
Mime-Version: 1.0
Message-ID: <f04320400b67433340ae1@[24.66.166.9]>
In-Reply-To: <14926.13870.630503.329154@phoenix.squirrel.nl>
References: <f0432040bb67327ea3997@[24.66.166.9]>
 <14926.13870.630503.329154@phoenix.squirrel.nl>
Date: Sat, 30 Dec 2000 18:02:58 -0800
To: modules@perl.org
Subject: request namespaces for Data::MultiValuedHash, CGI::MultiValuedHash
Cc: Johan Vromans <jvromans@squirrel.nl>
Content-Type: text/plain; charset="us-ascii" ; format="flowed"
Approved: news@nntp.perl.org
From: darren@DarrenDuncan.net (Darren Duncan)

Quoting Johan Vromans on 2000 Dec 30:
>I would propose to split the functionality. For example,
>Data::MultiValuedHash that handles the hash with multiple values, and
>CGI::MultiValuedHash, which derives from Data::MultiValuedHash, that
>adds the url encoding and other CGI specifics.

Thanks a lot Johan, that's an excellent idea.

It just goes to show that sometimes the ideal solution is right in 
front of me but I fail to see it.  And considering that I was trying 
to push the module as being two different things, a generic data 
structure and a CGI tool, it makes sense to split it up.  I must have 
been thinking that it couldn't get any more split-up before...

And so I *will* split the module as you suggested.  It is very easy to do...

The names you suggested for the pieces are good and descriptive, 
although a bit long.  But I don't think I can do any better.

The funny thing is that I had previously rejected using 
"multi-valued" with "hash" because it sounded like I was stating a 
property already normal with hashes.  That is, someone could say "of 
course hashes have multiple values, and they even have multiple 
keys"...

And so, here is appropriate DLSI for the new modules:

Data::MultiValuedHash - bdpO - Hash whose keys can have multiple 
ordered values.
CGI::MultiValuedHash  - bdpO - Store and manipulate url-encoded data.

These should be uploaded to CPAN tonight on approval, under the 
authorname of DUNCAND.

If anyone has further suggestions, such as whether the above should 
be separate distributions or a combined one (will do separate by 
default), please say.

Good days,

// Darren Duncan
