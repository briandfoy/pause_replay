Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:71285
Return-Path: <matthewt@agaton.scsys.co.uk>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 6662 invoked from network); 20 May 2010 18:14:10 -0000
Received: from x1.develooper.com (207.171.7.70)
  by x6.develooper.com with SMTP; 20 May 2010 18:14:10 -0000
Received: (qmail 5445 invoked by uid 225); 20 May 2010 18:14:09 -0000
Delivered-To: modules@perl.org
Received: (qmail 5435 invoked by alias); 20 May 2010 18:14:09 -0000
X-Spam-Status: No, hits=-0.0 required=8.0
	tests=T_RP_MATCHES_RCVD
X-Spam-Check-By: la.mx.develooper.com
Received: from jules.scsys.co.uk (HELO jules.scsys.co.uk) (217.168.153.160)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Thu, 20 May 2010 11:14:08 -0700
Received: from [217.168.150.167] (helo=agaton.scsys.co.uk)
	by jules.scsys.co.uk with esmtps (TLS-1.0:RSA_AES_256_CBC_SHA1:32)
	(Exim 4.60)
	(envelope-from <matthewt@agaton.scsys.co.uk>)
	id 1OFAFv-0000of-2t; Thu, 20 May 2010 18:14:03 +0000
Received: from matthewt by agaton.scsys.co.uk with local (Exim 4.60)
	(envelope-from <matthewt@agaton.scsys.co.uk>)
	id 1OFAFu-0001Xl-7P; Thu, 20 May 2010 19:14:02 +0100
Date: Thu, 20 May 2010 19:14:02 +0100
To: modules@perl.org
Cc: emazep@cpan.org
Subject: Re: Module submission DBIx::DoMore
Message-ID: <20100520181402.GY15270@agaton.scsys.co.uk>
References: <201005200049.o4K0nthf021769@pause.fiz-chemie.de>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <201005200049.o4K0nthf021769@pause.fiz-chemie.de>
User-Agent: Mutt/1.5.11
Approved: news@nntp.perl.org
From: mst@shadowcat.co.uk (Matt S Trout)

On Thu, May 20, 2010 at 02:49:55AM +0200, Perl Authors Upload Server wrote:
> 
> The following module was proposed for inclusion in the Module List:
> 
>   modid:       DBIx::DoMore
>   DSLIP:       RdpOp
>   description: Multiple SQL statements in a single batch
>   userid:      EMAZEP (Emanuele Zeppieri)
>   chapterid:   7 (Database_Interfaces)
>   communities:
> 
>   similar:
>     DBIx::RunSQL
> 
>   rationale:
> 
>     Some DBI drivers don't support the execution of multiple statements
>     in a single "do()" call. This module tries to overcome such
>     limitation, letting the user execute any number of SQL statements
>     (of any kind, not only DDL statements) in a single batch, with any
>     DBI driver.
> 
>     No CPAN module I'm aware of offer such functionality except for
>     DBIx::RunSQL, which however uses a raw split on the semicolon
>     character to separate the given SQL code into the atomic statements
>     it is composed of, which of course fails in a number of cases.
> 
>     DBIx::DoMore instead uses a more sophisticated algorithm, so that
>     it is able to correctly handle the presence of the semicolon inside
>     identifiers, values or "BEGIN..END" blocks.
> 
>     Automatic rollback in case of failure (which is optional anyway) is
>     another (maybe) useful feature offered by DBIx::DoMore which
>     DBIx::RunSQL seem to lack.

How about DBIx::MultipleStatementDo then?

Also, can we please have the splitting behaviour in a standalone module
so I can steal it for DBIx::Class to use without copy and paste :)

-- 
Matt S Trout - Shadowcat Systems - Perl consulting with a commit bit and a clue

http://shadowcat.co.uk/blog/matt-s-trout/   http://twitter.com/shadowcat_mst/

Email me now on mst (at) shadowcat.co.uk and let's chat about how our Catalyst
commercial support, training and consultancy packages could help your team.
