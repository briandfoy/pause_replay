Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:2284
Return-Path: <autarch@urth.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 20188 invoked from network); 27 Jun 2000 13:42:29 -0000
Received: from urth.org (autarch@216.161.20.244)
  by tmtowtdi.perl.org with SMTP; 27 Jun 2000 13:42:29 -0000
Received: from localhost (autarch@localhost)
	by urth.org (8.9.3/8.9.3) with ESMTP id IAA18535;
	Tue, 27 Jun 2000 08:51:57 -0500
Date: Tue, 27 Jun 2000 08:51:57 -0500 (CDT)
To: Graham Barr <gbarr@pobox.com>
cc: "Andreas J. Koenig" <andreas.koenig@anima.de>, modules@perl.org
Subject: Re: two new ones
In-Reply-To: <20000627142620.F494@pobox.com>
Message-ID: <Pine.LNX.4.21.0006270845040.18202-100000@urth.org>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Approved: news@nntp.perl.org
From: autarch@urth.org (Autarch)
References: <20000627142620.F494@pobox.com>

On Tue, 27 Jun 2000, Graham Barr wrote:

> If you are to discuss anything it should be open. Why have subscriber-post-only ?

Because if you don't care enough to subscribe then you shouldn't be able
to post.  That's just my general mailing list philosophy (and it helps
prevent some random spam I think).

> > I strongly disagree.  As try/catch is not built into Perl
> 
> Yet. Last year there was the intent to have it so that it would look like
> it was built in. Pushing the API levels down does not give that impression.

Ugh.  But that's only IMHO.  I really think the try/catch stuff is
superfluous given eval {}/$@->isa.  All that's missing is finally I
suppose but that's not hard to do either.

 eval { MayCauseException(); };

 my $e = $@;

 finally_do_something();

 if ($e->isa('Foo')) { ... }

The rest is syntactic sugar.  Some people may want it, some may not.

> While I welcome discussion, I would just like to restate that there has been a *lot*
> of discussion on this in the past. But there are too many people who are passionate
> about the exception handling in some other language and want perl to mimic it.
> The result is that you never get a concensus, at least we never have in the
> past.

Ok, but I'm not sure see I see a better way for you to organize this
besides total dictatorial mandate, in which case I might as well give up
and go home.  I honestly don't think its fair for you to say that your
implementation should be the top-level without some discussion (although
maybe this discussion already happened and I'm just a latecomer?).  A
mailing list seems well suited to this.  modules@perl.org is extremely not
suited for this, seeing as how very few people who aren't the core
modules@perl.org people will ever see our discussion.


-dave

/*==================
www.urth.org
We await the New Sun
==================*/



