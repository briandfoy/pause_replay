Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:242
Return-Path: <k@hohenstaufen.in-berlin.de>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 22328 invoked from network); 25 Oct 1999 15:29:07 -0000
Received: from dubravka.in-berlin.de (HELO hohenstaufen.in-berlin.de) (0@193.175.21.65)
  by tmtowtdi.perl.org with SMTP; 25 Oct 1999 15:29:07 -0000
Received: (from k@localhost)
	by hohenstaufen.in-berlin.de (8.9.1a/8.9.1) id RAA18131;
	Mon, 25 Oct 1999 17:29:00 +0200
Sender: k@hohenstaufen.in-berlin.de
To: "Redford, John" <John.Redford@fmr.com>
Cc: modules@perl.org
Subject: Re: Spawn module
References: <C139F4D49384D2118EB60008C7A4337B016FA9F5@MSGBOS675NTS.fmr.com>
Date: 25 Oct 1999 17:29:00 +0200
In-Reply-To: "Redford, John"'s message of "Mon, 25 Oct 1999 10:29:25 -0400"
Message-ID: <sfc3duz5uir.fsf@hohenstaufen.in-berlin.de>
Lines: 30
User-Agent: Gnus/5.070097 (Pterodactyl Gnus v0.97) Emacs/20.3
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Approved: news@nntp.perl.org
From: andreas.koenig@anima.de ((Andreas J. Koenig))

>>>>> On Mon, 25 Oct 1999 10:29:25 -0400, "Redford, John" <John.Redford@fmr.com> said:

 > I would like to publish another module of mine. This module is (presently)
 > named Spawn. It exports two routines. 'spawn' and 'spawn_pty'. The usage is:
 >   ($pid, $in_fh, $out_fh, $err_fh) = spawn( "command" | ["array", "of",
 > "command", "words"] );
 >   ($pid, $fh) = spawn_pty( "command" | ["array", "of", "command", "words"]
 > );

 > I suppose this does not seem very dissimilar to Open3. The main differences
 > are the calling convention (I don't believe that exposing GLOBs is ever a
 > really good idea), and the 'pty' option.

Would you mind Proc::Spawn?

The module list has already

Proc::
::Background      RdpO OS independent background process objects    BZAJAC
::ExitStatus      cdpf Interpret and act on wait() status values    ROSCH
::Forkfunc        Rdpf Simple lwall-style fork wrapper              MUIR
::ProcessTable    adcO Unix process table information               DURIST
::SafePipe        cdpf popen() and `` without calling the shell     ROSCH
::Simple          adpO Fork wrapper with objects                    MSCHILLI
::SyncExec        cdpf Spawn processes but report exec() errors     ROSCH
::times           adpf By-name interface to process times function  TOMC


-- 
andreas
