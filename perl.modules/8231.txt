Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:8231
Return-Path: <webmaster@cd-lab.com>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 50915 invoked from network); 12 Oct 2001 00:26:45 -0000
Received: from opal.he.net (216.218.169.2)
  by onion.valueclick.com with SMTP; 12 Oct 2001 00:26:45 -0000
Received: from grad (cpe-24-221-13-113.az.sprintbbd.net [24.221.13.113]) by opal.he.net (8.8.6/8.8.2) with SMTP id RAA21773 for <modules@perl.org>; Thu, 11 Oct 2001 17:26:39 -0700
To: <modules@perl.org>
Subject: PAUSE registration
Date: Thu, 11 Oct 2001 17:31:21 -0700
Message-ID: <NDBBJLKJNCOFMOHANOCEOEPLCFAA.webmaster@cd-lab.com>
MIME-Version: 1.0
Content-Type: text/plain;
	charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
X-Priority: 3 (Normal)
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook IMO, Build 9.0.2416 (9.0.2910.0)
X-MIMEOLE: Produced By Microsoft MimeOLE V5.00.3018.1300
Importance: Normal
X-Spam-Rating: onion.valueclick.com 1.6.2 0/1000/N
Approved: news@nntp.perl.org
From: webmaster@cd-lab.com ("Robby Walker")

Hello,

I would like to become registered with PAUSE:

Name: Robby Walker
Email: robbyw83@hotmail.com
Preferred User ID: rwalker

What I'm Contributing:
My first contribution is a module representing the Functor design pattern -
that is a class that acts as a function.  This is, of course, a very simple
module based on overloading the function dereference operator but provides a
powerful template for subclasses.  I'm a bit at a loss of where to put
this - of course root level Functor would be the best but if anyone has a
suggestion for an existing root level name to put this under please feel
free to suggest that to me.

Later I plan to contribute an XS module that does fast state machine based
text parsing as well as a Tie module that allows for hash tying to tables
(database or otherwise) - I realize that Tie::DBI already exists but my
proposed module has quite a different purpose in mind.  This Tie module
would depend heavily on the Functor module mentioned above.


I appreciate your time and am always open to suggestions.

Thank you,
Robby Walker



