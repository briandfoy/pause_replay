Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:22692
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 8019 invoked by uid 76); 4 Aug 2003 14:21:37 -0000
Received: from qmailr@one.develooper.com (HELO ran-out.mx.develooper.com) (64.81.84.115) by onion.perl.org (qpsmtpd/0.26) with SMTP; Mon, 04 Aug 2003 07:21:37 -0700
Received: (qmail 4804 invoked by uid 225); 4 Aug 2003 14:21:36 -0000
Delivered-To: modules@perl.org
Received: (qmail 4799 invoked by uid 507); 4 Aug 2003 14:21:36 -0000
Received-SPF: unknown
Received: from pause.perl.org (HELO pause.perl.org) (212.40.160.59) by one.develooper.com (qpsmtpd/0.27-dev) with SMTP; Mon, 04 Aug 2003 07:21:35 -0700
Received: from pause.perl.org (localhost [127.0.0.1])	by pause.perl.org (8.12.3/8.12.3/Debian-6.4) with ESMTP id h74ELPB8028702;	Mon, 4 Aug 2003 16:21:25 +0200
Received: (from nobody@localhost)	by pause.perl.org (8.12.3/8.12.3/Debian-6.4) id h74ELOTG028700;	Mon, 4 Aug 2003 16:21:24 +0200
Date: Mon, 4 Aug 2003 16:21:24 +0200
Message-ID: <200308041421.h74ELOTG028700@pause.perl.org>
MIME-Version: 1.0
Subject: Module submission Encode::Mapper
Content-Type: Text/Plain; Charset=UTF-8
Reply-To: modules@perl.org
To: modules@perl.org, smrz@cpan.org
Content-Transfer-Encoding: 8bit
X-SMTPD: qpsmtpd/0.27-dev, http://develooper.com/code/qpsmtpd/
X-Spam-Check-By: one.develooper.com
X-Spam-Status: No, hits=1.1 required=7.0 tests=CARRIAGE_RETURNS,SPAM_PHRASE_00_01 version=2.44
X-SMTPD: qpsmtpd/0.26, http://develooper.com/code/qpsmtpd/
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Encode::Mapper
  DSLIP:       bdpOp
  description: Intuitive, yet efficient mappings for Encode
  userid:      SMRZ (Otakar Smrž)
  chapterid:   11 (String_Lang_Text_Proc)
  communities:
    comp.lang.perl.moderated

  similar:

  rationale:

    The module finds direct application in Encode::Arabic and
    Encode::Korean [submitting soon], providing an object-oriented
    programming interface to convert data consistently, follow the
    engine's computation, dump the engine using Data::Dumper etc.

    It is designed to make easy what Encode::Encoding proposes, i.e.
    define 'encode' and 'decode' methods to be used for data
    conversions. It requires Encode in some of its methods.

    The module's core is an algoritm which, from the rules given by the
    user, builds a finite-state transducer, i.e. an engine performing
    greedy search in the input stream and producing output data and side
    effects relevant to the results of the search. Transducers may be
    linked one with another, thus forming multi-level devices suitable
    for nontrivial encoding/decoding tasks.

    The compilation algorithm, and the search algorithm itself, were
    inspired by Aho-Corasick and Boyer-Moore algorithms, and by the
    studies of finite automata with the restart operation. The engine is
    implemented in the classical sense, using hashes for the transition
    function for instance. We expect to improve this to Perl code
    evaluation, if the speed-up is significant.

    It is to explore the way Perl's regular expressions would cope with
    the task, i.e. verify our initial doubts which prevented us from
    trying. Since Encode::Mapper's functionality is much richer than
    pure search, simulating it completely might be resource-expensive
    and non-elegant. Therefore, experiment reports are welcome.

  enteredby:   SMRZ (Otakar Smrž)
  enteredon:   Mon Aug  4 14:21:21 2003 GMT

The resulting entry would be:

Encode::
::Mapper          bdpOp Intuitive, yet efficient mappings for Encode SMRZ


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=a9300000_2130f266e135ad42&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=a9300000_2130f266e135ad42&SUBMIT_pause99_add_mod_insertit=1
