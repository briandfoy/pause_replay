Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:12233
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 99006 invoked by uid 76); 17 Jun 2002 19:43:57 -0000
Received: from root@dubravka.kbx.de (HELO pause.perl.org) (212.40.160.59)
  by onion.perl.org (qpsmtpd/0.07b) with SMTP; Mon Jun 17 19:43:57 2002 -0000
Received: (from nobody@localhost)
	by pause.perl.org (8.11.6/8.11.6) id g5HJfe413335;
	Mon, 17 Jun 2002 21:41:40 +0200
Date: Mon, 17 Jun 2002 21:41:40 +0200
Message-ID: <200206171941.g5HJfe413335@pause.perl.org>
Reply-To: modules@perl.org
Subject: Module submission Pod::Constants
To: modules@perl.org, samv@cpan.org
Approved: news@nntp.perl.org
From: upload@p11.speed-link.de ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Pod::Constants
  DSLIP:       bdphp
  description: POD paragraphs to variables or closures
  userid:      SAMV (Sam Vilain)
  chapterid:    2 (Perl_Core_Modules)
  communities:
    modules@perl.org

  similar:
    Pod::Select, Pod::Parser, Pod::Tests, Pod::Usage

  rationale:

    Pod::Constants builds on Pod::Parser to allow you to extract pieces
    of your POD and slam them straight into locally scoped variables
    with one `use' statement.

    I am finding this useful for keeping documentation up to date with
    values used by the program. For example, version numbers are set in
    one place in most of my modules - the manual page.

    The most innovative feature of my approach is the way that headings
    in the POD effectively become `hooks' that you can attach closures
    to, and then quickly ($constant) = m/`(.*)'/ your documentation into
    code.

    In testing I've built a system similar to Pod::Usage that builds a
    complete `--help' screen, and defines a standard way of printing
    debugging messages so that program messages are always printed in
    the GNU recommended format:

    program: message

    I will be releasing this functionality in an upcoming version of
    the module.

  enteredby:   SAMV (Sam Vilain)
  enteredon:   Mon Jun 17 19:41:38 2002 GMT

The resulting entry would be:

Pod::
::Constants       bdphp POD paragraphs to variables or closures      SAMV


Thanks for registering,
The Pause Team

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=41200000_ebcc9967af5f951c&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=41200000_ebcc9967af5f951c&SUBMIT_pause99_add_mod_insertit=1
