Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:57648
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 26205 invoked from network); 10 Nov 2007 20:45:12 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 10 Nov 2007 20:45:12 -0000
Received: (qmail 30335 invoked by uid 225); 10 Nov 2007 20:45:12 -0000
Delivered-To: modules@perl.org
Received: (qmail 30317 invoked by alias); 10 Nov 2007 20:45:10 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00
X-Spam-Check-By: la.mx.develooper.com
Received: from pause.fiz-chemie.de (HELO pause.perl.org) (195.149.117.110)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Sat, 10 Nov 2007 12:45:08 -0800
Received: from pause.perl.org (localhost.localdomain [127.0.0.1])
	by pause.perl.org (8.13.4/8.13.4/Debian-3sarge3) with ESMTP id lAAKir59005544;
	Sat, 10 Nov 2007 21:44:53 +0100
Received: (from nobody@localhost)
	by pause.perl.org (8.13.4/8.13.4/Submit) id lAAKir1g005541;
	Sat, 10 Nov 2007 21:44:53 +0100
Date: Sat, 10 Nov 2007 21:44:53 +0100
Message-ID: <200711102044.lAAKir1g005541@pause.perl.org>
Subject: Module submission Module::DynamicSubModule
Reply-To: modules@perl.org
To: modules@perl.org, xor@cpan.org
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Module::DynamicSubModule
  DSLIP:       adpfp
  description: Call new modules like calling subroutines!
  userid:      XOR (Izumi Kawashima)
  chapterid:   2 (Language_Extensions)
  communities:
    none

  similar:
    none

  rationale:

    Usually, if you want to use module A::B, you first need to import
    A::B. And usually, instance of A::B will be created by below.

    use A::B;

    $instance = A::B->new;

    By using Module::DynamicSubModule, you only need to import A. If
    you want to create instance of A::B, you only need to type either
    shown below.

    use A;

    $instance = A->new('B'); $instance = A->B;

    The name of submodule can be given as a first parameter of
    subroutine new, or as a subroutine name.

  enteredby:   XOR (Izumi Kawashima)
  enteredon:   Sat Nov 10 20:44:53 2007 GMT

The resulting entry would be:

Module::
::DynamicSubModule adpfp Call new modules like calling subroutines!   XOR


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=8c010000_9cbd6f24562e6496&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=8c010000_9cbd6f24562e6496&SUBMIT_pause99_add_mod_insertit=1
