Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:1128
Return-Path: <dewitt@dewitt1.eziba.com>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 9702 invoked from network); 16 Feb 2000 20:58:21 -0000
Received: from vpfm2.eziba.com (HELO dewitt1.eziba.com) (199.103.173.7)
  by tmtowtdi.perl.org with SMTP; 16 Feb 2000 20:58:21 -0000
Received: (from dewitt@localhost)
	by dewitt1.eziba.com (8.9.3/8.9.3) id PAA13881
	for modules@perl.org; Wed, 16 Feb 2000 15:58:17 -0500
Date: Wed, 16 Feb 2000 15:58:17 -0500
To: modules@perl.org
Subject: File::Cache
Message-ID: <20000216155817.A12702@eziba.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.1.4i
Approved: news@nntp.perl.org
From: dclinton@eziba.com (DeWitt Clinton)

Hi,

I'm the author and maintainer of the IPC::Cache module, a perl module 
that allows for data to be shared between processes via shared memory.  
While that module has advantages, it scales poorly to large amounts of 
complex data.  

To address this concern, I've created the File::Cache module.  This 
module provides the same straightforward interface as IPC::Cache, 
including data timeouts and purging.  File::Cache does not use shared
memory -- instead it persists data out to disk.

I'm not convinced that the File::Cache namespace is the best, but I can't
come up with a better name.  What do people think about this?

Ultimately, I plan on creating yet another Cache object, one that uses
database space, and have a generic interface that people can use.  So,
people could "use Generic::Cache ('File')" or "use Generic::Cache ('IPC')"
and quickly choose the best caching mechanism for their particular data.

We are currently using File::Cache at www.eziba.com, and I'd love to put
it on CPAN, but the only question is the namespace.  Comments?

Name           DSLI  Description                                  Info
-------------  ----  -------------------------------------------- -----
File::Cache    adpO  Share data between processes via filesystem  DCLINTON


-DeWitt


