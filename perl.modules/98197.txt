Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:98197
Return-Path: <darren@darrenduncan.net>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 4864 invoked from network); 31 Oct 2017 01:41:49 -0000
Received: from xx1.develooper.com (207.171.7.115) by x6.develooper.com with
 SMTP; 31 Oct 2017 01:41:49 -0000
Received: from localhost (xx1.develooper.com [127.0.0.1]) by localhost
 (Postfix) with ESMTP id B175911EF74 for <perlmail-modules@onion.perl.org>;
 Mon, 30 Oct 2017 18:41:49 -0700 (PDT)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mx3.develooper.com
X-Spam-Status: No, score=-2.6 required=6.0 tests=BAYES_00,RCVD_IN_DNSWL_LOW,
 SPF_HELO_PASS autolearn=ham version=3.3.1
Received: from xx1.develooper.com (xx1.develooper.com [127.0.0.1]) by
 localhost (Postfix) with SMTP id 5202511EF65 for
 <perlmail-modules@onion.perl.org>; Mon, 30 Oct 2017 18:41:46 -0700 (PDT)
Received: from twelve.baremetal.com (twelve.baremetal.com [67.223.102.253])
 (using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits)) (No client
 certificate requested) by xx1.develooper.com (Postfix) with ESMTPS id
 799E611EF7F for <modules@perl.org>; Mon, 30 Oct 2017 18:41:35 -0700 (PDT)
Received: from Darrens-iMac.local (S0106f0f24983bfe3.gv.shawcable.net
 [184.66.240.199]) by twelve.baremetal.com (8.14.9/8.14.9) with ESMTP id
 v9V1fWB9002387 for <modules@perl.org>; Mon, 30 Oct 2017 18:41:32 -0700
To: PAUSE Admins <modules@perl.org>
Subject: best practice for documentation-only distros
Message-ID: <286caf6f-c3b8-4fcf-5b56-850a8ba28acc@darrenduncan.net>
Date: Mon, 30 Oct 2017 18:41:33 -0700
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.12; rv:45.0)
 Gecko/20100101 Thunderbird/45.8.0
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8; format=flowed
Content-Transfer-Encoding: 7bit
X-PMX-Version: 5.6.1.2065439, Antispam-Engine: 2.7.2.376379, Antispam-Data:
 2017.10.31.13016
X-PMX-Spam: Gauge=IIIIIIII, Probability=8%, Report=' HTML_00_01 0.05,
 HTML_00_10 0.05, BODYTEXTP_SIZE_3000_LESS 0, BODY_SIZE_1900_1999 0,
 BODY_SIZE_2000_LESS 0, BODY_SIZE_5000_LESS 0, BODY_SIZE_7000_LESS 0,
 DATE_TZ_NA 0, NO_CTA_URI_FOUND 0, NO_URI_FOUND 0, NO_URI_HTTPS 0, SPF_PASS 0,
 __CT 0, __CTE 0, __CT_TEXT_PLAIN 0, __HAS_FROM 0, __HAS_MSGID 0,
 __MIME_TEXT_ONLY 0, __MIME_TEXT_P 0, __MIME_TEXT_P1 0, __MIME_VERSION 0,
 __MOZILLA_USER_AGENT 0, __NO_HTML_TAG_RAW 0, __SANE_MSGID 0, __SUBJ_ALPHA_END
 0, __SUBJ_ALPHA_START 0, __SUBJ_ALPHA_START_END 0, __TO_MALFORMED_2 0,
 __TO_NAME 0, __TO_NAME_DIFF_FROM_ACC 0, __TO_REAL_NAMES 0, __USER_AGENT 0,
 __blackholes.mail-abuse.org_TIMEOUT , __zen.spamhaus.org_ERROR '
Approved: news@nntp.perl.org
From: darren@darrenduncan.net (Darren Duncan)

I have a question concerning best practices for CPAN as they affect me.

Note, please include my own email address in all replies since I'm not 
subscribed to this mailing list, thanks.

Due to various historical reasons I had until a few years ago considered CPAN a 
good distribution mechanism for both Perl modules as well as standalone 
documentation which didn't have any Perl code in it.  Even with my 
documentation-only distros I followed typical CPAN practices of writing them as 
.pod files and giving them names that fit into the CPAN module namespace and 
giving each version uploaded to CPAN a distinct version number.

However, as various alternatives such as GitHub have matured I suspect that 
using CPAN to distribute documentation-only things is not that appropriate and 
that such things should go out on other channels.

My question for you is partly whether there is any other precedent than my own 
usage for putting tarballs on CPAN that contain only documentation, or whether 
everyone else has always used them for this with actual code.

My other question is what are best alternates for publishing documentation which 
regularly evolves and is versioned, because that documentation typically is 
specifications for software.  By default I would assume simply having a GitHub 
repository is a complete solution, but I was wondering if there were any other 
good alternatives.

As such, from now on, assuming that's the best move, I would restrict what I 
distribute on CPAN to modules/code written in Perl (which come with 
documentation specific to them), and leave documentation-only projects elsewhere 
instead.

An example of such a thing that would move is a specification of a module that 
would have implementations in both Perl 5 and Perl 6 as well as other langauges, 
the parts that are agnostic to implementation.

-- Darren Duncan
