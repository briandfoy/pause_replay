Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:38142
Return-Path: <webmaster@simplemood.com>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 17439 invoked from network); 4 Feb 2005 14:14:03 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 4 Feb 2005 14:14:03 -0000
Received: (qmail 30585 invoked by uid 225); 4 Feb 2005 14:14:02 -0000
Delivered-To: modules@perl.org
Received: (qmail 30571 invoked by alias); 4 Feb 2005 14:14:02 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
Received: from . (HELO redspot.jupiterhost.net) (66.90.68.46)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Fri, 04 Feb 2005 06:13:57 -0800
Received: from [206.80.70.18] (helo=[10.0.1.2])
	by redspot.jupiterhost.net with esmtpa (Exim 4.42)
	id 1Cx4DX-0001PO-81
	for modules@perl.org; Fri, 04 Feb 2005 08:13:53 -0600
Mime-Version: 1.0 (Apple Message framework v619.2)
In-Reply-To: <030220051049516649%comdog@panix.com>
References: <200501202038.j0KKc777011695@pause.perl.org> <858c66a96b4da2ef1cc8a2b102dea825@simplemood.com> <030220051049516649%comdog@panix.com>
Content-Type: multipart/alternative; boundary=Apple-Mail-1-370207719
Message-ID: <591addd342dcc6a1fbbef8db3ac59263@simplemood.com>
Subject: Re: Module submission IO::Redirect
Date: Fri, 4 Feb 2005 08:13:46 -0600
To: modules@perl.org
X-Mailer: Apple Mail (2.619.2)
X-AntiAbuse: This header was added to track abuse, please include it with any abuse report
X-AntiAbuse: Primary Hostname - redspot.jupiterhost.net
X-AntiAbuse: Original Domain - perl.org
X-AntiAbuse: Originator/Caller UID/GID - [47 12] / [47 12]
X-AntiAbuse: Sender Address Domain - simplemood.com
X-Source: 
X-Source-Args: 
X-Source-Dir: 
Approved: news@nntp.perl.org
From: webmaster@simplemood.com (SimpleMood Webmaster)

--Apple-Mail-1-370207719
Content-Transfer-Encoding: 7bit
Content-Type: text/plain;
	charset=US-ASCII;
	format=flowed


On Feb 3, 2005, at 10:49 AM, _brian_d_foy wrote:

> [[ This message was both posted and mailed: see
>    the "To," "Cc," and "Newsgroups" headers for details. ]]
>
> In article <858c66a96b4da2ef1cc8a2b102dea825@simplemood.com>,
> SimpleMood Webmaster <webmaster@simplemood.com> wrote:
>
>> Hello,
>>
>> Can someone add this to my name space?
>
> As I've said in my previous comments, I don't think you have
> the right name for your module, so I'm not approving IO::Redirect.

I looked in the archive to see what I'd missed:

 > This seems like an odd interface. I wouldn't use global variables for

You can't import them so they must be used with name space.

 > this.  How about an interface that allows you to redirect any
 > filehandle, then include special functions for particular filehandles?

That is what it does.

 > Also, you should be able to do this with any filehandle, not just

It does.

 > STDOUT and STDERR. Also, you should be able to send the output to
 > whatever you like, not just /dev/null (what does that mean on
 > non-unix systems?).

It does. /dev/null is just used if you redirect a FH but do not specify 
a FH, scalar ref or, file to redirect to, kind of a shortcut.

 > IO::Redirect implies that the module should direct any filehandle
 > to any place.  If you don't want to handle all that, I think we

It can :)

 > need a more restrictive name. :)

 > I think you have the wrong name for this module.  It doesn't
 > really redirect I/O : it just shuts off STDOUT or STDERR.

I think my post must have been ambiguose, sorry :)

It allows you to redirect any filehandle to another FH, file, or scalar 
ref and later restore it to its original state, super easy. I just 
mentioned what I used it for already to demonstrate its practicality. 
But it has many other possible uses, not just quieting up STDERR and 
STDOUT.

So after reveiwing the posts I missed I feel that IO::Redirect is still 
a proper name for it and hope you do to no that I've explained it 
better and addressed your specific concerns :)

Please let me know if there is anything else i can do :) And I 
apologize for not posting better info about it :)

Thanks!

Dan
--Apple-Mail-1-370207719
Content-Transfer-Encoding: 7bit
Content-Type: text/enriched;
	charset=US-ASCII



On Feb 3, 2005, at 10:49 AM, _brian_d_foy wrote:


<excerpt>[[ This message was both posted and mailed: see

   the "To," "Cc," and "Newsgroups" headers for details. ]]


In article <<858c66a96b4da2ef1cc8a2b102dea825@simplemood.com>,

SimpleMood Webmaster <<webmaster@simplemood.com> wrote:


<excerpt>Hello,


Can someone add this to my name space?

</excerpt>

As I've said in my previous comments, I don't think you have

the right name for your module, so I'm not approving IO::Redirect.

</excerpt>

I looked in the archive to see what I'd missed:


<fontfamily><param>Courier</param><x-tad-bigger>> This seems like an
odd interface. I wouldn't use global variables for


You can't import them so they must be used with name space.


> this.  How about an interface that allows you to redirect any

> filehandle, then include special functions for particular
filehandles?


That is what it does.</x-tad-bigger></fontfamily>


<fontfamily><param>Courier</param><x-tad-bigger>> Also, you should be
able to do this with any filehandle, not just


It does.


> STDOUT and STDERR. Also, you should be able to send the output to

> whatever you like, not just /dev/null (what does that mean on

> non-unix systems?).


It does. /dev/null is just used if you redirect a FH but do not
specify a FH, scalar ref or, file to redirect to, kind of a shortcut.


> IO::Redirect implies that the module should direct any filehandle

> to any place.  If you don't want to handle all that, I think we


It can :)


> need a more restrictive name. :)</x-tad-bigger></fontfamily>


<fontfamily><param>Courier</param><x-tad-bigger>> I think you have the
wrong name for this module.  It doesn't

> really redirect I/O : it just shuts off STDOUT or STDERR.


I think my post must have been ambiguose, sorry :)


It allows you to redirect any filehandle to another FH, file, or
scalar ref and later restore it to its original state, super easy. I
just mentioned what I used it for already to demonstrate its
practicality. But it has many other possible uses, not just quieting
up STDERR and STDOUT.


So after reveiwing the posts I missed I feel that IO::Redirect is
still a proper name for it and hope you do to no that I've explained
it better and addressed your specific concerns :)


Please let me know if there is anything else i can do :) And I
apologize for not posting better info about it :)


Thanks!


Dan</x-tad-bigger></fontfamily>
--Apple-Mail-1-370207719--

