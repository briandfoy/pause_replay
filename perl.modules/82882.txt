Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:82882
Return-Path: <alfie@linode1.alfiejohn.com>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 11201 invoked from network); 23 Oct 2012 21:13:05 -0000
Received: from x1.develooper.com (207.171.7.70)
  by x6.develooper.com with SMTP; 23 Oct 2012 21:13:05 -0000
Received: (qmail 28154 invoked by uid 225); 23 Oct 2012 21:13:05 -0000
Delivered-To: modules@perl.org
Received: (qmail 28150 invoked by alias); 23 Oct 2012 21:13:05 -0000
X-Spam-Status: No, hits=-1.9 required=8.0
	tests=BAYES_00,T_RP_MATCHES_RCVD
X-Spam-Check-By: la.mx.develooper.com
Received: from linode1.alfiejohn.com (HELO linode1.alfiejohn.com) (69.164.204.237)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Tue, 23 Oct 2012 14:13:02 -0700
Received: by linode1.alfiejohn.com (Postfix, from userid 1000)
	id 5E78A6099; Wed, 24 Oct 2012 08:12:58 +1100 (EST)
Date: Wed, 24 Oct 2012 08:12:58 +1100
To: Matt S Trout <mst@shadowcat.co.uk>
Cc: modules@perl.org
Subject: Re: Module submission Data::PathSimple
Message-ID: <20121023211258.GK20714@linode1.alfiejohn.com>
References: <201210131234.q9DCYOJp005719@pause.fiz-chemie.de>
 <221020122322238384%brian.d.foy@gmail.com>
 <20121023092947.GI20714@linode1.alfiejohn.com>
 <20121023153731.GT6412@newagaton.scsys.co.uk>
 <20121023204937.GJ20714@linode1.alfiejohn.com>
 <20121023210240.GW6412@newagaton.scsys.co.uk>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20121023210240.GW6412@newagaton.scsys.co.uk>
User-Agent: Mutt/1.5.20 (2009-06-14)
Approved: news@nntp.perl.org
From: alfie@h4c.kr (Alfie John)

On Tue, Oct 23, 2012 at 10:02:40PM +0100, Matt S Trout wrote:
> Data::Selector ?

The problem with 'Selector' is that it doesn't tell you what the module
does. That's why Path was the most obvious choice. The only thing close
to that would be Tree, but then again I don't think people think of
trees as they do paths.

So I think 'Path' is the most obvious choice. Since Simple isn't liked,
what about the following?

	- Data::Path::Manip
	- Data::Path::Access
	- Data::ByPath

If we do go down the "tree" path, how about:

	- Data::Tree
	- Data::Hierarchy
	- Data::Directory

To be honest, after all these examples nothing is jumping at me and so I
still prefer Data::PathSimple.

Alfie

-- 
Alfie John
http://h4c.kr
