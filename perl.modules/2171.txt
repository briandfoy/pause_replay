Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:2171
Return-Path: <andreas.koenig@anima.de>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 12058 invoked from network); 18 Jun 2000 13:40:02 -0000
Received: from dubravka.in-berlin.de (HELO ak-71.mind.de) (root@193.175.21.65)
  by tmtowtdi.perl.org with SMTP; 18 Jun 2000 13:40:02 -0000
Received: (from k@localhost)
	by ak-71.mind.de (8.9.3/8.9.3) id PAA30919;
	Sun, 18 Jun 2000 15:39:52 +0200
X-Authentication-Warning: ak-71.mind.de: k set sender to andreas.koenig@anima.de using -f
Sender: k@ak-71.mind.de
To: Elaine -HFB- Ashton <elaine@chaos.wustl.edu>
Cc: "Andreas J. Koenig" <andreas.koenig@anima.de>, jhi@iki.fi,
        modules@perl.org
Subject: Re: More hyperlinks in the module list
References: <20000616104408.3093.qmail@plover.com>
	<20000616121911.X451@pobox.com> <m3og51bq93.fsf@ak-71.mind.de>
	<20000616170711.L451@pobox.com> <m3d7lhb2jg.fsf@ak-71.mind.de>
	<20000616214544.B8217@chaos.wustl.edu> <m3u2esafty.fsf@ak-71.mind.de>
	<20000617102429.A451@pobox.com>
	<20000617102718.A16498@chaos.wustl.edu>
	<20000617221124.D451@pobox.com>
	<20000617174524.A22279@chaos.wustl.edu>
Date: 18 Jun 2000 15:39:52 +0200
In-Reply-To: Elaine -HFB- Ashton's message of "Sat, 17 Jun 2000 17:45:24 -0500"
Message-ID: <m3aegj85w7.fsf@ak-71.mind.de>
Lines: 34
User-Agent: Gnus/5.0806 (Gnus v5.8.6) Emacs/20.7
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Approved: news@nntp.perl.org
From: andreas.koenig@anima.de ((Andreas J. Koenig))

>>>>> On Sat, 17 Jun 2000 17:45:24 -0500, Elaine -HFB- Ashton <elaine@chaos.wustl.edu> said:

 > No, but not bad performance for an U1/140 since most of the traffic
 > involves database queries instead of plain html. I've seen sites that do
 > horrible with less traffic. My point was that it should scale reasonably
 > well without too much trouble and be fairly easy to manage for mirrors.

My favorite answer to that is to

- write HTTP headers optimized for caching (I wrote a chapter about
  how to do that for Stas Bekman's guide to mod_perl)

- install a squid-accelerator in front of the webserver. The squid can
  run on the same box and is very easy to configure and manage. (It is
  very easy to misconfigure too, so better let me have a look on the
  configuration some time:)

The order in which you deal with the two measures doesn't matter, each
makes a little bit of sense standalone, but combined they are very
powerful. Once you've succeeded in doing both, you most definitely
will never again think about restrictions as discussed below, you
won't care about most robots and gatherers. You are not invulnerable
with this setup, but only maleficient people hurt you, not stupid
robots.

 > *>Yes it probably will. If it really becomes a problem we can put some kind
 > *>of dynamic restriction on it.

 > Not a bad idea though it could either be implemented at the web server
 > level or the database, the latter is probably more reliable and more
 > portable. 

-- 
andreas
