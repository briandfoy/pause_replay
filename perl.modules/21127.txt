Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:21127
Return-Path: <me-02@ton.iguana.be>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 66961 invoked by uid 76); 14 May 2003 19:22:25 -0000
Received: from qmailr@one.develooper.com (HELO ran-out.mx.develooper.com) (64.81.84.115) by onion.perl.org (qpsmtpd/0.26-dev) with SMTP; Wed, 14 May 2003 12:22:25 -0700
Received: (qmail 23197 invoked by uid 225); 14 May 2003 19:22:22 -0000
Delivered-To: modules@perl.org
Received: (qmail 23192 invoked by uid 507); 14 May 2003 19:22:22 -0000
Received: from smtpzilla3.xs4all.nl (HELO smtpzilla3.xs4all.nl) (194.109.127.139) by one.develooper.com (qpsmtpd/0.26-dev) with SMTP; Wed, 14 May 2003 12:22:20 -0700
Received: from quasar.home.lunix (a194-109-189-174.dial.xs4all.nl [194.109.189.174])	by smtpzilla3.xs4all.nl (8.12.9/8.12.9) with SMTP id h4EJM7xD039332	for <modules@perl.org>; Wed, 14 May 2003 21:22:10 +0200 (CEST)
Received: (qmail 19939 invoked by uid 508); 14 May 2003 19:21:11 -0000
Date: Wed, 14 May 2003 21:21:11 +0200
To: modules@perl.org
Subject: Re: Module submission Heap::Base
Message-ID: <20030514212111.A19509@quasar.home.lunix>
Reply-To: modules@perl.org
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Mailer: Mutt 1.0i
X-SMTPD: qpsmtpd/0.26-dev, http://develooper.com/code/qpsmtpd/
X-Spam-Check-By: one.develooper.com
X-Spam-Status: No, hits=3.3 required=7.0 tests=CARRIAGE_RETURNS,FROM_ENDS_IN_NUMS,NO_REAL_NAME,SPAM_PHRASE_00_01 version=2.44
X-SMTPD: qpsmtpd/0.26-dev, http://develooper.com/code/qpsmtpd/
Approved: news@nntp.perl.org
From: me-02@ton.iguana.be

Hello,

writing the request for the Heap::Base namespace and writing the docs
for my module set wonderfully crystalized my thoughts. I was writing
a too closely coupled set of modules.

After giving it some more thought I found a way to move parts of the
module names into the new arguments (and autogenerating the
corresponding real code under the top module). So i won't be needing
any of:
   Heap::Number,
   Heap::String
   Heap::Base

and I will request Heap::Simple instead, under which all
functionality can be placed.
