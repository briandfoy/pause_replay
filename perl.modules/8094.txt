Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:8094
Return-Path: <skud@infotrope.net>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 82175 invoked from network); 7 Oct 2001 22:02:25 -0000
Received: from cr407766-a.rchrd1.on.wave.home.com (HELO lagavulin.dnsalias.org) (qmailr@24.114.169.177)
  by onion.valueclick.com with SMTP; 7 Oct 2001 22:02:25 -0000
Received: (qmail 28017 invoked by uid 404); 7 Oct 2001 21:59:40 -0000
Received: from skud@infotrope.net by e-smith.lagavulin.dnsalias.org with qmail-scanner; 07/10/2001 17:59:39
Received: from tanqueray.home.infotrope.net (192.168.1.42, claiming to be "tanqueray.infotrope.net")
	by e-smith.lagavulin.dnsalias.org with SMTP id smtpdGRM42T; Sun, 07 Oct 2001 17:59:36 EDT
Received: from skud by tanqueray.infotrope.net with local (Exim 3.20 #1 (Debian))
	id 15qM03-0002pR-00; Sun, 07 Oct 2001 18:02:19 -0400
To: acme@astray.com, modules@perl.org
Subject: Re: java classfile reading modules naming
In-Reply-To: <20011007223959.A5294@ns0.astray.com>
References: <20011007223959.A5294@ns0.astray.com>
Message-ID: <E15qM03-0002pR-00@tanqueray.infotrope.net>
Date: Sun, 07 Oct 2001 18:02:19 -0400
X-Spam-Rating: onion.valueclick.com 1.6.2 0/1000/N
Approved: news@nntp.perl.org
From: skud@infotrope.net (Kirrily Robert)

In perl.modules, you wrote:
>Hullo. I ask the module naming gods for advice. 

BOW, SUPPLICANT!

>Here is my goat.

Ewww.  We don't know *where* it's been.  You did at least keep it away
from Greg, didn't you?

>I'm about to finish writing a module which parsers Java .class files
>and reports the structure of the file by returning an object
>containing all information in the file: constants, methods, actual JVM
>bytecode etc. The module will eventually expose JVM bytecodes and,
>well, things to make a Perl / Parrot JVM implementation possible.
>
>The Classfile is strictly part of the JVM and not of Java, so my best
>guess so far is JVM::ClassFile. I'm not a big fan of modules named
>..Parser, as surely everything does that these days (that's worse
>than having XML:: everything). However, JVM:: is a new namespace
>(there's already Jvm though, should I use that instead?).
>
>OK, basically, my question is: Is JVM::ClassFile ok?

Seems moderately reasonable to me at first glance, but let's go digging.

The Jvm module you mention is a single module, not a hierarchy.  And
it's not in the modules list, which means it's not an "approved" name,
for what that's worth.

There is already a Java:: ... why isn't it under Language:: with all the
other languages?  (well, with *some* of the other languages).  There's
also an Inline::Java::JVM, for what it's worth.

IMO, Java should be under Language::Java, but that's unlikely to happen
at this point.  However, wherever the Java modules are, I believe that
your module belongs with them.  Sure, the JVM is separate to the Java
language, but there's such a strong connection between the two that it
doesn't seem to be worth two toplevel namespaces.

So I'd say that your module should be Java::JVM::Classfile.

K.

