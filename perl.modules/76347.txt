Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:76347
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 25874 invoked from network); 5 Jun 2011 10:50:46 -0000
Received: from x1.develooper.com (207.171.7.70)
  by x6.develooper.com with SMTP; 5 Jun 2011 10:50:46 -0000
Received: (qmail 4376 invoked by uid 225); 5 Jun 2011 10:50:45 -0000
Delivered-To: modules@perl.org
Received: (qmail 4372 invoked by alias); 5 Jun 2011 10:50:45 -0000
X-Spam-Status: No, hits=0.0 required=8.0
	tests=
X-Spam-Check-By: la.mx.develooper.com
Received: from pause.fiz-chemie.de (HELO pause.fiz-chemie.de) (195.37.231.65)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Sun, 05 Jun 2011 03:50:43 -0700
Received: from pause.fiz-chemie.de (localhost.localdomain [127.0.0.1])
	by pause.fiz-chemie.de (8.13.8/8.13.8/Debian-3) with ESMTP id p55AoV3d018729;
	Sun, 5 Jun 2011 12:50:31 +0200
Received: (from nobody@localhost)
	by pause.fiz-chemie.de (8.13.8/8.13.8/Submit) id p55AoVno018728;
	Sun, 5 Jun 2011 12:50:31 +0200
Date: Sun, 5 Jun 2011 12:50:31 +0200
Message-ID: <201106051050.p55AoVno018728@pause.fiz-chemie.de>
Subject: Module submission File::UStore
Reply-To: modules@perl.org
To: modules@perl.org, shantanu@cpan.org
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       File::UStore
  DSLIP:       RdpOp
  description: UUID File Storage abstraction with UUID
  userid:      SHANTANU (Shantanu Bhadoria)
  chapterid:   21 (File_Handle_Input_Output)
  communities:
    bangalore.pm.org, #bangalore.pm at irc.perl.org

  similar:
    File::HStore

  rationale:

    File::HStore by Alexandre Dulaunoy, is a similar module that
    provides File::Hash based storage. However due to the nature of File
    Hashing, File::HStore doesn't allow duplicates. If the same file is
    stored a second time using File::HStore it transparently returns the
    same hash it had returned last time without adding any new file in
    storage due to inherent character of hash based storage, while this
    is useful if a user doesn't want any duplicates occurring in a
    storage, this apparently trivial difference is risky in the use case
    where two processes upload a duplicate file to the store and both
    process want to do file handling, only one of the processes will be
    able to get a lock(deletion,manipulation etc.) on the file at a time
    and if the first process deletes the file referred to by its ID, the
    second process will never know what happened to the file it added.

    Hence I wrote this module for a UUID based storage solution which
    is not hostage to auto de-duping features of HStore. This module
    returns a unique file id each time a file is uploaded even if its a
    duplicate of existing file previously uploaded. This allows multiple
    processes handling data from a common file dump to access the same
    file. This module also expands on the Hstore to allow the user
    flexibility of choosing the depth of storage to optimize the
    performance for the users application. Depth of storage allows users
    to make the balance between average "number of files in a folder"
    and folder depth.

  enteredby:   SHANTANU (Shantanu Bhadoria)
  enteredon:   Sun Jun  5 10:50:31 2011 GMT

The resulting entry would be:

File::
::UStore          RdpOp UUID File Storage abstraction with UUID      SHANTANU


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=3d800000_0b84341a1da05ee7&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=3d800000_0b84341a1da05ee7&SUBMIT_pause99_add_mod_insertit=1
Peek at the current permissions:
  https://pause.perl.org/pause/authenquery?pause99_peek_perms_by=me&pause99_peek_perms_query=File%3A%3AUStore
