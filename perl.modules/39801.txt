Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:39801
Return-Path: <cpan@ali.as>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 20417 invoked from network); 20 Apr 2005 01:03:20 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 20 Apr 2005 01:03:20 -0000
Received: (qmail 10381 invoked by uid 225); 20 Apr 2005 01:03:20 -0000
Delivered-To: modules@perl.org
Received: (qmail 10376 invoked by alias); 20 Apr 2005 01:03:19 -0000
X-Spam-Status: No, hits=-5.9 required=8.0
	tests=ALL_TRUSTED,BAYES_00
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: neutral (x1.develooper.com: local policy)
Received: from x6.develooper.com (HELO lists.develooper.com) (63.251.223.186)
    by la.mx.develooper.com (qpsmtpd/0.28) with SMTP; Tue, 19 Apr 2005 18:03:14 -0700
Received: (qmail 20391 invoked by uid 515); 20 Apr 2005 01:03:10 -0000
Message-ID: <20050420010310.20390.qmail@lists.develooper.com>
To: modules@perl.org
Date: Wed, 20 Apr 2005 11:02:25 +1000
User-Agent: Mozilla Thunderbird 1.0 (Windows/20041206)
X-Accept-Language: en-us, en
MIME-Version: 1.0
Subject: Re: WWW::Service::Upcoming::API
References: <200504181507.j3IF7EgL012331@eod.com>
In-Reply-To: <200504181507.j3IF7EgL012331@eod.com>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-Posted-By: 202.90.48.125
Approved: news@nntp.perl.org
From: cpan@ali.as (Adam Kennedy)

> The third element of the namespace above shouldn't strictly be defined
> as a site name: it may be a library used across multiple sites for
> instance.  (See http://getluky.net/freetag/ -- a Perl client-side to
> this could be in WWW::Service::Freetag::API.  A Perl implementation of
> the server-side could be in WWW::Service::Freetag.)

I don't like the idea of Foo::API for client and Foo:: for server.

The English reason might be that calling one part Foo::API means it 
reads as, "The Foo API API". It's like using "ATM Machine" for 
"Automatic Teller Machine Machine".

My primary reasoning though would be that in any client-server 
relationship there are far more clients than there are servers. And the 
existing set of modules in WWW::XXXXX seem to bear that out.

Practically everything accessing a website/service and wrapping it use 
just plain Foo, and Foo::Server or similar is used for implementing a 
server.

I'd highly recommend following the naming convention in this regard.

In addition, what exactly do you mean by a "Web Service" in this regard?

A SOAP client-server? Something else? You need to be clear on what your 
definitions are for a Web Service if you want to create a convention for 
use of the namespace.

Adam K
