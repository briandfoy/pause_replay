Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:2290
Return-Path: <andreas.koenig@anima.de>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 1335 invoked from network); 27 Jun 2000 16:23:44 -0000
Received: from dubravka.in-berlin.de (HELO ak-71.mind.de) (root@193.175.21.65)
  by tmtowtdi.perl.org with SMTP; 27 Jun 2000 16:23:44 -0000
Received: (from k@localhost)
	by ak-71.mind.de (8.9.3/8.9.3) id SAA14902;
	Tue, 27 Jun 2000 18:23:30 +0200
X-Authentication-Warning: ak-71.mind.de: k set sender to andreas.koenig@anima.de using -f
Sender: k@ak-71.mind.de
To: Chris.Hagn@pobox.com
Cc: modules@perl.org
Subject: Re: Registering for CPAN
References: <20000627133730.5437.qmail@web515.mail.yahoo.com>
Date: 27 Jun 2000 18:23:30 +0200
In-Reply-To: Chris Hagn's message of "Tue, 27 Jun 2000 06:37:30 -0700 (PDT)"
Message-ID: <m3hfafnldp.fsf@ak-71.mind.de>
Lines: 40
User-Agent: Gnus/5.0806 (Gnus v5.8.6) Emacs/20.7
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Approved: news@nntp.perl.org
From: andreas.koenig@anima.de ((Andreas J. Koenig))

>>>>> On Tue, 27 Jun 2000 06:37:30 -0700 (PDT), Chris Hagn <chris_hagn@yahoo.com> said:

 > Name: Chris Hagn
 > Email Address: Chris.Hagn@pobox.com
 > HomePage: www.picusnet.com/users/hagn 
 > CPAN ID:  CHAGN

 > Contribute:
 > I have several modules I have been working for a few months.  They are a
 > PGP and PKZip interface modules.

 > MyPGP-1.0  bdpO  An interface to PGP from pgp.org.  This allows for
 > [En]crypting, Signing, and Decrypting with signatue checking. 

Have you checked the PGP related modules on CPAN?

 > MyPkzip-1.0 bdph An interface to Pkzip for Unix.  It will zip and unzip
 > files, do translations into and out of Dos, and add passwd
 > encryption/decryption.  

Have you checked the Zip module on CPAN?

CPAN/modules/04pause.html suggests:

          Also: think carefully and honestly whether your module would
     be better off if it were integrated as an option into an already
     existing module. Sometimes it is for the best to put aside
     personal glory and join a collaborative effort: Perl itself is a
     good example of this. Contact the author of an existing module
     and ask whether your new features would fit into his framework.
     Even if you in the end decide to release the module as your very
     own, you really should know your 'competition', that is, know all
     the similar modules and the features they offer. Maybe you can
     learn from them.

Please keep our CPAN lively. CPAN must not degenerate into a write
only archive.

-- 
andreas
