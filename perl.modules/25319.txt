Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:25319
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 6554 invoked by uid 76); 31 Dec 2003 03:15:40 -0000
Received: from x1.develooper.com (HELO x1.develooper.com) (63.251.223.170) by onion.perl.org (qpsmtpd/0.26) with SMTP; Tue, 30 Dec 2003 19:15:40 -0800
Received: (qmail 12128 invoked by uid 225); 31 Dec 2003 03:15:39 -0000
Delivered-To: modules@perl.org
Received: (qmail 12123 invoked by alias); 31 Dec 2003 03:15:39 -0000
Received: from pause.fiz-chemie.de (HELO pause.perl.org) (195.149.117.110) by la.mx.develooper.com (qpsmtpd/0.27-dev) with ESMTP; Tue, 30 Dec 2003 19:15:27 -0800
Received: from pause.perl.org (localhost [127.0.0.1])	by pause.perl.org (8.12.3/8.12.3/Debian-6.6) with ESMTP id hBV3Encj001147;	Wed, 31 Dec 2003 04:14:49 +0100
Received: (from nobody@localhost)	by pause.perl.org (8.12.3/8.12.3/Debian-6.6) id hBV3En9K001145;	Wed, 31 Dec 2003 04:14:49 +0100
Date: Wed, 31 Dec 2003 04:14:49 +0100
Message-ID: <200312310314.hBV3En9K001145@pause.perl.org>
Subject: Module submission Algorithm::LCSS
Reply-To: modules@perl.org
To: modules@perl.org, jfreeman@cpan.org
X-Spam-Check-By: la.mx.develooper.com
X-Spam-Status: No, hits=0.8 required=7.0 tests=CARRIAGE_RETURNS,SPAM_PHRASE_01_02 version=2.44
X-SMTPD: qpsmtpd/0.26, http://develooper.com/code/qpsmtpd/
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Algorithm::LCSS
  DSLIP:       Rdpfp
  description: LCSS orders of magnitude faster Text::LCSS
  userid:      JFREEMAN (Dr. James Freeman)
  chapterid:    6 (Data_Type_Utilities)
  communities:

  similar:
    Text::LCSS

  rationale:

    =head1 NAME

    Algorithm::LCSS - Perl extension for getting the Longest Common
    Sub-Sequence

    =head1 SYNOPSIS

    use Algorithm::LCSS qw( LCSS CSS CSS_Sorted ); my $lcss_ary_ref =
    LCSS( \@SEQ1, \@SEQ2 ); # ref to array my $lcss_string = LCSS(
    $STR1, $STR2 ); # string my $css_ary_ref = CSS( \@SEQ1, \@SEQ2 ); #
    ref to array of arrays my $css_str_ref = CSS( $STR1, $STR2 ); # ref
    to array of strings my $css_ary_ref = CSS_Sorted( \@SEQ1, \@SEQ2 );
    # ref to array of arrays my $css_str_ref = CSS_Sorted( $STR1, $STR2
    ); # ref to array of strings

    =head1 DESCRIPTION

    This module uses Algoritm::Diff to implement LCSS and is orders of
    magnitude faster than String::LCSS.

    If you pass the methods array refs you get back array (ref) format
    data. If you pass strings you get a string or a ref to an array of
    strings.

  enteredby:   JFREEMAN (Dr. James Freeman)
  enteredon:   Wed Dec 31 03:14:49 2003 GMT

The resulting entry would be:

Algorithm::
::LCSS            Rdpfp LCSS orders of magnitude faster Text::LCSS   JFREEMAN


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=f8600000_c2a84fbb7e2baee0&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=f8600000_c2a84fbb7e2baee0&SUBMIT_pause99_add_mod_insertit=1
