Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:49832
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 13925 invoked from network); 13 Jul 2006 15:37:51 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 13 Jul 2006 15:37:51 -0000
Received: (qmail 22661 invoked by uid 225); 13 Jul 2006 15:37:51 -0000
Delivered-To: modules@perl.org
Received: (qmail 22649 invoked by alias); 13 Jul 2006 15:37:50 -0000
X-Spam-Status: No, hits=-2.5 required=8.0
	tests=BAYES_00,FORGED_RCVD_HELO
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
Received: from pause.fiz-chemie.de (HELO pause.perl.org) (195.149.117.110)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Thu, 13 Jul 2006 08:36:58 -0700
Received: from pause.perl.org (localhost.localdomain [127.0.0.1])
	by pause.perl.org (8.13.4/8.13.4/Debian-3sarge1) with ESMTP id k6DFZrZp017765;
	Thu, 13 Jul 2006 17:35:53 +0200
Received: (from nobody@localhost)
	by pause.perl.org (8.13.4/8.13.4/Submit) id k6DFZrvI017764;
	Thu, 13 Jul 2006 17:35:53 +0200
Date: Thu, 13 Jul 2006 17:35:53 +0200
Message-ID: <200607131535.k6DFZrvI017764@pause.perl.org>
Subject: Module submission Clone::More
Reply-To: modules@perl.org
To: modules@perl.org, wazzuteke@cpan.org
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Clone::More
  DSLIP:       adchp
  description: Natively copy Perl data structures
  userid:      WAZZUTEKE (Trevor Hall)
  chapterid:   6 (Data_Type_Utilities)
  communities:

  similar:
    Clone Scalar::Util Clone::PP Storable

  rationale:

    Rationale: Clone::More is intended to be an advanced version of
    Clone. It is a compeltely re-factored version of the Clone module.
    It reduces memory leaks, as well as adds support for the following
    functionality:

    * Clone hooks: Very similar to Stroable hooks. Will simply allow
    for a programatic interface, through XSUB callbacks, to dig into the
    'internals' and result of the Clone::More::clone() output. *
    Programatic cirular-referencing: Allows for a relatively rich
    interface to control how the Clone module will handle circular
    references when cloning such references * New ciruclar-reference
    checks: Potentially more for unit testing and the like; a new
    function 'is_circular' that will input a reference and return a
    boolean (1|0) value indicating whether the referant has a circular
    reference embedded within it, or if it its self is a circular
    reference. * Optimization Hacks: For those who feel comfortable
    hacking into the XS, I have designed the C portion to allow for
    simpe toggling of features in order to speed up the module (by a
    degree of 2-3x in some cases)

    Overall, it is and will continue to be the 'Clone' module, moving
    forward. It simply has 'More' functionality, hence the appending of
    'More' to the name space. Similar Module Discussion: - Clone: This
    module started as a patch for the Clone module. I found a relatively
    large memory leak with the last two (at least) releases. I have been
    attempting to converse with the author, Ray Finch, in applying a
    patch - mostly with no avail. I have not been able to contact him in
    nearly 2 months. - Scalar::Util: Only relative to the clone sub;
    though Clone::More allows for a richer interface and is faster. -
    Clone::PP: Well, this module is in Pure Perl rather than XS.
    Therefore, Clone::More has a richer interface as well as speed
    enhancements. - Storable: Relative to Strorable::dclone, is simply
    faster than serializing and de-serializing memory segments for
    cloning.

  enteredby:   WAZZUTEKE (Trevor Hall)
  enteredon:   Thu Jul 13 15:35:53 2006 GMT

The resulting entry would be:

Clone::
::More            adchp Natively copy Perl data structures           WAZZUTEKE


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=7fb00000_0cdde095ed295145&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=7fb00000_0cdde095ed295145&SUBMIT_pause99_add_mod_insertit=1
