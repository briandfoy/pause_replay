Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:10668
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 67159 invoked by uid 76); 18 Mar 2002 04:02:50 -0000
Received: from root@dubravka.kbx.de (HELO pause.perl.org) (212.40.160.59)
  by onion.perl.org (qpsmtpd/0.06) with SMTP; Mon Mar 18 04:02:50 2002 -0000
Received: (from nobody@localhost)
	by pause.perl.org (8.9.3/8.9.3) id FAA10398;
	Mon, 18 Mar 2002 05:02:44 +0100
Date: Mon, 18 Mar 2002 05:02:44 +0100
Message-ID: <200203180402.FAA10398@pause.perl.org>
Reply-To: modules@perl.org
Subject: Module submission Set::FA
To: modules@perl.org, mrogaski@cpan.org
Approved: news@nntp.perl.org
From: upload@p11.speed-link.de ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Set::FA
  DSLIP:       adpOa
  description: Operations for sets of finite automata
  userid:      MROGASKI (Mark Rogaski)
  chapterid:    6 (Data_Type_Utilities)
  communities:
    idea originally discussed on #tempura, will ask for input from Perl
    Mongers groups

  similar:
    Set::Scalar, DFA::Simple

  rationale:

    This module is simply a way to build a set of finite automata (FA)
    and apply combinations of set operations and FA inputs and
    acceptance decisions. Set::FA seems like a logical choice for the
    name. I decided against referring to the FA as a DFA (as DFA::Simple
    does) since I feel that the name would incorrectly lead users to
    think of them as deterministic when I intend deterministic and
    non-deterministic constructs to be supported (eventually).

  enteredby:   MROGASKI (Mark Rogaski)
  enteredon:   Mon Mar 18 04:02:42 2002 GMT

The resulting entry would be:

Set::
::FA              adpOa Operations for sets of finite automata       MROGASKI


Thanks for registering,
The Pause Team

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=8e000000_af5ae32f9e539fc8&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=8e000000_af5ae32f9e539fc8&SUBMIT_pause99_add_mod_insertit=1
