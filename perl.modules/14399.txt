Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:14399
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 45158 invoked by uid 76); 17 Oct 2002 16:31:40 -0000
Received: from root@[212.40.160.59] (HELO pause.perl.org) (212.40.160.59) by onion.perl.org (qpsmtpd/0.12-dev) with SMTP; 2002-10-17 16:31:40Z
Received: (from nobody@localhost)	by pause.perl.org (8.11.6/8.11.6) id g9HGVZt01047;	Thu, 17 Oct 2002 18:31:35 +0200
Date: Thu, 17 Oct 2002 18:31:35 +0200
Message-ID: <200210171631.g9HGVZt01047@pause.perl.org>
Reply-To: modules@perl.org
Subject: Module submission Blog::Simple
To: modules@perl.org, gilad@cpan.org
X-SMTPD: qpsmtpd/0.12-dev, http://develooper.com/code/qpsmtpd/
Approved: news@nntp.perl.org
From: upload@p11.speed-link.de ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Blog::Simple
  DSLIP:       bupOp
  description: Create blog systems
  userid:      GILAD (James Robson)
  chapterid:   23 (Miscellaneous_Modules)
  communities:
    comp.lang.perl.modules

  similar:
    Apache::Blog Net::Blogger

  rationale:

    Blog::Simple is a module aimed at creating simple blog
    applications. Unlike the Apache::Blog and Net::Blogger modules,
    which interface to existing systems (Apache and the Blogger XML-RPC
    API respectively), Blog::Simple can be used for development anywhere
    Perl is installed---a web server running CGI, on an IIS server
    running ISAPI, or even at the console, using just Perl.

    Blog::Simple uses a simple text file database similar to a docbase
    to track blog entries (I've dubbed it a 'blogbase'). Each time a
    blog is entered, the entry is added to the top of the file. An XML
    file is generated based on simple, essential tags, and stored in a
    uniquely named folder on the file system (the blogbase entry has a
    reference to the path.) By using the file system directly to store
    data, the module becomes highly portable and doesn't require that a
    special database system be installed (one that might prove 'too much
    tool for the job').

    Blog::Simple requires the XML::XSL module to perform blog
    transformations. This gives the developer a high level of output
    flexibility, as well as a standard way of addressing blog rendering.

    After emailing modules@perl.com and garnering namespace
    suggestions, Blog::Simple was given and this seemed to fit the logic
    of the module. I ruled out using something like CGI::Blog::Simple or
    WWW::Blog::Simple, since the module is not necessarily web oriented
    (although in most applications it would be). For instance, I could
    see someone using it to create a GUI-based personal diary system,
    one not intended to be shared.

    However, I am not entirely bent on having the namespace be
    'Blog::Simple'. It looks good, seems logical, and was what I came up
    with after going through the channels outlined on CPAN for namespace
    creation. Even after looking at the existing Perl namespaces, it
    still seemed like a good choice.

    So I leave it in your hands. I'm more interested in getting the
    module out there than pioneering a new namespace scheme.

    Thank you for your time and consideration.

    J. A. Robson

  enteredby:   GILAD (James Robson)
  enteredon:   Thu Oct 17 16:31:35 2002 GMT

The resulting entry would be:

Blog::
::Simple          bupOp Create blog systems                          GILAD


Thanks for registering,
The Pause Team

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=22300000_9157bd5cc9c8026d&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=22300000_9157bd5cc9c8026d&SUBMIT_pause99_add_mod_insertit=1
