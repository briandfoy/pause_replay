Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:2761
Return-Path: <dhudes@hudes.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 32460 invoked from network); 30 Aug 2000 02:23:44 -0000
Received: from advsol4.dsl.concentric.net (HELO harmony.hudes.org) (nobody@209.220.92.60)
  by tmtowtdi.perl.org with SMTP; 30 Aug 2000 02:23:44 -0000
Received: from soloist (w061.z209220092.nyc-ny.dsl.cnc.net [209.220.92.61])
	by harmony.hudes.org (8.9.3/8.9.3) with SMTP id WAA04372;
	Tue, 29 Aug 2000 22:23:36 -0400
Message-ID: <00f601c01229$4dc09640$3d5cdcd1@hudes.org>
To: "Paul Gampe" <paulg@apnic.net>, "perl modules" <modules@perl.org>
Cc: <peter@interq.or.jp>, <mail@vipul.net>, <kevin@apnic.net>, <bje@apnic.net>,
        <bc@apnic.net>
References: <39AB4B41.3883FDB4@apnic.net>
Subject: Re: Net::Whois::RIPE namespace proposal?
Date: Tue, 29 Aug 2000 22:23:35 -0400
MIME-Version: 1.0
Content-Type: text/plain;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
X-Priority: 3
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook Express 5.50.4133.2400
X-MimeOLE: Produced By Microsoft MimeOLE V5.50.4133.2400
Approved: news@nntp.perl.org
From: dhudes@hudes.org ("Dana Hudes")

I'm not sure quite how this works but I'm the currently active =
maintainer of Net::Whois along with the inactive maintainer Chip and =
therefore I think Chip and I own the namespace.
Considering that this code was offered in principle as complete many =
months ago and only sent to me the evening before this namespace =
proposal
I think you all are running a bit quick and impatient.
Not to mention you could have asked to have delegation of =
Net::Whois::RIPE to Chip and I directly in private.
Slow down, and I'll check out your module and see where it fits with the =
other contributed code to handle various RIPE-style domains.

----- Original Message -----=20
From: "Paul Gampe" <paulg@apnic.net>
To: "perl modules" <modules@perl.org>
Cc: <dhudes@hudes.org>; <peter@interq.or.jp>; <mail@vipul.net>; =
<kevin@apnic.net>; <bje@apnic.net>; <bc@apnic.net>
Sent: Tuesday, August 29, 2000 1:33 AM
Subject: Net::Whois::RIPE namespace proposal?


> Hi,
>=20
> I would like to propose the following module for inclusion into the
> Net::Whois namespace.
>=20
> Name              DSLI  Description                                 =20
> -------------     ----  --------------------------------------------
> Net::Whois::RIPE  adpO  Perl module API to a RIPE-157 database
>=20
> Standard   Description                               Module Name
> --------   -----------                               -----------
> RIPE157    RIPE Network Management Database Client   Net::Whois::RIPE
>=20
>=20
> Also I just did a quick search of the 'official' module list
> http://www.cpan.org/modules/00modlist.long.html and noted that none of
> the current Whois client modules (Net::Whois, Net::Whois::RAW, etc) =
are
> included.  Is there a reason for this? =20
>=20
> References:
>=20
> http://ftp.apnic.net/ietf/rfc/rfc0000/rfc0954.txt
> http://www.ripe.net/ripe/docs/ripe-157.html
>=20
> --=20
> For PGP Key ID B49E3514,                 mailto:paulg@apnic.net    =20
> send mail with Subject: pgp-key-request phoneto:+61-7-3367-0490    =20
> Paul Gampe - Technical Manager - APNIC    faxto:+61-7-3367-0482
> *** APNIC Meeting Oct 2000 - http://www.apnic.net/meetings ***


-------------------------------------------------------------------------=
-------


>=20
>=20
>=20
> =
::opt::apnic::li=08Ub=08s:=08e:=08rNe=08Ct=08o:=08n:=08tW=08rh=08io=08bi=08=
u=08:s=08t=08::=08e=08o:=08d=08pR=08tI=08P=08:P=08e=08:E=08r=08a(=08l=08p=
3=08n)=08D=08io=08cc=08:u=08:m=08le=08in=08bt=08:a=08:t=08Ni=08eo=08tn=08=
::Whois::RIPE(3)
>=20
>=20
> N=08N=08N=08NA=08A=08A=08AM=08M=08M=08ME=08E=08E=08E
>        Whois::RIPE - Perl OO implementation of Whois.
>=20
> =
S=08S=08S=08SY=08Y=08Y=08YN=08N=08N=08NO=08O=08O=08OP=08P=08P=08PS=08S=08=
S=08SI=08I=08I=08IS=08S=08S=08S
>            use Net::Whois::RIPE;
>=20
>            my $whois =3D Net::Whois::RIPE->new($host,Timeout=3D>10);
>=20
>            $whois->find_less;          # find all less specific =
matches
>            my @results=3D$whois->query('203.203.203.203');
>=20
>            my $resp =3D $results[0];     # only look at the first =
result
>=20
>            print $resp->person(), "\n";
>            print $resp->address(), "\n";
>            print $resp->fax_no(), "\n";
>=20
>=20
> =
D=08D=08D=08DE=08E=08E=08ES=08S=08S=08SC=08C=08C=08CR=08R=08R=08RI=08I=08=
I=08IP=08P=08P=08PT=08T=08T=08TI=08I=08I=08IO=08O=08O=08ON=08N=08N=08N
>        Net::Whois::RIPE is a class implementing a RIPE whois
>        client.
>=20
> =
C=08C=08C=08CO=08O=08O=08ON=08N=08N=08NS=08S=08S=08ST=08T=08T=08TR=08R=08=
R=08RU=08U=08U=08UC=08C=08C=08CT=08T=08T=08TO=08O=08O=08OR=08R=08R=08R
>        n=08n=08n=08ne=08e=08e=08ew=08w=08w=08w =
(=08(=08(=08(H=08H=08H=08HO=08O=08O=08OS=08S=08S=08ST=08T=08T=08T =
[=08[=08[=08[,=08,=08,=08,O=08O=08O=08OP=08P=08P=08PT=08T=08T=08TI=08I=08=
I=08IO=08O=08O=08ON=08N=08N=08NS=08S=08S=08S]=08]=08]=08])=08)=08)=08)
>            This is the constructor for a new Net::Whois::RIPE
>            object. `HOST' is the name of the remote host to which
>            a whois connection is required.
>=20
>            `OPTIONS' are passed in a hash like fashion, using key
>            and value pairs.  Possible options are:
>=20
>            P=08P=08P=08Po=08o=08o=08or=08r=08r=08rt=08t=08t=08t - The =
port number to connect to on the remote
>            machine for the whois connection
>=20
>            =
T=08T=08T=08Ti=08i=08i=08im=08m=08m=08me=08e=08e=08eo=08o=08o=08ou=08u=08=
u=08ut=08t=08t=08t - Set a timeout value (defaults to 30)
>=20
>            =
D=08D=08D=08De=08e=08e=08eb=08b=08b=08bu=08u=08u=08ug=08g=08g=08g - =
debug level
>=20
>            The constructor croaks on failure.
>=20
> =
M=08M=08M=08ME=08E=08E=08ET=08T=08T=08TH=08H=08H=08HO=08O=08O=08OD=08D=08=
D=08DS=08S=08S=08S
>        +=08o =
t=08t=08t=08te=08e=08e=08em=08m=08m=08mp=08p=08p=08pl=08l=08l=08la=08a=08=
a=08at=08t=08t=08te=08e=08e=08e(=08(=08(=08(W=08W=08W=08WH=08H=08H=08HO=08=
O=08O=08OI=08I=08I=08IS=08S=08S=08S_=08_=08_=08_O=08O=08O=08OB=08B=08B=08=
BJ=08J=08J=08JE=08E=08E=08EC=08C=08C=08CT=08T=08T=08T_=08_=08_=08_N=08N=08=
N=08NA=08A=08A=08AM=08M=08M=08ME=08E=08E=08E)=08)=08)=08)
>               Sends a template request to whois host for a
>               template for WHOIS_OBJECT_NAME.  Results are
>               returned in a =
_=08N_=08e_=08t_=08:_=08:_=08W_=08h_=08o_=08i_=08s_=08:_=08:_=08R_=08I_=08=
P_=08E_=08:_=08:_=08Q_=08u_=08e_=08r_=08y object. The
>               template is retrieved via the =
_=08c_=08o_=08n_=08t_=08e_=08n_=08t method on the
>               =
_=08N_=08e_=08t_=08:_=08:_=08W_=08h_=08o_=08i_=08s_=08:_=08:_=08R_=08I_=08=
P_=08E_=08:_=08:_=08Q_=08u_=08e_=08r_=08y object.
>=20
>               $t =3D $whois->template('person');
>               $text =3D $t->content;
>=20
>        If WHOIS_OBJECT_NAME is undefined then the method will
>        carp and return undef.
>=20
>=20
>=20
>=20
> 2000-07-05                 perl v5.6.0                          1
>=20
>=20
>=20
>=20
>=20
> =
::opt::apnic::li=08Ub=08s:=08e:=08rNe=08Ct=08o:=08n:=08tW=08rh=08io=08bi=08=
u=08:s=08t=08::=08e=08o:=08d=08pR=08tI=08P=08:P=08e=08:E=08r=08a(=08l=08p=
3=08n)=08D=08io=08cc=08:u=08:m=08le=08in=08bt=08:a=08:t=08Ni=08eo=08tn=08=
::Whois::RIPE(3)
>=20
>=20
>        +=08o =
v=08v=08v=08ve=08e=08e=08er=08r=08r=08rb=08b=08b=08bo=08o=08o=08os=08s=08=
s=08se=08e=08e=08e_=08_=08_=08_t=08t=08t=08te=08e=08e=08em=08m=08m=08mp=08=
p=08p=08pl=08l=08l=08la=08a=08a=08at=08t=08t=08te=08e=08e=08e(=08(=08(=08=
(W=08W=08W=08WH=08H=08H=08HO=08O=08O=08OI=08I=08I=08IS=08S=08S=08S_=08_=08=
_=08_O=08O=08O=08OB=08B=08B=08BJ=08J=08J=08JE=08E=08E=08EC=08C=08C=08CT=08=
T=08T=08T_=08_=08_=08_N=08N=08N=08NA=08A=08A=08AM=08M=08M=08ME=08E=08E=08=
E)=08)=08)=08)
>               Like =
t=08t=08t=08te=08e=08e=08em=08m=08m=08mp=08p=08p=08pl=08l=08l=08la=08a=08=
a=08at=08t=08t=08te=08e=08e=08e, but sends a verbose template request
>               to the whois host for WHOIS_OBJECT_NAME. Results
>               are returned in a =
_=08N_=08e_=08t_=08:_=08:_=08W_=08h_=08o_=08i_=08s_=08:_=08:_=08R_=08I_=08=
P_=08E_=08:_=08:_=08Q_=08u_=08e_=08r_=08y object.
>               The verbose template is retrieved via the =
_=08c_=08o_=08n_=08t_=08e_=08n_=08t
>               method on the =
_=08N_=08e_=08t_=08:_=08:_=08W_=08h_=08o_=08i_=08s_=08:_=08:_=08R_=08I_=08=
P_=08E_=08:_=08:_=08Q_=08u_=08e_=08r_=08y object.
>=20
>               $vt =3D $whois->verbose_template('person');
>               $text =3D $vt->content;
>=20
>        If WHOIS_OBJECT_NAME is undefined then the method will
>        carp and return undef.
>=20
>        +=08o =
q=08q=08q=08qu=08u=08u=08ue=08e=08e=08er=08r=08r=08ry=08y=08y=08y(=08(=08=
(=08(Q=08Q=08Q=08QU=08U=08U=08UE=08E=08E=08ER=08R=08R=08RY=08Y=08Y=08Y_=08=
_=08_=08_T=08T=08T=08TE=08E=08E=08EX=08X=08X=08XT=08T=08T=08T)=08)=08)=08=
)
>               Formats query flag options (see below) and sends
>               them and QUERY_TEXT to the server. If called in a
>               scalar context then the first object returned from
>               the server is passed back as a single
>               =
_=08N_=08e_=08t_=08:_=08:_=08W_=08h_=08o_=08i_=08s_=08:_=08:_=08R_=08I_=08=
P_=08E_=08:_=08:_=08Q_=08u_=08e_=08r_=08y object.  In an array
>               context, all returned objects returned from the
>               server are parsed into in a list and returned
>               (potentially quite large).
>=20
>               $q =3D $whois->query('key')  # a single Query
>               @q =3D $whois->query('key')  # an array of Queries
>=20
>        If QUERY_KEY is undefined, undef is returned. Any failure
>        will carp and return undef.
>=20
>        If =
m=08m=08m=08ma=08a=08a=08ax=08x=08x=08x_=08_=08_=08_r=08r=08r=08re=08e=08=
e=08ea=08a=08a=08ad=08d=08d=08d_=08_=08_=08_s=08s=08s=08si=08i=08i=08iz=08=
z=08z=08ze=08e=08e=08e is greater than zero then the server
>        response will be abandoned when greater than max_read_size
>        bytes have been read. The last _=08Q_=08u_=08e_=08r_=08y object =
read will have
>        warning messages set to indicate that the response was
>        cut.
>=20
>        +=08o =
u=08u=08u=08up=08p=08p=08pd=08d=08d=08da=08a=08a=08at=08t=08t=08te=08e=08=
e=08e(=08(=08(=08(U=08U=08U=08UP=08P=08P=08PD=08D=08D=08DA=08A=08A=08AT=08=
T=08T=08TE=08E=08E=08E_=08_=08_=08_T=08T=08T=08TE=08E=08E=08EX=08X=08X=08=
XT=08T=08T=08T)=08)=08)=08)
>               Sends UPDATE_TEXT directly to server. Query flag
>               options (below) are not used by update. Server
>               response is returned via =
_=08N_=08e_=08t_=08:_=08:_=08W_=08h_=08o_=08i_=08s_=08:_=08:_=08R_=08I_=08=
P_=08E_=08:_=08:_=08Q_=08u_=08e_=08r_=08y.
>               Use the =
c=08c=08c=08co=08o=08o=08on=08n=08n=08nt=08t=08t=08te=08e=08e=08en=08n=08=
n=08nt=08t=08t=08t method on the Query object to via
>               server response.
>=20
>         my $q =3D $whois->update($message)
>         print $q->content
>=20
>        If UPDATE_TEXT is undefined, undef is returned.  Any
>        failure will carp and return undef.
>=20
>        If no _=08c_=08h_=08a_=08n_=08g_=08e_=08d field can be found to =
determine a login and
>        domain the method will carp and return undef.
>=20
>        If =
m=08m=08m=08ma=08a=08a=08ax=08x=08x=08x_=08_=08_=08_r=08r=08r=08re=08e=08=
e=08ea=08a=08a=08ad=08d=08d=08d_=08_=08_=08_s=08s=08s=08si=08i=08i=08iz=08=
z=08z=08ze=08e=08e=08e is greater than zero then the server
>        response will be abandoned when greater than max_read_size
>        bytes have been read.
>=20
>=20
>=20
> 2000-07-05                 perl v5.6.0                          2
>=20
>=20
>=20
>=20
>=20
> =
::opt::apnic::li=08Ub=08s:=08e:=08rNe=08Ct=08o:=08n:=08tW=08rh=08io=08bi=08=
u=08:s=08t=08::=08e=08o:=08d=08pR=08tI=08P=08:P=08e=08:E=08r=08a(=08l=08p=
3=08n)=08D=08io=08cc=08:u=08:m=08le=08in=08bt=08:a=08:t=08Ni=08eo=08tn=08=
::Whois::RIPE(3)
>=20
>=20
>        +=08o =
m=08m=08m=08ma=08a=08a=08ax=08x=08x=08x_=08_=08_=08_r=08r=08r=08re=08e=08=
e=08ea=08a=08a=08ad=08d=08d=08d_=08_=08_=08_s=08s=08s=08si=08i=08i=08iz=08=
z=08z=08ze=08e=08e=08e(=08(=08(=08([=08[=08[=08[I=08I=08I=08IN=08N=08N=08=
NT=08T=08T=08TE=08E=08E=08EG=08G=08G=08GE=08E=08E=08ER=08R=08R=08R]=08]=08=
]=08])=08)=08)=08)
>               Sets/reads the maximum number of bytes that
>               =
_=08N_=08e_=08t_=08:_=08:_=08W_=08h_=08o_=08i_=08s_=08:_=08:_=08R_=08I_=08=
P_=08E will read before returning. This
>               is to limit huge responses from the server
>               overloading scripts.
>=20
>        a =
_=08m_=08a_=08x_=08__=08r_=08e_=08a_=08d_=08__=08s_=08i_=08z_=08e of =
zero indicates n=08n=08n=08no=08o=08o=08o limit.
>=20
>        +=08o f=08f=08f=08fl=08l=08l=08la=08a=08a=08ag=08g=08g=08g =
o=08o=08o=08op=08p=08p=08pt=08t=08t=08ti=08i=08i=08io=08o=08o=08on=08n=08=
n=08ns=08s=08s=08s
>               The following flags may be set by calling the
>               method. Their meaning is identical to the ripe
>               whois client. These flags require no arguments,
>               they simply set the flag on.
>=20
>               Method                       Equivalent whois flag
>=20
>               search_all                   -a
>               fast_raw                     -F
>               find_less                    -L
>               find_more                    -m
>               find_all_more                -M
>               no_recursive                 -r
>               no_referral                  -R
>               no_sugar                     -S
>=20
>=20
>        +=08o f=08f=08f=08fl=08l=08l=08la=08a=08a=08ag=08g=08g=08g =
o=08o=08o=08op=08p=08p=08pt=08t=08t=08ti=08i=08i=08io=08o=08o=08on=08n=08=
n=08ns=08s=08s=08s =
t=08t=08t=08ta=08a=08a=08ak=08k=08k=08ki=08i=08i=08in=08n=08n=08ng=08g=08=
g=08g =
v=08v=08v=08va=08a=08a=08al=08l=08l=08lu=08u=08u=08ue=08e=08e=08es=08s=08=
s=08s
>               The following flags may be set by calling the
>               method with a value.  There meaning is identical to
>               the ripe whois client.
>=20
>               Method                       Equivalent whois flag
>=20
>               inverse_lookup(ATTRIBUTE)    -i ATTRIBUTE
>               port(PORT)                   -p PORT
>               source(SOURCE)               -s SOURCE
>               type(TYPE)                   -T TYPE
>=20
>=20
> =
A=08A=08A=08AU=08U=08U=08UT=08T=08T=08TH=08H=08H=08HO=08O=08O=08OR=08R=08=
R=08R
>        Paul Gampe, paulg@apnic.net
>=20
>        Bruce Campbell, bruce.campbell@apnic.net
>=20
>        Kevin Baker, kevin@apnic.net
>=20
> S=08S=08S=08SE=08E=08E=08EE=08E=08E=08E =
A=08A=08A=08AL=08L=08L=08LS=08S=08S=08SO=08O=08O=08O
>        _=08p_=08e_=08r_=08l(1).  Net::Whois::RIPE::Query
>=20
>=20
>=20
>=20
>=20
>=20
>=20
>=20
>=20
> 2000-07-05                 perl v5.6.0                          3
>=20
>=20
>=20

