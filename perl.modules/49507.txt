Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:49507
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 23651 invoked from network); 20 Jun 2006 19:05:15 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 20 Jun 2006 19:05:15 -0000
Received: (qmail 18202 invoked by uid 225); 20 Jun 2006 19:05:15 -0000
Delivered-To: modules@perl.org
Received: (qmail 18194 invoked by alias); 20 Jun 2006 19:05:14 -0000
X-Spam-Status: No, hits=-2.5 required=8.0
	tests=BAYES_00,FORGED_RCVD_HELO
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
Received: from pause.fiz-chemie.de (HELO pause.perl.org) (195.149.117.110)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Tue, 20 Jun 2006 12:04:23 -0700
Received: from pause.perl.org (localhost.localdomain [127.0.0.1])
	by pause.perl.org (8.13.4/8.13.4/Debian-3sarge1) with ESMTP id k5KJ47D6006574
	for <modules@perl.org>; Tue, 20 Jun 2006 21:04:07 +0200
Received: (from nobody@localhost)
	by pause.perl.org (8.13.4/8.13.4/Submit) id k5KJ47SU006573;
	Tue, 20 Jun 2006 21:04:07 +0200
Date: Tue, 20 Jun 2006 21:04:07 +0200
Message-ID: <200606201904.k5KJ47SU006573@pause.perl.org>
Subject: Module submission Authen::SoopaCaptcha
Reply-To: modules@perl.org
To: modules@perl.org
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Authen::SoopaCaptcha
  DSLIP:       adpOa
  description: OOP framework for managing captchas
  userid:      JVANASCO (Jonathan Vanasco)
  chapterid:   14 (Security_and_Encryption)
  communities:
    was briefly spoken about on mod_perl list

  similar:
    Authen::Captcha GD::SecurityImage

  rationale:

    SoopaCaptcha - SoopaCaptcha OOP Awesome Captcha

    if anyone can think of a better name, i'm all for it.

    ( I would have gone with Captcha alone, but Authen::Captcha is
    taken )

    All the existing captcha modules were designed as imaging modules
    for 1 library ( ie: gd ) then added in support for other libraries
    as needed ( ie: image magick )

    If you need to switch imaging libraries on your server, you're SOL
    - you need to use a different module and refactor all your code if
    you need to implement an alternative system ( sound, text puzzles )
    you're also SOL if you need to implment a system for clusters, where
    state etc isn't on 1 machine, you're doubly SOL

    I designed a modular captcha system that would let programmers
    specify and override the 'stages' of a captcha based on their own
    requirements: The general notion is that a key maps a captcha. a key
    is also like a credit card - it has some sort of internal checksum
    that self-validates, and it also can be authenticated ( did you use
    the key too much today ? ) a - key generation b - key authentication
    c - generating a challenge d - rendering the challenge

    captcha challenges are abstracted into 3 elements: instructions
    user_prompt correct_response

    given that, once we generate a challenge, we can then just say
    "render this as sound using a drop in sound class" or "render this
    as an image using a gd subclass" etc. if anyone ever needs to switch
    output formats - text, image, gd vs imager - its just specifiing a
    different render class. simple!

    right now the system supports unobfuscated text in Imager and lame
    text-logic puzzles -- both as proof of concept. i hope to wrap gd
    secure image and a few other current perlmods as the render phase
    for image captchas.

    The alpha trunk is here:
    http://dev.2xlp.com/svn/mod_perl/PerlCaptcha/

  enteredby:   JVANASCO (Jonathan Vanasco)
  enteredon:   Tue Jun 20 19:04:07 2006 GMT

The resulting entry would be:

Authen::
::SoopaCaptcha    adpOa OOP framework for managing captchas          JVANASCO


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=8ee00000_554d8c07fc942798&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=8ee00000_554d8c07fc942798&SUBMIT_pause99_add_mod_insertit=1
