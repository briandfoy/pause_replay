Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:9812
Return-Path: <support@wiredon.net>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 58138 invoked by uid 76); 22 Jan 2002 12:24:22 -0000
Received: from host213-106-15-150.no-dns-yet.ntli.net (HELO wiredon.net) (213.106.15.150)
  by onion.perl.org (qpsmtpd/0.06) with SMTP; Tue Jan 22 12:24:22 2002 -0000
Received: from paul by wiredon.net
	with SMTP (PerlMad.PRO.v5.0.4.R)
	for <modules@perl.org>; Tue, 22 Jan 2002 12:24:03 +0000
Message-ID: <000a01c1a33f$adb4f7f0$960f6ad5@paul>
Reply-To: "Paul Wilson" <support@wiredon.net>
To: <modules@perl.org>
Subject: Developer Request
Date: Tue, 22 Jan 2002 12:24:03 -0000
Organization: WiredON
MIME-Version: 1.0
Content-Type: multipart/alternative;
	boundary="----=_NextPart_000_0007_01C1A33F.ADA2A870"
X-Priority: 3
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook Express 6.00.2600.0000
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2600.0000
X-Return-Path: support@wiredon.net
X-PerlMad-Deliver-To: modules@perl.org
Approved: news@nntp.perl.org
From: support@wiredon.net ("Paul Wilson")

------=_NextPart_000_0007_01C1A33F.ADA2A870
Content-Type: text/plain;
	charset="Windows-1252"
Content-Transfer-Encoding: quoted-printable

Hello, my name is Paul Wilson. (pwilson@wiredon.net).=20

I currently run http://wiredon.net (temporarily offline as we are moving =
to a dedicated server) and http://desksql.com (temporarily inaccessible =
as it is in development - it is to be the home of Desk SQL, a helpdesk =
script written in perl using an SQL backend).

My preferred username(s) would be: PAUL, PAULW or WIREDON

I'd like to contribute a template parser which supports special template =
tags such as <%foo%>. It also supports <%if foo%> bar <%endif%> and also =
<%else%> tags and operators within tags. For example:

<%if var =3D=3D var2%>
Oh var equals var2
<%else%>
Darn, var doesn't equal var2 :(
<%endif%>

My next contribution would be an SQL module which would be an interface =
to DBI as DBI is an interface to sql. The module takes several arguments =
and contructs the sql query and executes it. For example:

$obj->insert( $table, \@cols, \@vals );

......which would result in an INSERT query being fully prepared and =
executed within the module. The statement handle is returned for select =
queries allowing something like:

my $sth =3D $DB->select( ... );

or....

my $rec =3D $DB->select( ... )->fetchrow;

.....this reduces the need for long queries within the code as they are =
built dynamically.

Thanks!


Paul Wilson.

------=_NextPart_000_0007_01C1A33F.ADA2A870
Content-Type: text/html;
	charset="Windows-1252"
Content-Transfer-Encoding: quoted-printable

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD>
<META http-equiv=3DContent-Type content=3D"text/html; =
charset=3Dwindows-1252">
<META content=3D"MSHTML 6.00.2712.300" name=3DGENERATOR>
<STYLE></STYLE>
</HEAD>
<BODY bgColor=3D#ffffff><FONT face=3DArial size=3D2>
<DIV>Hello, my name is Paul Wilson. (<A=20
href=3D"mailto:pwilson@wiredon.net">pwilson@wiredon.net</A>). </DIV>
<DIV>&nbsp;</DIV>
<DIV>I currently run <A =
href=3D"http://wiredon.net">http://wiredon.net</A>=20
(temporarily offline as&nbsp;we are&nbsp;moving to a dedicated server) =
and <A=20
href=3D"http://desksql.com">http://desksql.com</A> (temporarily =
inaccessible as it=20
is in development - it is to be the home of Desk SQL, a helpdesk script =
written=20
in perl using an SQL backend).</DIV>
<DIV>&nbsp;</DIV>
<DIV>My preferred username(s) would be:&nbsp;PAUL, PAULW&nbsp;or =
WIREDON</DIV>
<DIV>&nbsp;</DIV>
<DIV>I'd like to contribute a template parser which supports special =
template=20
tags such as &lt;%foo%&gt;. It also supports &lt;%if foo%&gt;&nbsp;bar=20
&lt;%endif%&gt; and also &lt;%else%&gt; tags and operators within tags. =
For=20
example:</DIV>
<DIV>&nbsp;</DIV>
<DIV>&lt;%if var =3D=3D var2%&gt;</DIV>
<DIV>Oh var equals var2</DIV>
<DIV>&lt;%else%&gt;</DIV>
<DIV>Darn, var doesn't equal var2 :(</DIV>
<DIV>&lt;%endif%&gt;</DIV>
<DIV>&nbsp;</DIV>
<DIV>My next contribution would be an SQL module which would be an =
interface to=20
DBI as DBI is an interface to sql. The module&nbsp;takes several =
arguments and=20
contructs the sql query and executes it. For example:</DIV>
<DIV>&nbsp;</DIV>
<DIV>$obj-&gt;insert( $table, \@cols, \@vals );</DIV>
<DIV>&nbsp;</DIV>
<DIV>.....which would&nbsp;result in an INSERT query being fully =
prepared and=20
executed within the module. The statement handle is returned for select =
queries=20
allowing something like:</DIV>
<DIV>&nbsp;</DIV>
<DIV>my $sth =3D $DB-&gt;select( ... );</DIV>
<DIV>&nbsp;</DIV>
<DIV>or....</DIV>
<DIV>&nbsp;</DIV>
<DIV>my $rec =3D $DB-&gt;select( ... )-&gt;fetchrow;</DIV>
<DIV>&nbsp;</DIV>
<DIV>....this reduces the need for long queries within the code as they =
are=20
built dynamically.</DIV>
<DIV>&nbsp;</DIV>
<DIV>Thanks!</DIV>
<DIV>&nbsp;</DIV>
<DIV>&nbsp;</DIV>
<DIV>Paul Wilson.</DIV></FONT></BODY></HTML>

------=_NextPart_000_0007_01C1A33F.ADA2A870--


