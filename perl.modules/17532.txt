Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:17532
Return-Path: <corliss@corlissfamily.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 69893 invoked by uid 76); 3 Feb 2003 20:42:51 -0000
Received: from qmailr@one.develooper.com (HELO ran-out.mx.develooper.com) (64.81.84.115) by onion.perl.org (qpsmtpd/0.20) with SMTP; 2003-02-03 20:42:51Z
Received: (qmail 19685 invoked by uid 225); 3 Feb 2003 20:42:48 -0000
Delivered-To: modules@perl.org
Received: (qmail 19675 invoked by uid 507); 3 Feb 2003 20:42:46 -0000
Received: from [12.17.180.99] (HELO sigurd.digitalmages.com) (12.17.180.99) by one.develooper.com (qpsmtpd/0.21-dev) with SMTP; 2003-02-03 20:42:33Z
Received: from localhost (localhost [127.0.0.1])	by sigurd.digitalmages.com (8.11.6/8.11.6) with ESMTP id h13KB3e08482	for <modules@perl.org>; Mon, 3 Feb 2003 11:11:03 -0900
Date: Mon, 3 Feb 2003 11:11:03 -0900 (AKST)
X-X-Sender: corliss@sigurd.digitalmages.com
To: modules@perl.org
Subject: Re: Module submission Class:Aggregate
Message-ID: <Pine.LNX.4.44.0302031110350.8476-100000@sigurd.digitalmages.com>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-SMTPD: qpsmtpd/0.21-dev, http://develooper.com/code/qpsmtpd/
X-Spam-Check-By: one.develooper.com
X-Spam-Status: No, hits=-0.3 required=5.0 tests=CARRIAGE_RETURNS,QUOTED_EMAIL_TEXT,SPAM_PHRASE_00_01,USER_AGENT_PINE version=2.43
X-SMTPD: qpsmtpd/0.20, http://develooper.com/code/qpsmtpd/
Approved: news@nntp.perl.org
From: corliss@corlissfamily.org (Arthur Corliss)

On Tue, 28 Jan 2003, Henrik Tougaard wrote:

> When I saw the modulename I immediately thought of a 'has-a' relationship.
> In UML that is called Agrregation.
> The name ought to convey sa better idea of what the module does -
> Class::Aggregate is IMHO just too generic. I can't think of a better name
> though.

I know, that's my quandry as well.  Let's face it:  there's no reasonably
short name that's going to be desriptive enough.  So, if not that, how about:

  Class::Lite  (since it's a relatively light-weight implementation)
  Class::Orderly  (referencing the point of the container relationship
    for destruction purposes)

Hell, call it Class::Foo, for all I care, I'd just like to get an officially
sanctioned module that does what I want and can be reused across all the
Curses::* modules I'm working on.  I'm getting tired of duplicating code. . .

Any ideas?

	--Arthur Corliss
	  Bolverk's Lair -- http://arthur.corlissfamily.org/
	  Digital Mages -- http://www.digitalmages.com/
	  "Live Free or Die, the Only Way to Live" -- NH State Motto


