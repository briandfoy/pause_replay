Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:5661
Return-Path: <nobody@pause.kbx.de>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 86444 invoked from network); 19 May 2001 11:38:25 -0000
Received: from dubravka.kbx.de (HELO pause.kbx.de) (root@212.40.160.59)
  by onion.valueclick.com with SMTP; 19 May 2001 11:38:25 -0000
Received: (from nobody@localhost)
	by pause.kbx.de (8.9.3/8.9.3) id NAA18476;
	Sat, 19 May 2001 13:38:23 +0200
Date: Sat, 19 May 2001 13:38:23 +0200
Message-ID: <200105191138.NAA18476@pause.kbx.de>
Subject: Module submission Devel::SearchINC
To: modules@perl.org, marcel@cpan.org
X-Spam-Rating: onion.valueclick.com 1.6.2 0/1000/N
Approved: news@nntp.perl.org
From: modules@perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Devel::SearchINC
  DSLIP:       Rdpnp
  description: loading Perl modules from development dirs
  userid:      MARCEL (Marcel Grunauer)
  chapterid:    3 (Development_Support)
  communities:
    comp.lang.perl.modules

  similar:

  rationale:

    SYNOPSIS use Devel::SearchINC '/my/dev/dir'; use
    My::Brand::New::Module;

    DESCRIPTION

    When developing a new module, I always start with

    h2xs -XA -n My::Module

    This creates a directory with a useful skeleton for the module's
    distribution. The directory structure is such, however, that you
    have to install the module first (with `make install') before you
    can use it in another program or module. For example, bringing in a
    module like so:

    use My::Module;

    requires the module to be somewhere in a path listed in `@INC', and
    the relative path is expected to be `My/Module.pm'. However, `h2xs'
    creates a structure where the module ends up in
    `My/Module/Module.pm'.

    This module tries to compensate for that. The idea is that you
    `use()' it right at the beginning of your program so it can modify
    `@INC' to look for modules in relative paths of the special
    structure mentioned above, starting with directories specified along
    with the `use()' statement (i.e. the arguments passed to this
    module's `import()').

    This is useful because with this module you can test your programs
    using your newly developed modules without having to install them
    just so you can use them. This is especially advantageous when you
    consider working on many new modules at the same time.

  enteredby:   MARCEL (Marcel Grunauer)
  enteredon:   Sat May 19 11:38:23 2001 GMT

The resulting entry would be:

Devel::
::SearchINC       Rdpnp loading Perl modules from development dirs   MARCEL


Thanks for registering,
The Pause Team

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=96000000_8d6d1349beae5d9a&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=96000000_8d6d1349beae5d9a&SUBMIT_pause99_add_mod_insertit=1
