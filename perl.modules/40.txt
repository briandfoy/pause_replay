Newsgroups: perl.modules,perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:40 perl.modules:61
Return-Path: <John.Redford@fmr.com>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 20416 invoked from network); 14 Oct 1999 16:30:18 -0000
Received: from gw17e.fmr.com (HELO gw17i.fmr.com) (192.223.252.81)
  by tmtowtdi.perl.org with SMTP; 14 Oct 1999 16:30:18 -0000
Received: (from smtp@localhost)
	by gw17i.fmr.com (8.8.7/8.8.7) id MAA23914
	for <modules@perl.org>; Thu, 14 Oct 1999 12:30:16 -0400 (EDT)
Received: from msgmmk101nts.fmr.com(172.25.150.20) by gw17i.fmr.com via smap (V2.0)
	id xma023623; Thu, 14 Oct 99 12:29:56 -0400
Received: by msgmmk101nts.fmr.com with Internet Mail Service (5.5.2448.0)
	id <4Y9RTMG1>; Thu, 14 Oct 1999 12:29:55 -0400
Message-ID: <C139F4D49384D2118EB60008C7A4337B578489@MSGBOS675NTS.fmr.com>
To: "'John Porter'" <jdporter@min.net>
Cc: modules@perl.org
Subject: RE: Import module
Date: Thu, 14 Oct 1999 09:28:01 -0400
MIME-Version: 1.0
X-Mailer: Internet Mail Service (5.5.2448.0)
Content-Type: text/plain;
	charset="iso-8859-1"
Approved: news@nntp.perl.org
From: John.Redford@fmr.com ("Redford, John")

Like Exporter::Import?

I would have no problem with that name. I just imagine it might be a little
confusing to people, as it had no relationship to Exporter.
I also feel a little odd about using "someone else's namespace". I don't
want to make trouble for maintainers of Exporter by having people send them
mail about a module that isn't theirs.

But like I said, I have no problem with that name if you don't.

		-----Original Message-----
		From:	'John Porter' [mailto:jdporter@min.net]
		Sent:	Wednesday, October 13, 1999 4:57 PM
		To:	Redford, John
		Cc:	modules@perl.org
		Subject:	Re: Import module

		Redford, John wrote:
		> Import is similar to Exporter in effect, but works very
differently. Rather
		> than use @ISA to find 'import' in Exporter, Import
directly exports an
		> 'import' function into the namespace of the package using
it.
		> 
		> There are many other differences, which essentially are
embodied by the
		> "hook" features of Import. Rather than having special
features for
		> interesting ways to export symbols, hooks are provided to
intercept requests
		> for symbols and the symbols themselves. This makes it easy
to create modules
		> which export dynamically valued symbols.

		It seems pretty obvious to me that this should go under
Exporter.
		Can you explain why it wouldn't?

		-- 
		John Porter
