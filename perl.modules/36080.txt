Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:36080
Return-Path: <domi@komarr.grenoble.hp.com>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 28119 invoked from network); 3 Nov 2004 10:08:27 -0000
Received: from x1.develooper.com (63.251.223.170)
  by lists.develooper.com with SMTP; 3 Nov 2004 10:08:27 -0000
Received: (qmail 30449 invoked by uid 225); 3 Nov 2004 10:08:26 -0000
Delivered-To: modules@perl.org
Received: (qmail 30444 invoked by alias); 3 Nov 2004 10:08:25 -0000
X-Spam-Status: No, hits=-4.9 required=8.0
	tests=BAYES_00
X-Spam-Check-By: la.mx.develooper.com
Received: from x6.develooper.com (HELO lists.develooper.com) (63.251.223.186)
  by la.mx.develooper.com (qpsmtpd/0.27.1) with SMTP; Wed, 03 Nov 2004 02:08:21 -0800
Received: (qmail 28109 invoked by uid 515); 3 Nov 2004 10:08:18 -0000
To: modules@perl.org
Subject: Re: Module submission Class::MakeIntrospecMethods
References: <200411021503.iA2F3INa027810@pause.perl.org> <021120041508187038%comdog@panix.com>
Date: Wed, 03 Nov 2004 10:42:02 +0100
Message-ID: <kgihdo72rrp.fsf@komarr.grenoble.hp.com>
User-Agent: Gnus/5.1006 (Gnus v5.10.6) Emacs/21.3 (gnu/linux)
Cancel-Lock: sha1:wG+PW/hVtlk3ynGpwOTrnBqMWZk=
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Posted-By: 155.208.254.138
Approved: news@nntp.perl.org
From: domi@komarr.grenoble.hp.com (Dominique Dumont)

comdog@panix.com (_brian_d_foy) writes:

> [[ This message was both posted and mailed: see
>    the "To," "Cc," and "Newsgroups" headers for details. ]]
>
> In article <200411021503.iA2F3INa027810@pause.perl.org>, Perl Authors
> Upload Server <upload@pause.perl.org> wrote:
>
>> The following module was proposed for inclusion in the Module List:
>> 
>>   modid:       Class::MakeIntrospecMethods
>
>
> is that name a typo, or am I missing something about
> the missing "t"?

Err, technically, it's not a typo: I did not know the english
"introspect" verb :o)

But you are right, I'll change the module name.

>>     Like Class::MethodMaker, this module provide an easy way to create
>>     accessors methods.
>
> How about something that's shorter (and uses only one word
> in each part)?
>
> Perhaps:
>
>    Class::Introspect
>    Class::Introspector

User may assume that the module will provide introspection for any
class. Which is not the case: the user needs to declare the
methods. And it does not give a clue about the method making
functionnality.

So far, Class::MakeIntrospectMethods is the best candidate. (And it's
definitely better with the extra 't' ;-) )

Any other idea ?

Cheers

-- 
Dominique Dumont 
"Delivering successful solutions requires giving people what they
need, not what they want." Kurt Bittner
