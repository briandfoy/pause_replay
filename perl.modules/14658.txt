Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:14658
Return-Path: <comdog@panix.com>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 18506 invoked by uid 76); 24 Oct 2002 19:01:36 -0000
Received: from relay1.pair.com (HELO relay.pair.com) (209.68.1.20) by onion.perl.org (qpsmtpd/0.12-dev) with SMTP; 2002-10-24 19:01:36Z
Received: (qmail 78395 invoked from network); 24 Oct 2002 19:01:31 -0000
Received: from 12-247-38-191.client.attbi.com (HELO 10-0-1-5) (12.247.38.191)  by relay1.pair.com with SMTP; 24 Oct 2002 19:01:31 -0000
X-pair-Authenticated: 12.247.38.191
Subject: Re: Module submission Automatic::DB
Date: Thu, 24 Oct 2002 14:01:50 -0500
To: rebel@obulous.org (Richard F. Rebel)
Cc: modules@perl.org
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-transfer-encoding: 8bit
References: <200210231620.g9NGKBO13109@pause.perl.org> <20021024132835.0eef31ea.rebel@obulous.org>
User-Agent: Thoth/1.4.6 (Carbon/OS X)
X-SMTPD: qpsmtpd/0.12-dev, http://develooper.com/code/qpsmtpd/
Approved: news@nntp.perl.org
From: comdog@panix.com (_brian_d_foy)
Message-ID: <perl.modules-14658@nntp.perl.org>

In article <20021024132835.0eef31ea.rebel@obulous.org>, Richard F. Rebel <rebel@obulous.org> wrote:

> I am abstracting the whole interface to the database in an attempt to
> keep from needing SQL littered all over your code and to make it
> easier to change columns etc without having to re-code everything,
> especially when it comes to strong data-typing.  eg changing a int(4)
> to an int(6) 

> DBI::OO::Abstract  ??
> OO::DBI            ??

i don't think OO needs to be part of the name.

it sounds like you may want to put it in DBIx (if you use DBI,
and why aren't you if not!).

now i see what you mean by "abstract", i think.  this is sort of
like the modules that automatically add getter and setter methods
to classes (a really cool feature built into Ruby, by the way).

the best thing you could do is associate, in naming scheme, your module
with another module that does the same thing in another domain.  people 
will be used to the name and what it means already.  some things
that may be similar:

   Class::MakeMethods
   Class::Accessor
   Class::MethodMapper

-- 
brian d foy (one of many PAUSE admins), http://pause.perl.org
