Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:11900
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 55180 invoked by uid 76); 30 May 2002 06:57:30 -0000
Received: from root@dubravka.kbx.de (HELO pause.perl.org) (212.40.160.59)
  by onion.perl.org (qpsmtpd/0.07b) with SMTP; Thu May 30 06:57:30 2002 -0000
Received: (from nobody@localhost)
	by pause.perl.org (8.9.3/8.9.3) id IAA26581;
	Thu, 30 May 2002 08:57:26 +0200
Date: Thu, 30 May 2002 08:57:26 +0200
Message-ID: <200205300657.IAA26581@pause.perl.org>
Reply-To: modules@perl.org
Subject: Module submission STL
To: modules@perl.org, seano@cpan.org
Approved: news@nntp.perl.org
From: upload@p11.speed-link.de ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       STL
  DSLIP:       ad+Op
  description: some STL data structures
  userid:      SEANO (Sean O'Rourke)
  chapterid:    6 (Data_Type_Utilities)
  communities:

  similar:
    Heap::*, Tree::*

  rationale:

    While hashes, arrays, and judicious use of sort cover most cases,
    sometimes I feel Perl lacks adequate support for sorted containers.
    The existing Perl versions are too slow (compared to the
    C-implemented built-ins) to be useful in many common cases. The C++
    Standard Template Library provides good, standard implementations of
    red-black trees and priority queues, which I have bound to Perl.
    With the impending release of Inline::CPP 0.24, it will be possible
    to build these modules with the generally-available version.

    I'm thinking of putting the module in as STL in the top level,
    unless someone can think of a better place (Data::STL?
    Algorithm::STL? blech.)

    /s

  enteredby:   SEANO (Sean O'Rourke)
  enteredon:   Thu May 30 06:57:23 2002 GMT

The resulting entry would be:

STL               ad+Op some STL data structures                     SEANO


Thanks for registering,
The Pause Team

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=4d100000_6e90a053849e8f98&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=4d100000_6e90a053849e8f98&SUBMIT_pause99_add_mod_insertit=1
