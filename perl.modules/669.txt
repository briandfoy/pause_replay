Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:669
Return-Path: <gustav@schaffter.com>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 24753 invoked from network); 7 Dec 1999 11:31:28 -0000
Received: from mail-lax-3.pilot.net (HELO mail03-lax.pilot.net) (205.139.40.17)
  by tmtowtdi.perl.org with SMTP; 7 Dec 1999 11:31:28 -0000
Received: from mailgw.capgroup.com (unknown-23-140.pilot.net [204.48.23.140]) by mail03-lax.pilot.net with ESMTP id DAA12241 for <modules@perl.org>; Tue, 7 Dec 1999 03:31:28 -0800 (PST)
Received: from smtplink.capgroup.com (unknown-2-28.capgroup.com [148.107.2.28]) by mailgw.capgroup.com with SMTP id DAA00997 for <modules@perl.org>; Tue, 7 Dec 1999 03:31:27 -0800 (PST)
Received: from schaffter.com ([204.48.23.140]) by smtplink.capgroup.com (Lotus SMTP MTA v4.6.3  (733.2 10-16-1998)) with SMTP id 88256840.003F359D; Tue, 7 Dec 1999 03:30:25 -0800
Message-ID: <384CEFF5.63D3C1F@schaffter.com>
Date: Tue, 07 Dec 1999 12:31:01 +0100
Organization: N/A
X-Mailer: Mozilla 4.7 [en] (WinNT; I)
X-Accept-Language: en
MIME-Version: 1.0
To: modules@perl.org
Subject: Name space and module name
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Approved: news@nntp.perl.org
From: gustav@schaffter.com (Gustav Schaffter)

-----BEGIN PGP SIGNED MESSAGE-----

Hi,

My PAUSE name is SCHAFFTER.

I have created a module (my first) that I intend to publish and I feel
that I need your advise (or at least blessing) when it comes to
naming.

So far, I assume that the module belongs in the Time tree. I have
called the module Time::Timer, but I'm open to your suggestions,
should you have another point of view.

Second, should I also get in contact with someone having a main
responsibility for the Time tree or can I just upload my module once I
have (hopefully) got your blessing for the names?



Here is an extract from the Readme.txt file:

NAME
    Time::Timer - Give back the control to the caller at given
    times.

SYNOPSIS
       use Time::Timer;

       # Constructor
       $th = Time::Timer->new([second [,second [,...]]);

       # Methods
       @seconds = $th->set_control_list([second [,second [,...]]);
       @seconds = $th->get_control_list();

       $second = $th->get_control_on_second([second [,second [,...]]);

       $timer_version = $th->get_version();

DESCRIPTION
    This module implements an 'intelligent' (?) layer over sleep().
    Call the module when you want to sleep to a given second in the
    minute without having to calculate how long to wait.

    Use with multiple 'second' values to sleep until the
    chronologically first 'second' in the list.

    Note that all times used in Time::Timer are calculated from the
    local time in the computer executing Time::Timer.

USAGE
    Assume that you want to do something repeatedly every minute,
    when the seconds show for instance 34.

    Assume that you want to do something (maybe just once) the next
    time the seconds in the computer shows 23. Assume that 'now' is
    18. You would need to use sleep and to calculate how many
    seconds there are from 'now' till 23. Easy, 23 - 18 = 5.
    sleep(5); Then, assume that 'now' is 28. I.e. 23 - 28 = 55.
    (Huh?)

    Assume that you want to do something repeatedly, when the
    seconds show either 12 or 45 or 55, whichever comes first
    compared to 'now'. Assume that 'now' is 56. You would have to
    find out if it's 12, 45 or 55 that comes 'after' 56. Then you
    would have to calculate 12 - 56 = 16. (Right?)

    You should have got the picture by now. (Or I have failed. :-)



I look forward to any of your comments.

Best regards
Gustav Schaffter


-----BEGIN PGP SIGNATURE-----
Version: PGPfreeware 6.0.2i

iQEVAwUBOEzhw+K1NI4XIQ91AQEILwgAo5JpKTr4c8HUKOtAwpkD+vWhPsxocdpU
dUkt4aJJxM/6FmyYGvh2KSxeEeJQhp1TvnQUm+zQPbFhpOUXzEVVZGpZCzxzU0Vx
Kt2NlCSDUHwDu3vfyQ1EnMeCqLprVGmnvBhQ7LSkDrrCxYzgPW/Es63CpetJHMTz
5+u78VYheC7ujxs6DOv8ppoQv9wMYNHw+EfOH22spp8jSYZ2vyxn/cUEcIbM8Vbv
EMTfbzHP8AUbUar3H7RlCF4E6F2e2ka+bgyj/svg0/MRulXKsBTfOXrtUnxyObJw
cKql0NkRmZ9q9A5SRCnYweJQXdKwczfKL0uk/N7MsFHsupcboTtDLw==
=ccGD
-----END PGP SIGNATURE-----
