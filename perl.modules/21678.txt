Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:21678
Return-Path: <nobody@pause.x.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 20163 invoked by uid 76); 10 Jun 2003 20:02:14 -0000
Received: from qmailr@one.develooper.com (HELO ran-out.mx.develooper.com) (64.81.84.115) by onion.perl.org (qpsmtpd/0.26-dev) with SMTP; Tue, 10 Jun 2003 13:02:14 -0700
Received: (qmail 10123 invoked by uid 225); 10 Jun 2003 20:01:59 -0000
Delivered-To: modules@perl.org
Received: (qmail 10097 invoked by uid 507); 10 Jun 2003 20:01:53 -0000
Received: from pause.perl.org (HELO pause.perl.org) (212.40.160.59) by one.develooper.com (qpsmtpd/0.26-dev) with SMTP; Tue, 10 Jun 2003 12:58:55 -0700
Received: from pause.perl.org (IDENT:nobody@localhost [127.0.0.1])	by pause.perl.org (8.12.9/8.12.9) with ESMTP id h5AJwftQ003267	for <modules@perl.org>; Tue, 10 Jun 2003 21:58:41 +0200
Received: (from nobody@localhost)	by pause.perl.org (8.12.9/8.12.9/Submit) id h5AJweuV003266;	Tue, 10 Jun 2003 21:58:40 +0200
Date: Tue, 10 Jun 2003 21:58:40 +0200
Message-ID: <200306101958.h5AJweuV003266@pause.perl.org>
Subject: PAUSE ID request (ALPO; Alexander Pourmirzayouf)
Reply-To: modules@perl.org
To: modules@perl.org
X-SMTPD: qpsmtpd/0.26-dev, http://develooper.com/code/qpsmtpd/
X-Spam-Check-By: one.develooper.com
X-Spam-Status: No, hits=1.1 required=7.0 tests=CARRIAGE_RETURNS,SPAM_PHRASE_00_01 version=2.44
X-SMTPD: qpsmtpd/0.26-dev, http://develooper.com/code/qpsmtpd/
Approved: news@nntp.perl.org
From: upload@pause.x.perl.org ("Perl Authors Upload Server")

Request to register new user

fullname: Alexander Pourmirzayouf
  userid: ALPO
    mail: CENSORED
homepage: 
     why:

    I wrote a package which allows simple DBI interactions and also
    implements a unified interface for common DBDs, there are some
    packages that approach a similar goal, but I haven't seen one
    allowing code short and simple as this:

    use DBIx::Simple;

    my $mysql_cons = new DBIx::Simple('mysql');

    # attempt to connect to the MySql database # also prepare and
    execute the given SQL statement. $mysql_cons->exec( "databasename",
    "DELETE from somename where i=1", "username", "password");

    # use the already created handle, prepare and execute the SQL #
    statement and return the results as array. my @results =
    $mysql_cons->exec("databasename","SELECT ..");

    $mysql_cons->disconnect_all;

    'connect', 'prepare', 'execute', 'fetchrow_' are handled within the
    modules subroutine "exec" which also checks for a reusable
    connection and returns an array of values for SELECTs.


The following links are only valid for PAUSE maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_user&USERID=52500000_7426c67ba8b4bea0&SUBMIT_pause99_add_user_sub=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_user&USERID=52500000_7426c67ba8b4bea0&SUBMIT_pause99_add_user_Definitely=1
