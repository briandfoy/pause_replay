Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:24458
Return-Path: <timbo@dansat.data-plan.com>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 20992 invoked by uid 76); 10 Nov 2003 10:55:29 -0000
Received: from x1.develooper.com (HELO x1.develooper.com) (63.251.223.170) by onion.perl.org (qpsmtpd/0.26) with SMTP; Mon, 10 Nov 2003 02:55:29 -0800
Received: (qmail 18361 invoked by uid 225); 10 Nov 2003 10:55:28 -0000
Delivered-To: modules@perl.org
Received: (qmail 18355 invoked by alias); 10 Nov 2003 10:55:28 -0000
Received: from mail03.svc.cra.dublin.eircom.net (HELO mail03.svc.cra.dublin.eircom.net) (159.134.118.19) by la.mx.develooper.com (qpsmtpd/0.27-dev) with SMTP; Mon, 10 Nov 2003 02:55:16 -0800
Received: (qmail 10500 messnum 145019 invoked from network[213.94.228.233/unknown]); 10 Nov 2003 10:55:12 -0000
Received: from unknown (HELO dansat.data-plan.com) (213.94.228.233)  by mail03.svc.cra.dublin.eircom.net (qp 10500) with SMTP; 10 Nov 2003 10:55:12 -0000
Received: from dansat.data-plan.com (localhost [127.0.0.1])	by dansat.data-plan.com (8.12.9/8.12.9) with ESMTP id hAAAtFC3070258;	Mon, 10 Nov 2003 10:55:15 GMT	(envelope-from timbo@dansat.data-plan.com)
Received: (from timbo@localhost)	by dansat.data-plan.com (8.12.9/8.12.9/Submit) id hAAAtFH8070257;	Mon, 10 Nov 2003 10:55:15 GMT
Date: Mon, 10 Nov 2003 10:55:15 +0000
To: demerphq <demerphq@hotmail.com>
Cc: Tim Bunce <Tim.Bunce@pobox.com>, modules@perl.org, yves@cpan.org
Subject: Re: Module submission Data::Stream
Message-ID: <20031110105515.GF41872@dansat.data-plan.com>
References: <200311071755.hA7HtLTP014834@pause.perl.org> <20031107192908.GA41872@dansat.data-plan.com> <LAW12-OE189gYbNLlcs0000a424@hotmail.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <LAW12-OE189gYbNLlcs0000a424@hotmail.com>
User-Agent: Mutt/1.4i
X-Spam-Check-By: la.mx.develooper.com
X-Spam-Status: No, hits=-3.0 required=7.0 tests=CARRIAGE_RETURNS,IN_REP_TO,QUOTED_EMAIL_TEXT,REFERENCES,SPAM_PHRASE_00_01,TO_LOCALPART_EQ_REAL,USER_AGENT,USER_AGENT_MUTT version=2.44
X-SMTPD: qpsmtpd/0.26, http://develooper.com/code/qpsmtpd/
Approved: news@nntp.perl.org
From: Tim.Bunce@pobox.com (Tim Bunce)

On Sun, Nov 09, 2003 at 04:53:03PM +0100, demerphq wrote:
> > >     Other module names I considered were Data::Streamer
> > >     Data::Dumper::Streamer and Data::Serialize and also preserving the
> > >     BFDump name. After discussions with various people from Perlmonks
> > >     the consensus was that Data::Stream was the preferred choice.
> >
> > A "Data::Stream" could be just about anything. Doesn't say what it does.
> >
> > Although "stream" is _how_ it does it, "dump" is what it actually does.
> > So it should have dump in the name along with stream.
> > I'd suggest:
> >
> > Data::StreamDump
> 
> Well, I guess, although im unconvinced. It seems to me that Data::Stream by
> itself conveys serialization, which is all that dumping is. The fact that it
> suggests IO Streams is just a nice coincidental byproduct.
> 
> I suppose Im also a little adverse to names like this just because of the
> wise guy factor "What, it takes a dump in a stream?" . Maybe that isnt a
> particularly relevent but still. (I encountered this already with BFDump and
> im a little keen to avoid it this time round. Names are important :-)

Yes, names are important, and so are established conventions.
Compare:
	http://search.cpan.org/search?query=dump&mode=dist
	http://search.cpan.org/search?query=stream&mode=dist

'dump' is much more consistently used to denote serialization
than 'stream'.

> Here are my personal criteria for a name for the module:
> 1. it avoids wise guy names.
> 2. its short enough that its not a PITA for -M usage.
> 3. its in the Data:: name space.
> 4. Id like it to denote that it streams (as in writes to a stream)
> 5. Id like it to denote that it serializes
> 6. Id like it to leave room so that it allows for formats other than perl.
> 
> So I was thinking
> 
> Data::Stream
>     for the current release,  with it being a wrapper into
> 
>   Data::Stream::Perl
>   Data::Stream::XML
>   Data::Stream::YAML
>   Data::Stream::Binary
> 
> or whatever once I have other versions.
> 
> Anyway,  i'm interested to see if you still stand by your view or if you
> have alternate suggestions based on the above. Im not totally sold on
> Data::Stream, but so far its the best of what ive seen and heard.

I do stand by it. But life is too short to argue over it for long.

Tim.
