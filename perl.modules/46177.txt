Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:46177
Return-Path: <comdog@panix.com>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 17297 invoked from network); 28 Nov 2005 20:09:44 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 28 Nov 2005 20:09:44 -0000
Received: (qmail 570 invoked by uid 225); 28 Nov 2005 20:09:43 -0000
Delivered-To: modules@perl.org
Received: (qmail 560 invoked by alias); 28 Nov 2005 20:09:42 -0000
X-Spam-Status: No, hits=-4.4 required=8.0
	tests=ALL_TRUSTED,BAYES_00
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: neutral (x1.develooper.com: 63.251.223.186 is neither permitted nor denied by domain of comdog@panix.com)
Received: from x6.develooper.com (HELO lists.develooper.com) (63.251.223.186)
    by la.mx.develooper.com (qpsmtpd/0.28) with SMTP; Mon, 28 Nov 2005 12:09:33 -0800
Received: (qmail 9493 invoked by uid 515); 28 Nov 2005 19:57:53 -0000
To: modules@perl.org
Subject: Re: Module submission Devel::Autostub
Date: Mon, 28 Nov 2005 13:57:53 -0600
Reply-To: modules@perl.org
Message-ID: <281120051357539342%comdog@panix.com>
References: <200511221825.jAMIPeli024315@pause.perl.org> <221120051355109972%comdog@panix.com> <kgioe44n64n.fsf@komarr.grenoble.hp.com>
Organization: Perl Author's Upload SErver (PAUSE)
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-transfer-encoding: 8bit
User-Agent: Thoth/1.5.9 (Carbon/OS X)
X-Posted-By: 24.12.70.36
Approved: news@nntp.perl.org
From: comdog@panix.com (_brian_d_foy)

In article <kgioe44n64n.fsf@komarr.grenoble.hp.com>, Dominique Dumont
<domi@komarr.grenoble.hp.com> wrote:

> comdog@panix.com (_brian_d_foy) writes:
> 
> >>   modid:       Devel::Autostub
> >>   DSLIP:       bdphp
> >>   description: Stub module/class during development.
> >
> > This sounds like something that belongs in Class::*. It seems
> > more like a class creation tool than a development tool to 
> > me.
> >
> > Anyone else care to comment?
> 
> Who needs a stubbing tool *after* development ? It would only hide
> bugs.

I figured another case of it would be for modules which provide a 
base class and enforce an interface it expects you to implement. You
still want Perl to find the methods even if only to die() with a
message that says they're unimplemented. It would still be like 
that in production.

Maybe I just don't understand the module enough, or why it's useful.

-- 
brian d foy (one of many PAUSE admins), http://pause.perl.org
archives at http://www.xray.mpe.mpg.de/mailing-lists/modules
please send all messages back to modules@perl.org
