Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:9925
Return-Path: <timbo@dansat.data-plan.com>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 21595 invoked by uid 76); 30 Jan 2002 11:12:21 -0000
Received: from mail1.tinet.ie (HELO mcclure.tinet.ie) (159.134.237.19)
  by onion.perl.org (qpsmtpd/0.06) with SMTP; Wed Jan 30 11:12:21 2002 -0000
Received: from p387.as1.limerick1.eircom.net ([159.134.165.131] helo=dansat.data-plan.com)
	by mcclure.tinet.ie with esmtp (Exim 2.05 #23)
	id 16Vsel-00061N-00; Wed, 30 Jan 2002 11:12:00 +0000
Received: (from timbo@localhost)
	by dansat.data-plan.com (8.11.6/8.11.6) id g0UBC1q72241;
	Wed, 30 Jan 2002 11:12:01 GMT
	(envelope-from timbo)
Date: Wed, 30 Jan 2002 11:12:01 +0000
To: William R Ward <bill@wards.net>
Cc: modules@perl.org, jesse@cpan.org
Subject: Re: Module submission Return::Value
Message-ID: <20020130111201.C72091@dansat.data-plan.com>
References: <200201300418.FAA12436@pause.perl.org> <m21yg8qvbc.fsf@komodo.home.wards.net>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.2.5i
In-Reply-To: <m21yg8qvbc.fsf@komodo.home.wards.net>; from bill@wards.net on Tue, Jan 29, 2002 at 09:09:11PM -0800
Approved: news@nntp.perl.org
From: Tim.Bunce@pobox.com (Tim Bunce)

On Tue, Jan 29, 2002 at 09:09:11PM -0800, William R Ward wrote:
> upload@p11.speed-link.de (Perl Authors Upload Server) writes:
> >   modid:       Return::Value
> >     Return::Value is an object which encapsulates most of the standard
> >     behaviors for function/method return values. It allows a function to
> >     return an object that is treated as a boolean in boolean context, as
> >     an array in array context and as a rich object if the caller wants
> >     to use advanced features such as stack traces or lists of warnings
> >     or complex return datatypes.
> 
> I don't think that a "Return" top-level namespace is a very good
> choice for this..  How about (something)::ReturnValue, for some
> reasonable value of (something)?

Umm, in the 'control flow' section of the module list we currently have

    * AtExit - atexit() function to register exit-callbacks
    * Callback - Define easy to use function callback objects
    * Hook::PrePostCall - Add actions before and after a routine
    * Memoize - Cache results of individual function calls
    * Religion - Control where you go when you die()/warn()

It's kind'a tempting to propose a ControlFlow:: category.
Most/all of the above would have fitted in there nicely
(usually a sign of a good name).

So how about ControlFlow::ReturnValue ?

Tim.
