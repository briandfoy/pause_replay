Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:17649
Return-Path: <andreas.koenig@anima.de>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 63445 invoked by uid 76); 8 Feb 2003 08:33:40 -0000
Received: from qmailr@one.develooper.com (HELO ran-out.mx.develooper.com) (64.81.84.115) by onion.perl.org (qpsmtpd/0.20) with SMTP; 2003-02-08 08:33:40Z
Received: (qmail 13269 invoked by uid 225); 8 Feb 2003 08:33:37 -0000
Delivered-To: modules@perl.org
Received: (qmail 13264 invoked by uid 507); 8 Feb 2003 08:33:37 -0000
Received: from root@franz.ak.mind.de (HELO k242.linux.bogus) (212.42.235.66) by one.develooper.com (qpsmtpd/0.21-dev) with SMTP; 2003-02-08 08:33:36Z
Received: (from k@localhost)	by k242.linux.bogus (8.11.6/8.11.6) id h188XNQ14309;	Sat, 8 Feb 2003 09:33:23 +0100
X-Authentication-Warning: k242.linux.bogus: k set sender to andreas.koenig@anima.de using -f
Sender: k@k242.linux.bogus
To: Arthur Corliss <corliss@digitalmages.com>
Cc: modules@perl.org
Subject: Re: CPAN submission guidelines
References: <Pine.LNX.4.44.0302070753460.11806-100000@sigurd.digitalmages.com>
Reply-To: modules@perl.org
Date: Sat, 08 Feb 2003 09:33:23 +0100
In-Reply-To: <Pine.LNX.4.44.0302070753460.11806-100000@sigurd.digitalmages.com> (Arthur Corliss's message of "Fri, 7 Feb 2003 08:27:07 -0900 (AKST)")
Message-ID: <m3y94rkw8c.fsf@k242.linux.bogus>
Lines: 93
User-Agent: Gnus/5.090005 (Oort Gnus v0.05) Emacs/21.2 (i686-pc-linux-gnu)
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-SMTPD: qpsmtpd/0.21-dev, http://develooper.com/code/qpsmtpd/
X-Spam-Check-By: one.develooper.com
X-Spam-Status: No, hits=-1.9 required=7.0 tests=CARRIAGE_RETURNS,IN_REP_TO,REFERENCES,SPAM_PHRASE_02_03,USER_AGENT,USER_AGENT_GNUS_UA,X_AUTH_WARNING version=2.43
X-SMTPD: qpsmtpd/0.20, http://develooper.com/code/qpsmtpd/
Approved: news@nntp.perl.org
From: andreas.koenig@anima.de ((Andreas J. Koenig))

Thank you, Arthur, for voicing your frustration. We do not have a
bullet proof concept how to avoid frustration, but what happened to
you seems avoidable.

>>>>> On Fri, 7 Feb 2003 08:27:07 -0900 (AKST), Arthur Corliss <corliss@digitalmages.com> said:

  > Greetings:
  > Let me start by saying I know you guys have day jobs as well, but I have to
  > wonder if I'm following the right procedure on getting modules registered on
  > CPAN.  My last couple of attempts appear to be failing miserably.

  > First off, my understanding about namespace registration was to submit the
  > standard form and wait for feedback.  I did that with Parse::PlainConfig.  As
  > per 04pause.html:

  >   The module list maintainers themselves are mostly lurkers. You need not wait
  >   for a response. Generally a lack of response can be taken as acceptance of
  >   the module name being proposed.

Well, at least there it really says: You need *not* wait. You get
maintainer status by simply using a namespace the first time.

  > I want to point out that Parse::PlainConfig as a name was actually proposed by
  > one of list maintainers.  I accepted the recommendation, and based on the
  > 04pause.html doc, thought that module was accepted for inclusion.

I'm reading the old thread again and I think the problem started with
the namespace Parse::PerlConfig. Tim said:

  Perhaps Parse::PlainConfig. Seems more natural to me that 'RCfile',
  especially given the existance of Parse::PerlConfig.

Parse::PerlConfig is not registered and imho is a bad precedent.
Parse:: modules should deal with parse algorithms: Lex, RecDescent,
Tokens, YALALR, Yapp are dealing with the task of parsing in a generic
sense. I agree with brian that modules for reading config files should
live in the Config or ConfigReader namespace.

  > A month ago, I find out from brian d foy that my module was
  > *never* registered officially on CPAN, and yet I've already
  > polluted that namespace. And since he's opposed to the name, I
  > know I have no chance of getting it registered under that name.

Oh well, I think, I'm ready to break down. Not by the namespace choice
but by the fact that Tim's statement looked pretty approving and quite
a lot of time has passed since. It's not acceptable for the users of
your module to now reject a namespace proposal such a long time after
it seemed to be approved.

If nobody objects within the next three days, I'll approve
Parse::PlainConfig.

  > Fast forward to the last few weeks.  I have a new module that I'd like to
  > register (Class::Aggregate).  I'll warrant that I didn't fully research out my
  > options before proposing it (and I thank all of you that pointed me in the
  > right direction), but since then I've found that none of the existing modules
  > a) fit my feature criterion, and b) can easily be combined with other modules
  > to do so without considerable overhead, either.

  > After some discussion, at least one of you seemed open to having it uploaded
  > to CPAN, but wanted a name change.  I can't think of anything better, so I
  > took a recommendation from you guys, once again.

  > What I'm finding is that even if I accept your recommendations, that namespace
  > is *still* not officially registered on CPAN, nor can I update module
  > metadata via the pause interface.

If you mean Class::EHierarchy, I've registered that now.

  > I'm loathe to upload anything you guys don't approve of out of respect for the
  > archive.  I don't want to hijack any namespace that the community doesn't feel
  > is appropriate.

  > So, what am I doing wrong?  Can I get modules registered, or am I just
  > supposed to go away?  I apologise if any of you feel that I'm being a pain in
  > the ass.  Either tell me to go away (which I will comply with), or give me a
  > procedure that will work.

CPAN is extremely tolerant in what it accepts. It works without human
intervention. First-come-first-served is the default. It's the extra
blessing of being registered in the module list that needs human
intervention and this is a painful bottleneck. We do not know how this
can be improved.

You could perhaps adjust your expectation: ask us for advice and feel
free *not* to accept it. The number of CPAN developers who either
ignore us completely or do not follow our suggestions or did not get
any good suggestions from us seem to be the majority, and yet CPAN
works mostly.


-- 
andreas
