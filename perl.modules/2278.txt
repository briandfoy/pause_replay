Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:2278
Return-Path: <andreas.koenig@anima.de>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 13290 invoked from network); 27 Jun 2000 10:57:45 -0000
Received: from dubravka.in-berlin.de (HELO ak-71.mind.de) (root@193.175.21.65)
  by tmtowtdi.perl.org with SMTP; 27 Jun 2000 10:57:45 -0000
Received: (from k@localhost)
	by ak-71.mind.de (8.9.3/8.9.3) id MAA28886;
	Tue, 27 Jun 2000 12:57:37 +0200
X-Authentication-Warning: ak-71.mind.de: k set sender to andreas.koenig@anima.de using -f
Sender: k@ak-71.mind.de
To: Autarch <autarch@urth.org>
Cc: "Andreas J. Koenig" <andreas.koenig@anima.de>, modules@perl.org
Subject: Re: two new ones
References: <Pine.LNX.4.21.0006261909440.15069-100000@urth.org>
Date: 27 Jun 2000 12:57:37 +0200
In-Reply-To: Autarch's message of "Mon, 26 Jun 2000 19:23:35 -0500 (CDT)"
Message-ID: <m3n1k7pf1a.fsf@ak-71.mind.de>
Lines: 59
User-Agent: Gnus/5.0806 (Gnus v5.8.6) Emacs/20.7
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Approved: news@nntp.perl.org
From: andreas.koenig@anima.de ((Andreas J. Koenig))

>>>>> On Mon, 26 Jun 2000 19:23:35 -0500 (CDT), Autarch <autarch@urth.org> said:

 > I kind of like Class::Exceptions though because the module is all
 > about declaring exceptions (which is really about magically
 > creating exception classes).

I see the difference between Class::Exception and Exception::Class in
that the former acts upon exceptions in the realm of classes, i.e. in
OO programmed modules, while the latter acts upon *any* exceptions in
an OO style. Right? So Exception::Class is more generic, it is for
both OO and functional modules.

 > The reason I chose BaseException is that I kind of like the Java standard
 > of FooBarException style names rather than Exception::Foo::Bar.

Several existing modules have already their own Exception classes, as
in

cpan> m /Exception$/
Module          Apache::AxKit::Exception (M/MS/MSERGEANT/AxKit-0.95.tar.gz)
Module          Apache::HeavyCGI::Exception (A/AN/ANDK/Apache-HeavyCGI-0.0117.tar.gz)
Module          Net::RRP::Exception (M/MK/MKUL/Net-RRP-0.02.tar.gz)
Module          PApp::Exception (M/ML/MLEHMANN/PApp-0.08.tar.gz)
Module          Template::Exception (A/AB/ABW/Template-Toolkit-1.07.tar.gz)


 > It just
 > seems more descriptive and you get the important info first (error type,
 > followed by subtype(s) followed the generic fact that its an exception).  
 > OTOH, its not very perlish.

In the context of a real working class, it looks perlish to me to say
Foo::Bar::Exception, but not in the context of a generic mechanism for
exceptions.

[...]

 > Ok, in light of the greater good of getting all this stuff in the same
 > place I'll go with

 > Devel::StackTrace
 > Exception::Class
 > Exception::Class::Base

OK, noted. Will add it to the module list later today.

[...]

 > Anyway, all this is to say that it would be nice to have some general
 > cleanup of the Exception related modules so that we could present all the
 > possibilities and also work on making them work together (my declaration
 > code could easily work with Error, for example, and it might be nice to
 > have them cross-reference each other).

Indeed, what's needed is better visibility of the existing solutions.
Please cross reference heavily.

-- 
andreas
