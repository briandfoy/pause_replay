Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:19413
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 21844 invoked by uid 76); 13 Mar 2003 00:53:30 -0000
Received: from qmailr@one.develooper.com (HELO ran-out.mx.develooper.com) (64.81.84.115) by onion.perl.org (qpsmtpd/0.20) with SMTP; 2003-03-13 00:53:30Z
Received: (qmail 15169 invoked by uid 225); 13 Mar 2003 00:53:29 -0000
Delivered-To: modules@perl.org
Received: (qmail 15158 invoked by uid 507); 13 Mar 2003 00:53:29 -0000
Received: from root@pause.perl.org (HELO pause.perl.org) (212.40.160.59) by one.develooper.com (qpsmtpd/0.21-dev) with SMTP; Wed, 12 Mar 2003 16:53:27 -0800
Received: (from nobody@localhost)	by pause.perl.org (8.11.6/8.11.6) id h2D0rNm10208;	Thu, 13 Mar 2003 01:53:23 +0100
Date: Thu, 13 Mar 2003 01:53:23 +0100
Message-ID: <200303130053.h2D0rNm10208@pause.perl.org>
Subject: Module submission Proc::ParallelLoop
Reply-To: modules@perl.org
To: modules@perl.org, bdarrah@cpan.org
X-SMTPD: qpsmtpd/0.21-dev, http://develooper.com/code/qpsmtpd/
X-Spam-Check-By: one.develooper.com
X-Spam-Status: No, hits=1.1 required=7.0 tests=CARRIAGE_RETURNS,SPAM_PHRASE_00_01 version=2.44
X-SMTPD: qpsmtpd/0.20, http://develooper.com/code/qpsmtpd/
Approved: news@nntp.perl.org
From: upload@pause.x.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Proc::ParallelLoop
  DSLIP:       bdpfp
  description: Execute loops in parallel
  userid:      BDARRAH (Byron Darrah)
  chapterid:    4 (Operating_System_Interfaces)
  communities:
    module-authors@perl.org

  similar:
    Proc::Swarm Proc::Queue

  rationale:

    This module takes an approach to parallel worker processes based on
    the classic programming construct, "pardo". Instead of explicitly
    setting up and interacting with a queue object, coders can write a
    more natural-looking loop that somewhat resembles "for" or "foreach"
    which just happens to execute the loop body in a very controlled,
    parallel fashion.

    All exit statuses, standard output, and error output from
    parallelized work is automatically serialized to further strengthen
    the semantic resemblence to normal loops. This should be a benefit
    to developers seeking alternatives for simplifying the readability
    of code and program output, and in updating existing code to take
    advantage of parallel worker processes.

  enteredby:   BDARRAH (Byron Darrah)
  enteredon:   Thu Mar 13 00:53:23 2003 GMT

The resulting entry would be:

Proc::
::ParallelLoop    bdpfp Execute loops in parallel                    BDARRAH


Thanks for registering,
The Pause Team

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=5b300000_9f9aaca960431437&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=5b300000_9f9aaca960431437&SUBMIT_pause99_add_mod_insertit=1
