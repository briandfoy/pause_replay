Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:67239
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 25254 invoked from network); 19 Aug 2009 02:58:48 -0000
Received: from x1.develooper.com (207.171.7.70)
  by x6.develooper.com with SMTP; 19 Aug 2009 02:58:48 -0000
Received: (qmail 11622 invoked by uid 225); 19 Aug 2009 02:58:48 -0000
Delivered-To: modules@perl.org
Received: (qmail 11618 invoked by alias); 19 Aug 2009 02:58:47 -0000
X-Spam-Status: No, hits=0.0 required=8.0
	tests=
X-Spam-Check-By: la.mx.develooper.com
Received: from pause.fiz-chemie.de (HELO pause.perl.org) (195.149.117.110)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Tue, 18 Aug 2009 19:58:43 -0700
Received: from pause.perl.org (localhost.localdomain [127.0.0.1])
	by pause.perl.org (8.13.8/8.13.8/Debian-3) with ESMTP id n7J2wc4u018091
	for <modules@perl.org>; Wed, 19 Aug 2009 04:58:38 +0200
Received: (from nobody@localhost)
	by pause.perl.org (8.13.8/8.13.8/Submit) id n7J2wcFL018090;
	Wed, 19 Aug 2009 04:58:38 +0200
Date: Wed, 19 Aug 2009 04:58:38 +0200
Message-ID: <200908190258.n7J2wcFL018090@pause.perl.org>
Subject: Module submission Robotics
Reply-To: modules@perl.org
To: modules@perl.org
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Robotics
  DSLIP:       bdpOp
  description: Robotics hardware control and abstraction
  userid:      JCLINE (Jonathan Cline)
  chapterid:   24 (Commercial_Software_Interfaces)
  communities:
    bioperl-l

  similar:
    None. My module is a s/w interface to physical hardware. Closest are
    LEGO::NXT or Device::Arduino but those are different types of
    hardware used for different purposes.

  rationale:

    First I suggested Bio::Robotics since this package is now used for
    biology lab robotics. There are no dependencies on Bio:: though, and
    this choice was based only for ease of distribution. Developer
    bioperl-l opinion was a root namespace might be better. The name
    "Robotics" is chosen to differentiate access to a physical motor
    robot vs. software packages like WWW Robots, automated script
    "robots", etc.

    The Robotics.pm is an interface to multiple (serial|usb|network)
    hardware devices (like Tecan Genesis Workstation used in laboratory
    automation). Robots have similar methods with underlying hardware
    differences and command set differences. Telling an arbitrary robot
    "move to X, pick up Y, measure mass of Y, move to Z, set down Y" can
    be abstracted across many physical hardware devices (separate motor
    arms, separate sensor/operational instruments, etc). Also,
    client-server operations are implemented, so Robotics.pm contains
    the client-server protocol for abstracting over the network.

    The first modules will be (something)::Robotics::Tecan::Genesis
    (Tecan=equipment vendor, Genesis=model)

    I believe there are a couple choices for names; 1) root
    Robotics::(vendor)::(model)

    This follows since there will be many devices controlled by
    Robotics.pm. It may use many Device::'s or use it's own device
    methods.

    2) Device::Robotics::(vendor)::(model)

    The Robotics.pm and all robot devices could be placed under device,
    however it is an abstraction layer for other devices and is not a
    physical device itself.

    3) Same as 2 above, + several Device::(vendor)::(model)

    The Robotics.pm could be placed under device even though it is not
    a physical device, and it could 'use' separate packages for each
    hardware device. However this breaks up the distribution into
    separate modules which may create too many incompatibilities to be
    useful.

    My conclusion is that (1) is best, this means a root Robotics::new
    method which for example queries for connected hardware, returns
    appropriate "found the vendor-model" objects, the user then operates
    the vendor-model physical hardware as desired. Or, the user invokes
    Robotics::client("192.168.1.1:8088", "password") to communicate to a
    remote robotics server, which is implemented with
    Robotics::server("password").

    More info & pictures of the robot are here

    http://88proof.com/synthetic_biology/blog/archives/386

    http://88proof.com/synthetic_biology/blog/archives/318

  enteredby:   JCLINE (Jonathan Cline)
  enteredon:   Wed Aug 19 02:58:38 2009 GMT

The resulting entry would be:

Robotics          bdpOp Robotics hardware control and abstraction    JCLINE


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=f3100000_7409f90df67872ca&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=f3100000_7409f90df67872ca&SUBMIT_pause99_add_mod_insertit=1
