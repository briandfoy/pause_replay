Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:49585
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 24538 invoked from network); 27 Jun 2006 00:13:28 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 27 Jun 2006 00:13:28 -0000
Received: (qmail 11220 invoked by uid 225); 27 Jun 2006 00:13:28 -0000
Delivered-To: modules@perl.org
Received: (qmail 11211 invoked by alias); 27 Jun 2006 00:13:27 -0000
X-Spam-Status: No, hits=-2.5 required=8.0
	tests=BAYES_00,FORGED_RCVD_HELO
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
Received: from pause.fiz-chemie.de (HELO pause.perl.org) (195.149.117.110)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Mon, 26 Jun 2006 17:13:07 -0700
Received: from pause.perl.org (localhost.localdomain [127.0.0.1])
	by pause.perl.org (8.13.4/8.13.4/Debian-3sarge1) with ESMTP id k5R0D1L6024172
	for <modules@perl.org>; Tue, 27 Jun 2006 02:13:01 +0200
Received: (from nobody@localhost)
	by pause.perl.org (8.13.4/8.13.4/Submit) id k5R0D0tV024166;
	Tue, 27 Jun 2006 02:13:00 +0200
Date: Tue, 27 Jun 2006 02:13:00 +0200
Message-ID: <200606270013.k5R0D0tV024166@pause.perl.org>
Subject: Module submission Class::Pluggable
Reply-To: modules@perl.org
To: modules@perl.org
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Class::Pluggable
  DSLIP:       adpfp
  description: Makes your subclass pluggable.
  userid:      TAKESHIGE (Ken Takeshige)
  chapterid:   2 (Language_Extensions)
  communities:

  similar:

  rationale:

    Currently a lot of frameworks and classes have ability to plugin
    the exterior classs and modules. And they uses there own mechanism
    to handle the plugin modules (ex, "goto &Exporter::import").

    One thing I don't like is a lot of pluggable classes let plugin to
    use trick like "goto &Exporter::import". This kind of trick make it
    hard to read. And also some proglammer doesn't know what it means.

    So, my Class::Pluggable makes easy to handle pluggable class. And
    also makes easy to read. For example if you have some kind of class
    like My::Own::Class which inheritate Class::Pluggable,

    --- my $my_own_class = new My::Own::Class();
    $my_own_class->addPlugin("Some::Plugin"); ---

    Here it is, its easy to understand what happening in here. I want
    to standarize the way to make pluggable class.

  enteredby:   TAKESHIGE (Ken Takeshige)
  enteredon:   Tue Jun 27 00:13:00 2006 GMT

The resulting entry would be:

Class::
::Pluggable       adpfp Makes your subclass pluggable.               TAKESHIGE


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=51f00000_f6d7ceec21d6dcbe&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=51f00000_f6d7ceec21d6dcbe&SUBMIT_pause99_add_mod_insertit=1
