Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:5258
Return-Path: <darren@DarrenDuncan.net>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 27096 invoked from network); 30 Apr 2001 18:39:50 -0000
Received: from palladium.baremetal.com (208.184.111.7)
  by onion.valueclick.com with SMTP; 30 Apr 2001 18:39:50 -0000
Received: from [24.64.199.254] (h24-64-199-254.gv.shawcable.net [24.64.199.254])
	by palladium.baremetal.com (8.9.3/8.9.3) with ESMTP id LAA10356;
	Mon, 30 Apr 2001 11:38:35 -0700
Mime-Version: 1.0
Message-ID: <f04320400b7135c45ced2@[24.64.199.254]>
In-Reply-To: <NFBBKCNOILDDLKCLBNFIOEKBCEAA.tommy@atrixnet.com>
References: <NFBBKCNOILDDLKCLBNFIOEKBCEAA.tommy@atrixnet.com>
Date: Mon, 30 Apr 2001 11:39:59 -0700
To: <tommy@atrixnet.com>, <modules@perl.org>, <cgi-list@jann.com>,
        <duncand@cpan.org>
Subject: RE: [CGI] RFC: a new name in CGI::* for HTML::Application
Content-Type: text/plain; charset="us-ascii" ; format="flowed"
X-Spam-Rating: onion.valueclick.com 1.6.2 0/1000/N
Approved: news@nntp.perl.org
From: darren@DarrenDuncan.net (Darren Duncan)

Thank you, Tommy, for your vote.

So that's one vote in favor of CGI::Portable.

Are there any others who agree with this name, or do you think 
something else is better?

Good days,

// Darren Duncan

At 11:30 AM -0700 4/30/01, Tommy Butler wrote:
>	CGI::Portable is an excellent choice I think.  Everyone who has any
>experience developing with perl on an enterprise level has been waiting a
>long time for something which helps serve as a layer between their perl
>scripts and their platform  (unless they've already made their own).  Perl
>should be more polymorphic in the way it handles pathnames and operating
>system calls.  Python does much better, but if someone could help us all out
>by creating an emulation environment for scripts to run in -- such as the
>functionality you describe in your RFC, we could create an OS object, or an
>ENV object first and feed it a CGI object reference as one of the parameters
>to its constructor, using the ENV object to receive all method calls for the
>CGI class and polymorphically act as the go between for the CGI object and
>the operating system your scripts are running on.  Kudos Darren.  Very
>insightful.  Should have been done long ago imho.
