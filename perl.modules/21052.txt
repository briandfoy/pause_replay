Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:21052
Return-Path: <comer@dexteritytech.com>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 3114 invoked by uid 76); 12 May 2003 13:34:08 -0000
Received: from qmailr@one.develooper.com (HELO ran-out.mx.develooper.com) (64.81.84.115) by onion.perl.org (qpsmtpd/0.26-dev) with SMTP; Mon, 12 May 2003 06:34:08 -0700
Received: (qmail 12485 invoked by uid 225); 12 May 2003 13:34:03 -0000
Delivered-To: modules@perl.org
Received: (qmail 12479 invoked by uid 507); 12 May 2003 13:34:03 -0000
Received: from pcd743161.netvigator.com (HELO 192.168.10.10) (218.103.19.161) by one.develooper.com (qpsmtpd/0.26-dev) with SMTP; Mon, 12 May 2003 06:33:57 -0700
To: <modules@perl.org>
Subject: COMer - Programming Language for Component Development (Part 1)
Sender: "Dexterity COMer Studio" <comer@dexteritytech.com>
Mime-Version: 1.0
Content-Type: multipart/alternative;	boundary="= Multipart Boundary 0512032133"
Date: Mon, 12 May 2003 21:33:56 +0800
Reply-To: "Dexterity COMer Studio" <comer@dexteritytech.com>
X-SMTPD: qpsmtpd/0.26-dev, http://develooper.com/code/qpsmtpd/
X-Spam-Check-By: one.develooper.com
X-Spam-Status: No, hits=3.9 required=7.0 tests=EXCUSE_10,HTML_FONT_COLOR_BLUE,HTML_FONT_FACE_ODD,MAILTO_LINK,MAILTO_WITH_SUBJ,RCVD_IN_BL_SPAMCOP_NET,SPAM_PHRASE_03_05,TO_BE_REMOVED_REPLY version=2.44
X-SMTPD: qpsmtpd/0.26-dev, http://develooper.com/code/qpsmtpd/
Approved: news@nntp.perl.org
From: comer@dexteritytech.com ("Dexterity COMer Studio")
Message-ID: <perl.modules-21052@nntp.perl.org>

--= Multipart Boundary 0512032133
Content-Type: text/plain;
	charset="ISO-8859-1"
Content-Transfer-Encoding: 8bit

COMer - Programming Language for Component Development 



If you are a Windows Programmer, I would like to introduce something
interesting to you.
COMer is a native programming language for COM component development.
Part 1: The difference between COMer and C++ classes
The following is the source code of a COMer COM class:
[clsid="{EF6CD47E-B844-4219-B582-6F9FE16D45F6}",progid="Dexterity.MyCom1.1",
helpstring="DexterityCom1Class",export,unhandle]com CMyCom1{ 
[iid="{A123799B-1D8B-4efb-8D43-42AE582767C1}"]  interface IMyInterface  {  
 method SetValue(int dVal)    {      m_dValue = dVal;      done;    }      
 method GetDoubleValue(int &dVal)    {      dVal = m_dValue << 1;     
done;    }    }    instvars  {    int m_dValue;  }}
The following is the source code of a C++ class:
class CMyClass1{public:  HRESULT SetValue(int dVal);  HRESULT GetValue(int
*pdVal);
private:
  int m_dValue;
};

HRESULT CMyClass1::SetValue(int dVal)
{
  m_dValue = dVal;
  return(S_OK);
}

HRESULT CMyClass1::GetValue(int *pdVal)
{
  *pdVal = m_dValue << 1;
  return(S_OK);
}
Although the above two classes do the same thing, they are used in
different ways.
COMer generates a COM component. It is a separated module (normally, it is
a DLL) from the client code that uses it. Client creates the instance of
the class by using the COM mechanism and call the methods of the class via
the interfaces it exposes. The advantage is that the client didn't need to
link with the component when it is built (no static library need). And when
the component is modified, the client code don't need to be recompiled (if
the interfaces do not change) and just replace the DLL is OK.
However, when using C++, classes are made within a static library. The
client code is linked with the static library when it is built. Then, if
the classes are modified, the whole program is need to be rebuilt again.
(Although many C++ compiler supports export C++ classes from a DLL, but it
is compiler specific feature. Moreover, a little static library is still
need to be linked with the client code, and if the declaration of the class
is changed, the client program is still need to be rebuilt. It is the same
to the static library case).
So, why not start to make components by using COMer today. It will make the
development of your software becomes much more easy and manageable.
For more information, please visit our web site:
Home Page: 
http://www.dexterity.com.hk/COMer/
Download Trial Version: 
http://www.dexterity.com.hk/COMer/Download/Download.asp
Dexterity Technologies Limited
http://www.dexterity.com.hk/


 



If you don't want to receive any more message from us, please send an
e-mail to comer@dexteritytech.com to unsubscribe. 
Please don't reply this e-mail. 
We apologize for any inconvenience caused.

--= Multipart Boundary 0512032133
Content-Type: text/html;
	charset="ISO-8859-1"
Content-Transfer-Encoding: 8bit

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD><TITLE>COMer - Programming Language for Component
Development</TITLE>
<META http-equiv=Content-Type content="text/html; charset=iso-8859-1">
<STYLE type=text/css>
<!--
.Title {  font-family: Verdana, Arial, Helvetica, sans-serif; font-size:
16px; font-weight: bold; color: #000000}
.Description {  font-family: Verdana, Arial, Helvetica, sans-serif;
font-size: 8pt}
-->
</STYLE>

<META content="MSHTML 6.00.2800.1170" name=GENERATOR></HEAD>
<BODY text=#000000 bgColor=#ffffff>
<TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
  <TBODY>
  <TR>
    <TD width=20 bgColor=#ffcc99 height=50></TD>
    <TD width=600 bgColor=#ffcc99 height=50>
      <P class=Title>COMer - Programming Language for Component 
    Development</P></TD>
    <TD height=50>&nbsp;</TD></TR></TBODY></TABLE>
<TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
  <TBODY>
  <TR>
    <TD height=15></TD></TR></TBODY></TABLE>
<TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
  <TBODY>
  <TR>
    <TD width=620>
      <TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
        <TBODY>
        <TR>
          <TD width=1 bgColor=#ffcc99 height=1></TD>
          <TD bgColor=#ffcc99 height=1></TD>
          <TD width=1 bgColor=#ffcc99 height=1></TD></TR>
        <TR>
          <TD width=1 bgColor=#ffcc99 height=20></TD>
          <TD height=20></TD>
          <TD width=1 bgColor=#ffcc99 height=20></TD></TR>
        <TR>
          <TD width=1 bgColor=#ffcc99></TD>
          <TD>
            <BLOCKQUOTE class=Description>
              <P>If you are a Windows Programmer, I would like to introduce 
              something interesting to you.</P>
              <P><B>COMer</B> is a native programming language for COM
component 
              development.</P>
              <P><B><U>Part 1: The difference between COMer and C++ 
              classes</U></B></P>
              <P>The following is the source code of a COMer COM
class:</P><PRE><FONT face="Courier New, Courier, mono" color=#3333ff
size=2>[clsid="{EF6CD47E-B844-4219-B582-6F9FE16D45F6}",progid="Dexterity.MyC
om1.1",helpstring="DexterityCom1Class",export,unhandle]<BR>com
CMyCom1<BR>{<BR>  [iid="{A123799B-1D8B-4efb-8D43-42AE582767C1}"]<BR> 
interface IMyInterface<BR>  {<BR>    method SetValue(int dVal)<BR>    {<BR>
     m_dValue = dVal;<BR>      done;<BR>    }<BR>    <BR>    method
GetDoubleValue(int &amp;dVal)<BR>    {<BR>      dVal = m_dValue &lt;&lt;
1;<BR>      done;<BR>    }  <BR>  }<BR>  <BR>  instvars<BR>  {<BR>    int
m_dValue;<BR>  }<BR>}</FONT></PRE>
              <P>The following is the source code of a C++
class:</P><PRE><FONT face="Courier New, Courier, mono" color=#3333ff
size=2>class CMyClass1<BR>{<BR>public:<BR>  HRESULT SetValue(int dVal);<BR>
 HRESULT GetValue(int *pdVal);
private:
  int m_dValue;
};

HRESULT CMyClass1::SetValue(int dVal)
{
  m_dValue = dVal;
  return(S_OK);
}

HRESULT CMyClass1::GetValue(int *pdVal)
{
  *pdVal = m_dValue &lt;&lt; 1;
  return(S_OK);
}</FONT></PRE>
              <P>Although the above two classes do the same thing, they are
used 
              in different ways.</P>
              <P>COMer generates a COM component. It is a separated module 
              (normally, it is a DLL) from the client code that uses it.
Client 
              creates the instance of the class by using the COM mechanism
and 
              call the methods of the class via the interfaces it exposes.
The 
              advantage is that the client didn't need to link with the 
              component when it is built (no static library need). And when
the 
              component is modified, the client code don't need to be
recompiled 
              (if the interfaces do not change) and just replace the DLL is 
              OK.</P>
              <P>However, when using C++, classes are made within a static 
              library. The client code is linked with the static library
when it 
              is built. Then, if the classes are modified, the whole
program is 
              need to be rebuilt again. (Although many C++ compiler
supports 
              export C++ classes from a DLL, but it is compiler specific 
              feature. Moreover, a little static library is still need to
be 
              linked with the client code, and if the declaration of the
class 
              is changed, the client program is still need to be rebuilt.
It is 
              the same to the static library case).</P>
              <P>So, why not start to make components by using COMer today.
It 
              will make the development of your software becomes much more
easy 
              and manageable.</P>
              <P>For more information, please visit our web site:</P>
              <P>Home Page: <BR><A 
             
href="http://www.dexterity.com.hk/COMer/">http://www.dexterity.com.hk/COMer/
</A></P>
              <P>Download Trial Version: <BR><A 
             
href="http://www.dexterity.com.hk/COMer/Download/Download.asp">http://www.de
xterity.com.hk/COMer/Download/Download.asp</A></P>
              <P><B>Dexterity Technologies Limited</B><BR><A 
             
href="http://www.dexterity.com.hk/">http://www.dexterity.com.hk/</A></P></BL
OCKQUOTE></TD>
          <TD width=1 bgColor=#ffcc99></TD></TR>
        <TR>
          <TD width=1 bgColor=#ffcc99 height=20></TD>
          <TD height=20></TD>
          <TD width=1 bgColor=#ffcc99 height=20></TD></TR>
        <TR>
          <TD width=1 bgColor=#ffcc99 height=1></TD>
          <TD bgColor=#ffcc99 height=1></TD>
          <TD width=1 bgColor=#ffcc99
height=1></TD></TR></TBODY></TABLE></TD>
    <TD>&nbsp;</TD></TR></TBODY></TABLE>
<TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
  <TBODY>
  <TR>
    <TD height=15></TD></TR></TBODY></TABLE>
<TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
  <TBODY>
  <TR>
    <TD width=620>
      <TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
        <TBODY>
        <TR>
          <TD width=1 bgColor=#ffcc99 height=1></TD>
          <TD bgColor=#ffcc99 height=1></TD>
          <TD width=1 bgColor=#ffcc99 height=1></TD></TR>
        <TR>
          <TD width=1 bgColor=#ffcc99 height=20></TD>
          <TD height=20></TD>
          <TD width=1 bgColor=#ffcc99 height=20></TD></TR>
        <TR>
          <TD width=1 bgColor=#ffcc99></TD>
          <TD>
            <BLOCKQUOTE class=Description>
              <P>If you don't want to receive any more message from us,
please 
              send an e-mail to <A 
             
href="mailto:comer@dexteritytech.com?subject=Unsubscribe">comer@dexteritytec
h.com</A> 
              to unsubscribe. 
              <P>Please <B>don't reply</B> this e-mail. 
              <P>We apologize for any inconvenience caused.
</P></BLOCKQUOTE></TD>
          <TD width=1 bgColor=#ffcc99></TD></TR>
        <TR>
          <TD width=1 bgColor=#ffcc99 height=20></TD>
          <TD height=20></TD>
          <TD width=1 bgColor=#ffcc99 height=20></TD></TR>
        <TR>
          <TD width=1 bgColor=#ffcc99 height=1></TD>
          <TD bgColor=#ffcc99 height=1></TD>
          <TD width=1 bgColor=#ffcc99
height=1></TD></TR></TBODY></TABLE></TD>
    <TD>&nbsp;</TD></TR></TBODY></TABLE></BODY></HTML>

--= Multipart Boundary 0512032133--

