Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:11678
Return-Path: <pliam@atbash.com>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 8173 invoked by uid 76); 15 May 2002 07:04:44 -0000
Received: from mtiwmhc23.worldnet.att.net (HELO mtiwmhc23.worldnet.att.net) (204.127.131.48)
  by onion.perl.org (qpsmtpd/0.07b) with SMTP; Wed May 15 07:04:44 2002 -0000
Received: from 18.westallis-02rh16rt.wi.dial-access.att.net
          ([12.84.195.18]) by mtiwmhc23.worldnet.att.net
          (InterMail vM.4.01.03.27 201-229-121-127-20010626) with ESMTP
          id <20020515070428.TJSW28245.mtiwmhc23.worldnet.att.net@18.westallis-02rh16rt.wi.dial-access.att.net>;
          Wed, 15 May 2002 07:04:28 +0000
Date: Wed, 15 May 2002 03:06:12 -0500 (CDT)
To:  <modules@perl.org>
Subject: Registration Request
Message-ID: <Pine.LNX.4.33L2.0205150304001.15025-100000@fred.atbash.com>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Approved: news@nntp.perl.org
From: pliam@atbash.com (John Pliam)


Hello,

I am applying for a CPAN author account, and here is my info:

   * your name:  John Pliam
   * your email address: pliam@atbash.com
   * your homepage: (for unknown duration) www.ima.umn.edu/~pliam
   * your preferred user-ID: PLIAM
   * a short description of what you're planning to contribute:

I am currently alpha-testing (Yet Another) Apache authentication
module.  Unlike all existing modules on CPAN, I believe my module
would be:

   - The only which securely handles the sharing of multiple
     credentials across multiple hosts (even across DNS domains).
   - The only one in which URL-mangled and HTTP cookie credentials
     can coexist under a single framework governed by a single security
     policy.
   - The only one where an access control decision can easily be based on
     both the current session strength and the original authentication
     strength.
   - Only one with built-in support for idle timeouts as well as
     conventional expiration.

The HTTP cookie mechanism is fraught with bizarre traps and gotchas (see
~pliam/cky in my web site, e.g.).  The IETF with its RFC2964 (a best
current practice) utterly *forbids* its use as an authentication mechanism.
My module essentially attempts to ameliorate the `best current practice' by
designing the Apache module as cryptographic protocol first.

I've looked at: Apache-AuthCookie-*, ApacheCookieEncrypted-*,
Apache-AuthTicket-*, Apache-AuthenURL-*.  Some of these are quite
mature and I would use them in cert circumstances, but in other
circumstances I couldn't use or easily modify them to achieve
a desired level of security.  So perhaps there is room for more ...
:-)

Best Regards,

John Pliam
pliam@atbash.com

