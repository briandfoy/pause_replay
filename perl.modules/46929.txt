Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:46929
Return-Path: <cpan@ali.as>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 15707 invoked from network); 16 Jan 2006 11:08:49 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 16 Jan 2006 11:08:49 -0000
Received: (qmail 32382 invoked by uid 225); 16 Jan 2006 11:08:48 -0000
Delivered-To: modules@perl.org
Received: (qmail 32375 invoked by alias); 16 Jan 2006 11:08:47 -0000
X-Spam-Status: No, hits=-4.4 required=8.0
	tests=ALL_TRUSTED,BAYES_00
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: neutral (x1.develooper.com: local policy)
Received: from x6.develooper.com (HELO lists.develooper.com) (63.251.223.186)
    by la.mx.develooper.com (qpsmtpd/0.28) with SMTP; Mon, 16 Jan 2006 03:08:45 -0800
Received: (qmail 15702 invoked by uid 515); 16 Jan 2006 11:08:41 -0000
To: modules@perl.org, modules@perl.org
Message-ID: <43CB7E30.2040508@ali.as>
Date: Mon, 16 Jan 2006 22:06:24 +1100
User-Agent: Thunderbird 1.5 (Windows/20051201)
MIME-Version: 1.0
CC: Nikolay Bachiyski <nbachiyski@developer.bg>
Subject: Re: Module submission Net::Akismet
References: <200601111530.k0BFUIgI000567@pause.perl.org> <110120061008019825%brian.d.foy@gmail.com> <43C61E18.7070204@developer.bg> <120120061004572016%brian.d.foy@gmail.com>
In-Reply-To: <120120061004572016%brian.d.foy@gmail.com>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-Posted-By: 202.90.48.125
Approved: news@nntp.perl.org
From: cpan@ali.as (Adam Kennedy)


>> - there already are plenty of modules interacting with web services in 
>> the Net:: namespace.
> 
> Indeed, and we're trying to clean up that mess. :)
> 

It's a measure of maturity that most people learn that "But Mum, Johnny 
stole a cookie too!" is not a valid argument for anything.

The same applies a lot in CPAN :)

Because people have gotten away with things over the years and have to 
be left that way for back-compatibility purposes does not mean we want 
to make the problem worse by having new things not conform to 
conventions either.

Net:: modules (mostly) work with published and (mostly) supported APIs 
for communicating in various ways with various things over a network.

WWW:: modules (mostly) scrape web pages they (mostly) don't control, and 
so we know that modules by just looking at the name that (mostly) 
modules in WWW:: are potentially more unstable and (mostly) riskier than 
Net:: modules.

Or at least, mostly so...

If you are scraping web pages then you should be in WWW::

If it is a defined and supported API (SOAP, sockets, etc) then you 
should be in Net::

Adam K
