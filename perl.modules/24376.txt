Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:24376
Return-Path: <mcstewar@masahji.com>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 77110 invoked by uid 76); 5 Nov 2003 20:56:19 -0000
Received: from x1.develooper.com (HELO x1.develooper.com) (63.251.223.170) by onion.perl.org (qpsmtpd/0.26) with SMTP; Wed, 05 Nov 2003 12:56:19 -0800
Received: (qmail 11800 invoked by uid 225); 5 Nov 2003 20:56:16 -0000
Delivered-To: modules@perl.org
Received: (qmail 11795 invoked by alias); 5 Nov 2003 20:56:16 -0000
Received: from onion.develooper.com (HELO onion.perl.org) (63.251.223.166) by la.mx.develooper.com (qpsmtpd/0.27-dev) with SMTP; Wed, 05 Nov 2003 12:56:04 -0800
Received: (qmail 76971 invoked by uid 1012); 5 Nov 2003 20:56:01 -0000
Message-ID: <20031105205601.76970.qmail@onion.perl.org>
To: modules@perl.org
Date: Wed, 05 Nov 2003 12:56:00 -0800
User-Agent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.2.1) Gecko/20030225
X-Accept-Language: en-us, en
MIME-Version: 1.0
Subject: Re: Module submission DB::Introspector
References: <200311022114.hA2LEhiY030386@pause.perl.org>
In-Reply-To: <200311022114.hA2LEhiY030386@pause.perl.org>
Content-Type: text/plain; charset=us-ascii; format=flowed
Content-Transfer-Encoding: 7bit
X-Posted-By: 209.104.62.3
X-Spam-Check-By: la.mx.develooper.com
X-Spam-Status: No, hits=-2.3 required=7.0 tests=CARRIAGE_RETURNS,IN_REP_TO,QUOTED_EMAIL_TEXT,REFERENCES,SPAM_PHRASE_00_01,USER_AGENT,USER_AGENT_MOZILLA_UA,X_ACCEPT_LANG version=2.44
X-SMTPD: qpsmtpd/0.26, http://develooper.com/code/qpsmtpd/
Approved: news@nntp.perl.org
From: mcstewar@masahji.com ("Masahji C. Stewart")

I think it is appropriate to separate this interface from the existing 
DBI module since it will allow for the expression of more arbitrary 
mappings between tables and columns (like subtables and boolean 
simulation) which can take into account the database being queried (eg 
like interpreting the Postgres internal inheritance structures). In 
addition, future drivers can be written to extract metadata from a 
source that can't be queried as a regular database ( like an XML source 
that just contains metadata -like hibernate mapping files ).

I will be adding more functionality in the coming week before the upload.





Perl Authors Upload Server wrote:
> The following module was proposed for inclusion in the Module List:
> 
>   modid:       DB::Introspector
>   DSLIP:       adpOp
>   description: Extract and analyze database metadata.
>   userid:      MASAHJI (masahji)
>   chapterid:    7 (Database_Interfaces)
>   communities:
> 
>   similar:
> 
>   rationale:
> 
>     DB::Introspector looks into database metadata and derives detailed
>     table level and foreign key information in a way that conforms to a
>     collection of common interfaces across all dbs.
> 
>     The DB::Introspector::Utils::* classes provide a collection of
>     algorithms, which carry out relationship traversal and SQL
>     generation algorithms (like finding the column level and table level
>     mappings between two indirectly related tables and generating DDL
>     code). Because the DB::Introspector::Utils algorithms take advantage
>     of the DB::Introspector's database independent metadata classes,
>     these traversal algorithms can be performed on any database for
>     which there exists an introspector (eg DB::Introspector::Oracle and
>     DB::Introspector::PostgresSQL).
> 
>   enteredby:   MASAHJI (masahji)
>   enteredon:   Sun Nov  2 21:14:43 2003 GMT
> 
> The resulting entry would be:
> 
> DB::
> ::Introspector    adpOp Extract and analyze database metadata.       MASAHJI
> 
> 
> Thanks for registering,

