Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:6893
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 62881 invoked from network); 6 Aug 2001 11:22:10 -0000
Received: from dubravka.kbx.de (HELO pause.perl.org) (root@212.40.160.59)
  by onion.valueclick.com with SMTP; 6 Aug 2001 11:22:10 -0000
Received: (from nobody@localhost)
	by pause.perl.org (8.9.3/8.9.3) id NAA19177;
	Mon, 6 Aug 2001 13:22:08 +0200
Date: Mon, 6 Aug 2001 13:22:08 +0200
Message-ID: <200108061122.NAA19177@pause.perl.org>
Reply-To: modules@perl.org
Subject: Module submission Win32::SharedFileOpen
To: modules@perl.org, shay@cpan.org
X-Spam-Rating: onion.valueclick.com 1.6.2 0/1000/N
Approved: news@nntp.perl.org
From: upload@p11.speed-link.de ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Win32::SharedFileOpen
  DSLIP:       bdcfp
  description: Interface to Win32 sopen + fsopen functions
  userid:      SHAY (Steve Hay)
  chapterid:   22 (Microsoft_Windows_Modules)
  communities:

  similar:
    Win32API::File

  rationale:

    Interface to MSWin32-specific sopen() and fsopen() functions: these
    functions are counterparts to the standard open() and fopen()
    functions, but are intended for opening a file for sharing, hence
    "SharedFileOpen". (Sounds a bit clunky, though?)

    They provide a convenient means of opening and locking the file
    (denying read, write or read+write access) in one go, using the same
    familiar arguments as open() and fopen(), plus one extra argument
    indicating the "share" mode.

    The Win32API::File module contains an interface to another
    MSWin32-specific function, CreateFile(), which provides similar
    capabilities but using a whole different set of arguments which are
    unfamiliar to unseasoned MS developers.

    CreateFile() and the other functions interfaced in Win32API::File
    are all fairly low-level (hence they are in a Win32API module rather
    than a Win32 module). sopen() and fsopen() are higher-level
    functions so their interface really deserves to be in a Win32
    module.

  enteredby:   SHAY (Steve Hay)
  enteredon:   Mon Aug  6 11:22:07 2001 GMT

The resulting entry would be:

Win32::
::SharedFileOpen  bdcfp Interface to Win32 sopen + fsopen functions  SHAY


Thanks for registering,
The Pause Team

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=e6000000_3ddbcfad2837ae7e&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=e6000000_3ddbcfad2837ae7e&SUBMIT_pause99_add_mod_insertit=1
