Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:58101
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 14394 invoked from network); 7 Dec 2007 21:59:24 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 7 Dec 2007 21:59:24 -0000
Received: (qmail 28389 invoked by uid 225); 7 Dec 2007 21:59:23 -0000
Delivered-To: modules@perl.org
Received: (qmail 28385 invoked by alias); 7 Dec 2007 21:59:23 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00
X-Spam-Check-By: la.mx.develooper.com
Received: from pause.fiz-chemie.de (HELO pause.perl.org) (195.149.117.110)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Fri, 07 Dec 2007 13:59:16 -0800
Received: from pause.perl.org (localhost.localdomain [127.0.0.1])
	by pause.perl.org (8.13.4/8.13.4/Debian-3sarge3) with ESMTP id lB7LxAsr000529
	for <modules@perl.org>; Fri, 7 Dec 2007 22:59:10 +0100
Received: (from nobody@localhost)
	by pause.perl.org (8.13.4/8.13.4/Submit) id lB7LxAxM000528;
	Fri, 7 Dec 2007 22:59:10 +0100
Date: Fri, 7 Dec 2007 22:59:10 +0100
Message-ID: <200712072159.lB7LxAxM000528@pause.perl.org>
Subject: Module submission ActiveRecord
Reply-To: modules@perl.org
To: modules@perl.org
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       ActiveRecord
  DSLIP:       adpOp
  description: ActiveRecord as described by Martin Fowler
  userid:      DEEPFRYED (Bharanee Rathnasabapathy)
  chapterid:   7 (Database_Interfaces)
  communities:
    mailinglists

  similar:
    Rose, DBIx::Class

  rationale:

    The implementation of the ActiveRecord (AR) pattern provides a
    simplified db api for applications. Rose and DBIx::Class do provide
    schema loading and class generation, but its a fair bit of an
    exercise. Many would say that AR is just overrated and a waste of
    time, but I would rather write

    #!/usr/bin/perl

    use strict; use warnings;

    package vendor; use ActiveRecord qw(:pg MyDB);

    has_many 'product';

    package product; use ActiveRecord qw(:pg MyDB);

    belongs_to 'vendor';

    package main; my $v = vendor->fetch(2); my $itr = $v->products; $,
    = "\t"; while (my $p = $itr->next) { print $p->name, $p->price,
    $p->vendor->name; print $/; }

    This works fantastically and I have benchmarked it and found it to
    be much faster than rose and dbic. Obviously this is not yet a full
    blown orm, but the intention is to keep it simple and fast with
    enough features for most requirements.

  enteredby:   DEEPFRYED (Bharanee Rathnasabapathy)
  enteredon:   Fri Dec  7 21:59:10 2007 GMT

The resulting entry would be:

ActiveRecord      adpOp ActiveRecord as described by Martin Fowler   DEEPFRYED


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=3e110000_bd0463fa1da4e7b4&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=3e110000_bd0463fa1da4e7b4&SUBMIT_pause99_add_mod_insertit=1
