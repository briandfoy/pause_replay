Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:9990
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 10713 invoked by uid 76); 4 Feb 2002 23:33:29 -0000
Received: from root@dubravka.kbx.de (HELO pause.perl.org) (212.40.160.59)
  by onion.perl.org (qpsmtpd/0.06) with SMTP; Mon Feb  4 23:33:29 2002 -0000
Received: (from nobody@localhost)
	by pause.perl.org (8.9.3/8.9.3) id AAA29747;
	Tue, 5 Feb 2002 00:33:25 +0100
Date: Tue, 5 Feb 2002 00:33:25 +0100
Message-ID: <200202042333.AAA29747@pause.perl.org>
Reply-To: modules@perl.org
Subject: Module submission XML::Comma
To: modules@perl.org
Approved: news@nntp.perl.org
From: upload@p11.speed-link.de ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       XML::Comma
  DSLIP:       RmpOg
  description: Framework for Building Large-Scale Web Apps
  userid:      KWINDLA (Kwindla Hultman Kramer)
  chapterid:   15 (World_Wide_Web_HTML_HTTP_CGI)
  communities:
    comma@xymbollab.com, mason-users@lists.sourceforge.net,
    http://perlmonks.org

  similar:
    Alzabo Tangram SPOPS OpenInteract P5EE

  rationale:

    XML::Comma is a toolkit designed to help programmers manipulate
    large collections of structured "documents" (in the XML sense). In
    particular, XML::Comma tries to help with many of the common
    difficulties endemic to developing very large web sites and
    web-based applications.

    XML::Comma provides a high-level API that handles many of the
    common tasks involved in creating, categorizing, validating,
    storing, retrieving, indexing and programmatically manipulating
    large volumes of "tagged" information. (As an aside, by
    "large-scale" web-things we generally mean some combination of
    hundreds-of-thousands of "pieces of content," hundreds of thousands
    of "users," and hundreds of thousands of page-views per day.)

    Because the Comma API must bridge some of the gaps between XML
    documents, Perl-level objects and relational database entries, there
    is some overlap between the functionality of XML::Comma and of
    persistence frameworks such as Alzabo, SPOPS, and Tangram. Unlike
    the pure persistence frameworks, however, XML::Comma's focus is not
    on providing an abstraction for long-term object storage, but on
    providing ways to move documents through a "life-cycle" with as
    little new code as possible.

    XML::Comma also shares some functional goals with various
    "middleware" tools (including those from outside the Perl world).
    Unlike many middleware projects -- OpenInteract, for example --
    XML::Comma does not try to provide a complete development
    environment. For example, use of a Perl-based templating system,
    such as HTML::Mason, is indispensable for delivering Comma-fied
    information via the web or email. Like the nascent P5EE project,
    part of the Comma work's larger goal is to develop "best-practices"
    for deploying Perl in so-called "enterprise environments." Unlike
    P5EE, the XML::Comma modules themselves have been, from nearly their
    beginnings, a working toolkit in daily use for production
    development.

    XML::Comma is usually used in conjunction with Apache/mod_perl,
    HTML::Mason, and a relational database. The modules can be
    configured in a number of ways, and are written in Perl with some
    optional Inline::C extensions. The platform currently consists of
    around 10k lines of code, and is used by two large web sites:
    http://allafrica.com and http://www.democrats.org. Documentation can
    be found at http://xymbollab.com/guide-filter.html

    We chose the XML::Comma name based on the "concrete category +
    abstract emotive name" pattern, as exemplified by HTML::Mason.

  enteredby:   KWINDLA (Kwindla Hultman Kramer)
  enteredon:   Mon Feb  4 23:33:25 2002 GMT

The resulting entry would be:

XML::
::Comma           RmpOg Framework for Building Large-Scale Web Apps  KWINDLA


Thanks for registering,
The Pause Team

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=36000000_0a1464ea0d339eea&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=36000000_0a1464ea0d339eea&SUBMIT_pause99_add_mod_insertit=1
