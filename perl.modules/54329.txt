Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:54329
Return-Path: <h.m.brand@xs4all.nl>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Delivered-To: moderator for modules@perl.org
Received: (qmail 7194 invoked from network); 7 May 2007 15:25:55 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 7 May 2007 15:25:55 -0000
Received: (qmail 18119 invoked by uid 225); 7 May 2007 15:25:55 -0000
Delivered-To: modules@perl.org
Received: (qmail 18107 invoked by alias); 7 May 2007 15:25:54 -0000
X-Spam-Status: No, hits=0.8 required=8.0
	tests=BAYES_00,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,KARMA_CONNECT_NEGATIVE,SPF_PASS,WEIRD_QUOTING
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
Received: from smtp-vbr5.xs4all.nl (HELO smtp-vbr5.xs4all.nl) (194.109.24.25)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Mon, 07 May 2007 08:25:34 -0700
Received: from pc09 (procura.xs4all.nl [82.95.216.29])
	(authenticated bits=0)
	by smtp-vbr5.xs4all.nl (8.13.8/8.13.8) with ESMTP id l47FPRqG061440
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NO)
	for <modules@perl.org>; Mon, 7 May 2007 17:25:28 +0200 (CEST)
	(envelope-from h.m.brand@xs4all.nl)
Date: Mon, 7 May 2007 17:22:44 +0200
To: modules@perl.org
Subject: [ANNOUNCE] Text-CSV_XS 0.25
Message-ID: <20070507172244.4aeb9721@pc09>
X-Mailer: Claws Mail 2.9.1cvs47 (GTK+ 2.10.6; i686-pc-linux-gnu)
Face: iVBORw0KGgoAAAANSUhEUgAAADAAAAAwEAIAAACI8LKTAAAACXBIWXMAAABIAAAASABGyWs+AAAC
 JElEQVRo3u2aMY4CMQxFczZ6RItEzRm4DBINDbRUSPRInIRbsNK6+dJfezN4kokn48IaCSjysL8d
 e9Knoj2fr9f9/gllqQ6U9/vxWK3EdwdIEGjRIVCu18NhuxUfK46SH81+fzrdbuKPx/P5ctHQdAdI
 TKAgpvV6s9ntBEfXEYSGgMQzIHnuFBBjkshCNJ2KtJZ04hHNAugP8bZr3NIHhbcF0AKoK0CoaHXU
 LUWBIs1n+jV+Fl8CVqOApEXAwyMO/DSR4XVntoAYDR7eBjQupuYAYTMph8Rj21D4m7MChN02tpqs
 NSnb/KqU2oHCXu5xDCgflj/RAgBiKBIXnICzAsSjWBsTz5K4/HeXYvb8yK5lY3VGEwPi2aONKT+5
 AlcxrTPOwcTiraGRChgMEKJh0bVVifGVTq6qgBiNVl8QE29EsK6VE+YJAOG2wz5AvsqUS6uqgHCA
 n4NGvBYpnJ64Jgg27sCtxtBk1CJIA4S/GhdWKh07QxUB48jWGhZ4jKamRRr/T8/M0AaEyctry6YB
 4dTGj9iWZNs3DahES5kPCJOu0RQbF/fQOBprsB9gaO9JtPDzII9U5ySXX7AnuIt91y54AAW7rPpT
 LCe5gt3F+CLqr2UarGB3MXvMylWGq4+9RCx3TW1oJq1t3HPQlFs6N1fFNEB4s8dn7Ne7ACSm7TPQ
 I5quAWmw6qBpulHM33B0Csge4Nd8JTTYG2b1XyRe3lH8x34ABJ6aePuQ2N4AAAAASUVORK5CYII=
Mime-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: quoted-printable
X-Virus-Scanned: by XS4ALL Virus Scanner
X-Virus-Checked: Checked
Approved: news@nntp.perl.org
From: h.m.brand@xs4all.nl ("H.Merijn Brand")

After several years of silence, I received maintainership on Text::CSV_XS
from Jochen Wiedman. Please enjoy the new features

  file: $CPAN/authors/id/H/HM/HMBRAND/Text-CSV_XS-0.25.tgz
  size: 22857 bytes
   md5: 1b57894ccdb711e76d368257757ce8ea

Request entered by: HMBRAND (H.Merijn Brand)
Request entered on: Mon, 07 May 2007 15:10:01 GMT

2007-05-07  H.Merijn Brand   <h.m.brand@xs4all.nl> (0.25)

        * Merijn got the maintainership
        - code reformat and code cleanup
        - renamed internal (Encode, Decode) to (Combine, Parse) to
          prevent misinterpretation with upcoming Unicode changes
          and possible name clashes
        - added pod check (and fixed pod)
        - added pod coverage and small additions to the pod.
          More to do in this area
        - renamed test to fixate the sequence
        - Added t/50_utf8.t
        - tests now use Test::More
          . Makefile.PL requires Test::More
        - checked proclaimed version compatibility
          . 5.9.x-64int     works @31159
          . 5.8.x-64int-dor works @31162
          . 5.8.0-dor       works
          . 5.6.2           works
          . 5.005.04        works
          . 5.004.05        fails
        - 5.005 is now prerequisite
        - Added missing info in docs for new ()
        - Added meta_info () method and docs
        - Added keep_meta_info in new ()
        - Added t/15_flags.t
        - Added test_cover make target
        - Added test for error_input ()
        - Added tests for fields () and meta_info () before parse ()
        - Added tests for ->types () as method
        - Added tests for deleting types (coverage now over 99%)
        - Added is_quoted (), is_binary () and tests
        - Added COPYRIGHT section to pod
        - Added the parse example from the pod to test.pl
        - Added accessor methods for internals: quote_char () et all
        - Added tests for the new accessor methods
        - Added always_quote to the missing places in the doc and in new ()
        - Changed the tests to use the accessors instead of the hash keys
          except for the ->{types} and ->{_types}
        - Moved test.pl to examples/speed.pl


           To sum it up,

            $csv =3D Text::CSV_XS=E2=88=92>new ();

           is equivalent to

            $csv =3D Text::CSV_XS=E2=88=92>new ({
                quote_char     =3D> =E2=80=99"=E2=80=99,
                escape_char    =3D> =E2=80=99"=E2=80=99,
                sep_char       =3D> =E2=80=99,=E2=80=99,
                eol            =3D> =E2=80=99=E2=80=99,
                always_quote   =3D> 0,
                binary         =3D> 0,
                keep_meta_info =3D> 0,
                });

           For all of the above mentioned flags, there is an accessor method
           available where you can inquire for the current value, or change
           the value

            my $quote =3D $csv=E2=88=92>quote_char;
            $csv=E2=88=92>binary (1); =20
       :
       :
       meta_info
            @flags =3D $csv=E2=88=92>meta_info ();

           This object function returns the flags of the input to "combine =
()"
           or the flags of the resultant decomposed fields of "parse ()",
           whichever was called more recently.

           For each field, a meta_info field will hold flags that tell
           something about the field returned by the "fields ()" method or
           passed to the "combine ()" method. The flags are bitwise=E2=80=
=90or=E2=80=99d like:

           0x0001
               The field was quoted.

           0x0002
               The field was binary.

           See the "is_*** ()" methods below.

       is_quoted
             my $quoted =3D $csv=E2=88=92>is_quoted ($column_idx);

           Where $column_idx is the (zero=E2=80=90based) index of the colum=
n in the
           last result of "parse ()".

           This returns a true value if the data in the indicated column was
           enclused in "quote_char" quotes. This might be important for data
           where ",20070108," is to be treated as a numeric value, and where
           ","20070108"," is explicitely marked as character string data.

       is_binary
             my $binary =3D $csv=E2=88=92>is_binary ($column_idx);

           Where $column_idx is the (zero=E2=80=90based) index of the colum=
n in the
           last result of "parse ()".

           This returns a true value if the data in the indicated column
           contained any byte in the range [\x00=E2=88=92\x08,\x10=E2=88=92=
\x1F,\x7F=E2=88=92\xFF]


       An example for parsing CSV lines:

         use Text::CSV_XS;

         my $csv =3D Text::CSV_XS=E2=88=92>new ({ keep_meta_info =3D> 1, bi=
nary =3D> 1 });

         my $sample_input_string =3D
             qq{"I said, ""Hi!""",Yes,"",2.34,,"1.09","\x{20ac}",};
         if ($csv=E2=88=92>parse ($sample_input_string)) {
             my @field =3D $csv=E2=88=92>fields;
             foreach my $col (0 .. $#field) {
                 my $quo =3D $csv=E2=88=92>is_quoted ($col) ? $csv=E2=88=92=
>{quote_char} : "";
                 printf "%2d: %s%s%s\n", $col, $quo, $field[$col], $quo;
                 }
             }
         else {
             my $err =3D $csv=E2=88=92>error_input;
             print "parse () failed on argument: ", $err, "\n";
             }


--=20
H.Merijn Brand         Amsterdam Perl Mongers (http://amsterdam.pm.org/)
using & porting perl 5.6.2, 5.8.x, 5.9.x   on HP-UX 10.20, 11.00, 11.11,
& 11.23, SuSE 10.0 & 10.2, AIX 4.3 & 5.2, and Cygwin. http://qa.perl.org
http://mirrors.develooper.com/hpux/            http://www.test-smoke.org
                        http://www.goldmark.org/jeff/stupid-disclaimers/
