Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:10655
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 84564 invoked by uid 76); 15 Mar 2002 20:54:21 -0000
Received: from root@dubravka.kbx.de (HELO pause.perl.org) (212.40.160.59)
  by onion.perl.org (qpsmtpd/0.06) with SMTP; Fri Mar 15 20:54:21 2002 -0000
Received: (from nobody@localhost)
	by pause.perl.org (8.9.3/8.9.3) id VAA18650;
	Fri, 15 Mar 2002 21:54:18 +0100
Date: Fri, 15 Mar 2002 21:54:18 +0100
Message-ID: <200203152054.VAA18650@pause.perl.org>
Reply-To: modules@perl.org
Subject: Module submission Proc::Fork
To: modules@perl.org, roode@cpan.org
Approved: news@nntp.perl.org
From: upload@p11.speed-link.de ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Proc::Fork
  DSLIP:       adpfp
  description: Simple interface to fork() system call
  userid:      ROODE (Eric J. Roode)
  chapterid:    4 (Operating_System_Interfaces)
  communities:
    RPI lily

  similar:
    Proc::Forkfunc

  rationale:

    Proc::Fork provides a simple wrapper to the fork() system call.
    (Not that using fork() is all that complex....). It provides default
    error handling, and provides what I think is a nice syntax to
    clearly delineate the parent and child code.

    Proc::Forkfunc is rather limited, and seems not to have been
    updated since 1996. (also, I think Proc::Fork is a more sensible
    name than "Forkfunc", but that's my own prejudice, no doubt).

    It's not tested as thoroughly as I'd like, hence the "alpha"
    status, and the fact that test.pl has no test cases. If any of the
    CPAN testers out there can suggest nice test cases, I'd be grateful.

  enteredby:   ROODE (Eric J. Roode)
  enteredon:   Fri Mar 15 20:54:17 2002 GMT

The resulting entry would be:

Proc::
::Fork            adpfp Simple interface to fork() system call       ROODE


Thanks for registering,
The Pause Team

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=7e000000_48c6d90d490a801d&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=7e000000_48c6d90d490a801d&SUBMIT_pause99_add_mod_insertit=1
