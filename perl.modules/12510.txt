Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:12510
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 71715 invoked by uid 76); 5 Jul 2002 16:10:29 -0000
Received: from root@[212.40.160.59] (HELO pause.perl.org) (212.40.160.59)
  by onion.perl.org (qpsmtpd/0.07b) with SMTP; Fri Jul  5 16:10:29 2002 -0000
Received: (from nobody@localhost)
	by pause.perl.org (8.11.6/8.11.6) id g65G9wF16497;
	Fri, 5 Jul 2002 18:09:59 +0200
Date: Fri, 5 Jul 2002 18:09:59 +0200
Message-ID: <200207051609.g65G9wF16497@pause.perl.org>
Subject: Module submission Devel::StealthDebug
Reply-To: modules@perl.org
To: modules@perl.org, aassad@cpan.org
Approved: news@nntp.perl.org
From: upload@p11.speed-link.de ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Devel::StealthDebug
  DSLIP:       bdphp
  description: Helps to debug in a non-intrusive way.
  userid:      AASSAD (Arnaud Assad)
  chapterid:    3 (Development_Support)
  communities:
    modules list, perlmonks.org

  similar:
    Carp::assert, monitor

  rationale:

    Previously proposed as Devel::Debug.

    This modules offers several features to help you debug your code in
    a non-intrusive way.

    It uses Filter::Simple to add debugging instructions in comments !
    This way if you comment out the 'use Devel::StealthDebug;' line, no
    debug instructions remains present in the code (and I really mean
    'present' not only 'enable')

    You can easily pass a program from a test box to a production
    server commenting the use line. (and vice versa)

  enteredby:   AASSAD (Arnaud Assad)
  enteredon:   Fri Jul  5 16:09:56 2002 GMT

The resulting entry would be:

Devel::
::StealthDebug    bdphp Helps to debug in a non-intrusive way.       AASSAD


Thanks for registering,
The Pause Team

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=64100000_be50c37419692aa6&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=64100000_be50c37419692aa6&SUBMIT_pause99_add_mod_insertit=1
