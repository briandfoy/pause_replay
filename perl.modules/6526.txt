Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:6526
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 9127 invoked from network); 8 Jul 2001 07:52:33 -0000
Received: from dubravka.kbx.de (HELO pause.perl.org) (root@212.40.160.59)
  by onion.valueclick.com with SMTP; 8 Jul 2001 07:52:33 -0000
Received: (from nobody@localhost)
	by pause.perl.org (8.9.3/8.9.3) id JAA02501;
	Sun, 8 Jul 2001 09:51:10 +0200
Date: Sun, 8 Jul 2001 09:51:10 +0200
Message-ID: <200107080751.JAA02501@pause.perl.org>
Reply-To: modules@perl.org
Subject: Module submission Class::Flyweight
To: modules@perl.org, dkubb@cpan.org
X-Spam-Rating: onion.valueclick.com 1.6.2 0/1000/N
Approved: news@nntp.perl.org
From: upload@p11.speed-link.de ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Class::Flyweight
  DSLIP:       adpOp
  description: implement the flyweight pattern in OO perl
  userid:      DKUBB (Dan Kubb)
  chapterid:    6 (Data_Type_Utilities)
  communities:
    perlmonks.org

  similar:
    Class::Makemethods::Template::Flyweight

  rationale:

    My module allows authors to implement the flyweight pattern in
    their own modules. It is a system where a single data structure
    stores the object data seperately from the object reference. The
    only way to access data from the object store is from within the
    same scope that the object methods are. It is not possible to access
    the data from outside the class, except through user-defined
    interfaces. If the user does not provide an interface to modify the
    data, then it is private to the object.

    My module is unique in that it will be the only module to implement
    the flyweight pattern in the correct form. The only other CPAN
    module that comes close does not provide the correct interface
    allowing module writers fully (or in some cases, any) data
    encapsulation.

    It implements a similar system as described in Damian Conway's
    Object Oriented Perl, although with a simpler interface. The module
    author does not need to know anything about the implementation
    details, and only how to use the provided interface.

  enteredby:   DKUBB (Dan Kubb)
  enteredon:   Sun Jul  8 07:51:10 2001 GMT

The resulting entry would be:

Class::
::Flyweight       adpOp implement the flyweight pattern in OO perl   DKUBB


Thanks for registering,
The Pause Team

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=b1000000_d5468db2e8ebfb0b&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=b1000000_d5468db2e8ebfb0b&SUBMIT_pause99_add_mod_insertit=1
