Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:101494
Return-Path: <joe.mcmahon@gmail.com>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Delivered-To: moderator for modules@perl.org
Received: (qmail 23320 invoked from network); 29 Jul 2020 20:02:40 -0000
Received: from xx1.develooper.com (147.75.38.233) by x6.develooper.com with
 SMTP; 29 Jul 2020 20:02:40 -0000
Received: from localhost (xx1.develooper.com [127.0.0.1]) by localhost
 (Postfix) with ESMTP id ACE2A7C1B0 for <perlmail-modules@onion.perl.org>;
 Wed, 29 Jul 2020 13:02:40 -0700 (PDT)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mx3.develooper.com
X-Spam-Status: No, score=-2.0 required=6.0 tests=BAYES_00,DKIM_SIGNED,
 DKIM_VALID,DKIM_VALID_AU,FREEMAIL_FROM,HTML_MESSAGE,RCVD_IN_DNSWL_NONE
 autolearn=ham version=3.3.1
Received: from xx1.develooper.com (xx1.develooper.com [127.0.0.1]) by
 localhost (Postfix) with SMTP id D5AA67C1C6 for
 <perlmail-modules@onion.perl.org>; Wed, 29 Jul 2020 13:02:36 -0700 (PDT)
Received: from mail-io1-f47.google.com (mail-io1-f47.google.com
 [209.85.166.47]) (using TLSv1 with cipher AES128-SHA (128/128 bits)) (No
 client certificate requested) by xx1.develooper.com (Postfix) with ESMTPS id
 0CDD47C1B0 for <modules@perl.org>; Wed, 29 Jul 2020 13:02:35 -0700 (PDT)
Received: by mail-io1-f47.google.com with SMTP id k23so25826564iom.10 for
 <modules@perl.org>; Wed, 29 Jul 2020 13:02:35 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com;
 s=20161025;
 h=mime-version:references:in-reply-to:from:date:message-id:subject:to;
 bh=/jJwtOQ+7w9ORiCU84sUbURvPoYARpi92VAFlp5h1iA=;
 b=XAojLZip5rc5mD0GcM75/Tj/Rjrsi2ms42w2myNcASXmP1PPpds2OVwby5glC4XYq5
 S+wu87jV0BGH1YwyTrA2uQZWEcI3JGYQG590j265/xE1Qkx9o9UJH2cLT3NTn9PvEUMw
 BhtVPyp6rURnKKVtYENKZposwXc+Hgkl8m6DJSFBLCFtVJokVdc+lDX569XeUHZbgz8I
 HCv7wf7OAi1Kq6hC1muNaJnTMnii2foqsJNHTkGQdk43py242sXQ2LcU4XjnHCA9AdWR
 NtEW1Pr1xKgtmDqOpcc1er4sYaWYmM+9go3IQBFu1ujz7M4DS4DpN5hGfPMA84Icn2OD aJNg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025;
 h=x-gm-message-state:mime-version:references:in-reply-to:from:date
 :message-id:subject:to; bh=/jJwtOQ+7w9ORiCU84sUbURvPoYARpi92VAFlp5h1iA=;
 b=OQ9jHoIeKf0PXwrGFt5E4YdaTekM7IFdY2g9i/OcaV9G8E0jnebuiUQBOJht7BVsx0
 Mkl3OW9RWKOyVgY2m95tZLRmLjv4Nwf7bjWUbmx1Cv797oWg7Ikz6NjBt10+XdPQXRH1
 nDi9PnPHekW8L9m/rfvHUDSrJOHIP7O4mWaPFsywR3jBRHyyP5ChXA9tNtDxXFU9ZGSv
 Hi3KkxnHrwaOBgXPVk4yi/c8X3nsH59cStCy43tiYRLNvC3hy4SPIu4C6Fp4TO74vjKo
 U9+6mlM9132Sm0gg2jL4Vn0jycolXu36PzK1iVDz8fwWg253eMCPTo43atMB+3MuUhNs K15A==
X-Gm-Message-State: AOAM533Um9Mr1w4dWlCTAmdTc0iRbttSiWOC6c3+hkbI75NG0/TxV5gu
 w9XqPx1CK9mRAihel07eIq7odyzagU6jjXBcZh2Fa+Cq
X-Google-Smtp-Source:
 ABdhPJxqb6W3SRgKL0yZOave4MojEY7/jq0Fyxj0BhO7NCLnd4fFf37nikf2Fv5Zy4A2mdgQpoqrnY7+CPuQjcIlalw=
X-Received: by 2002:a5d:9bd5:: with SMTP id d21mr1517921ion.68.1596052954863;
 Wed, 29 Jul 2020 13:02:34 -0700 (PDT)
MIME-Version: 1.0
References:
 <CALXxuZGMg7j+A=XVZT+Ww_CUKeOR10F124gg-ayTgEWA4LEPFQ@mail.gmail.com>
 <87o8nyrf1v.fsf@k85.linux.bogus>
In-Reply-To: <87o8nyrf1v.fsf@k85.linux.bogus>
Date: Wed, 29 Jul 2020 13:01:58 -0700
Message-ID:
 <CAHxkc3SdVLPUu=DSQf6AA1x9SBSd4LEqggDoFQ6ruTxEK+Eixg@mail.gmail.com>
Subject: Re: Module::AutoLoad issues
To: modules@perl.org
Content-Type: multipart/alternative; boundary="0000000000006ada6b05ab9a092a"
X-PMX-Version: 5.6.1.2065439, Antispam-Engine: 2.7.2.376379, Antispam-Data:
 2019.11.28.70017
X-PMX-Perl: Suspicious Attachment
X-PMX-Spam: Gauge=IIIIIIII, Probability=8%, Report=' HTML_NO_HTTP 0.1,
 BODYTEXTH_SIZE_10000_LESS 0, BODYTEXTH_SIZE_3000_MORE 0, BODY_SIZE_10000_PLUS
 0, DATE_TZ_NA 0, DKIM_ALIGNS 0, DKIM_SIGNATURE 0, HREF_LABEL_TEXT_NO_URI 0,
 HREF_LABEL_TEXT_ONLY 0, HTML_BAD_EXTRAS 0, IN_REP_TO 0, KNOWN_MTA_TFX 0,
 LEGITIMATE_SIGNS 0, MSG_THREAD 0, NO_URI_HTTPS 0, REFERENCES 0, SPF_PASS 0,
 SXL_IP_TFX_WM 0, WEBMAIL_SOURCE 0, __ANY_URI 0, __BODY_TEXT_X4 0,
 __BOUNCE_CHALLENGE_SUBJ 0, __BOUNCE_NDR_SUBJ_EXEMPT 0, __COURIER_PHRASE 0,
 __CT 0, __CTYPE_HAS_BOUNDARY 0, __CTYPE_MULTIPART 0, __CTYPE_MULTIPART_ALT 0,
 __DKIM_ALIGNS_1 0, __DKIM_ALIGNS_2 0, __DQ_NEG_HEUR 0, __DQ_NEG_IP 0,
 __FORWARDED_MSG 0, __FRAUD_BADTHINGS 0, __FRAUD_WEBMAIL 0,
 __FRAUD_WEBMAIL_FROM 0, __FROM_GMAIL 0, __FUR_RDNS_GMAIL 0, __HAS_FROM 0,
 __HAS_HTML 0, __HAS_MSGID 0, __HAS_REFERENCES 0, __HELO_GMAIL 0,
 __HEX28_LC_BOUNDARY 0, __HREF_LABEL_TEXT 0, __HTML_AHREF_TAG 0,
 __HTML_BAD_END 0, __HTML_BAD_START 0, __HTML_TAG_DIV 0, __IN_REP_TO 0,
 __MAIL_CHAIN 0, __MIME_HTML 0, __MIME_TEXT_H 0, __MIME_TEXT_H1 0,
 __MIME_TEXT_H2 0, __MIME_TEXT_P 0, __MIME_TEXT_P1 0, __MIME_TEXT_P2 0,
 __MIME_VERSION 0, __PHISH_SPEAR_SUBJ_ALERT 0, __RDNS_WEBMAIL 0, __REFERENCES
 0, __SANE_MSGID 0, __SEO_WEBSITE 0, __SUBJ_ALPHA_END 0, __SUBJ_ALPHA_NEGATE
 0, __SUBJ_REPLY 0, __TO_MALFORMED_2 0, __TO_NO_NAME 0, __URI_MAILTO 0,
 __URI_NO_WWW 0, __URI_NS , __X_GOOGLE_DKIM_SIGNATURE 0, __YOUTUBE_RCVD 0,
 __zen.spamhaus.org_ERROR '
Approved: news@nntp.perl.org
From: joe.mcmahon@gmail.com (Joe McMahon)

--0000000000006ada6b05ab9a092a
Content-Type: text/plain; charset="UTF-8"

Andreas, I hope you don't think I'm out of line here, but I'm putting on my
security hat from when I was working with WhiteHat and making a comment
about the overall design of the module and specifically about the test
suite.

Rob, I'm sure that functionally speaking this module is well-meant, but
time and again, we warn people about "curl | bash" as an outstandingly
boneheaded thing to do. One should never simply execute something that
happens to be at the far end of a URL that one does not control, and that
is generally accessible on the Internet, and hope everything will be okay.

But the reason that this module was pulled earlier was not that it does
this -- though I would argue that even the basic idea of implementing a
security vulnerability as a module is a terrible idea -- it was pulled
because of all the following:
 - the test suite accesses a site the installer does not control without
warning them this will happen
 - it obscures the site being used
 - the code being downloaded is not the minimum possible needed to ensure
that the test passes
 - the code being downloaded is deliberately obfuscated to make it
difficult for the installer to vet it for safety
 - worst, the code that it currently downloads appears to be malware. (side
note: it *does not matter* if it isn't! The fact that it is not blindingly
obvious is in itself highly suspect).

The combination of all these is not only unsafe but outright dangerous.
Rob, it's possible that you didn't know this.I'll totally give you the
benefit of the doubt. But if you didn't know that you've been sending out
something that you didn't intend -- well, you've got a mighty fine argument
as to why this module is dangerous. If you did, I question the lack of
transparency. There is absolutely no need to obfuscate this code if this is
simply for a test.

Consider: if you (Rob) lose control of the site that the test suite uses,
or someone gains access to it without your knowledge, every installer who
reruns the test suite is potentially a victim of any number of attacks -
let's say ransomware, for starters.

Even if you changed what it's loading to a cleartext dummy "hey look I got
installed" module, you'd still be weakening the security of every
installation that used this module to be only as good as your security is.
Are you prepared to take on that level of responsibility for every random
yahoo who uses Perl and decides this module is a good idea? Even if you
think you are, I do not think this is a good idea.

I would think that from a legal standpoint you might be on very shaky
ground if there was a successful breakin vectored through your site, and
that CPAN, or Andreas, or the Perl Foundation, might also find themselves
in legal hot water if a court decided that leaving this in place was
negligent. That is playing with fire that we do not need to do.

My personal opinion is that this module is a potential Trojan and should be
removed, period.

If it is to be allowed to stay, at a minimum, it should be moved to the
Acme namespace to make it plain that this module is not meant for
production. Its current naming obscures that fact.

In addition, it needs a huge disclaimer at the top of the POD that stresses
that this module deliberately implements remote code execution, and that
this is inherently dangerous. There should also be a big banner during CPAN
install that says this.

Last, the test suite must be rewritten to use a `file:` URL or to run a
localhost-only HTTP server which loads unobfuscated, minimal code that
verifies the operation of the module. The linking out to the obfuscated
site and loading of obfuscated code must be removed completely, and the old
versions that did this must be removed.

In my opinion, this module is dangerous, so much so that it is not
salvageable without some very serious rewriting. If it is meant to load
CPAN modules then it should only be able to do that; a generalized remote
code execution framework is a ridiculously bad idea and should not be
permitted on an official site.

A footgun that the responsibility of the user to police is one thing. A
footgun that we deliver loaded, with ammunition that might suddenly be
something extremely dangerous, and actually fire during *the test suite* is
wildly inappropriate -- and I for one do not want it to be something
someone potentially ends up in court about.

On Tue, Jul 28, 2020 at 11:50 PM Andreas Koenig <
andreas.koenig.7os6VVqR@franz.ak.mind.de> wrote:

> >>>>> On Tue, 28 Jul 2020 21:08:11 -0600, Rob Brown <bbb@cpan.org> said:
>
>   > Hey Andreas,
>   > I'm getting hounded with complaints about my Module::AutoLoad suddenly
>   > not working [...]
>
> Hi Rob,
>
> first of all, please accept my apologies. I was intending to write to
> you immediately, but then got distracted and found the open case again a
> bit late.
>
> I've now brought Module-AutoLoad-0.06.tar.gz back to your directory and
> made your account active again. But the module is not indexed anymore. I
> hope this works for you.
>
> As a way forward I'm leaning to suggest something that protects your
> fellow CPAN users from accidentally running into it again and/or
> something that reduces the potential to get people nervous and maybe
> also reduces the amount of required hacking when things go wrong next
> time.
>
> I think whatever meets such criteria should be good enough. I'm thinking
> of something like a disclaimer like when you sell a heating you're
> required to tell the customer that they have to be careful because the
> device gets hot when deployed. Otherwise *they* get a chance to ruin
> *your* day. In other words, better err on the side of caution.
>
> Sorry for the late answer and I hope this all now works again both for
> you and the rest of the community for at least the next ten years.
>
> Greetings from Berlin,
> --
> andreas
>

--0000000000006ada6b05ab9a092a
Content-Type: text/html; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr">Andreas, I hope you don&#39;t think I&#39;m out of line he=
re, but I&#39;m putting on my security hat from when I was working with Whi=
teHat and making a comment about the overall design of the module and speci=
fically about the test suite.=C2=A0<div><br></div><div>Rob, I&#39;m sure th=
at functionally speaking this module is well-meant, but time and again, we =
warn people about &quot;curl | bash&quot; as an outstandingly boneheaded th=
ing to do. One should never simply execute something that happens to be at =
the far end of a URL that one does not control, and that is generally acces=
sible on the Internet, and hope everything will be okay.</div><div><br></di=
v><div>But the reason that this module was pulled earlier was not that it d=
oes this -- though I would argue that even the basic idea of implementing a=
 security vulnerability as a module is a terrible=C2=A0idea -- it was pulle=
d because of all the following:</div><div>=C2=A0- the test suite accesses a=
 site the installer does not control without warning them this will happen<=
/div><div>=C2=A0- it obscures=C2=A0the site being used</div><div>=C2=A0- th=
e code being downloaded is not the minimum possible needed to ensure that t=
he test passes</div><div>=C2=A0- the code being downloaded is deliberately =
obfuscated to make it difficult=C2=A0for the installer to vet it for safety=
</div><div>=C2=A0- worst, the code that it currently downloads appears to b=
e malware. (side note: it *does not matter* if it isn&#39;t! The fact that =
it is not blindingly obvious is in itself highly suspect).</div><div><br></=
div><div>The combination of all these is not only unsafe but outright dange=
rous. Rob, it&#39;s possible that you didn&#39;t know this.I&#39;ll totally=
 give you the benefit of the doubt. But if you didn&#39;t know that you&#39=
;ve been sending out something that you didn&#39;t intend -- well, you&#39;=
ve got a mighty fine argument as to why this module is dangerous. If you di=
d, I question the lack of transparency. There is absolutely no need to obfu=
scate this code if this is simply for a test.</div><div><br></div><div>Cons=
ider: if you (Rob) lose control of the site that the test suite uses, or so=
meone gains access to it without your knowledge, every installer who reruns=
 the test suite is potentially a victim of any number of attacks - let&#39;=
s say ransomware, for starters.=C2=A0</div><div><br></div><div>Even if you =
changed what it&#39;s loading to a cleartext dummy &quot;hey look I got ins=
talled&quot; module, you&#39;d still be weakening the security of every ins=
tallation that used this module to be only as good as your security is. Are=
 you prepared to take on that level of responsibility for every random yaho=
o who uses Perl and decides this module is a good idea? Even if you think y=
ou are, I do not think this is a good idea.</div><div><br></div><div>I woul=
d think that from a legal standpoint you might be on very shaky ground if t=
here was a successful breakin=C2=A0vectored through your site, and that CPA=
N, or Andreas, or the Perl Foundation, might also find themselves in legal =
hot water if a court decided that leaving this in place was negligent. That=
 is playing with fire that we do not need to do.=C2=A0</div><div><br></div>=
<div>My personal opinion is that this=C2=A0module is a=C2=A0potential Troja=
n and should be removed, period.</div><div><br></div><div>If it is to be al=
lowed to stay, at a minimum, it should be moved to the Acme namespace to ma=
ke it plain that this module is not meant for production. Its=C2=A0current =
naming obscures that fact.</div><div><br></div><div>In addition, it needs a=
 huge disclaimer at the=C2=A0top of the POD that stresses that this module =
deliberately implements remote code execution, and that this is inherently =
dangerous. There should also be a big banner during CPAN install that says =
this.</div><div><br></div><div>Last, the test suite must be rewritten to us=
e a `file:` URL or to run a localhost-only HTTP server which loads unobfusc=
ated, minimal code that verifies the operation of the module. The linking o=
ut to the obfuscated site and loading of obfuscated code must be removed co=
mpletely, and the old versions that did this must be removed.</div><div><br=
></div><div>In my opinion, this module is dangerous, so much so that it=C2=
=A0is not salvageable without some very serious rewriting. If it is meant t=
o load CPAN modules then it should only be able to do that; a generalized r=
emote code execution framework is a ridiculously bad idea and should not be=
 permitted on an official site.</div><div><br></div><div>A footgun that the=
 responsibility of the user to police is one thing. A footgun that we deliv=
er loaded, with ammunition that might suddenly be something extremely dange=
rous, and actually fire during *the test suite* is wildly inappropriate -- =
and I for one do not want it to be something someone potentially ends up in=
 court about.</div></div><br><div class=3D"gmail_quote"><div dir=3D"ltr" cl=
ass=3D"gmail_attr">On Tue, Jul 28, 2020 at 11:50 PM Andreas Koenig &lt;<a h=
ref=3D"mailto:andreas.koenig.7os6VVqR@franz.ak.mind.de">andreas.koenig.7os6=
VVqR@franz.ak.mind.de</a>&gt; wrote:<br></div><blockquote class=3D"gmail_qu=
ote" style=3D"margin:0px 0px 0px 0.8ex;border-left:1px solid rgb(204,204,20=
4);padding-left:1ex">&gt;&gt;&gt;&gt;&gt; On Tue, 28 Jul 2020 21:08:11 -060=
0, Rob Brown &lt;<a href=3D"mailto:bbb@cpan.org" target=3D"_blank">bbb@cpan=
.org</a>&gt; said:<br>
<br>
=C2=A0 &gt; Hey Andreas,<br>
=C2=A0 &gt; I&#39;m getting hounded with complaints about my Module::AutoLo=
ad suddenly<br>
=C2=A0 &gt; not working [...]<br>
<br>
Hi Rob,<br>
<br>
first of all, please accept my apologies. I was intending to write to<br>
you immediately, but then got distracted and found the open case again a<br=
>
bit late.<br>
<br>
I&#39;ve now brought Module-AutoLoad-0.06.tar.gz back to your directory and=
<br>
made your account active again. But the module is not indexed anymore. I<br=
>
hope this works for you.<br>
<br>
As a way forward I&#39;m leaning to suggest something that protects your<br=
>
fellow CPAN users from accidentally running into it again and/or<br>
something that reduces the potential to get people nervous and maybe<br>
also reduces the amount of required hacking when things go wrong next<br>
time.<br>
<br>
I think whatever meets such criteria should be good enough. I&#39;m thinkin=
g<br>
of something like a disclaimer like when you sell a heating you&#39;re<br>
required to tell the customer that they have to be careful because the<br>
device gets hot when deployed. Otherwise *they* get a chance to ruin<br>
*your* day. In other words, better err on the side of caution.<br>
<br>
Sorry for the late answer and I hope this all now works again both for<br>
you and the rest of the community for at least the next ten years.<br>
<br>
Greetings from Berlin,<br>
-- <br>
andreas<br>
</blockquote></div>

--0000000000006ada6b05ab9a092a--
