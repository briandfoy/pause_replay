Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:77813
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 29350 invoked from network); 30 Sep 2011 05:41:03 -0000
Received: from x1.develooper.com (207.171.7.70)
  by x6.develooper.com with SMTP; 30 Sep 2011 05:41:03 -0000
Received: (qmail 8811 invoked by uid 225); 30 Sep 2011 05:41:03 -0000
Delivered-To: modules@perl.org
Received: (qmail 8807 invoked by alias); 30 Sep 2011 05:41:02 -0000
X-Spam-Status: No, hits=0.0 required=8.0
	tests=
X-Spam-Check-By: la.mx.develooper.com
Received: from pause.fiz-chemie.de (HELO pause.fiz-chemie.de) (195.37.231.65)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Thu, 29 Sep 2011 22:40:59 -0700
Received: from pause.fiz-chemie.de (localhost.localdomain [127.0.0.1])
	by pause.fiz-chemie.de (8.13.8/8.13.8/Debian-3) with ESMTP id p8U5eqKA030247;
	Fri, 30 Sep 2011 07:40:53 +0200
Received: (from nobody@localhost)
	by pause.fiz-chemie.de (8.13.8/8.13.8/Submit) id p8U5eqLr030246;
	Fri, 30 Sep 2011 07:40:52 +0200
Date: Fri, 30 Sep 2011 07:40:52 +0200
Message-ID: <201109300540.p8U5eqLr030246@pause.fiz-chemie.de>
Subject: Module submission Data::BitStream
Reply-To: modules@perl.org
To: modules@perl.org, danaj@cpan.org
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Data::BitStream
  DSLIP:       bdpO2
  description: A bit stream class including integer coding
  userid:      DANAJ (Dana Jacobsen)
  chapterid:   6 (Data_Type_Utilities)
  communities:
    #perl on irc.freenode.net, https://github.com/danaj/BitStream

  similar:
    SWF::BinStream

  rationale:

    This is primarily a data structure (a bit stream, sort of a queue
    of bits though one walks the bits rather than removes them).

    I debated Bit::Stream or Data::Bit::Stream, but I believe
    Data::BitStream fits better.

    For similar reasons I think this belongs in the data section,
    though the archiving / compression / encryption sections all have
    merit. However, bit streams (and variable length coding methods) are
    used in archiving, compression, image storage, and encryption, among
    other areas. Hence it doesn't seem like there is a particular
    application field that best applies.

    I looked through CPAN for similar modules and did not find anything
    fitting what I am trying to do. Certainly nothing with the integer
    coding (variable length coding) methods.

    Data::Stream and Data::Stream::Bulk have interesting ideas, but are
    mostly API rather than actual streams.

    SWF::BinStream sort of models the concept of a bit stream, but the
    underlying storage is not efficient at all, and it really is more
    modeled on storing byte-integral size chunks with some access to the
    bits. It has no support for integer coding methods (though this
    could be added via codecs). My small experiments with it indicated
    it was 2-4x slower than my module and had non-trivial space
    overhead. I believe my module adds significant value that could not
    be achieved by adding to SWF::BinStream.

  enteredby:   DANAJ (Dana Jacobsen)
  enteredon:   Fri Sep 30 05:40:52 2011 GMT

The resulting entry would be:

Data::
::BitStream       bdpO2 A bit stream class including integer coding  DANAJ


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=35800000_3fc6af01b74e3d41&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=35800000_3fc6af01b74e3d41&SUBMIT_pause99_add_mod_insertit=1
Peek at the current permissions:
  https://pause.perl.org/pause/authenquery?pause99_peek_perms_by=me&pause99_peek_perms_query=Data%3A%3ABitStream
