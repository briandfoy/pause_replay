Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:24296
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 35982 invoked by uid 76); 31 Oct 2003 01:06:17 -0000
Received: from qmailr@one.develooper.com (HELO ran-out.mx.develooper.com) (64.81.84.115) by onion.perl.org (qpsmtpd/0.26) with SMTP; Thu, 30 Oct 2003 17:06:17 -0800
Received: (qmail 6831 invoked by uid 225); 31 Oct 2003 01:06:15 -0000
Delivered-To: modules@perl.org
Received: (qmail 6826 invoked by uid 507); 31 Oct 2003 01:06:14 -0000
Received: from pause.perl.org (HELO pause.perl.org) (212.40.160.59) by one.develooper.com (qpsmtpd/0.27-dev) with ESMTP; Thu, 30 Oct 2003 17:05:43 -0800
Received: from pause.perl.org (localhost [127.0.0.1])	by pause.perl.org (8.12.3/8.12.3/Debian-6.6) with ESMTP id h9V15O5c021842;	Fri, 31 Oct 2003 02:05:24 +0100
Received: (from nobody@localhost)	by pause.perl.org (8.12.3/8.12.3/Debian-6.6) id h9V15OqB021840;	Fri, 31 Oct 2003 02:05:24 +0100
Date: Fri, 31 Oct 2003 02:05:24 +0100
Message-ID: <200310310105.h9V15OqB021840@pause.perl.org>
Subject: Module submission Perf::Stopwatch
Reply-To: modules@perl.org
To: modules@perl.org, kitdekat@cpan.org
X-Spam-Check-By: one.develooper.com
X-Spam-Status: No, hits=1.1 required=7.0 tests=CARRIAGE_RETURNS,SPAM_PHRASE_00_01 version=2.44
X-SMTPD: qpsmtpd/0.26, http://develooper.com/code/qpsmtpd/
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Perf::Stopwatch
  DSLIP:       bdpOp
  description: Multiple Timers for debugging code portions
  userid:      KITDEKAT (Kit DeKat)
  chapterid:    3 (Development_Support)
  communities:

  similar:
    Benchmark Benchmark::Timer Time::Stopwatch

  rationale:

    This was created to be inserted quickly into any script as a
    reference, since it requires very little modification of the
    original code that is being developed, and is just as easy to remove
    when code is put into production. It is not designed for
    benchmarking or serious calculations since the module code itself is
    particularly optimized. As an example, a simple loop takes about 5
    microseconds to just start and stop a batch-type Stopwatch on my
    test systems.

    There are three types of Stopwatches available; normal, lap, and
    burst.

    NORMAL has only start() and stop() abilities and getTime() returns
    the difference between these two times.

    LAP uses start() and lap() to mark intervals in the overall time.
    This is useful for getting statistics on getMinLap(), getMaxLap(),
    and average loop times so you can determine best-case, worst-case,
    and average-runs on sections of code.

    BURST uses the start() and stop() as well, but does not reset the
    time with every call, but keeps a cumulative time difference. Such
    as stop1-start1 + stop2-start2 + ... = final. This is useful for
    measuring a part of the loop without calculating the overall time of
    the loop, as in NORMAL and LAP, thus allowing you to diagnose which
    portion of the loop is causing the slowdown.

  enteredby:   KITDEKAT (Kit DeKat)
  enteredon:   Fri Oct 31 01:05:23 2003 GMT

The resulting entry would be:

Perf::
::Stopwatch       bdpOp Multiple Timers for debugging code portions  KITDEKAT


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=11500000_54cf46278db7a2dc&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=11500000_54cf46278db7a2dc&SUBMIT_pause99_add_mod_insertit=1
