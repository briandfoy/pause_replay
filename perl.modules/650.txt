Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:650
Return-Path: <gustav@schaffter.com>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 6810 invoked from network); 3 Dec 1999 17:56:20 -0000
Received: from mail-lax-1.pilot.net (HELO mail01-lax.pilot.net) (205.139.40.18)
  by tmtowtdi.perl.org with SMTP; 3 Dec 1999 17:56:20 -0000
Received: from mailgw.capgroup.com (unknown-23-140.pilot.net [204.48.23.140]) by mail01-lax.pilot.net with ESMTP id JAA11415 for <modules@perl.org>; Fri, 3 Dec 1999 09:56:19 -0800 (PST)
Received: from smtplink.capgroup.com (unknown-2-28.capgroup.com [148.107.2.28]) by mailgw.capgroup.com with SMTP id JAA26563 for <modules@perl.org>; Fri, 3 Dec 1999 09:56:18 -0800 (PST)
Received: from schaffter.com ([204.48.23.140]) by smtplink.capgroup.com (Lotus SMTP MTA v4.6.3  (733.2 10-16-1998)) with SMTP id 8825683C.0062762F; Fri, 3 Dec 1999 09:55:30 -0800
Message-ID: <3848042C.F6FC2511@schaffter.com>
Date: Fri, 03 Dec 1999 18:55:56 +0100
Organization: N/A
X-Mailer: Mozilla 4.7 [en] (WinNT; I)
X-Accept-Language: en
MIME-Version: 1.0
To: modules@perl.org
Subject: Registration?
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Approved: news@nntp.perl.org
From: gustav@schaffter.com (Gustav Schaffter)

Hi,

This is my first contact with you, so bare with me if I'm doing
something wrong or in the wrong order. If so, please help me out. I'm
not stubborn, just innocent. :-)

I'd like to register with CPAN with the objective to later upload a
module that I've written.


Name: Gustav Schaffter
E-mail: gustav@schaffter.com
Homepage: http://www.schaffter.com
Preferred User ID: SCHAFFTER
Planning to contribute:
A module implementing a timer. I believe that it belongs in the Time
tree. (??)
It's actually a shell over sleep. Currently, the object can be called
with a number of numerical parameters.
Ex: 
$th=Time::Timer->new(2,37,45);

when $th0->get_control_on_second() is called, it will return (give back
the control) when the seconds on the local computers local time is
either 02, 37 or 45, whichever comes first.

alt. constructor
$th=Time::Timer->new();

$th0->get_control_on_second(45,55)

will return at 45 or 55, whichever happens first. (Returning which
'second' was used.)

$th0->get_control_on_second()
will return at one of the internally stored 'seconds', whichever happens
first. (Returning which 'second' was used.) Returns as undef immediately
if no 'seconds' are stored.

Furthermore, $th->get_control_list() will return the full list of stored
'seconds'.
$th->set_control_list(1,2,3) will replace (or initialize) the full list
of stored 'seconds'.

Error handling implemented using the Carp module.


DSLI: cdpO


Waiting for your comments and/or complementary questions.

Best regards
Gustav
