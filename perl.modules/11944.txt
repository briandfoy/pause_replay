Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:11944
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 18203 invoked by uid 76); 3 Jun 2002 02:29:16 -0000
Received: from qmailr@lux.valueclick.com (HELO lux.valueclick.com) (216.246.96.102)
  by onion.perl.org (qpsmtpd/0.07b) with SMTP; Mon Jun  3 02:29:16 2002 -0000
Received: (qmail 12608 invoked from network); 2 Jun 2002 18:59:34 -0000
Received: from dubravka.kbx.de (HELO pause.perl.org) (root@212.40.160.59)
  by lux.valueclick.com with SMTP; 2 Jun 2002 18:59:34 -0000
Received: (from nobody@localhost)
	by pause.perl.org (8.9.3/8.9.3) id UAA16766;
	Sun, 2 Jun 2002 20:58:31 +0200
Date: Sun, 2 Jun 2002 20:58:31 +0200
Message-ID: <200206021858.UAA16766@pause.perl.org>
Subject: Module submission Term::WinConsole
Reply-To: modules@perl.org
To: modules@perl.org, jmvilomet@cpan.org
X-Spam-Rating: lux.valueclick.com 1.6.2 0/0/N
Approved: news@nntp.perl.org
From: upload@p11.speed-link.de ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Term::WinConsole
  DSLIP:       bdpOp
  description: ANSI based windows management for Perl
  userid:      JMVILOMET (Jean-Michel Vilomet)
  chapterid:    8 (User_Interfaces)
  communities:
    perlmonks.org

  similar:
    Term::ANSIScreen

  rationale:

    I chose the "Term" namespace because my module acts like already
    existing modules in it, such as Term::ANSIScreen and
    Term::ANSIColor. Like these modules, WinConsole builds ANSI
    compliant strings you can send on a terminal and get the expected
    color changes et cursor moves. My module improves these
    functionalities on two points: screen management and transmitted
    data optimisation. Screen management is done via an object-oriented
    interface that allows you to create what I call 'miniwins' i.e.
    rectangular areas with their own content (color, text and cursor
    attribute). A Z-buffer management is also done to allow windows
    overlapping. Data optimisation is done by using a back buffer for
    all drawing operations and a diff algorithm enabling you to only
    send to a text terminal the minimal operations required to match the
    new screen content.

  enteredby:   JMVILOMET (Jean-Michel Vilomet)
  enteredon:   Sun Jun  2 18:58:27 2002 GMT

The resulting entry would be:

Term::
::WinConsole      bdpOp ANSI based windows management for Perl       JMVILOMET


Thanks for registering,
The Pause Team

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=7d100000_425596091d17cbaa&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=7d100000_425596091d17cbaa&SUBMIT_pause99_add_mod_insertit=1
