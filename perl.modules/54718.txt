Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:54718
Return-Path: <h.m.brand@xs4all.nl>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Delivered-To: moderator for modules@perl.org
Received: (qmail 24910 invoked from network); 3 Jun 2007 19:43:23 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 3 Jun 2007 19:43:23 -0000
Received: (qmail 8238 invoked by uid 225); 3 Jun 2007 19:43:23 -0000
Delivered-To: modules@perl.org
Received: (qmail 8232 invoked by alias); 3 Jun 2007 19:43:22 -0000
X-Spam-Status: No, hits=-0.6 required=8.0
	tests=BAYES_00,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,KARMA_CONNECT_NEGATIVE,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
Received: from smtp-vbr11.xs4all.nl (HELO smtp-vbr11.xs4all.nl) (194.109.24.31)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Sun, 03 Jun 2007 12:42:17 -0700
Received: from pc09 (procura.xs4all.nl [82.95.216.29])
	(authenticated bits=0)
	by smtp-vbr11.xs4all.nl (8.13.8/8.13.8) with ESMTP id l53Jg6uX034140
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NO)
	for <modules@perl.org>; Sun, 3 Jun 2007 21:42:12 +0200 (CEST)
	(envelope-from h.m.brand@xs4all.nl)
Date: Sun, 3 Jun 2007 19:40:45 +0000
To: modules@perl.org
Subject: ANNOUNCE: Text-CSV_XS 0.28
Message-ID: <20070603194045.00392946@pc09>
X-Mailer: Claws Mail 2.9.2cvs9 (GTK+ 2.10.6; i686-pc-linux-gnu)
Face: iVBORw0KGgoAAAANSUhEUgAAADAAAAAwEAIAAACI8LKTAAAACXBIWXMAAABIAAAASABGyWs+AAAC
 JElEQVRo3u2aMY4CMQxFczZ6RItEzRm4DBINDbRUSPRInIRbsNK6+dJfezN4kokn48IaCSjysL8d
 e9Knoj2fr9f9/gllqQ6U9/vxWK3EdwdIEGjRIVCu18NhuxUfK46SH81+fzrdbuKPx/P5ctHQdAdI
 TKAgpvV6s9ntBEfXEYSGgMQzIHnuFBBjkshCNJ2KtJZ04hHNAugP8bZr3NIHhbcF0AKoK0CoaHXU
 LUWBIs1n+jV+Fl8CVqOApEXAwyMO/DSR4XVntoAYDR7eBjQupuYAYTMph8Rj21D4m7MChN02tpqs
 NSnb/KqU2oHCXu5xDCgflj/RAgBiKBIXnICzAsSjWBsTz5K4/HeXYvb8yK5lY3VGEwPi2aONKT+5
 AlcxrTPOwcTiraGRChgMEKJh0bVVifGVTq6qgBiNVl8QE29EsK6VE+YJAOG2wz5AvsqUS6uqgHCA
 n4NGvBYpnJ64Jgg27sCtxtBk1CJIA4S/GhdWKh07QxUB48jWGhZ4jKamRRr/T8/M0AaEyctry6YB
 4dTGj9iWZNs3DahES5kPCJOu0RQbF/fQOBprsB9gaO9JtPDzII9U5ySXX7AnuIt91y54AAW7rPpT
 LCe5gt3F+CLqr2UarGB3MXvMylWGq4+9RCx3TW1oJq1t3HPQlFs6N1fFNEB4s8dn7Ne7ACSm7TPQ
 I5quAWmw6qBpulHM33B0Csge4Nd8JTTYG2b1XyRe3lH8x34ABJ6aePuQ2N4AAAAASUVORK5CYII=
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
X-Virus-Scanned: by XS4ALL Virus Scanner
Approved: news@nntp.perl.org
From: h.m.brand@xs4all.nl ("H.Merijn Brand")

  file: $CPAN/authors/id/H/HM/HMBRAND/Text-CSV_XS-0.28.tar.gz
  size: 33289 bytes
   md5: 8c00161d04793deaf383b4331fe09db4

2007-06-03  0.28 - H.Merijn Brand   <h.m.brand@xs4all.nl>

        * IMPORTANT CHANGE: new () returns undef if it gets unsupported
          attributes. Until now, new ({ esc_char => "\\" }) was just
          silently ignored. Rejecting it and failing is better than
          continuing with false assumptions.
        * Added allow_loose_quotes  (see doc)
        * Added t/65_allow.t
        * Added allow_loose_escapes (see doc) RT 15076
        * More code cleanup in XS
        * Added allow_whitespace    (see doc)

2007-05-31  0.27 - H.Merijn Brand   <h.m.brand@xs4all.nl>

        * checked with perlcritic (still works under 5.00504)
          so 3-arg open cannot be used (except in the docs)
        * 3-arg open in docs too
        * Added a lot to the TODO list
        * Some more info on using escape character (jZed)
        * Mention Text::CSV_PP in README
        * Added t/45_eol.t, eol tests
        * Added a section about embedded newlines in the pod
        * Allow \r as eol ($/) for parsing
        * More docs for eol
        * More eol = \r fixes, tfrayner's test case added to t/45_eol.t


=item allow_whitespace

When this option is set to true, whitespace (TAB's and SPACE's)
surrounding the separation character is removed when parsing. So
lines like:

  1 , "foo" , bar , 3 , zapp

are now correctly parsed, even though it violates the CSV specs.
Note that B<all> whitespace is stripped from start and end of each
field. That would make is more a I<feature> than a way to be able
to parse bad CSV lines, as

 1,   2.0,  3,   ape  , monkey

will now be parsed as

 ("1", "2.0", "3", "ape", "monkey")

even if the original line was perfectly sane CSV.

=item allow_loose_quotes

By default, parsing fields that have C<quote_char> characters inside
an unquoted field, like

 1,foo "bar" baz,42

would result in a parse error. Though it is still bad practice to
allow this format, we cannot help there are some vendors that make
their applications spit out lines styled like this.

=item allow_loose_escapes

By default, parsing fields that have C<escapee_char> characters that
escape characters that do not need to be escaped, like:

 my $csv = Text::CSV_XS->new ({ esc_char => "\\" });
 $csv->parse (qq{1,"my bar\'s",baz,42});

would result in a parse error. Though it is still bad practice to
allow this format, this option enables you to treat all escape character
sequences equal.


-- 
H.Merijn Brand         Amsterdam Perl Mongers (http://amsterdam.pm.org/)
using & porting perl 5.6.2, 5.8.x, 5.9.x   on HP-UX 10.20, 11.00, 11.11,
& 11.23, SuSE 10.0 & 10.2, AIX 4.3 & 5.2, and Cygwin. http://qa.perl.org
http://mirrors.develooper.com/hpux/            http://www.test-smoke.org
                        http://www.goldmark.org/jeff/stupid-disclaimers/
