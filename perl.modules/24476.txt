Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:24476
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 87484 invoked by uid 76); 11 Nov 2003 15:18:24 -0000
Received: from x1.develooper.com (HELO x1.develooper.com) (63.251.223.170) by onion.perl.org (qpsmtpd/0.26) with SMTP; Tue, 11 Nov 2003 07:18:24 -0800
Received: (qmail 19297 invoked by uid 225); 11 Nov 2003 15:18:21 -0000
Delivered-To: modules@perl.org
Received: (qmail 19290 invoked by alias); 11 Nov 2003 15:18:21 -0000
Received: from pause.perl.org (HELO pause.perl.org) (212.40.160.59) by la.mx.develooper.com (qpsmtpd/0.27-dev) with ESMTP; Tue, 11 Nov 2003 07:18:09 -0800
Received: from pause.perl.org (localhost [127.0.0.1])	by pause.perl.org (8.12.3/8.12.3/Debian-6.6) with ESMTP id hABFHo5c008101;	Tue, 11 Nov 2003 16:17:50 +0100
Received: (from nobody@localhost)	by pause.perl.org (8.12.3/8.12.3/Debian-6.6) id hABFHoxB008099;	Tue, 11 Nov 2003 16:17:50 +0100
Date: Tue, 11 Nov 2003 16:17:50 +0100
Message-ID: <200311111517.hABFHoxB008099@pause.perl.org>
Subject: Module submission SVG::GD
Reply-To: modules@perl.org
To: modules@perl.org, ronan@cpan.org
X-Spam-Check-By: la.mx.develooper.com
X-Spam-Status: No, hits=0.8 required=7.0 tests=CARRIAGE_RETURNS,SPAM_PHRASE_01_02 version=2.44
X-SMTPD: qpsmtpd/0.26, http://develooper.com/code/qpsmtpd/
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       SVG::GD
  DSLIP:       bmphp
  description: Provide SVG output to GD
  userid:      RONAN (Ronan Oger)
  chapterid:   18 (Images_Pixmaps_Bitmaps)
  communities:
    svg-developers@yahoogroups.com,

  similar:

  rationale:

    Module Rationale: ---------------- I have recieved numerous queries
    about generating SVG output from GD and other raster-drawing
    systems. Because a number of applications use GD, this is the first
    try to do this. As well, there have been been user queries on some
    lists/newsgroups including comp.lang.perl.modules

    SVG::GD enables the generation of GD drawings that are generated
    from SVG-compatible files PLUS shape primitives.

    (For example, there is not yet any support for certain methods that
    act at a raster level such as "fill" or require the server to have a
    spatial model of the canvas such as "fillToBorders").

    Namespace rationale: ------------------- I am overwriting the
    GD::Image namespace with the SVG::GD::Image namespace, and therefore
    need to use SVG::GD rather than GD::SVG

    Approach: -------- The approach is not that unique. I take over the
    GD::Image namespace, open a new SVG drawing using the SVG.pm module,
    and map GD,pm methods to SVG.pm. A unique thing about the module is
    that it requires very little change to the existing code of an
    application using GD. For example, for an existing app using
    GD::Graph::lines, you change:

    use GD::Graph::lines;

    to: use GD::Graph::lines; #order is important. #This MUST be behind
    the GD-invoking point to work use SVG::GD;

    The module currently provides shape primitive support quite well,
    and has been tested against a number of other modules which invoke
    GD.

    Everything works fairly well. Sample output of the module can be
    found here:

    http://www.roaps.com/2003/11/11/

    (You need to have svg support, and you need to drill down to the
    actual SVG images to see the SVG results).

  enteredby:   RONAN (Ronan Oger)
  enteredon:   Tue Nov 11 15:17:49 2003 GMT

The resulting entry would be:

SVG::
::GD              bmphp Provide SVG output to GD                     RONAN


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=d5500000_25ee2d6e4430ffab&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=d5500000_25ee2d6e4430ffab&SUBMIT_pause99_add_mod_insertit=1
