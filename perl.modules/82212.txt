Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:82212
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 9017 invoked from network); 12 Sep 2012 09:12:31 -0000
Received: from x1.develooper.com (207.171.7.70)
  by x6.develooper.com with SMTP; 12 Sep 2012 09:12:31 -0000
Received: (qmail 25973 invoked by uid 225); 12 Sep 2012 09:12:31 -0000
Delivered-To: modules@perl.org
Received: (qmail 25969 invoked by alias); 12 Sep 2012 09:12:30 -0000
X-Spam-Status: No, hits=-1.9 required=8.0
	tests=BAYES_00
X-Spam-Check-By: la.mx.develooper.com
Received: from pause.fiz-chemie.de (HELO pause.fiz-chemie.de) (195.37.231.65)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Wed, 12 Sep 2012 02:12:27 -0700
Received: from pause.fiz-chemie.de (localhost.localdomain [127.0.0.1])
	by pause.fiz-chemie.de (8.13.8/8.13.8/Debian-3) with ESMTP id q8C9CGR5005961;
	Wed, 12 Sep 2012 11:12:16 +0200
Received: (from nobody@localhost)
	by pause.fiz-chemie.de (8.13.8/8.13.8/Submit) id q8C9CGjf005960;
	Wed, 12 Sep 2012 11:12:16 +0200
Date: Wed, 12 Sep 2012 11:12:16 +0200
Message-ID: <201209120912.q8C9CGjf005960@pause.fiz-chemie.de>
Subject: Module submission Dir::Iterate
Reply-To: modules@perl.org
To: modules@perl.org, brentdax@cpan.org
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Dir::Iterate
  DSLIP:       Rdpfp
  description: map/grep-style directory traversal
  userid:      BRENTDAX (Brent Dax)
  chapterid:   10 (File_Names_Systems_Locking)
  communities:

  similar:
    File::Find

  rationale:

    Dir::Iterate is a vastly simplified functional wrapper around
    File::Find. It tends to make directory tree traversal a simple
    iterative affair. Since writing it a few years ago, I've used it on
    several occasions for some very different scripts; I was surprised
    to learn I'd never uploaded it to CPAN.

    Dir::Iterate implements two functions, C<mapdir> and C<grepdir>.
    These are similar to the C<map> and C<grep> built-ins, except that
    they take a list of directory names and call the specified
    subroutine with the names of files (recursively) in those
    directories. C<mapdir> returns the results from each sub call;
    C<grepdir>returns all paths for which the sub returned true.

    A surprisingly wide range of directory traversal operations can be
    expressed very easily this way, without the strange call patterns or
    level of complexity seen in File::Find. For instance, a couple weeks
    ago I wrote a short script to increment the build numbers in Xcode
    projects, which included this line:

    for my $plist_file(grepdir { /-Info.plist$/ } '.') {

    This was a ten-line script, but I've used it just as effectively in
    a thousand-line file synchronization system. I figured it was useful
    enough to share with the public.

  enteredby:   BRENTDAX (Brent Dax)
  enteredon:   Wed Sep 12 09:12:15 2012 GMT

The resulting entry would be:

Dir::
::Iterate         Rdpfp map/grep-style directory traversal           BRENTDAX


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=0da00000_f8e876fa0ad2feb4&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=0da00000_f8e876fa0ad2feb4&SUBMIT_pause99_add_mod_insertit=1
Peek at the current permissions:
  https://pause.perl.org/pause/authenquery?pause99_peek_perms_by=me&pause99_peek_perms_query=Dir%3A%3AIterate
