Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:22993
Return-Path: <timbo@dansat.data-plan.com>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 69994 invoked by uid 76); 21 Aug 2003 08:52:57 -0000
Received: from qmailr@one.develooper.com (HELO ran-out.mx.develooper.com) (64.81.84.115) by onion.perl.org (qpsmtpd/0.26) with SMTP; Thu, 21 Aug 2003 01:52:57 -0700
Received: (qmail 20814 invoked by uid 225); 21 Aug 2003 08:52:56 -0000
Delivered-To: modules@perl.org
Received: (qmail 20809 invoked by uid 507); 21 Aug 2003 08:52:55 -0000
Received: from mail03.svc.cra.dublin.eircom.net (HELO mail03.svc.cra.dublin.eircom.net) (159.134.118.19) by one.develooper.com (qpsmtpd/0.27-dev) with SMTP; Thu, 21 Aug 2003 01:52:52 -0700
Received: (qmail 84479 messnum 219895 invoked from network[213.94.228.233/unknown]); 21 Aug 2003 08:52:48 -0000
Received: from unknown (HELO dansat.data-plan.com) (213.94.228.233)  by mail03.svc.cra.dublin.eircom.net (qp 84479) with SMTP; 21 Aug 2003 08:52:48 -0000
Received: from dansat.data-plan.com (localhost [127.0.0.1])	by dansat.data-plan.com (8.12.9/8.12.9) with ESMTP id h7L8qoLP006039;	Thu, 21 Aug 2003 09:52:50 +0100 (BST)	(envelope-from timbo@dansat.data-plan.com)
Received: (from timbo@localhost)	by dansat.data-plan.com (8.12.9/8.12.9/Submit) id h7L8qoIg006038;	Thu, 21 Aug 2003 09:52:50 +0100 (BST)
Date: Thu, 21 Aug 2003 09:52:46 +0100
To: Kurt Starsinic <kstar@cpan.org>
Cc: Mark Overmeer <Mark@Overmeer.net>, modules@perl.org, markov@cpan.org
Subject: Re: Module submission Mail::Box::Procmail
Message-ID: <20030821085245.GV38538@dansat.data-plan.com>
References: <200308131315.h7DDFvlc004925@pause.perl.org> <20030813133447.GA27691@verizon.net> <20030813175014.I8112@speeltuin.ATComputing.nl> <20030820155224.GB32680@verizon.net>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20030820155224.GB32680@verizon.net>
User-Agent: Mutt/1.4i
X-SMTPD: qpsmtpd/0.27-dev, http://develooper.com/code/qpsmtpd/
X-Spam-Check-By: one.develooper.com
X-Spam-Status: No, hits=-1.9 required=7.0 tests=CARRIAGE_RETURNS,IN_REP_TO,QUOTED_EMAIL_TEXT,REFERENCES,SPAM_PHRASE_05_08,USER_AGENT,USER_AGENT_MUTT version=2.44
X-SMTPD: qpsmtpd/0.26, http://develooper.com/code/qpsmtpd/
Approved: news@nntp.perl.org
From: Tim.Bunce@pobox.com (Tim Bunce)

On Wed, Aug 20, 2003 at 11:52:24AM -0400, Kurt Starsinic wrote:
> On Aug 13, Mark Overmeer wrote:
> > * Kurt Starsinic (kstar@cpan.org) [030813 15:30]:
> > > On Aug 13, Perl Authors Upload Server wrote:
> > > > The following module was proposed for inclusion in the Module List:
> > > > 
> > > >   modid:       Mail::Box::Procmail
> > > >     Mail::Box::Procmail is a set of scripts and some classes which
> > > >     create procmail-like facilities. I already many modules in the
> > > >     Mail::Box::* namespace, but this one would be released as separate
> > > >     distribution.
> > > > 
> > > >     The main difference with the usual procmail implementations is that
> > > >     you do not need to create a cryptic configuration file with its own
> > > >     syntax (and therefore limitations), but you simply extend your own
> > > >     program based on Mail::Box and User::Identity.
> > > 
> > > I don't think it's a good idea to write something that works
> > > somewhat similarly to procmail, and calling it Mail::Box::Procmail.
> > > Maybe Mail::Box::Process?
> > 
> > "Procmail" as part of the name is to indicate the very comparible
> > application.  I have plans to support procmailrc files as well, probably
> > using Mail::Procmailrc.  Then it simply is procmail++
> > 
> > By using this name, I hope to attract more people into reading where this
> > module is all about.
> > 
> > > Also, does this operate on a mailbox (very much unlike procmail),
> > > or on incoming messages?  If the latter, then ::Box probably doesn't
> > > belong in the name.
> > 
> > There is already a Mail::Procmail (from Johan Vromans) which is a
> > procmail implementation as usual.  Besides, the "Mail::Box" in the
> > name is to explicitly state that it uses the Mail::Box library.
> 
>     That's exactly what you don't want to do (IMHO).  The module name
> should indicate the functionality, not the implementation.  As a
> potential user, why should I care that your module uses Mail::Box?
> If you re-implemented the internals in a future release, would you
> rename the module?  As a user, should I care?

Since Mail::Box is actually a large framework of modules it may be
relevant in this case.

But I agree that *::Procmail isn't a good name for a module that's
just "like" procmail without explicit support for "being" procmail.
Once that's added, even if only minimal, it would be okay but right
now it's not good (and planning to do it doesn't really count).

But, having said that, the Mail::Procmail is only "like" procmail
and doesn't read procmail files so perhaps a precedent has been set:
We could view the term "procmail" as a generic term for "content
driven rule based email processing".

Tim.
