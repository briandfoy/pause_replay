Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:52400
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 3342 invoked from network); 1 Jan 2007 22:04:46 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 1 Jan 2007 22:04:46 -0000
Received: (qmail 29481 invoked by uid 225); 1 Jan 2007 22:04:46 -0000
Delivered-To: modules@perl.org
Received: (qmail 29471 invoked by alias); 1 Jan 2007 22:04:45 -0000
X-Spam-Status: No, hits=-2.3 required=8.0
	tests=BAYES_00,FORGED_RCVD_HELO,INTERRUPTUS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
Received: from pause.fiz-chemie.de (HELO pause.perl.org) (195.149.117.110)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Mon, 01 Jan 2007 14:04:43 -0800
Received: from pause.perl.org (localhost.localdomain [127.0.0.1])
	by pause.perl.org (8.13.4/8.13.4/Debian-3sarge3) with ESMTP id l01M4cpc028450
	for <modules@perl.org>; Mon, 1 Jan 2007 23:04:38 +0100
Received: (from nobody@localhost)
	by pause.perl.org (8.13.4/8.13.4/Submit) id l01M4cM8028449;
	Mon, 1 Jan 2007 23:04:38 +0100
Date: Mon, 1 Jan 2007 23:04:38 +0100
Message-ID: <200701012204.l01M4cM8028449@pause.perl.org>
Subject: Module submission XML::Table2XML
Reply-To: modules@perl.org
To: modules@perl.org
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       XML::Table2XML
  DSLIP:       bdpOp
  description: Generic Unflattening of tabular data to XML
  userid:      RKAPL (Roland Kapl)
  chapterid:   11 (String_Lang_Text_Proc)
  communities:
    The same algorithm is implemented in ExcelVBA, see
    http://www.codeproject.com/office/table2xml.asp

  similar:
    XML::CSV AnyData

  rationale:

    Table2XML allows to convert tabular data to (almost) any XML
    structure thinkable (currently two restriction exists: The first is
    on mixed content nodes having multiple text interspersed between
    child nodes, e.g.
    <node>text1<subnode1>snvalue1</subnode1>text2<subnode2>snvalue2</subnode2>...<node>,
    the second is on "factorable" nodes, i.e. subnodes that are
    representable by factoring out into a common parent node while
    retaining their semantic: <a><b>b1</b></a><a><b>b2</b></a> ->
    <a><b>b1</b><b>b2</b></a>. Such nodes are only represented in their
    "factored" version)

    The method is by first declaring a header that details the "path"
    of the respective column inside the target XML document, then adding
    the rows one by one, finally finishing the whole document.

    Originally the algorithm was developed in Excel VBA to "revert"
    data produced by the Excel Flattener when loading XML documents into
    Excel, but it can be also used to "XML"ize data retrieved from
    databases and other tabular sources (files) in a highly generic way.
    Currently I see no way to integrate the algorithm in an existing
    module (XML::CSV is too specific, AnyData is about data
    representation, not conversion).

  enteredby:   RKAPL (Roland Kapl)
  enteredon:   Mon Jan  1 22:04:38 2007 GMT

The resulting entry would be:

XML::
::Table2XML       bdpOp Generic Unflattening of tabular data to XML  RKAPL


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=47d00000_9cd82ee4caaa0db1&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=47d00000_9cd82ee4caaa0db1&SUBMIT_pause99_add_mod_insertit=1
