Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:43513
Return-Path: <mark@zzo.com>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 31585 invoked from network); 1 Sep 2005 16:53:41 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 1 Sep 2005 16:53:41 -0000
Received: (qmail 1301 invoked by uid 225); 1 Sep 2005 16:53:41 -0000
Delivered-To: modules@perl.org
Received: (qmail 1286 invoked by alias); 1 Sep 2005 16:53:40 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
Received: from omr4.netsolmail.com (HELO omr4.netsolmail.com) (216.168.230.140)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Thu, 01 Sep 2005 09:53:32 -0700
Received: from ms13.netsolmail.com (IDENT:mirapoint@[216.168.230.181])
	by omr4.netsolmail.com (8.12.10/8.12.10) with ESMTP id j81GrGeB029863;
	Thu, 1 Sep 2005 12:53:17 -0400 (EDT)
Received: from [172.30.19.238] (nat-corp.overture.com [216.52.229.254])
	by ms13.netsolmail.com (Mirapoint Messaging Server MOS 3.2.2-GA)
	with ESMTP id BPB23492;
	Thu, 1 Sep 2005 12:53:15 -0400 (EDT)
Message-ID: <431731FA.3060009@zzo.com>
Date: Thu, 01 Sep 2005 09:53:14 -0700
User-Agent: Mozilla Thunderbird 1.0.6 (Macintosh/20050716)
X-Accept-Language: en-us, en
MIME-Version: 1.0
To: modules@perl.org
CC: metzzo@cpan.org
Subject: Re: Module submission Perl::Strongly::Typed
References: <200509010002.j8102aZn010413@pause.perl.org>
In-Reply-To: <200509010002.j8102aZn010413@pause.perl.org>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Approved: news@nntp.perl.org
From: mark@zzo.com (Mark Ethan Trostler)

Perhaps this should really go into Variable::Strongly::Typed ???
& now that I look there there's 'Variable::Watcher' which is also similar.
	Mark

Perl Authors Upload Server wrote:
> The following module was proposed for inclusion in the Module List:
> 
>   modid:       Perl::Strongly::Typed
>   DSLIP:       bdppp
>   description: Declare strongly typed variables
>   userid:      METZZO (Mark Ethan Trostler)
>   chapterid:   2 (Language_Extensions)
>   communities:
> 
>   similar:
>     Tie::Constraint
> 
>   rationale:
> 
>     Wanted ability to 'lock-down' variables to specific types (both
>     primitive & object types) to minimize programmer error. Declarations
>     look like: my $int_only_variable :TYPE('int'); # OR my $file_io_only
>     :TYPE('IO::File'); # OR my @array_of_strings :TYPE('string'); # OR
>     my $scalar_ref :TYPE('SCALAR'); # OR my @array_of_array_refs
>     :TYPE('ARRAY'); # OR my %hash_of_hash_refs :TYPE('HASH'); # OR my
>     %hash_of_xml_parsers :TYPE('XML::Parser'); #OR my $my_own_darn_type
>     :TYPE(\&my_validation_function);
> 
>     Any variable (scalar, array, or hash) can be locked down to only
>     contain a certain type of variable - besides the 'builtin' types
>     ('int', 'string' (non-ref), 'SCALAR', 'HASH', 'ARRAY' (refs), and
>     any object type (like 'XML::Parser' or whatever), users can roll
>     their own by supplying a function ref which'll get called with the
>     value of whatever is attempting to be assigned to that variable.
>     Returning 1 means okay, returning 0 means no.
> 
>     If the assignment is refused Perl::Strongly::Typed croaks with an
>     informative message about what went wrong...
> 
>     thanks! Mark
> 
>   enteredby:   METZZO (Mark Ethan Trostler)
>   enteredon:   Thu Sep  1 00:02:36 2005 GMT
> 
> The resulting entry would be:
> 
> Perl::Strongly::
> ::Typed           bdppp Declare strongly typed variables             METZZO
> 
> 
> Thanks for registering,
