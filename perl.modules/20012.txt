Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:20012
Return-Path: <juerd@c3.convolution.nl>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 18830 invoked by uid 76); 30 Mar 2003 17:22:58 -0000
Received: from qmailr@one.develooper.com (HELO ran-out.mx.develooper.com) (64.81.84.115) by onion.perl.org (qpsmtpd/0.25) with SMTP; Sun, 30 Mar 2003 09:22:58 -0800
Received: (qmail 11690 invoked by uid 225); 30 Mar 2003 17:22:56 -0000
Delivered-To: modules@perl.org
Received: (qmail 11681 invoked by uid 507); 30 Mar 2003 17:22:55 -0000
Received: from c3.convolution.nl (HELO c3.convolution.nl) (217.71.121.90) by one.develooper.com (qpsmtpd/0.25) with SMTP; Sun, 30 Mar 2003 09:22:51 -0800
Received: (qmail 1242 invoked by uid 1000); 30 Mar 2003 17:22:48 -0000
Date: Sun, 30 Mar 2003 19:22:48 +0200
To: Autrijus Tang <autrijus@autrijus.org>
Cc: modules@perl.org
Subject: Re: Module submission again
Message-ID: <20030330172248.GG29079@c3.convolution.nl>
References: <200303251042.h2PAgXF21184@pause.perl.org> <20030330130910.GD29079@c3.convolution.nl> <20030330170832.GA3081@not.autrijus.org>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20030330170832.GA3081@not.autrijus.org>
User-Agent: Mutt/1.5.3i
X-SMTPD: qpsmtpd/0.25, http://develooper.com/code/qpsmtpd/
X-Spam-Check-By: one.develooper.com
X-Spam-Status: No, hits=-1.4 required=7.0 tests=CARRIAGE_RETURNS,IN_REP_TO,NO_REAL_NAME,QUOTED_EMAIL_TEXT,REFERENCES,SPAM_PHRASE_00_01,USER_AGENT,USER_AGENT_MUTT version=2.44
X-SMTPD: qpsmtpd/0.25, http://develooper.com/code/qpsmtpd/
Approved: news@nntp.perl.org
From: juerd@c3.convolution.nl

On Mon, Mar 31, 2003 at 01:08:32AM +0800, Autrijus Tang wrote:
> On Sun, Mar 30, 2003 at 03:09:10PM +0200, juerd@c3.convolution.nl wrote:
> > Note that the module is "again.pm". "again" in the subject is not to
> > indicate that it is yet another submission :)
> Can you differentiate your module with 
>     Module::Reload, Apache::Reload, Module::Reload::Selective?

I can.

Module::Reload reloads every module in %INC, and on demand only.
Apache::Reload is mod_perl-specific.
Module::Reload::Selective is much like again, but it's VERY heavy.

again Has cute pragma-like syntax and is much smaller (important
when developing mod_perl applications) than any of the three modules you
mention. It is C<use>d, so it only reloads when the code is evaluated,
which means modules can be loaded recursively I<if they B<choose> to reload
other modules>.

In my opinion, again is more perlish. Especially because of its
pragma-like name (compare C<use if>, C<use only>, C<use again>).


Regards,

Juerd
