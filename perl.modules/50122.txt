Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:50122
Return-Path: <hallta@gmail.com>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Delivered-To: moderator for modules@perl.org
Received: (qmail 14023 invoked from network); 2 Aug 2006 15:20:57 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 2 Aug 2006 15:20:57 -0000
Received: (qmail 16059 invoked by uid 225); 2 Aug 2006 15:20:57 -0000
Delivered-To: modules@perl.org
Received: (qmail 16055 invoked by alias); 2 Aug 2006 15:20:57 -0000
X-Spam-Status: No, hits=-2.4 required=8.0
	tests=BAYES_00,DK_SIGNED,DK_VERIFIED,DNS_FROM_RFC_ABUSE,HTML_MESSAGE,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: domain of hallta@gmail.com designates 64.233.182.191 as permitted sender)
Received: from nf-out-0910.google.com (HELO nf-out-0910.google.com) (64.233.182.191)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Wed, 02 Aug 2006 08:20:49 -0700
Received: by nf-out-0910.google.com with SMTP id x30so645792nfb
        for <modules@perl.org>; Wed, 02 Aug 2006 08:20:43 -0700 (PDT)
DomainKey-Signature: a=rsa-sha1; q=dns; c=nofws;
        s=beta; d=gmail.com;
        h=received:message-id:date:from:reply-to:to:subject:mime-version:content-type;
        b=kh+SdeQHM+ec3k/wYF1djpVo3AuKvrolXkReN9kKRpJihrn9LP6y497/0wsnaZD+hcSPX+tuKOj9LveM2D99KR4Krj33MiTDdQdDwMBmOIkKkUxvFtp63wegVjK+1k77VEfoRJnSLG5Eyc1VuQj07TZ5dUlJUBF/ma4PQjQAVQU=
Received: by 10.78.117.10 with SMTP id p10mr381781huc;
        Wed, 02 Aug 2006 08:20:42 -0700 (PDT)
Received: by 10.78.170.10 with HTTP; Wed, 2 Aug 2006 08:20:42 -0700 (PDT)
Message-ID: <389a8ad70608020820y39182faag1770d753ed6e30e3@mail.gmail.com>
Date: Wed, 2 Aug 2006 08:20:42 -0700
Reply-To: hallta@gmail.com
To: modules@perl.org
Subject: Re: Module submission Clone::More
MIME-Version: 1.0
Content-Type: multipart/alternative; 
	boundary="----=_Part_106638_15730874.1154532042220"
X-Virus-Checked: Checked
Approved: news@nntp.perl.org
From: hallta@gmail.com ("Trevor Hall")

------=_Part_106638_15730874.1154532042220
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

It's been a couple weeks since I've heard anything back from my reply
relative to my inquiry of Clone::More's name space registration.  I've
included the entire thread (mostly between Steffen and myself) relative to
the inquiry.  Please let me know if there are any questions and thanks
again!

>> My reply, in response to Steffen's query
Thank you for your reply, Steffeen!

Fundamentally, I would agree that a memory leak and similar small changes
should be a patch to an existing module; that was my original intent.
Though, while waiting for the author's responces (now nearing 3 months), I
have added much more to what started as a Base for clone.  Just a few:

 - Hooks - similar to that found in Storable
 - Fuller control of the cloning of ciruclar references
 - Potential Test integration with available boolean routines

Given this, the fact that I want to continue to build onto this framework,
plus the fact that there is no longer a bit of code left in Clone::More from
Clone's author - it doesn't appear to be a patch any more.  What are your
thoughts?

Subsiquently, I would like to see the maintenance of Clone get a little
better; I think it's a widely used module that gets little attention.  Given
the fact that I can't seem to get ahold of the author (I have tried nearly 5
different e-mail addresses, Google, WhitePages.com, perlmonks.org, for
nearly 3 months; with no avail), you mentioned I could get permission from
perl.modules to upload - would this be a one-time thing, or something
pernament moving forward?  The reason I ask is because I would be very
interested in becoming the maintainer of the module; perhaps giving it the
due attention needed.

Let me know you thoughts, and thank you again for your quick reply!

>> Reply from Steffen Meuller
Perl Authors Upload Server schrieb:
>     Rationale: Clone::More is intended to be an advanced version of
>     Clone. It is a compeltely re-factored version of the Clone module.
>     It reduces memory leaks, as well as adds support for the following
>     functionality:

I think this should really be a patch to Clone.pm <http://clone.pm/>. Fixing
memory leaks
and all. The usual course of events when you can't contact the author is to:
a) post to this list with an explanation of the situation,
b) try to contact the author via his CPAN mail and any other means
google might give you,
c) look out for the author in communities like perlmonks.org
d) After a few weeks post to this list again (if the author hasn't
reacted) and ask for permission to upload a new version of the module.

>> Original message below
The following module was proposed for inclusion in the Module List:

 modid:       Clone::More
 DSLIP:       adchp
 description: Natively copy Perl data structures
 userid:      WAZZUTEKE (Trevor Hall)
 chapterid:   6 (Data_Type_Utilities)
 communities:

 similar:
   Clone Scalar::Util Clone::PP Storable

 rationale:

   Rationale: Clone::More is intended to be an advanced version of
   Clone. It is a compeltely re-factored version of the Clone module.
   It reduces memory leaks, as well as adds support for the following
   functionality:

   * Clone hooks: Very similar to Stroable hooks. Will simply allow
   for a programatic interface, through XSUB callbacks, to dig into the
   'internals' and result of the Clone::More::clone() output. *
   Programatic cirular-referencing: Allows for a relatively rich
   interface to control how the Clone module will handle circular
   references when cloning such references * New ciruclar-reference
   checks: Potentially more for unit testing and the like; a new
   function 'is_circular' that will input a reference and return a
   boolean (1|0) value indicating whether the referant has a circular
   reference embedded within it, or if it its self is a circular
   reference. * Optimization Hacks: For those who feel comfortable
   hacking into the XS, I have designed the C portion to allow for
   simpe toggling of features in order to speed up the module (by a
   degree of 2-3x in some cases)

   Overall, it is and will continue to be the 'Clone' module, moving
   forward. It simply has 'More' functionality, hence the appending of
   'More' to the name space. Similar Module Discussion: - Clone: This
   module started as a patch for the Clone module. I found a relatively
   large memory leak with the last two (at least) releases. I have been
   attempting to converse with the author, Ray Finch, in applying a
   patch - mostly with no avail. I have not been able to contact him in
   nearly 2 months. - Scalar::Util: Only relative to the clone sub;
   though Clone::More allows for a richer interface and is faster. -
   Clone::PP: Well, this module is in Pure Perl rather than XS.
   Therefore, Clone::More has a richer interface as well as speed
   enhancements. - Storable: Relative to Strorable::dclone, is simply
   faster than serializing and de-serializing memory segments for
   cloning.

 enteredby:   WAZZUTEKE (Trevor Hall)
 enteredon:   Thu Jul 13 15:35:53 2006 GMT

The resulting entry would be:

Clone::
::More            adchp Natively copy Perl data structures
WAZZUTEKE


Thanks for registering,
--
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:

https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=7fb00000_0cdde095ed295145&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:

https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=7fb00000_0cdde095ed295145&SUBMIT_pause99_add_mod_insertit=1

------=_Part_106638_15730874.1154532042220
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

It's been a couple weeks since I've heard anything back from my reply relative to my inquiry of Clone::More's name space registration.&nbsp; I've included the entire thread (mostly between Steffen and myself) relative to the inquiry.&nbsp; Please let me know if there are any questions and thanks again!
<br><br>&gt;&gt; My reply, in response to Steffen's query<br>Thank you for your reply, Steffeen!<br><br>Fundamentally, I would agree
that a memory leak and similar small changes should be a patch to an
existing module; that was my original intent.&nbsp; Though, while waiting
for the author's responces (now nearing 3 months), I have added much
more to what started as a Base for clone.&nbsp; Just a few:
<br><br>&nbsp;- Hooks - similar to that found in Storable<br>&nbsp;- Fuller control of the cloning of ciruclar references<br>&nbsp;- Potential Test integration with available boolean routines<br><br>Given
this, the fact that I want to continue to build onto this framework,
plus the fact that there is no longer a bit of code left in Clone::More
from Clone's author - it doesn't appear to be a patch any more.&nbsp; What
are your thoughts?
<br><br>Subsiquently, I would like to see the maintenance of Clone get
a little better; I think it's a widely used module that gets little
attention.&nbsp; Given the fact that I can't seem to get ahold of the author
(I have tried nearly 5 different e-mail addresses, Google,
WhitePages.com, <a href="http://perlmonks.org/" target="_blank" onclick="return top.js.OpenExtLink(window,event,this)">perlmonks.org</a>,
for nearly 3 months; with no avail), you mentioned I could get
permission from perl.modules to upload - would this be a one-time
thing, or something pernament moving forward?&nbsp; The reason I ask is
because I would be very interested in becoming the maintainer of the
module; perhaps giving it the due attention needed.
<br><br>Let me know you thoughts, and thank you again for your quick reply!<br><br>&gt;&gt; Reply from Steffen Meuller<br><div style="direction: ltr;">Perl Authors Upload Server schrieb:<br></div><div style="direction: ltr;">
<span class="q">&gt; &nbsp; &nbsp; Rationale: Clone::More is intended to be an advanced version of<br>&gt; &nbsp; &nbsp; Clone. It is a compeltely re-factored version of the Clone module.<br>&gt; &nbsp; &nbsp; It reduces memory leaks, as well as adds support for the following
<br>&gt; &nbsp; &nbsp; functionality:<br><br></span></div>I think this should really be a patch to <a onclick="return top.js.OpenExtLink(window,event,this)" href="http://clone.pm/" target="_blank">Clone.pm</a>. Fixing memory leaks<br>
and all. The usual course of events when you can't contact the author is to:<br>a) post to this list with an explanation of the situation,<br>b) try to contact the author via his CPAN mail and any other means<br>google might give you,
<br>c) look out for the author in communities like <a onclick="return top.js.OpenExtLink(window,event,this)" href="http://perlmonks.org/" target="_blank">perlmonks.org</a><br>d) After a few weeks post to this list again (if the author hasn't
<br>reacted) and ask for permission to upload a new version of the module.<br><br>&gt;&gt; Original message below<br>The following module was proposed for inclusion in the Module List:<br><br>     &nbsp;modid: &nbsp; &nbsp; &nbsp; Clone::More
<br>     &nbsp;DSLIP: &nbsp; &nbsp; &nbsp; adchp<br>     &nbsp;description: Natively copy Perl data structures<br>     &nbsp;userid: &nbsp; &nbsp; &nbsp;WAZZUTEKE (Trevor Hall)<br>     &nbsp;chapterid: &nbsp; 6 (Data_Type_Utilities)<br> &nbsp;communities:<br><br> &nbsp;similar:<br>     &nbsp; &nbsp;Clone Scalar::Util Clone::PP Storable
<br><br> &nbsp;rationale:<br><br> &nbsp; &nbsp;Rationale: Clone::More is intended to be an advanced version of<br>     &nbsp; &nbsp;Clone. It is a compeltely re-factored version of the Clone module.<br> &nbsp; &nbsp;It reduces memory leaks, as well as adds support for the following
<br> &nbsp; &nbsp;functionality:<br><br>     &nbsp; &nbsp;* Clone hooks: Very similar to Stroable hooks. Will simply allow<br>     &nbsp; &nbsp;for a programatic interface, through XSUB callbacks, to dig into the<br> &nbsp; &nbsp;'internals' and result of the Clone::More::clone() output. *
<br>     &nbsp; &nbsp;Programatic cirular-referencing: Allows for a relatively rich<br> &nbsp; &nbsp;interface to control how the Clone module will handle circular<br>     &nbsp; &nbsp;references when cloning such references * New ciruclar-reference<br>
 &nbsp; &nbsp;checks: Potentially more for unit testing and the like; a new<br> &nbsp; &nbsp;function 'is_circular' that will input a reference and return a<br>     &nbsp; &nbsp;boolean (1|0) value indicating whether the referant has a circular<br> &nbsp; &nbsp;reference embedded within it, or if it its self is a circular
<br> &nbsp; &nbsp;reference. * Optimization Hacks: For those who feel comfortable<br> &nbsp; &nbsp;hacking into the XS, I have designed the C portion to allow for<br>     &nbsp; &nbsp;simpe toggling of features in order to speed up the module (by a<br>
 &nbsp; &nbsp;degree of 2-3x in some cases)<br><br> &nbsp; &nbsp;Overall, it is and will continue to be the 'Clone' module, moving<br> &nbsp; &nbsp;forward. It simply has 'More' functionality, hence the appending of<br> &nbsp; &nbsp;'More' to the name space. Similar Module Discussion: - Clone: This
<br> &nbsp; &nbsp;module started as a patch for the Clone module. I found a relatively<br> &nbsp; &nbsp;large memory leak with the last two (at least) releases. I have been<br> &nbsp; &nbsp;attempting to converse with the author, Ray Finch, in applying a
<br> &nbsp; &nbsp;patch - mostly with no avail. I have not been able to contact him in<br>     &nbsp; &nbsp;nearly 2 months. - Scalar::Util: Only relative to the clone sub;<br> &nbsp; &nbsp;though Clone::More allows for a richer interface and is faster. -
<br> &nbsp; &nbsp;Clone::PP: Well, this module is in Pure Perl rather than XS.<br> &nbsp; &nbsp;Therefore, Clone::More has a richer interface as well as speed<br>     &nbsp; &nbsp;enhancements. - Storable: Relative to Strorable::dclone, is simply<br>     &nbsp; &nbsp;faster than serializing and de-serializing memory segments for
<br> &nbsp; &nbsp;cloning.<br><br>     &nbsp;enteredby: &nbsp; WAZZUTEKE (Trevor Hall)<br>     &nbsp;enteredon: &nbsp; Thu Jul 13 15:35:53 2006 GMT<br><br>The resulting entry would be:<br><br>Clone::<br>::More &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;adchp Natively copy Perl data structures &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; WAZZUTEKE
<br><br><br>Thanks for registering,<br>--<br>The PAUSE<br><br>PS: The following links are only valid for module list maintainers:<br><br>Registration form with editing capabilities:<br> &nbsp;<a onclick="return top.js.OpenExtLink(window,event,this)" href="https://pause.perl.org/pause/authenquery?ACTION=add_mod&amp;USERID=7fb00000_0cdde095ed295145&amp;SUBMIT_pause99_add_mod_preview=1" target="_blank">
https://pause.perl.org/pause/authenquery?ACTION=add_mod&amp;USERID=7fb00000_0cdde095ed295145&amp;SUBMIT_pause99_add_mod_preview=1</a><br>Immediate (one click) registration:<br> &nbsp;<a onclick="return top.js.OpenExtLink(window,event,this)" href="https://pause.perl.org/pause/authenquery?ACTION=add_mod&amp;USERID=7fb00000_0cdde095ed295145&amp;SUBMIT_pause99_add_mod_insertit=1" target="_blank">
https://pause.perl.org/pause/authenquery?ACTION=add_mod&amp;USERID=7fb00000_0cdde095ed295145&amp;SUBMIT_pause99_add_mod_insertit=1</a>

------=_Part_106638_15730874.1154532042220--
