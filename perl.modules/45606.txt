Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:45606
Return-Path: <cpan@ali.as>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 2591 invoked from network); 29 Oct 2005 14:56:46 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 29 Oct 2005 14:56:46 -0000
Received: (qmail 22837 invoked by uid 225); 29 Oct 2005 14:56:46 -0000
Delivered-To: modules@perl.org
Received: (qmail 22830 invoked by alias); 29 Oct 2005 14:56:45 -0000
X-Spam-Status: No, hits=-4.4 required=8.0
	tests=ALL_TRUSTED,BAYES_00
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: neutral (x1.develooper.com: local policy)
Received: from x6.develooper.com (HELO lists.develooper.com) (63.251.223.186)
    by la.mx.develooper.com (qpsmtpd/0.28) with SMTP; Sat, 29 Oct 2005 07:56:42 -0700
Received: (qmail 2561 invoked by uid 515); 29 Oct 2005 14:56:38 -0000
To: modules@perl.org, Mark Tiefenbruck <pythagosaurus@gmail.com>
Message-ID: <43638D96.8040309@ali.as>
Date: Sun, 30 Oct 2005 00:56:22 +1000
User-Agent: Mozilla Thunderbird 1.0 (Windows/20041206)
X-Accept-Language: en-us, en
MIME-Version: 1.0
CC: modules@perl.org
Subject: Re: choosing a module namespace
References: <c96265a60510271844y73e0bfg4d17fe49d3880cc1@mail.gmail.com>	 <281020051235139880%comdog@panix.com> <43626CF0.3000709@ali.as> <c96265a60510281607l2ba7d4bu3ad1cfb7974624db@mail.gmail.com>
In-Reply-To: <c96265a60510281607l2ba7d4bu3ad1cfb7974624db@mail.gmail.com>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-Posted-By: 202.90.48.125
Approved: news@nntp.perl.org
From: cpan@ali.as (Adam Kennedy)

Mark Tiefenbruck wrote:
> Sorry for the trouble.  After a lot more searching, I found 
> Class::Classless, which seems to serve about the same purpose as mine.  
> I have already modified my code to use it, and it still works perfectly, 
> so Class::Classless certainly covers my needs.  I guess this is another 
> lesson in how two people can think about the same thing in completely 
> different terms.  This is what makes naming modules so difficult.
> 
> I have another module that uses classless objects to perform database 
> queries.  The objects represent tables, rather than having an entire 
> class represent a table, as in Class::DBI.  Thus, each object contains a 
> database handle, a table name, column names, and has public methods for 
> select, insert, delete, and update.  Is Class::Classless::DBI an 
> appropriate name for this, or would Class::Classless::DBI::Simple be better?

The former should be fine
