Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:4563
Return-Path: <nick@plum.flirble.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 26768 invoked from network); 26 Feb 2001 16:28:26 -0000
Received: from plum.flirble.org (exim@195.40.6.20)
  by tmtowtdi.perl.org with SMTP; 26 Feb 2001 16:28:26 -0000
Received: from nick by plum.flirble.org with local (Exim 3.20 #3)
	id 14XQVd-000CPZ-00
	for modules@perl.org; Mon, 26 Feb 2001 16:28:25 +0000
Date: Mon, 26 Feb 2001 16:28:25 +0000
To: modules@perl.org
Subject: name for module to require/use direct from zip files
Message-ID: <20010226162824.P23333@plum.flirble.org>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.2.5i
X-Organisation: Tetrachloromethane
Sender: Nicholas Clark <nick@plum.flirble.org>
Approved: news@nntp.perl.org
From: nick@ccl4.org (Nicholas Clark)

Based on the perlio layers to gunzip data streams and the under-documented
code-refs in @INC, I'm most of the way through writing an XS module that
allows you to require/use files direct from zip files (without temporary
files or subprocesses)

[although it should be possible to re-implement with 5.6.0 build using sfio]

I was intending to emulate the interface of lib.pm as closely as possible
so that the list passed to "use" would be taken as zip files to add to @INC,
and "no" would remove zip files.

To me, this feels like a pragmatic module.
The module list says that ex:: is the name-space used for experimental pragmas.
Would this make ex::lib::zip a suitable name for this module?

Thanks,

Nicholas Clark
