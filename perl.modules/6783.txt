Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:6783
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 62157 invoked from network); 30 Jul 2001 21:12:11 -0000
Received: from dubravka.kbx.de (HELO pause.perl.org) (root@212.40.160.59)
  by onion.valueclick.com with SMTP; 30 Jul 2001 21:12:11 -0000
Received: (from nobody@localhost)
	by pause.perl.org (8.9.3/8.9.3) id XAA18590;
	Mon, 30 Jul 2001 23:12:09 +0200
Date: Mon, 30 Jul 2001 23:12:09 +0200
Message-ID: <200107302112.XAA18590@pause.perl.org>
Reply-To: modules@perl.org
Subject: Module submission Filter::SQL
To: modules@perl.org, jsmith@cpan.org
X-Spam-Rating: onion.valueclick.com 1.6.2 0/1000/N
Approved: news@nntp.perl.org
From: upload@p11.speed-link.de ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Filter::SQL
  DSLIP:       idpfp
  description: Gives a regex style interface to SQL queries
  userid:      JSMITH (James G Smith)
  chapterid:    7 (Database_Interfaces)
  communities:
    dbi-users@perl.org

  similar:

  rationale:

    Some people are scared by the `complex' interface the DBI presents.
    By making a simpler syntax, people might be more likely to consider
    Perl for SQL work.

    For example, given proper setup (yet to be determined), the
    statement

    my(@results) = ($table, $user) =~ sql{SELECT * FROM ? WHERE
    username=?};

    will result in @results possibly being a tied array with access to
    the results of the SQL query. The bound elements are substituted in
    as usual, with $_ or @_ being the default argument(s) (yet to be
    determined).

  enteredby:   JSMITH (James G Smith)
  enteredon:   Mon Jul 30 21:12:09 2001 GMT

The resulting entry would be:

Filter::
::SQL             idpfp Gives a regex style interface to SQL queries JSMITH


Thanks for registering,
The Pause Team

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=b5000000_4a255b870734d401&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=b5000000_4a255b870734d401&SUBMIT_pause99_add_mod_insertit=1
