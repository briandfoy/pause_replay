Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:121
Return-Path: <robin@knowscape.com>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 19798 invoked from network); 20 Oct 1999 03:14:46 -0000
Received: from ltc.xcite.net (216.169.111.140)
  by tmtowtdi.perl.org with SMTP; 20 Oct 1999 03:14:46 -0000
Received: from sibyl (1Cust234.tnt10.nyc3.da.uu.net [63.23.131.234])
	by ltc.xcite.net id XAA25735;
	Tue, 19 Oct 1999 23:19:06 -0400
Message-ID: <4.1.19991019225640.00934f00@mail.knowscape.net>
X-Sender: know2@mail.knowscape.net
X-Mailer: QUALCOMM Windows Eudora Pro Version 4.1
Date: Tue, 19 Oct 1999 23:12:20 -0400
To: Stephen Zander <gibreel@pobox.com>
Subject: Re: CSS1 parser module - what to call it?
Cc: andreas.koenig@anima.de (Andreas J. Koenig),
        Stephen Zander <gibreel@pobox.com>, modules@perl.org
In-Reply-To: <87ln901duw.fsf@pooh.fire-swamp.net>
References: <andreas.koenig@anima.de's message of "18 Oct 1999 23:11:11 +0200">
 <87so381nyf.fsf@pooh.fire-swamp.net>
 <sfcln90fk7k.fsf@hohenstaufen.in-berlin.de>
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"
Approved: news@nntp.perl.org
From: robin@knowscape.com (Robin Berjon)

>Interesting.  The major difference as I see it is Robin's module
>doesn't provide CSS1 conformance automatically, the programmer must
>add the relevant callbacks to achieve this.

Ahaa, I see that the moment I finally manage to settle down somewhere in
the world and start working on my CSS::Parser module again (seriously, I
started a rework two days ago :-) someone else comes up with another
module. Let's not duplicate efforts, I've got a few ideas and I'm sure we
can merge what we've done.


>My parser is deliberately designed to meet the forward-compatible
>parsing guidelines in the standard.  See
><URL:http://www.w3.org/TR/REC-CSS1#forward-compatible-parsing>

The new parser that I'm nearly finished designing does nothing else but
parse CSS-style syntax. For instance, it recognizes nearly anything as a
valid selector. My idea was then to have CSS::CSS1, CSS::CSS2, CSS:CSS3,
CSS::STTS3 and potentially others subclass it and deal with the forward
compatibility (eg CSS::CSS1 would ignore some things that CSS::CSS2 would
not ignore and so forth). The new CSS::Parser doesn't care about the actual
content, it doesn't even see that a value contains an "!important" and
doesn't look into the selector, which is just a string that stops when the
block begins.


>I've cc'd Robin, perhaps we should just discuss it between the two of
>us.  Would CSS:CSS1::Parser be too long/complex/ugly?

Surely. May I see your code ? I can send you mine in it's present state.

PS: I just changed my Pause info to reflect my new email address,
robin@knowscape.com


.Robin
You can tune a piano, but you can't tuna fish.

