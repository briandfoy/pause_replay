Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:46370
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 5596 invoked from network); 9 Dec 2005 23:39:28 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 9 Dec 2005 23:39:28 -0000
Received: (qmail 13214 invoked by uid 225); 9 Dec 2005 23:39:28 -0000
Delivered-To: modules@perl.org
Received: (qmail 13207 invoked by alias); 9 Dec 2005 23:39:27 -0000
X-Spam-Status: No, hits=-2.5 required=8.0
	tests=BAYES_00,FORGED_RCVD_HELO
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
Received: from pause.fiz-chemie.de (HELO pause.perl.org) (195.149.117.110)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Fri, 09 Dec 2005 15:39:20 -0800
Received: from pause.perl.org (localhost [127.0.0.1])
	by pause.perl.org (8.13.4/8.13.4/Debian-3) with ESMTP id jB9Nd32K014606;
	Sat, 10 Dec 2005 00:39:03 +0100
Received: (from nobody@localhost)
	by pause.perl.org (8.13.4/8.13.4/Submit) id jB9Nd2Q0014597;
	Sat, 10 Dec 2005 00:39:02 +0100
Date: Sat, 10 Dec 2005 00:39:02 +0100
Message-ID: <200512092339.jB9Nd2Q0014597@pause.perl.org>
Subject: Module submission IMAP::Client
Reply-To: modules@perl.org
To: modules@perl.org, conteb@cpan.org
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       IMAP::Client
  DSLIP:       adpOp
  description: Full IMAP client library w/ referral support
  userid:      CONTEB (Brenden Conte)
  chapterid:   19 (Mail_and_Usenet_News)
  communities:
    nothing yet, but I lurk comp.lang.perl.misc, so it would likely be
    there.

  similar:
    Mail::IMAPClient IMAP::Admin Net::IMAP Net::IMAP::Simple

  rationale:

    I chose IMAP::Client because i intend this module to be a 'clear
    box' solution to working with an IMAP environment. The idea is that
    anything an IMAP client should be able to do, and any information
    available via the IMAP specs, should be available to a client
    interface and user (herein referred to as just 'the user'). This way
    the full strength of the IMAP protocol and data can be utilized,
    ideally in the most network-efficent manner possible, rather than
    being constrained to only a subset of commands or data-limited
    responses. (If the server says it, the client should be able to see
    it).

    The other idea is that IMAP::Client should take strides to be
    compatible with RFC, yet handle anticipated situations for the user
    rather than spitting an error saying 'try it this way instead' -
    such as the case with referrals. IMAP::Client will fully support
    referrals, and will transparently handle them for whatever command
    is issued to them (as long as the referral is for anonymous or the
    same user with same password - a new user or different password
    would require a new username/password to be obtained).

    The name, IMAP::Client, was chosen becaues the IMAP rootlevel
    namespace was available, and fit the module's purpose and
    functionality perfectly with Client attached. I had, at one time,
    considered using Net::IMAP::Advanced, however i decided against that
    for reasons specified below.

    An explaination of the other modules and their (lack of)
    suitability: - Mail::IMAPClient - while closely related, i felt that
    i could not add proper full fetch support without breaking
    compatibility. I also wished for a more straightforward API. -
    IMAP::Admin - Not designed to be an IMAP client. - Net::IMAP - Old,
    abandoned, and didn't work. - Net::IMAP::Simple - An interface far
    simpler than i wanted, i had originally intended to create a
    Net::IMAP::Advanced module which would be drop-in compatible with
    Net::IMAP::Simple, returning scalars or hashes, depending on the
    destination varaible (for example, select in Net::IMAP::Simple
    returns a scalar of the number of messages, whereas
    Net::IMAP::Advanced returns a hash of all SELECT data). As i
    developed, however, i decided against it since i was writing my own
    functions and not using Net::IMAP::Simple's methods - thus, I would
    then be responsible for updating my module if Net::IMAP::Simple
    changed its iterface or added a method, solely for the purpose of
    remaining compatible (versus an actual improvement or bugfix).

    Thank you.

  enteredby:   CONTEB (Brenden Conte)
  enteredon:   Fri Dec  9 23:38:56 2005 GMT

The resulting entry would be:

IMAP::
::Client          adpOp Full IMAP client library w/ referral support CONTEB


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=ffb00000_20da87b460765379&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=ffb00000_20da87b460765379&SUBMIT_pause99_add_mod_insertit=1
