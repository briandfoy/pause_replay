Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:44051
Return-Path: <kane@xs4all.net>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 22261 invoked from network); 14 Sep 2005 11:29:03 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 14 Sep 2005 11:29:03 -0000
Received: (qmail 22006 invoked by uid 225); 14 Sep 2005 11:29:03 -0000
Delivered-To: modules@perl.org
Received: (qmail 22001 invoked by alias); 14 Sep 2005 11:29:02 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
Received: from smtp-vbr5.xs4all.nl (HELO smtp-vbr5.xs4all.nl) (194.109.24.25)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Wed, 14 Sep 2005 04:28:55 -0700
Received: from [192.168.2.2] (perl.xs4all.nl [80.127.35.68])
	by smtp-vbr5.xs4all.nl (8.13.3/8.13.3) with ESMTP id j8EBSdcf092150;
	Wed, 14 Sep 2005 13:28:39 +0200 (CEST)
	(envelope-from kane@xs4all.net)
In-Reply-To: <20050914093720.GD12658@c4.convolution.nl>
References: <20050914093720.GD12658@c4.convolution.nl>
Mime-Version: 1.0 (Apple Message framework v622)
Content-Type: text/plain; charset=US-ASCII; format=flowed
Message-ID: <a8ffe392a9e912d3300a473a565abe72@xs4all.net>
Content-Transfer-Encoding: 7bit
Cc: modules@perl.org
Subject: Re: DBIx::Simple::OO
Date: Wed, 14 Sep 2005 13:28:35 +0200
To: Juerd <juerd@convolution.nl>
X-Mailer: Apple Mail (2.622)
X-Virus-Scanned: by XS4ALL Virus Scanner
Approved: news@nntp.perl.org
From: kane@xs4all.net ("Jos I. Boumans")


On Sep 14, 2005, at 11:37 AM, Juerd wrote:

> Hi Kane,
>
> by accident I just saw your DBIx::Simple::OO. I like it.
>
> It is somewhat disappointing, though, that you didn't discuss this with
> me. I know that I can't claim control over a CPAN namespace, and that
> you like to use the openness of CPAN to your advantage, but I am
> convinced that we could reach a better product if we work together. And
> we could have begun to work together much sooner if you had 
> communicated
> your thoughts.

It filled a need for me when i had it, and took no more than 30 minutes 
to complete. Not much extensive planning or time for discussion there; 
I saw a
module that did almost what i needed and built on that.

> Specifically, I'd like to somehow use your module automatically.
>
> DBIx::Simple uses all sorts of modules when they are needed, cutting
> dramatically in the number of use|require statements the user needs to
> type and think about.
>
> Because your current implementation simply injects methods into
> DBIx::Simple::Result, I'd have to replace the called method and call it
> again, which I think is a very ugly thing to do.

I'm not sure i follow here. If you want to use it 'automagically' you 
can
use DBIx::Simple::OO from DBIx::Simple itself.

> Would it be a problem for you to keep the methods in your own 
> namespace,
> so that I can release a new DBIx::Simple, that has the "object" and
> "objects" methods already there, loading your module and calling your
> methods?

Yes, that's a problem as your module doesn't seem to allow such a thing 
(it's
the first thing i tried, but it seems i have to add methods to the 
DBIx::Simple::Result class to add functionality to the objects returned 
from queries).

I'm of course open to changing this if you can tell me how it can be 
made to work.


--

Jos Boumans

	"We are not far from the kind of moral decay that has brought on the 
	fall of other nations and peoples" - Senator Barry Goldwater, 1964
	
	CPANPLUS	http://cpanplus.sf.net

