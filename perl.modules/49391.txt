Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:49391
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 1932 invoked from network); 13 Jun 2006 21:13:16 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 13 Jun 2006 21:13:16 -0000
Received: (qmail 22151 invoked by uid 225); 13 Jun 2006 21:13:15 -0000
Delivered-To: modules@perl.org
Received: (qmail 22147 invoked by alias); 13 Jun 2006 21:13:15 -0000
X-Spam-Status: No, hits=-2.5 required=8.0
	tests=BAYES_00,FORGED_RCVD_HELO
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
Received: from pause.fiz-chemie.de (HELO pause.perl.org) (195.149.117.110)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Tue, 13 Jun 2006 14:13:04 -0700
Received: from pause.perl.org (localhost.localdomain [127.0.0.1])
	by pause.perl.org (8.13.4/8.13.4/Debian-3sarge1) with ESMTP id k5DLCf9a026767;
	Tue, 13 Jun 2006 23:12:41 +0200
Received: (from nobody@localhost)
	by pause.perl.org (8.13.4/8.13.4/Submit) id k5DLCfWs026766;
	Tue, 13 Jun 2006 23:12:41 +0200
Date: Tue, 13 Jun 2006 23:12:41 +0200
Message-ID: <200606132112.k5DLCfWs026766@pause.perl.org>
Subject: Module submission Math::Interpolator
Reply-To: modules@perl.org
To: modules@perl.org, zefram@cpan.org
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Math::Interpolator
  DSLIP:       RdpOp
  description: interpolate between lazily-evaluated points
  userid:      ZEFRAM (Andrew Main (Zefram))
  chapterid:   6 (Data_Type_Utilities)
  communities:

  similar:
    Math::Interpolate

  rationale:

    This module does interpolation with lazy evaluation. That is, the
    point list need not be fully determined for interpolation to occur.
    The point list (with its partially evaluated state) and choice of
    interpolation algorithm are encapsulated as an object. There are
    methods to call to perform interpolations. The name "interpolator"
    describes this object.

    The existing module Math::Interpolate does the interpolation aspect
    of this job, but it requires all the points to be supplied up front
    (eager evaluation) and its interface is functional. It is the former
    aspect that led me to write Math::Interpolator.

  enteredby:   ZEFRAM (Andrew Main (Zefram))
  enteredon:   Tue Jun 13 21:12:40 2006 GMT

The resulting entry would be:

Math::
::Interpolator    RdpOp interpolate between lazily-evaluated points  ZEFRAM


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=0ae00000_9a878a2f5dd02499&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=0ae00000_9a878a2f5dd02499&SUBMIT_pause99_add_mod_insertit=1
