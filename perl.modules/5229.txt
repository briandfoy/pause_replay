Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:5229
Return-Path: <darren@DarrenDuncan.net>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 16320 invoked from network); 24 Apr 2001 20:05:11 -0000
Received: from palladium.baremetal.com (208.184.111.7)
  by tmtowtdi.perl.org with SMTP; 24 Apr 2001 20:05:11 -0000
Received: from [24.64.199.254] (h24-64-199-254.gv.shawcable.net [24.64.199.254])
	by palladium.baremetal.com (8.9.3/8.9.3) with ESMTP id NAA03312;
	Tue, 24 Apr 2001 13:04:14 -0700
Mime-Version: 1.0
Message-ID: <f04320404b70b8826ad23@[24.64.199.254]>
In-Reply-To: <200104210840.KAA28141@pause.kbx.de>
References: <200104210840.KAA28141@pause.kbx.de>
Date: Tue, 24 Apr 2001 13:05:04 -0700
To: modules@perl.org
Subject: Re: Module submission HTML::Application
Cc: duncand@cpan.org
Content-Type: text/plain; charset="us-ascii" ; format="flowed"
Approved: news@nntp.perl.org
From: darren@DarrenDuncan.net (Darren Duncan)

As a follow-up to my module registration request 3 days ago, I would 
like to say that I released new versions of HTML-Application-0.4 and 
duncand-prerelease-0.4 which have had a lot more usability tests done 
and are shown to be working properly.  The duncand-prerelease 
distribution shows 9 examples of HTML::Application in use, so you can 
have a better idea how it is used in practical situations.  Those 
examples are better documented now, also.

My module is also now in beta status up from alpha, and would read like:

HTML::
::Application     bdpO Framework for complex portable web apps      DUNCAND

So please let me know if there are any other issues that I need to 
deal with before you can register my HTML::Application module, and/or 
whether you think there is a better name I should use for it.  Maybe 
I should use the text multiple-screen in there somewhere.  I am also 
wondering whether it should go in the CGI::* namespace or not, since 
it isn't strictly tied to HTML but it also doesn't do any input or 
output by itself.

On another front, I discovered another module which was "similar" to 
mine, and that is CGI::MxScreen.  I didn't include this before since 
the module list said it was under construction and its link was 
grayed out.  But since then I found it on CPAN and it seems to be 
available.  So I can say that my module is different from this one in 
these ways:
	- CGI::MxScreen appears to want to do it all and in that 
respect is more complex than my module.
	- CGI::MxScreen is built on top of the complex CGI.pm module 
and mine isn't really built on anything.
	- while we both do multiple screen interfaces, mine are 
hierarchical and the other one appears not to be
	- lots of other differences
	- while I have developed a number of other modules that can 
be used effectively with HTML::Application, I have released them in 
separate distributions so its easier for people to take only what 
they need, whereas CGI::MxScreen bundles all sorts of HTML widgits 
and data persistence with it.
	- I can't say how much portability of derived apps are with 
CGI::MxScreen but it is big with mine.

Also, it is conceivable that I could split my module into several 
smaller ones that work in a subclass relationship, since it does 
several tasks in parallel that conceivably (but not necessarily) are 
separate, but I don't know if that will make the module harder to use 
or not.

Thank you,

// Darren Duncan

At 10:40 AM +0200 4/21/01, Perl Authors Upload Server wrote:
>The following module was proposed for inclusion in the Module List:
>
>   modid:       HTML::Application
>   DSLI:        adpO
>   description: Framework for complex portable web apps
>   userid:      DUNCAND (Darren Duncan)
>   chapterid:   15 (World_Wide_Web_HTML_HTTP_CGI)
>   communities:
>     mailing lists, individuals
