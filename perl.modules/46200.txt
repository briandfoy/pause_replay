Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:46200
Return-Path: <joe.yates@tin.it>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Delivered-To: moderator for modules@perl.org
Received: (qmail 22874 invoked from network); 30 Nov 2005 15:51:48 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 30 Nov 2005 15:51:48 -0000
Received: (qmail 30222 invoked by uid 225); 30 Nov 2005 15:51:47 -0000
Delivered-To: modules@perl.org
Received: (qmail 30218 invoked by alias); 30 Nov 2005 15:51:47 -0000
X-Spam-Status: No, hits=0.0 required=8.0
	tests=BAYES_50
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
Received: from vsmtp1.tin.it (HELO vsmtp1.tin.it) (212.216.176.141)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Wed, 30 Nov 2005 07:51:40 -0800
Received: from pswm16.cp.tin.it (192.168.70.64) by vsmtp1.tin.it (7.2.060.1)
        id 438C249100133A6B; Wed, 30 Nov 2005 16:51:27 +0100
Message-ID: <13773212.1133365878502.JavaMail.root@pswm16.cp.tin.it>
Date: Wed, 30 Nov 2005 16:51:18 +0100 (GMT+01:00)
Reply-To: "joe.yates@tin.it" <joe.yates@tin.it>
To: modules@perl.org
Subject: R: Re: Module submission Database::Wrapper
Mime-Version: 1.0
Content-Type: text/plain;charset="UTF-8"
Content-Transfer-Encoding: 7bit
X-Originating-IP: 81.211.183.193
Approved: news@nntp.perl.org
From: joe.yates@tin.it ("joe.yates@tin.it")

brian d foy wrote:
>From: comdog@panix.com
>Date: 28-nov-2005 4.21 AM
>To: <JOEYATES@cpan.org>
>Subject: Re: Module submission Database::
Wrapper
>
>In article <200511262251.jAQMpd1b013957@pause.perl.org>, 
Perl Authors
>Upload Server <upload@pause.perl.org> wrote:
>
>> The 
following module was proposed for inclusion in the Module List:
>> 
>>   modid:       Database::Wrapper
>>   DSLIP:       MnpOp
>>   
description: An SQL-friendly DBI wrapper
>>   userid:      JOEYATES 
(Joe Yates)
>>   chapterid:   7 (Database_Interfaces)
>>   communities:
>> 
>>   similar:
>>     DBIx::Wrapper
>> 
>>   rationale:
>> 
>>     
This module wraps DBI, providing a simple interface. It offers
>>     
automatic query caching and call-by-label, a selection of possible
>>     return types, and simple data dafinition related methods, e.g.
>>     GetTables().
>
>why Database::* rather than DBIx::* ?
>
>how is 
this different than DBIx::Wrapper?

Dear Brian,

I understand your 
question. In short, my answer is TMTOWTDI.

The long answer follows:

I 
personally find DBIx no easier than DBI. A small community of us have 
been using this Wrapper for about 3 years and we are very happy with 
it.

In common usage, the essential difference between DBIx and 
Database::Wrapper, is that in Database::Wrapper you use plain SQL and 
specify the return type you want, while DBIx tries to be a DBI wrapper 
AND an SQL wrapper.

DBIx does of course allow for plain SQL, but, as I 
said earlier, I don't like the design choices, you execute and then 
work on the rowset object returned. (I understand that working in this 
way is more sensible with very large rowsets)

Anyway, I think there is 
room for more than one Database API in perl, and it was for that reason 
that I submitted my code.

Thankyou for your interest,
Joe Yates

