Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:11477
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 36369 invoked by uid 76); 1 May 2002 15:46:03 -0000
Received: from root@dubravka.kbx.de (HELO pause.perl.org) (212.40.160.59)
  by onion.perl.org (qpsmtpd/0.07) with SMTP; Wed May  1 15:46:03 2002 -0000
Received: (from nobody@localhost)
	by pause.perl.org (8.9.3/8.9.3) id RAA03086;
	Wed, 1 May 2002 17:45:59 +0200
Date: Wed, 1 May 2002 17:45:59 +0200
Message-ID: <200205011545.RAA03086@pause.perl.org>
Reply-To: modules@perl.org
Subject: Module submission Convert::Binary::C
To: modules@perl.org, mhx@cpan.org
Approved: news@nntp.perl.org
From: upload@p11.speed-link.de ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Convert::Binary::C
  DSLIP:       adhOp
  description: Binary Data Conversion using C Types
  userid:      MHX (Marcus Holland-Moritz)
  chapterid:   17 (Archiving_and_Compression)
  communities:

  similar:
    C::Include

  rationale:

    There's already a root namespace 'Convert', which is obviously the
    best for a module that deals with data conversion. 'Binary' is
    because the module converts between binary data and Perl data
    structures. 'C' is because C data type definitions are used to
    describe the conversion. The module name was suggested by Mark
    Overmeer, and a lot of people (including myself) liked it a lot
    better than the name I chose initially.

    The module includes a preprocessor, scanner & parser that extract
    all information about enum's, struct's, union's and typedef's from C
    source code and allows to use this information primarily to pack and
    unpack data through an (hopefully) easy to use OO interface. The
    module is (almost) completely written in XS and builds on all
    platforms that I've been able to test it on (these include Win32,
    Cygwin, Linux and HP-UX).

    The module should be in the module list because there's currently
    only one similar module available (C::Include) which lacks a lot of
    the functionality provided by Convert::Binary::C.

    If you want to have a look at the manpage, a recent online version
    is available at:

    http://www-stud.fh-fulda.de/~fd9099/download/Convert-Binary-C.html

  enteredby:   MHX (Marcus Holland-Moritz)
  enteredon:   Wed May  1 15:45:59 2002 GMT

The resulting entry would be:

Convert::Binary::
::C               adhOp Binary Data Conversion using C Types         MHX


Thanks for registering,
The Pause Team

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=b8100000_903d8ee0698ecfa1&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=b8100000_903d8ee0698ecfa1&SUBMIT_pause99_add_mod_insertit=1
