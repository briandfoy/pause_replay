Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:74102
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 13078 invoked from network); 21 Dec 2010 17:50:26 -0000
Received: from x1.develooper.com (207.171.7.70)
  by x6.develooper.com with SMTP; 21 Dec 2010 17:50:26 -0000
Received: (qmail 11020 invoked by uid 225); 21 Dec 2010 17:50:26 -0000
Delivered-To: modules@perl.org
Received: (qmail 11016 invoked by alias); 21 Dec 2010 17:50:26 -0000
X-Spam-Status: No, hits=0.0 required=8.0
	tests=
X-Spam-Check-By: la.mx.develooper.com
Received: from pause.fiz-chemie.de (HELO pause.fiz-chemie.de) (195.37.231.65)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Tue, 21 Dec 2010 09:50:24 -0800
Received: from pause.fiz-chemie.de (localhost.localdomain [127.0.0.1])
	by pause.fiz-chemie.de (8.13.8/8.13.8/Debian-3) with ESMTP id oBLHnNbA011576;
	Tue, 21 Dec 2010 18:49:23 +0100
Received: (from nobody@localhost)
	by pause.fiz-chemie.de (8.13.8/8.13.8/Submit) id oBLHnN0x011564;
	Tue, 21 Dec 2010 18:49:23 +0100
Date: Tue, 21 Dec 2010 18:49:23 +0100
Message-ID: <201012211749.oBLHnN0x011564@pause.fiz-chemie.de>
Subject: Module submission TCPServer::Interface
Reply-To: modules@perl.org
To: modules@perl.org, kan@cpan.org
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       TCPServer::Interface
  DSLIP:       MdpOp
  description: a generic multithreaded tcp server interface
  userid:      KAN (Kan Liu)
  chapterid:   16 (Server_and_Daemon_Utilities)
  communities:
    chatrooms

  similar:

  rationale:

    a generic multithreaded tcp server interface

    A server listens for and accepts incoming TCP connections on a port
    or a Unix domain socket. And a pool of threads are created to handle
    the connections in parallel. The server code handling the
    connections is to be implemented in the inheriting class.

    A more sophisticated implementation may require serialization in
    processing requests, e.g. logging. There must be a dedicated worker
    thread that serially processes requests from the server threads.

    Hence _server() is the interface method to be implemented, and
    _worker() is an optional interface method. If _worker() is
    inplemented, each _server() thread needs to communicate with it via
    a pair of queues for two-way communication.

  enteredby:   KAN (Kan Liu)
  enteredon:   Tue Dec 21 17:49:22 2010 GMT

The resulting entry would be:

TCPServer::
::Interface       MdpOp a generic multithreaded tcp server interface KAN


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=f1600000_bd345f1534911433&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=f1600000_bd345f1534911433&SUBMIT_pause99_add_mod_insertit=1
Peek at the current permissions:
  https://pause.perl.org/pause/authenquery?pause99_peek_perms_by=me&pause99_peek_perms_query=TCPServer%3A%3AInterface
