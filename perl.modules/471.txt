Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:471
Return-Path: <jdporter@min.net>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 11219 invoked from network); 4 Nov 1999 22:44:45 -0000
Received: from min.net (jdporter@208.222.210.19)
  by tmtowtdi.perl.org with SMTP; 4 Nov 1999 22:44:45 -0000
Received: (from jdporter@localhost)
	by min.net (8.9.3/8.9.3) id RAA09210;
	Thu, 4 Nov 1999 17:44:37 -0500 (EST)
Date: Thu, 4 Nov 1999 17:44:37 -0500
To: Tim Bunce <Tim.Bunce@ig.co.uk>
Cc: modules@perl.org, Michael G Schwern <schwern@pobox.com>
Subject: Re: Tie::Cache::LRU
Message-ID: <19991104174437.E3043@min.net>
References: <sfciu3nv4y1.fsf@hohenstaufen.in-berlin.de> <19991102144605.C23528@min.net> <19991103004139.K18518@ig.co.uk> <sfcso2nlwl7.fsf@hohenstaufen.in-berlin.de> <19991103163330.A5253@toldyouso.com> <19991104094159.A3043@min.net> <19991104210730.D2171@ig.co.uk>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Mailer: Mutt 0.95.1us
In-Reply-To: <19991104210730.D2171@ig.co.uk>; from Tim Bunce on Thu, Nov 04, 1999 at 09:07:30PM +0000
Approved: news@nntp.perl.org
From: jdporter@min.net (John Porter)

Tim Bunce wrote:
> On Thu, Nov 04, 1999 at 09:41:59AM -0500, John Porter wrote:
> > 
> > It occurs to me that the essential problem is that :: has two
> > different meanings.  The first :: in Tie::Cache::LRU is semantically
> > different from the second, because you could s/Tie::Cache/TieCache/
> > (or even s/Tie::Cache/Fubar/) without changing the meaning the code. 
> > In this case :: is simply a namespace "path separator".  The second
> > and subsequent occurrences of :: indicate things that live in that
> > namespace, including is-a relationships between things.
> 
> Larry has specifically said that :: should _not_ be taken to denote an
> is-a relationship, in general.
> 
> The perlmod pod says:
> 
>      Packages may be nested inside other packages:
>      $OUTER::INNER::var.  This implies nothing about the order of name
>      lookups, however.  All symbols are either local to the current
>      package, or must be fully qualified from the outer package name
>      down.  For instance, there is nowhere within package OUTER that
>      $INNER::var refers to $OUTER::INNER::var.  It would treat package
>      INNER as a totally separate global package.

As someone said, "history is littered with accidents".

:: is used to denote is-a all over the place.
It's a fact we have to face.

-- 
John Porter

