Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:48671
Return-Path: <cpan@ali.as>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 12734 invoked from network); 3 May 2006 18:44:33 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 3 May 2006 18:44:33 -0000
Received: (qmail 30473 invoked by uid 225); 3 May 2006 18:44:33 -0000
Delivered-To: modules@perl.org
Received: (qmail 30464 invoked by alias); 3 May 2006 18:44:32 -0000
X-Spam-Status: No, hits=-4.4 required=8.0
	tests=ALL_TRUSTED,BAYES_00
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: neutral (x1.develooper.com: local policy)
Received: from x6.develooper.com (HELO lists.develooper.com) (63.251.223.186)
    by la.mx.develooper.com (qpsmtpd/0.28) with SMTP; Wed, 03 May 2006 11:44:30 -0700
Received: (qmail 12717 invoked by uid 515); 3 May 2006 18:44:24 -0000
Message-ID: <20060503184424.12716.qmail@lists.develooper.com>
To: modules@perl.org
Date: Thu, 04 May 2006 04:41:31 +1000
User-Agent: Thunderbird 1.5.0.2 (Windows/20060308)
MIME-Version: 1.0
Subject: Re: Module submission Time::Decimal
References: <200605011449.k41Enfav017244@pause.perl.org> <020520061045097467%brian.d.foy@gmail.com>
In-Reply-To: <020520061045097467%brian.d.foy@gmail.com>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-Posted-By: 58.178.59.219
Approved: news@nntp.perl.org
From: cpan@ali.as (Adam Kennedy)

brian d foy wrote:
> [[ This message was both posted and mailed: see
>    the "To," "Cc," and "Newsgroups" headers for details. ]]
> 
> In article <200605011449.k41Enfav017244@pause.perl.org>, Perl Authors
> Upload Server <upload@pause.perl.org> wrote:
> 
>> The following module was proposed for inclusion in the Module List:
>>
>>   modid:       Time::Decimal
>>   DSLIP:       adphp
>>   description: Handle french revolutionary time
>>   userid:      PFEIFFER (Daniel Pfeiffer)
>>   chapterid:   6 (Data_Type_Utilities)
> 
>>   similar:
>>     DateTime::Calendar::FrenchRevolutionary
>>
>>   rationale:
>>
>>     Unlike the above module, my name centers on functionality rather
>>     than history. Also the DateTime hierarchy does not fit for this
>>     functionality. That is because it explicitly uses integral seconds
>>     granularity which is hardly capable of handling a time scheme with
>>     seconds of a slightly different length.
> 
> Does your module do something that the DateTime version can't? Since
> both modules have to deal with the same computer clock and math
> operations, can you fix any round-off errors in the DateTime version,
> rather than creating a new module?
> 
> I think it would be much better to improve the DateTime version instead
> of making a new module and creating another development path. :)

Daniel

I'd actually like to approve this, and I disagree with my learned 
colleague. I've done some reading into rational geometry, and so I'm 
fairly comfortable with the idea that expressing time in your 
non-equivalent units has value.

That at the very least, converting IN from DateTime or something else 
(if needed), doing your datetime math in integers, and then converting 
back out _once_ at the end (if needed) is a valid approach to solving 
time math of this sort without amplifying errors.

But like Brian, I've also seen a LOT of bad duplicate datetime 
implementations (I've even done one myself, that fortunately didn't 
escape to CPAN).

I think we'd both be encouraged to know you'd already talked to Dave 
Rolsky first (and preferably he concurred with you), since the 
DateTime:: modules are an enormous body of work, and Dave is pretty much 
on top of the situation with Date and Time issues.

Even if after talking to him you guys end up disagreeing, I'm still 
happy to approve, since it's not our job to get too restrictive. But we 
do apply a sanity filter, and so I'd like to know there'd been some 
consultation with the rest of the DateTime community.

Adam K
