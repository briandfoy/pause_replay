Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:54850
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 25481 invoked from network); 13 Jun 2007 14:02:00 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 13 Jun 2007 14:02:00 -0000
Received: (qmail 15799 invoked by uid 225); 13 Jun 2007 14:01:59 -0000
Delivered-To: modules@perl.org
Received: (qmail 15786 invoked by alias); 13 Jun 2007 14:01:58 -0000
X-Spam-Status: No, hits=-1.1 required=8.0
	tests=BAYES_05,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
Received: from pause.fiz-chemie.de (HELO pause.perl.org) (195.149.117.110)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Wed, 13 Jun 2007 07:01:54 -0700
Received: from pause.perl.org (localhost.localdomain [127.0.0.1])
	by pause.perl.org (8.13.4/8.13.4/Debian-3sarge3) with ESMTP id l5DE1mxq003297
	for <modules@perl.org>; Wed, 13 Jun 2007 16:01:48 +0200
Received: (from nobody@localhost)
	by pause.perl.org (8.13.4/8.13.4/Submit) id l5DE1mEH003296;
	Wed, 13 Jun 2007 16:01:48 +0200
Date: Wed, 13 Jun 2007 16:01:48 +0200
Message-ID: <200706131401.l5DE1mEH003296@pause.perl.org>
Subject: Module submission XML::Bare
Reply-To: modules@perl.org
To: modules@perl.org
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       XML::Bare
  DSLIP:       bdhOp
  description: Minimal XML parser in C++
  userid:      CODECHILD (David Helkowski)
  chapterid:   11 (String_Lang_Text_Proc)
  communities:

  similar:
    XML::Simple XML::Parser

  rationale:

    There is a need for an XML parser that can create a subset perl
    hash out of XML files, and do so quickly and efficiently without
    tying to many other modules are pieces.

    There are many different modules which create a complex interface
    to various pre-existing XML libraries written in C, as well as
    modules that avoid using libraries and are written purely in perl,
    but none that blend a minimal amount of C and Perl together.

    The goal of XML::Bare is to fill this gap by writing a 'bare' xml
    processor in C++, with a short amount of glue to create perl hashes
    from the processed XML.

    To this end I have written an XML parser in C++ that is a simple
    state engine... no callbacks or complex conditions. Essentially just
    20 states that quickly generate a basic XML tree.

    I have connected that XML parser to perl, to create a useful perl
    hash, that essentially just runs through the created tree in order,
    creating a hash as it goes.

    The resulting combination of these features allows XML::Bare to
    load and parse 'bare' XML two to three times faster than existing
    modules such as XML::Simple.

    In addition to the speed and simplicity of this new module, it will
    be possible with a little more work to make it parse 'mixed' XML as
    well. Currently there is no existing module that creates a perl hash
    from 'mixed' XML.

    In fact, as the module stands now, mixed XML is parsed for 1
    contiguous string besides subnodes, which is more than XML::Simple
    does.

  enteredby:   CODECHILD (David Helkowski)
  enteredon:   Wed Jun 13 14:01:48 2007 GMT

The resulting entry would be:

XML::
::Bare            bdhOp Minimal XML parser in C++                    CODECHILD


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=3f110000_884e931d20d86b9b&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=3f110000_884e931d20d86b9b&SUBMIT_pause99_add_mod_insertit=1
