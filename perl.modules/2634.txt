Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:2634
Return-Path: <root@fountainhead.vipul.net>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 21919 invoked from network); 9 Aug 2000 23:03:44 -0000
Received: from munitions2.xs4all.nl (root@194.109.217.74)
  by tmtowtdi.perl.org with SMTP; 9 Aug 2000 23:03:44 -0000
Date: Thu, 10 Aug 2000 04:38:38 +0530
To: "Kurt D. Starsinic" <kstar@chapin.edu>
Cc: modules@perl.org
Subject: Re: Namespace registration.
Message-ID: <20000810043838.C1449@fountainhead.vipul.net>
Reply-To: mail@vipul.net
References: <20000804210002.A29878@shell2.ba.best.com> <20000809123429.C8774@O2.chapin.edu>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Mailer: Mutt 1.0i
In-Reply-To: <20000809123429.C8774@O2.chapin.edu>; from kstar@chapin.edu on Wed, Aug 09, 2000 at 12:34:29PM -0400
X-Operating-System: Linux fountainhead.vipul.net 2.2.16
X-PGP-Fingerprint: D5F78D9FC694A45A00AE086062498922
Approved: news@nntp.perl.org
From: mail@vipul.net (Vipul Ved Prakash)

On Wed, Aug 09, 2000 at 12:34:29PM -0400, Kurt D. Starsinic wrote:
> > 1 Tie::SecretHash - Serializable tied hashes (and objects based on hashes)
> >   with transparently encrypted fields.
> 
>     Tie::EncryptedHash, perhaps?  There's nothing secret about the hash,
> is there?

True.  Secrecy is a function of data not the data structure.  SecretHash is
a bit of an intentional artistic slip; it sounds nicer to me than
EncryptedHash, which is also a tad too long.  I also detest writing "the
encrypted keys of an Encrypted hash are encrypted when the password is set"
so I went with SecretHash, which made for better discourse.  Nevertheless,
if you feel SecretHash is semantically confusing I'll change it to
EncryptedHash; it'll entail a bit of a documentation re-write though.
Tie::SecretHash 1.0 is written, packaged, and ready for upload.  :-)

> > 2 Crypt::Key - A generic cryptographic key. (Crypt::Keys is registered under
> >   my name, but the module has a singular Key.  Sorry.)
> 
>     Could you say more about this?  What is a `generic' cryptographic key?

Crypt::Key provides common key management services required by most crypto
algorithm implementations.  These include (de)serialization, encrypted
compartments for storing secret keys, association of identity and signature
information with keys, etc.

Here's a skeleton Crypt::Key object:

my %KEY = (                     
    Algorithm      => undef,    
    Implementation => undef,   
    Version        => undef,  
    Size           => undef, 
    Public         => {},   
    Signatures     => [],  
    Identity       => {},
    _Secret        => {},
);

One of the goals of Crypt::Key is better inter-operability between different
crypto applications, at least to the extent where perl can use crypto keys
generated by non-perl apps like PGP and SSH.  Crypt::Key::SSH, for example,
overrides Crypt::Key::deserialize() to build a Crypt::Key object from ssh
key files which can be used with Crypt::RSA.

(Crypt::Key::SSH and Crypt::RSA are in the works.)

> > 3 Crypt::Primes - Implements Ueli Maurer's prime generation algorithm.
> 
>     While the algorithm is particularly useful for PKC applications, it's
> not exclusively applicable to cryptography.  I suggest Math::PrimeGenerator,
> perhaps.

Well, it does construct special primes for Elgamal and RSA.  But yes, it can
have non-crypto uses.  How about Math::Prime::Maurer?  That way you'd leave
space other prime/psuedo-prime sets/algorithms like Math::Prime::Fermat,
Math::Prime::Mersenne and Math::Prime::MillerRabin.

> > 6 Mail::Internet::Extensions - Some extensions to Mail::Internet. I sent
> > [snip]
> 
>     It sounds specific to the current implementation of Mail::Internet, and
> it doesn't explain itself.  Could you say more about what it does, and
> perhaps why it shouldn't be folded into Mail::Internet?

It's has two methods, one that extracts a forwarded mail from Mail::Internet
and constructs a new Mail::Internet object from the extract.  The other
method is a sieve for urls, email addresses and phone-numbers, which can be
used in spam filtering and content-sensitive mail delivery applications.  I,
myself, don't think Mail::Internet::Extensions is an appropriate name for
this module.  It'll be definitely better to include these methods in
Mail::Internet.

best regards,
vipul.

-- 

"Specialization is for insects."  --  Robert Heinlein

VIPUL VED PRAKASH               |  Cryptography.          
mail@vipul.net                  |  Distributed Systems. 
http://www.vipul.net/           |  Network Agents.      
91 11 2233328                   |  Perl Hacking.        
198 Madhuban IP Extension       |  Linux.            
Delhi, INDIA 110 092            |  Networked Media. 

