Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:10456
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 72670 invoked by uid 76); 4 Mar 2002 23:41:54 -0000
Received: from root@dubravka.kbx.de (HELO pause.perl.org) (212.40.160.59)
  by onion.perl.org (qpsmtpd/0.06) with SMTP; Mon Mar  4 23:41:54 2002 -0000
Received: (from nobody@localhost)
	by pause.perl.org (8.9.3/8.9.3) id AAA10966;
	Tue, 5 Mar 2002 00:41:45 +0100
Date: Tue, 5 Mar 2002 00:41:45 +0100
Message-ID: <200203042341.AAA10966@pause.perl.org>
Reply-To: modules@perl.org
Subject: Module submission MPEG
To: modules@perl.org, brg@cpan.org
Approved: news@nntp.perl.org
From: upload@p11.speed-link.de ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       MPEG
  DSLIP:       amhOo
  description: Access MPEG bitstream information and data.
  userid:      BRG (Benjamin R. Ginter)
  chapterid:   18 (Images_Pixmaps_Bitmaps)
  communities:
    http://1-up.net:81/mailman/listinfo/perl-video

  similar:
    MPEG::Info RIFF::Info ASF::Info Video::Info

  rationale:

    I am the author of MPEG::Info and I originally took a "Perl parses
    the bitstream" approach to accessing MPEG information. However, the
    lack of open access to the MPEG specs combined with the complexity
    of the standards has made creating a robust implementation
    difficult.

    Last week, I successfully completed a SWIG-based wrapper to
    libmpeg3. With this module, it is possible to extract information
    and data from the following file formats quickly and reliably:

    MPEG-1 Layer II Audio MPEG-1 Layer III Audio MPEG-2 Layer III Audio
    MPEG-1 program streams MPEG-2 program streams MPEG-2 transport
    streams AC3 Audio MPEG-2 Video MPEG-1 Video IFO files VOB files

    The decision where this module should live has been a nagging
    question as I've continued development. Allen Day and I have been
    collaborating on Perl video modules and have been discussing the
    fate of this new MPEG module.

    I would like to see a top-level MPEG.pm that provides a simple
    interface to accessing MPEG bitstream parameters and data. However,
    I don't want to see this top-level module rely on a single backend
    implementation. What if libmpeg3 is no longer maintained or another
    library proves superior?

    So the current thought is that the SWIG-wrapped libmpeg3 would live
    in a module named MPEG::LibMPEG3. A currently completely
    hypothetical top-level MPEG.pm could provide a consistant interface
    to this libmpeg3 library or one of many others, provided that each
    MPEG decoder module adhered to a pseudo-standard with regard to
    method names.

    MPEG::Info will be updated and become a "stub" module, relaying the
    function calls to the main MPEG module.

    There is currently a Video namespace but the trend thus far has
    been to create a top-level namespace for each moving picture format.
    The term Video really doesn't fit for codecs that handle both audio
    and video. Perhaps a Movie or Multimedia would be better?

    We're a little unsure how to proceed here and need some input. Soon
    Perl will have some fairly nice video modules that have been lacking
    for some time. It would be a Good Thing to make them consistant.

    Thanks for your help!

    Benjamin R. Ginter

  enteredby:   BRG (Benjamin R. Ginter)
  enteredon:   Mon Mar  4 23:41:44 2002 GMT

The resulting entry would be:

MPEG              amhOo Access MPEG bitstream information and data.  BRG


Thanks for registering,
The Pause Team

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=4c000000_849b2ea6917fbaef&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=4c000000_849b2ea6917fbaef&SUBMIT_pause99_add_mod_insertit=1
