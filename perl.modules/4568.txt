Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:4568
Return-Path: <philip_mitchell@harvard.edu>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 22194 invoked from network); 27 Feb 2001 17:23:29 -0000
Received: from sylvia.harvard.edu (128.103.151.242)
  by tmtowtdi.perl.org with SMTP; 27 Feb 2001 17:23:29 -0000
Received: from phil_mitchell.harvard.edu (ospr28.harvard.edu [128.103.151.128])
	by sylvia.harvard.edu (8.9.3/8.9.3) with ESMTP id MAA08373
	for <modules@perl.org>; Tue, 27 Feb 2001 12:23:20 -0500 (EST)
Message-ID: <4.3.2.7.2.20010227120159.00b0dbe0@hulmail.harvard.edu>
X-Sender: philip@hulmail.harvard.edu
X-Mailer: QUALCOMM Windows Eudora Version 4.3.2
Date: Tue, 27 Feb 2001 12:23:19 -0500
To: modules@perl.org
Subject: link checking script
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"; format=flowed
Approved: news@nntp.perl.org
From: philip_mitchell@harvard.edu (Phil Mitchell)

name: Phil Mitchell
email: philip_mitchell@harvard.edu
userid: PHILMI
description: link checking script
discussed: I mentioned this script on libwww and there seemed to be 
significant interest
in it. Although there are many link check scripts floating around, 
including one in
CPAN/web, they generally conflate spidering and link checking. My script 
just checks a
list of urls provided in a file. This is a more general solution, and lets 
me concentrate
on the _checking_ part. The script was written to check the 10,000-plus 
urls in the
Harvard library catalog, and I have worked pretty hard to weed out all 
sorts of spurious
error reports. EG., Configurable params to specify how many rechecks and 
how they are
spread out in time allow one to control the degree of conservatism in 
handling servers
that are just temporarily unavailable. My script also handles the Solaris 
quirk which
causes LWP (and telnet) to time out on responses from certain web servers 
despite
receiving the response. (A post to libwww about this has drawn considerable 
interest, as
well.) I will admit, my perl is not particularly sophisticated -- but it is 
clean and it works and is
well-documented, and there are way too many people out there writing their 
own link check
scripts!

regards,

phil

