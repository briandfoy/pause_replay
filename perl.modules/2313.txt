Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:2313
Return-Path: <sb@sdm.de>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 5973 invoked from network); 30 Jun 2000 08:52:21 -0000
Received: from unknown (HELO sdmmx1.sdm.de) (192.76.162.232)
  by tmtowtdi.perl.org with SMTP; 30 Jun 2000 08:52:21 -0000
Received: FROM muccpu1.muc.sdm.de BY sdmmx1.sdm.de ; Fri Jun 30 10:52:06 2000 +0100
Received: by muccpu1.muc.sdm.de (Sendmail 8.9.3+Sun)
	id KAA26855; Fri, 30 Jun 2000 10:52:01 +0200 (MET DST)
Message-ID: <200006300852.KAA26855@muccpu1.muc.sdm.de>
Subject: Re: RFC: How to name date objects module?
In-Reply-To: <290620001212225011%ken@forum.swarthmore.edu> from Ken Williams
 at "Jun 29, 2000 12:12:22 pm"
To: Ken Williams <ken@forum.swarthmore.edu>
Date: Fri, 30 Jun 2000 10:52:01 +0200 (MET DST)
CC: "comp.lang.perl.moderated post-via-mail-address" <mjd-clpm-submit@plover.com>,
        Perl Modules <modules@perl.org>
Reply-To: sb@sdm.de (Steffen Beyer)
X-No-Archive: yes
X-Disabled: Return-Receipt-To: sb@sdm.de
X-W3-Page: http://www.engelschall.com/u/sb/download/
X-Mailer: ELM [version 2.4ME+ PL61 (25)]
Approved: news@nntp.perl.org
From: sb@sdm.de (Steffen Beyer)
References: <290620001212225011%ken@forum.swarthmore.edu>

Hello Ken Williams, in a previous mail you wrote:

> >Any objections, then, to "Date::Calc::Easy"?
> 
> I still think that it would be better to leave it as Date::Calc. 
> People already know the rules of that module.  If you make a new
> module, people will think they have to learn new rules, when in fact
> it's just some new sugar for the interface.

You apparently didn't read the one of my previous postings where I explained
that doing this would inflict a performance penalty on all users of Date::Calc,
which is unacceptable because lots of users are using this module *because*
it is fast and because they need that.

Moreover, the man page of Date::Calc is already very long and adding that
of Date::Calc::Easy would make the documentation extremely confusing.

I think it is better to give the user the option to use this other interface
or not, and let him pay the associated speed loss if he is inclined to do so.

IMHO it is also less confusing to have two separate man-pages for two
different interfaces.

And no, it's not just "some new sugar for the interface", the new interface
*is* different and there *are* new rules to learn.

You obviously didn't have a look neither at the code nor its documentation.

BTW, this is something which really angers me: I bet that no one of you
who have been criticizing this module in the last couple of days did have
a look at the code, which I infer from the way you talk about it and the
obvious lack of knowledge of the module in question.

> It's really more alike than different.

How do you know that?!

>  -Ken

Regards,
-- 
    Steffen Beyer <sb@engelschall.com>
    http://www.engelschall.com/u/sb/whoami/ (Who am I)
    http://www.engelschall.com/u/sb/gallery/ (Fotos Brasil, USA, ...)
    http://www.engelschall.com/u/sb/download/ (Free Perl and C Software)
