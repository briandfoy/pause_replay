Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:17105
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 11032 invoked by uid 76); 17 Jan 2003 05:08:33 -0000
Received: from root@[212.40.160.59] (HELO pause.perl.org) (212.40.160.59) by onion.perl.org (qpsmtpd/0.20) with SMTP; 2003-01-17 05:08:33Z
Received: (from nobody@localhost)	by pause.perl.org (8.11.6/8.11.6) id h0H58Qa19757;	Fri, 17 Jan 2003 06:08:26 +0100
Date: Fri, 17 Jan 2003 06:08:26 +0100
Message-ID: <200301170508.h0H58Qa19757@pause.perl.org>
Reply-To: modules@perl.org
Subject: Module submission Class::Capsule
To: modules@perl.org, tshoenfe@cpan.org
X-SMTPD: qpsmtpd/0.20, http://develooper.com/code/qpsmtpd/
Approved: news@nntp.perl.org
From: upload@pause.x.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Class::Capsule
  DSLIP:       bdpOp
  description: Base Encapsulation Class
  userid:      TSHOENFE (Todd Shoenfelt)
  chapterid:    6 (Data_Type_Utilities)
  communities:

  similar:

  rationale:

    Encapsulation is an essential aspect of OO. Since the language
    doesn't offer access modifiers to protect instance data, I wrote
    this module, using a technique developed by Damian Conway, to fill
    that gap.

    This inheritable class enforces instance data encapsulation on
    child classes and AUTOLOADed accessors. It provides inherited
    methods: new(), to_string(), and equals() as well. Together, the
    definition of the object interface is intended to promote object
    interface consistency.

    I chose the 'Class' namespace since this is essentially an abstract
    class intended to be inherited by any object class.

  enteredby:   TSHOENFE (Todd Shoenfelt)
  enteredon:   Fri Jan 17 05:08:26 2003 GMT

The resulting entry would be:

Class::
::Capsule         bdpOp Base Encapsulation Class                     TSHOENFE


Thanks for registering,
The Pause Team

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=9c100000_0b28e54d82f7a39d&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=9c100000_0b28e54d82f7a39d&SUBMIT_pause99_add_mod_insertit=1
