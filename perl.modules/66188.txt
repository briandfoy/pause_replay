Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:66188
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 21844 invoked from network); 5 Jun 2009 13:00:23 -0000
Received: from x1.develooper.com (207.171.7.70)
  by x6.develooper.com with SMTP; 5 Jun 2009 13:00:23 -0000
Received: (qmail 3832 invoked by uid 225); 5 Jun 2009 13:00:22 -0000
Delivered-To: modules@perl.org
Received: (qmail 3824 invoked by alias); 5 Jun 2009 13:00:22 -0000
X-Spam-Status: No, hits=0.0 required=8.0
	tests=
X-Spam-Check-By: la.mx.develooper.com
Received: from pause.fiz-chemie.de (HELO pause.perl.org) (195.149.117.110)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Fri, 05 Jun 2009 06:00:17 -0700
Received: from pause.perl.org (localhost.localdomain [127.0.0.1])
	by pause.perl.org (8.13.8/8.13.8/Debian-3) with ESMTP id n55D00Uw024754;
	Fri, 5 Jun 2009 15:00:00 +0200
Received: (from nobody@localhost)
	by pause.perl.org (8.13.8/8.13.8/Submit) id n55CxugO024751;
	Fri, 5 Jun 2009 14:59:56 +0200
Date: Fri, 5 Jun 2009 14:59:56 +0200
Message-ID: <200906051259.n55CxugO024751@pause.perl.org>
Subject: Module submission DBIx::Declare
Reply-To: modules@perl.org
To: modules@perl.org, jenda@cpan.org
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       DBIx::Declare
  DSLIP:       RdpOp
  description: declare the database access object
  userid:      JENDA (Jan Krynicky)
  chapterid:   7 (Database_Interfaces)
  communities:
    perlmonks

  similar:
    DBIx::LazyMethod

  rationale:

    The module allows you to create the Database Access Object by
    declaring the SQL queries or stored procedures you want to be able
    to call and the way you want to receive the results (array of
    arrays, array of hashes, array with all rows joined together, hash
    with data from first (and only) row, execute() return value, stored
    procedure return status, last inserted autoincrement, ...) and the
    names for the parameters and optionaly their defaults. The methods
    are then generated via an AUTOLOAD hook when they are first called
    and reused ever since. The generated code may be stored in a cache
    (directory on disk, (tied) hash, userdefined subroutine) and reused
    when you restart the script. At the moment it's tested with MSSQL,
    mysql and SQLite and stored procedure parameter discovery is only
    supported on MSSQL yet, but the support may easily be extended to
    other databases. It does support MSSQL stored procedures with OUTPUT
    parameters.

  enteredby:   JENDA (Jan Krynicky)
  enteredon:   Fri Jun  5 12:59:56 2009 GMT

The resulting entry would be:

DBIx::
::Declare         RdpOp declare the database access object           JENDA


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=9e710000_32fa28fca134af20&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=9e710000_32fa28fca134af20&SUBMIT_pause99_add_mod_insertit=1
