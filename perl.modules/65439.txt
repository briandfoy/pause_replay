Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:65439
Return-Path: <philipp@redfish-solutions.com>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Delivered-To: moderator for modules@perl.org
Received: (qmail 8511 invoked from network); 15 Apr 2009 00:40:07 -0000
Received: from x1.develooper.com (207.171.7.70)
  by x6.develooper.com with SMTP; 15 Apr 2009 00:40:07 -0000
Received: (qmail 23236 invoked by uid 225); 15 Apr 2009 00:40:06 -0000
Delivered-To: modules@perl.org
Received: (qmail 23231 invoked by alias); 15 Apr 2009 00:40:06 -0000
X-Spam-Status: No, hits=2.4 required=8.0
	tests=DNS_FROM_OPENWHOIS,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received: from mail.redfish-solutions.com (HELO mail.redfish-solutions.com) (66.232.79.143)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Tue, 14 Apr 2009 17:40:04 -0700
Received: from [131.107.0.106] (tide536.microsoft.com [131.107.0.106])
	(authenticated bits=0)
	by mail.redfish-solutions.com (8.14.2/8.14.2) with ESMTP id n3F0dxpU006999
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NO)
	for <modules@perl.org>; Tue, 14 Apr 2009 18:40:00 -0600
Message-ID: <49E52CDF.2020801@redfish-solutions.com>
Date: Tue, 14 Apr 2009 17:39:59 -0700
User-Agent: Thunderbird 2.0.0.21 (Windows/20090302)
MIME-Version: 1.0
To: modules@perl.org
Subject: Blending package dependencies
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-Scanned-By: MIMEDefang 2.65 on 192.168.1.3
Approved: news@nntp.perl.org
From: philipp@redfish-solutions.com ("Philip A. Prindeville")

Hi.

I was picking up co-ownership of Net::Patricia, and someone pointed out 
to me that supporting CIDR range notations (like "start-end" instead of 
"ip/mask-length") would be handy, and I had to agree.

However, that would incur a dependency on Net::CIDR::Lite.

I was wondering if there's a way for a module to optionally detect the 
presence of another module, and if present expose additional interfaces 
that leverage it... and if this is an encouraged behavior (since it 
avoids re-inventing the wheel) or a discouraged one (since it incurs 
optional cross-dependencies).

Is there a FAQ or tutorial that covers this?

Thanks,

-Philip

