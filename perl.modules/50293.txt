Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:50293
Return-Path: <daconti.mail@gmail.com>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Delivered-To: moderator for modules@perl.org
Received: (qmail 20244 invoked from network); 11 Aug 2006 20:21:58 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 11 Aug 2006 20:21:58 -0000
Received: (qmail 1342 invoked by uid 225); 11 Aug 2006 20:21:58 -0000
Delivered-To: modules@perl.org
Received: (qmail 1325 invoked by alias); 11 Aug 2006 20:21:57 -0000
X-Spam-Status: No, hits=-2.5 required=8.0
	tests=BAYES_00,DK_SIGNED,DK_VERIFIED,HTML_50_60,HTML_MESSAGE,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: domain of daconti.mail@gmail.com designates 64.233.182.184 as permitted sender)
Received: from nf-out-0910.google.com (HELO nf-out-0910.google.com) (64.233.182.184)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Fri, 11 Aug 2006 13:21:16 -0700
Received: by nf-out-0910.google.com with SMTP id l23so691537nfc
        for <modules@perl.org>; Fri, 11 Aug 2006 13:21:09 -0700 (PDT)
DomainKey-Signature: a=rsa-sha1; q=dns; c=nofws;
        s=beta; d=gmail.com;
        h=received:mime-version:in-reply-to:references:content-type:message-id:from:subject:date:to:x-mailer;
        b=FWbg0212vE7k63bIlb1PZlAD3lq7JMMFrNffWq0lmwZfk1UQuh60yBtI4dU1rAGD06XUaOA28pfEB/btukBmzgO7MRyHMZCgkOJuPGHlWCFzTnOeSnvrQN7htrUQT7IOX6EJ1EmWpDbIZ1ebjgT/jtKVSVjG1BIaqFF5Q77IVFQ=
Received: by 10.78.116.19 with SMTP id o19mr2328437huc;
        Fri, 11 Aug 2006 13:21:09 -0700 (PDT)
Received: from ?192.168.1.2? ( [84.226.120.199])
        by mx.gmail.com with ESMTP id 35sm2155914huc.2006.08.11.13.21.07;
        Fri, 11 Aug 2006 13:21:08 -0700 (PDT)
Mime-Version: 1.0 (Apple Message framework v752.2)
In-Reply-To: <110820060943341028%brian.d.foy@gmail.com>
References: <200608102101.k7AL1RRF004471@pause.perl.org> <110820060943341028%brian.d.foy@gmail.com>
Content-Type: multipart/alternative; boundary=Apple-Mail-1-926807042
Message-ID: <97B894E1-11CB-4D34-9250-99D374A7F01F@gmail.com>
Subject: Re: Module submission Generate::SQLData
Date: Fri, 11 Aug 2006 22:21:06 +0200
To: modules@perl.org
X-Mailer: Apple Mail (2.752.2)
X-Virus-Checked: Checked
Approved: news@nntp.perl.org
From: daconti.mail@gmail.com (Davide Conti)

--Apple-Mail-1-926807042
Content-Transfer-Encoding: 7bit
Content-Type: text/plain;
	charset=US-ASCII;
	delsp=yes;
	format=flowed


Am 11.08.2006 um 16:43 schrieb brian d foy:

> [[ This message was both posted and mailed: see
>    the "To," "Cc," and "Newsgroups" headers for details. ]]
>
> In article <200608102101.k7AL1RRF004471@pause.perl.org>, Perl Authors
> Upload Server <upload@pause.perl.org> wrote:
>
>> The following module was proposed for inclusion in the Module List:
>>
>>   modid:       Generate::SQLData
>>   DSLIP:       cmpfa
>>   description: High customizable SQL-like data generator.
>>   userid:      DACONTI (Davide Conti)
>>   chapterid:   3 (Development_Support)
>>   communities:
> Is this really generating SQL, or just data you can use in an SQL
> statement? Is there a more general use for this module?
>
> Could it live in the Data::* namespace somehow?
>
> --  
> brian d foy (one of many PAUSE admins), http://pause.perl.org
> archives at http://www.xray.mpe.mpg.de/mailing-lists/modules
> please send all messages back to modules@perl.org
Hi Brian,
first of all, thank you for the very quick answer.
For my part I'll try to answer your questions, altough my english is  
not perfect and the answers not simple:

> Is this really generating SQL, or just data you can use in an SQL
> statement?
This module generates arrays of sql-like data (varchar, number, date,  
etc.), but I'm not planning to build it as a central standalone module.
Instead I'll be integrating it in my opensource project (http:// 
sourceforge.net/projects/dbfeeder).
This project (which will be soon go alpha) is a data generation tool  
(coded in perl) which can fill a whole schema of a database by  
respecting referential integrity and pk constraint.

> Is there a more general use for this module?
Let's say that, altough the initial scope is very narrow, I try with  
this module to solve this general problem:

We want several data record of a particular kind (ex. varchar with  
length 20) and we want them unique. But we do not want just a random  
ensemble of letters, instead we have a very precise
requirement to fulfill (maybe we need to emulate some internal  
factory codes, or we want to syntetically create barcode numbers).  
And we want this without typing infinite lists of data but  just by  
syntethizing few lines of code on a text file.And of course we want  
to control exactly the number of rows produced.

Until now I couldn't find any module which could fulfill these  
requirements (there is a module called regex::genex which goes a bit  
in this direction but it is not complete).

So I started to write my own module. In fact it is also matter of  
defining a kind of powerful and short 'language'  which can describe  
data. You can spontaneously think at regex syntax, and this is in  
fact a good starting point when you need to produce strings, but on  
the other way it can't be taken over to produce datatime or timestamp  
datakinds. Even integer and float numbers have their own "preferences".

In fact Generate::SQLData is just a "proof of concept" about this  
"data description" language and (to answer finally your question)  I  
believe that once it gets published, it will be easy to create sister  
and cousin modules which wlll be doing similar jobs.

> Could it live in the Data::* namespace somehow?
Surely it could live in the data namespace, but this is to my opinion  
misleading:
An user who looks at data namespace thinks automatically about real  
data, i.e. he usually looks for methods to store, retrieve, convert.  
present  or analyze data.
Moreover I think it's even a bit "dangerous" to put a module who  
creates syntetic data together with modules who handle real data.
Let's say that, before putting it into Data::* I would  prefer to put  
it into Test::*.

But the major point that I have, is that  i believe that there is a  
need for a "Generate" namespace.
Perl modules generating code or data are in the moment quite  
difficult to retrieve in CPAN and they are often there where one  
wouldn't expect them.
In my personal experience for example, it took me quite some time to  
find out regex-genex and to realize that this is a string generator.
A Generate::* namespace instead, would be wellcomed and it will help  
to centralize more these kind of very interesting modules which are  
actually spread overall due to a non-fitting naming problem.
Surely ,namespace pollution is a problem, but I believe the  
"Generate" problem (or the thematics) is a namespace worth.

Best Regards, Davide.

Davide Conti
daconti.mail@gmail.com




--Apple-Mail-1-926807042
Content-Transfer-Encoding: quoted-printable
Content-Type: text/html;
	charset=ISO-8859-1

<HTML><BODY style=3D"word-wrap: break-word; -khtml-nbsp-mode: space; =
-khtml-line-break: after-white-space; "><BR><DIV><DIV>Am 11.08.2006 um =
16:43 schrieb brian d foy:</DIV><BR =
class=3D"Apple-interchange-newline"><BLOCKQUOTE type=3D"cite"><DIV =
style=3D"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; =
margin-left: 0px; ">[[ This message was both posted and mailed: =
see</DIV><DIV style=3D"margin-top: 0px; margin-right: 0px; =
margin-bottom: 0px; margin-left: 0px; "><SPAN =
class=3D"Apple-converted-space">=A0=A0 </SPAN>the "To," "Cc," and =
"Newsgroups" headers for details. ]]</DIV><DIV style=3D"margin-top: 0px; =
margin-right: 0px; margin-bottom: 0px; margin-left: 0px; min-height: =
14px; "><BR></DIV><DIV style=3D"margin-top: 0px; margin-right: 0px; =
margin-bottom: 0px; margin-left: 0px; ">In article &lt;<A =
href=3D"mailto:200608102101.k7AL1RRF004471@pause.perl.org">200608102101.k7=
AL1RRF004471@pause.perl.org</A>&gt;, Perl Authors</DIV><DIV =
style=3D"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; =
margin-left: 0px; ">Upload Server &lt;<A =
href=3D"mailto:upload@pause.perl.org">upload@pause.perl.org</A>&gt; =
wrote:</DIV><DIV style=3D"margin-top: 0px; margin-right: 0px; =
margin-bottom: 0px; margin-left: 0px; min-height: 14px; "><BR></DIV> =
<BLOCKQUOTE type=3D"cite"><DIV style=3D"margin-top: 0px; margin-right: =
0px; margin-bottom: 0px; margin-left: 0px; ">The following module was =
proposed for inclusion in the Module List:</DIV><DIV style=3D"margin-top: =
0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; =
min-height: 14px; "><BR></DIV><DIV style=3D"margin-top: 0px; =
margin-right: 0px; margin-bottom: 0px; margin-left: 0px; "><SPAN =
class=3D"Apple-converted-space">=A0 </SPAN>modid: <SPAN =
class=3D"Apple-converted-space">=A0 =A0 =A0 =
</SPAN>Generate::SQLData</DIV><DIV style=3D"margin-top: 0px; =
margin-right: 0px; margin-bottom: 0px; margin-left: 0px; "><SPAN =
class=3D"Apple-converted-space">=A0 </SPAN>DSLIP: <SPAN =
class=3D"Apple-converted-space">=A0 =A0 =A0 </SPAN>cmpfa</DIV><DIV =
style=3D"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; =
margin-left: 0px; "><SPAN class=3D"Apple-converted-space">=A0 =
</SPAN>description: High customizable SQL-like data generator.</DIV><DIV =
style=3D"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; =
margin-left: 0px; "><SPAN class=3D"Apple-converted-space">=A0 =
</SPAN>userid:<SPAN class=3D"Apple-converted-space">=A0 =A0 =A0 =
</SPAN>DACONTI (Davide Conti)</DIV><DIV style=3D"margin-top: 0px; =
margin-right: 0px; margin-bottom: 0px; margin-left: 0px; "><SPAN =
class=3D"Apple-converted-space">=A0 </SPAN>chapterid: <SPAN =
class=3D"Apple-converted-space">=A0 </SPAN>3 =
(Development_Support)</DIV><DIV style=3D"margin-top: 0px; margin-right: =
0px; margin-bottom: 0px; margin-left: 0px; "><SPAN =
class=3D"Apple-converted-space">=A0 =
</SPAN>communities:</DIV></BLOCKQUOTE></BLOCKQUOTE><BLOCKQUOTE =
type=3D"cite"><DIV style=3D"margin-top: 0px; margin-right: 0px; =
margin-bottom: 0px; margin-left: 0px; ">Is this really generating SQL, =
or just data you can use in an SQL</DIV><DIV style=3D"margin-top: 0px; =
margin-right: 0px; margin-bottom: 0px; margin-left: 0px; ">statement? Is =
there a more general use for this module?</DIV><DIV style=3D"margin-top: =
0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; =
min-height: 14px; "><BR></DIV><DIV style=3D"margin-top: 0px; =
margin-right: 0px; margin-bottom: 0px; margin-left: 0px; ">Could it live =
in the Data::* namespace somehow?</DIV><DIV style=3D"margin-top: 0px; =
margin-right: 0px; margin-bottom: 0px; margin-left: 0px; min-height: =
14px; "><BR></DIV><DIV style=3D"margin-top: 0px; margin-right: 0px; =
margin-bottom: 0px; margin-left: 0px; ">--<SPAN =
class=3D"Apple-converted-space">=A0</SPAN></DIV><DIV style=3D"margin-top: =
0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; ">brian d =
foy (one of many PAUSE admins), <A =
href=3D"http://pause.perl.org">http://pause.perl.org</A></DIV><DIV =
style=3D"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; =
margin-left: 0px; ">archives at <A =
href=3D"http://www.xray.mpe.mpg.de/mailing-lists/modules">http://www.xray.=
mpe.mpg.de/mailing-lists/modules</A></DIV><DIV style=3D"margin-top: 0px; =
margin-right: 0px; margin-bottom: 0px; margin-left: 0px; ">please send =
all messages back to <A =
href=3D"mailto:modules@perl.org">modules@perl.org</A></DIV> =
</BLOCKQUOTE></DIV><DIV>Hi Brian,</DIV><DIV>first of all, thank you for =
the very quick answer.</DIV><DIV>For my part I'll try to answer your =
questions, altough my english is not perfect and the answers not =
simple:</DIV><DIV><BR class=3D"khtml-block-placeholder"></DIV><BLOCKQUOTE =
type=3D"cite"><DIV style=3D"margin-top: 0px; margin-right: 0px; =
margin-bottom: 0px; margin-left: 0px; ">Is this really generating SQL, =
or just data you can use in an SQL</DIV><DIV style=3D"margin-top: 0px; =
margin-right: 0px; margin-bottom: 0px; margin-left: 0px; ">statement? =
<BR></DIV></BLOCKQUOTE>This module generates arrays of sql-like data =
(varchar, number, date, etc.), but I'm not planning to build it as a =
central standalone module.<DIV>Instead I'll be integrating it in =
my=A0opensource project (<A =
href=3D"http://sourceforge.net/projects/dbfeeder">http://sourceforge.net/p=
rojects/dbfeeder</A>).=A0</DIV><DIV>This project (which will be soon go =
alpha) is a data generation tool (coded in perl) which can fill a whole =
schema of a database=A0by respecting referential integrity and pk =
constraint.=A0<DIV><BR =
class=3D"khtml-block-placeholder"></DIV><DIV><DIV><BLOCKQUOTE =
type=3D"cite"><DIV style=3D"margin-top: 0px; margin-right: 0px; =
margin-bottom: 0px; margin-left: 0px; ">Is there a more general use for =
this module?</DIV></BLOCKQUOTE><DIV>Let's say that, altough the initial =
scope is very narrow, I try with this module to solve this general =
problem:</DIV><DIV>=A0</DIV><DIV>We want several data record of a =
particular kind=A0(ex. varchar with length 20) and we want them =
unique.=A0But we do not want just a random ensemble of letters, instead =
we have a very precise</DIV><DIV>requirement to fulfill (maybe we need =
to emulate some internal factory codes, or we want to syntetically =
create barcode numbers). And we want this without typing infinite lists =
of data but=A0 just by syntethizing few lines of code on a text file.And =
of course we want to control exactly the number of rows =
produced.</DIV><DIV><BR class=3D"khtml-block-placeholder"></DIV><DIV>Until=
 now I couldn't find any module which could fulfill these requirements =
(there is a module called regex::genex which goes a bit in this =
direction but it is not complete).</DIV><DIV><BR =
class=3D"khtml-block-placeholder"></DIV><DIV>So I started to write my =
own module. In fact it is also matter of defining a kind of powerful and =
short 'language'=A0 which can describe data. You can spontaneously think =
at regex syntax, and this is in fact a good starting point when you need =
to produce strings, but on the other way it can't be taken over to =
produce datatime or timestamp datakinds. Even integer and float numbers =
have their own "preferences".</DIV><DIV><BR =
class=3D"khtml-block-placeholder"></DIV><DIV>In =
fact=A0Generate::SQLData=A0is just a "proof of concept" about this "data =
description" language and (to answer finally your question)=A0 I believe =
that once it gets published, it will be easy to create sister and cousin =
modules which wlll be doing similar jobs.</DIV><DIV><BR =
class=3D"khtml-block-placeholder"></DIV><BLOCKQUOTE type=3D"cite"><DIV =
style=3D"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; =
margin-left: 0px; ">Could it live in the Data::* namespace =
somehow?</DIV></BLOCKQUOTE><DIV>Surely it could live in the data =
namespace, but this is to my opinion misleading:</DIV><DIV>An user who =
looks at data namespace thinks automatically about real data,=A0i.e. he =
usually looks for methods to store, retrieve, convert. present=A0 or =
analyze data.</DIV><DIV>Moreover=A0I think it's even a bit "dangerous" =
to put a module who creates syntetic data together with modules who =
handle real data.=A0</DIV><DIV>Let's say that, before putting it into =
Data::* I would=A0 prefer to put it into Test::*.</DIV><DIV><BR =
class=3D"khtml-block-placeholder"></DIV><DIV>But the major point that I =
have, is that=A0=A0i believe that there is a need for a "Generate" =
namespace.</DIV><DIV>Perl modules generating code or data are in the =
moment quite difficult to retrieve in CPAN and they are often there =
where one wouldn't expect them.</DIV><DIV>In=A0my personal experience =
for example, it took me quite some time to find out=A0regex-genex and to =
realize that this is a string generator.=A0 =A0</DIV><DIV>A Generate::* =
namespace instead, would be wellcomed and it will help to centralize =
more these kind of very interesting modules which are actually spread =
overall due to a non-fitting naming problem.</DIV><DIV>Surely ,namespace =
pollution is a problem, but I believe the "Generate"=A0problem (or the =
thematics) is a namespace worth.=A0</DIV><DIV>=A0</DIV><DIV>Best =
Regards, Davide.</DIV><BR><DIV> <SPAN class=3D"Apple-style-span" =
style=3D"border-collapse: separate; border-spacing: 0px 0px; color: =
rgb(0, 0, 0); font-family: Helvetica; font-size: 12px; font-style: =
normal; font-variant: normal; font-weight: normal; letter-spacing: =
normal; line-height: normal; text-align: auto; =
-khtml-text-decorations-in-effect: none; text-indent: 0px; =
-apple-text-size-adjust: auto; text-transform: none; orphans: 2; =
white-space: normal; widows: 2; word-spacing: 0px; "><DIV>Davide =
Conti</DIV><DIV><A =
href=3D"mailto:daconti.mail@gmail.com">daconti.mail@gmail.com</A></DIV><DI=
V><BR class=3D"khtml-block-placeholder"></DIV><BR =
class=3D"Apple-interchange-newline"></SPAN> =
</DIV><BR></DIV></DIV></DIV></BODY></HTML>=

--Apple-Mail-1-926807042--
