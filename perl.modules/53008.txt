Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:53008
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 10432 invoked from network); 9 Feb 2007 19:53:38 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 9 Feb 2007 19:53:38 -0000
Received: (qmail 16769 invoked by uid 225); 9 Feb 2007 19:53:37 -0000
Delivered-To: modules@perl.org
Received: (qmail 16754 invoked by alias); 9 Feb 2007 19:53:36 -0000
X-Spam-Status: No, hits=-2.5 required=8.0
	tests=BAYES_00,FORGED_RCVD_HELO
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
Received: from pause.fiz-chemie.de (HELO pause.perl.org) (195.149.117.110)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Fri, 09 Feb 2007 11:53:33 -0800
Received: from pause.perl.org (localhost.localdomain [127.0.0.1])
	by pause.perl.org (8.13.4/8.13.4/Debian-3sarge3) with ESMTP id l19JrRNS021858
	for <modules@perl.org>; Fri, 9 Feb 2007 20:53:27 +0100
Received: (from nobody@localhost)
	by pause.perl.org (8.13.4/8.13.4/Submit) id l19JrRj7021857;
	Fri, 9 Feb 2007 20:53:27 +0100
Date: Fri, 9 Feb 2007 20:53:27 +0100
Message-ID: <200702091953.l19JrRj7021857@pause.perl.org>
Subject: Module submission Text::XmlMatch
Reply-To: modules@perl.org
To: modules@perl.org
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Text::XmlMatch
  DSLIP:       bdpOp
  description: XML-driven pattern matching on a buffer
  userid:      LEEJA (Jason Lee)
  chapterid:   11 (String_Lang_Text_Proc)
  communities:

  similar:

  rationale:

    This module was developed out of necessity in my work where I need
    to group/classify thousands of network devices based FQDNs. These
    groups are used for reporting, delegating responsibility, and
    role-based access control. As a further complication, I often need
    to create groups dynamically, where the group names are not known in
    advance.

    I often run into situations where I must classify devices based on
    an observed pattern in their name, but I want to generate the group
    name dynamically based on a device name. For example, my company's
    FQDNs include "market" information. Unfortunately, markets come and
    go in my business, so I need an easy-to-maintain system of grouping
    that can also generate group names dynamically based on markets that
    are not yet known.

    My early scripts would use complicated combinations of regular
    expressions with various IF-THEN-ELSE structures to selectively
    include and exclude devices. These scripts required Perl
    knowledgeable personnel to maintain, and they employed a lot of
    duplicate code.

    The approach I took to solve this problem was to develop a
    matching/grouping OO module that was configured with a simple XML
    file. This configuration file basically contains the desired group
    names and the regexes that define inclusion and exclusion for those
    groups. In my deployments, I can typically use the same
    configuration file on multiple systems, where each system is
    configured to respond to devices that match a particular group
    defined in that file.

    In addition to providing a much easier to maintain XML
    configuration file, this module allows for an optional descriptor so
    that not only are matched results returned, but an optional group
    descriptor can be returned as well.

    The interface is straightforward. After initializing the object
    with a configuration file, the user can pass a string through the
    appropriate method and will get back the group name matches that the
    string corresponds to.

    I could really use some help coming up with a proper namespace for
    this module, I'm open to anything.

  enteredby:   LEEJA (Jason Lee)
  enteredon:   Fri Feb  9 19:53:27 2007 GMT

The resulting entry would be:

Text::
::XmlMatch        bdpOp XML-driven pattern matching on a buffer      LEEJA


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=0ce00000_e08827215808094f&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=0ce00000_e08827215808094f&SUBMIT_pause99_add_mod_insertit=1
