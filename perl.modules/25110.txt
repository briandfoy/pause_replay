Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:25110
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 90323 invoked by uid 76); 17 Dec 2003 17:14:38 -0000
Received: from x1.develooper.com (HELO x1.develooper.com) (63.251.223.170) by onion.perl.org (qpsmtpd/0.26) with SMTP; Wed, 17 Dec 2003 09:14:38 -0800
Received: (qmail 20018 invoked by uid 225); 17 Dec 2003 17:14:37 -0000
Delivered-To: modules@perl.org
Received: (qmail 20014 invoked by alias); 17 Dec 2003 17:14:36 -0000
Received: from pause.fiz-chemie.de (HELO pause.perl.org) (195.149.117.110) by la.mx.develooper.com (qpsmtpd/0.27-dev) with ESMTP; Wed, 17 Dec 2003 09:14:25 -0800
Received: from pause.perl.org (localhost [127.0.0.1])	by pause.perl.org (8.12.3/8.12.3/Debian-6.6) with ESMTP id hBHHDkcj005208;	Wed, 17 Dec 2003 18:13:46 +0100
Received: (from nobody@localhost)	by pause.perl.org (8.12.3/8.12.3/Debian-6.6) id hBHHDkwZ005206;	Wed, 17 Dec 2003 18:13:46 +0100
Date: Wed, 17 Dec 2003 18:13:46 +0100
Message-ID: <200312171713.hBHHDkwZ005206@pause.perl.org>
Subject: Module submission Myco
Reply-To: modules@perl.org
To: modules@perl.org, czbsd@cpan.org
X-Spam-Check-By: la.mx.develooper.com
X-Spam-Status: No, hits=1.1 required=7.0 tests=CARRIAGE_RETURNS,SPAM_PHRASE_00_01 version=2.44
X-SMTPD: qpsmtpd/0.26, http://develooper.com/code/qpsmtpd/
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Myco
  DSLIP:       bdpOp
  description: Full featured object-oriented app framework
  userid:      CZBSD (Charles N. Owens)
  chapterid:    3 (Development_Support)
  communities:
    http://sourceforge.net/projects/myco/
    tangram-t2-maintainers@hottub.perlfect.com

  similar:
    we extend Tangram Class::Tangram and others

  rationale:

    Our goal has been to create a rich framework that provides
    end-to-end support for the object-oriented application developer,
    freeing them to focus more effectively on application-specific
    end-user features.

    The Myco framework supports:

    * object "lifecycle" services: accessors data validation
    persistence templates (similar to Java interfaces) metadata (a.k.a.
    "introspection") role-based access control logging

    * unit testing * metadata driven user interfaces (a
    Model-View-Controller implementation, usable in both HTML::Mason and
    cgi script contexts) * and more... ("but wait...that's not all")

    Given the breadth of functionality provided it appears difficult to
    fit Myco into any existing CPAN module categories/chapters and
    suggests (to us) that it should stand alone in the Module namespace.

    Read on for a glimpse of the Myco API in action.

    All Myco entity classes are subclasses of Myco::Base::Entity. This
    grants the entity class a rich set of functionality, accessible via
    a clean consistent interface. Here's some sample code showing a
    synopsis of how one interfaces with a Myco entity class:

    use Myco::Foo; # a Myco entity class

    # Constructor $obj = Myco::Foo->new; $obj = Myco::Foo->new(attr1 =>
    value, attr2 => value);

    # Access class metadata (see Myco::Base::Entity::Meta) $meta =
    Myco::Foo->introspect; $meta = $obj->introspect;

    # Accessors $obj->get_attr1; # get attribute value
    $obj->set_attr1('value'); # set attribute value

    # Instance methods $id = $obj->save; # update object's state in
    persistent # storage, create new record if needed; # returns
    object's Tangram id $obj->destroy; $obj->modify(attr1 => val, attr2
    => val); $object_id = $obj->id; $obj->is_transient; # returns true
    if object is in Tangram # transient storage

    ## object retrieval (see class Myco documentation # for full
    detail)

    $obj = Myco->load($object_id);

    # fetch all objects of given type @objects = Myco->select(ref
    $obj); # this select() could also include a Tangram filter

  enteredby:   CZBSD (Charles N. Owens)
  enteredon:   Wed Dec 17 17:13:45 2003 GMT

The resulting entry would be:

Myco              bdpOp Full featured object-oriented app framework  CZBSD


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=e4600000_4f8b244ed8535d0a&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=e4600000_4f8b244ed8535d0a&SUBMIT_pause99_add_mod_insertit=1
