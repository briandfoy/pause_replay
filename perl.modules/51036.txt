Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:51036
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 17026 invoked from network); 24 Sep 2006 20:10:08 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 24 Sep 2006 20:10:08 -0000
Received: (qmail 11095 invoked by uid 225); 24 Sep 2006 20:10:08 -0000
Delivered-To: modules@perl.org
Received: (qmail 11075 invoked by alias); 24 Sep 2006 20:10:07 -0000
X-Spam-Status: No, hits=-2.5 required=8.0
	tests=BAYES_00,FORGED_RCVD_HELO,UNPARSEABLE_RELAY
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
Received: from pause.fiz-chemie.de (HELO pause.perl.org) (195.149.117.110)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Sun, 24 Sep 2006 13:09:50 -0700
Received: from pause.perl.org (localhost.localdomain [127.0.0.1])
	by pause.perl.org (8.13.4/8.13.4/Debian-3sarge1) with ESMTP id k8OK9hre009920
	for <modules@perl.org>; Sun, 24 Sep 2006 22:09:43 +0200
Received: (from nobody@localhost)
	by pause.perl.org (8.13.4/8.13.4/Submit) id k8OK9gHJ009919;
	Sun, 24 Sep 2006 22:09:42 +0200
Date: Sun, 24 Sep 2006 22:09:42 +0200
Message-ID: <200609242009.k8OK9gHJ009919@pause.perl.org>
MIME-Version: 1.0
Subject: Module submission Crypt::ProtectedString
Content-Type: Text/Plain; Charset=UTF-8
Reply-To: modules@perl.org
To: modules@perl.org
Content-Transfer-Encoding: 8bit
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Crypt::ProtectedString
  DSLIP:       cdpOp
  description: For automated handling of sensitive data.
  userid:      IDO (עידו רוזן (Ido Rosen))
  chapterid:   14 (Security_and_Encryption)
  communities:

  similar:
    Tie::EncryptedHash

  rationale:

    Steve Friedl's "A Proposal for Secure Storage of Credit Card Data"
    sparked this idea. (Available here for your viewing pleasure:
    http://www.unixwiz.net/techtips/secure-cc.html ). His idea seemed to
    be the only actually secure one, and he seemed to have thought of
    the problem correctly, whereas most simply provide false confidence
    by "encrypting the database."

    In short, certain data such as credit card numbers must be
    displayed differently to different interfaces. For example, a user's
    credit card number should be an empty string to other users, the
    last four digits only to the user owning the credit card, and the
    full unprotected credit card number to the credit card processing
    gateway. I am implementing this protected format in the form of a
    Protected String. Internally, it is stored as a hash. Externally,
    AS_STRING provides the display version only, while a decryption key
    or function must be provided to the object in order for it to know
    how to decrypt its ciphertext representation into the full plaintext
    sensitive data.

    Module defaults to RSA encryption.

    More effort will probably be spent in documenting the code than in
    writing it, because it's actually a straight-forward and simple
    thing to code. ETA for the module is 2 weeks, conservatively.

  enteredby:   IDO (עידו רוזן (Ido Rosen))
  enteredon:   Sun Sep 24 20:09:42 2006 GMT

The resulting entry would be:

Crypt::
::ProtectedString cdpOp For automated handling of sensitive data.    IDO


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=88e00000_e4a448733189e539&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=88e00000_e4a448733189e539&SUBMIT_pause99_add_mod_insertit=1
