Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:63892
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 29491 invoked from network); 4 Jan 2009 08:36:46 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by x6.develooper.com with SMTP; 4 Jan 2009 08:36:46 -0000
Received: (qmail 3703 invoked by uid 225); 4 Jan 2009 08:36:46 -0000
Delivered-To: modules@perl.org
Received: (qmail 3699 invoked by alias); 4 Jan 2009 08:36:45 -0000
X-Spam-Status: No, hits=0.0 required=8.0
	tests=
X-Spam-Check-By: la.mx.develooper.com
Received: from pause.fiz-chemie.de (HELO pause.perl.org) (195.149.117.110)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Sun, 04 Jan 2009 00:36:43 -0800
Received: from pause.perl.org (localhost.localdomain [127.0.0.1])
	by pause.perl.org (8.13.8/8.13.8/Debian-3) with ESMTP id n048aUTv026789;
	Sun, 4 Jan 2009 09:36:30 +0100
Received: (from nobody@localhost)
	by pause.perl.org (8.13.8/8.13.8/Submit) id n048aU9t026788;
	Sun, 4 Jan 2009 09:36:30 +0100
Date: Sun, 4 Jan 2009 09:36:30 +0100
Message-ID: <200901040836.n048aU9t026788@pause.perl.org>
Subject: Module submission Set::Relation
Reply-To: modules@perl.org
To: modules@perl.org, duncand@cpan.org
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Set::Relation
  DSLIP:       cmpOl
  description: Relation data type for Perl
  userid:      DUNCAND (Darren Duncan)
  chapterid:   6 (Data_Type_Utilities)
  communities:
    general Perl forums, database forums

  similar:
    Set::Object, Set::Scalar, etc

  rationale:

    Set::Relation provides a simple Perl-native facility for an
    application to organize and process information using the relational
    model of data, without having to employ a separate DBMS.

    Loosely speaking, a Set::Relation object is a wrapper over a set of
    hash refs, where all the hash refs in the set have the same number
    of elements and the same set of hash keys; so in this context, a
    Perl hash ref and a Set::Relation object correspond to the
    relational model concepts of a tuple and a relation, respectively).
    A relation is analogous to a SQL row-set but that the columns and
    rows are not ordered, and there are no duplicate column names or
    duplicate rows. Set::Relation provides all the normal operators of
    other Set:: classes, such as 'is_subset', 'union', 'difference' etc,
    but it also provides operators like 'join', 'divide', 'projection',
    'group', 'summary', 'semijoin', 'restriction', 'semidifference',
    'transitive_closure', 'outer_join' etc.

    Note, you can model a whole relational database by having a hash
    ref whose keys are akin to SQL table names and whose values are
    Set::Relation objects.

    The name Set::Relation was chosen because it seems the most
    descriptive. A 'relation' is a value, same as an integer or an array
    is a value, and a relation can do everything a generic set can do
    plus more. The Set:: namespace is used to reduce confusion amongst
    other concepts of the word 'relation', as some people think it means
    'compare'; Set:: illustrates that my class' objects are functionally
    set-like collection values.

    Also, I've already been using the name Set::Relation for a couple
    years for the corresponding Perl 6 module (about to be rewritten)
    under the Pugs project.

  enteredby:   DUNCAND (Darren Duncan)
  enteredon:   Sun Jan  4 08:36:29 2009 GMT

The resulting entry would be:

Set::
::Relation        cmpOl Relation data type for Perl                  DUNCAND


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=e6410000_224fa18460433109&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=e6410000_224fa18460433109&SUBMIT_pause99_add_mod_insertit=1
