Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:51976
Return-Path: <dev@ulusoy.name>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Delivered-To: moderator for modules@perl.org
Received: (qmail 17707 invoked from network); 27 Nov 2006 13:39:13 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 27 Nov 2006 13:39:13 -0000
Received: (qmail 27373 invoked by uid 225); 27 Nov 2006 13:39:12 -0000
Delivered-To: modules@perl.org
Received: (qmail 27363 invoked by alias); 27 Nov 2006 13:39:12 -0000
X-Spam-Status: No, hits=-1.6 required=8.0
	tests=BAYES_00,NO_REAL_NAME
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
Received: from smtpout14-02.prod.mesa1.secureserver.net (HELO smtpout14-02.prod.mesa1.secureserver.net) (68.178.232.8)
    by la.mx.develooper.com (qpsmtpd/0.28) with SMTP; Mon, 27 Nov 2006 05:39:06 -0800
Received: (qmail 7745 invoked from network); 27 Nov 2006 13:39:00 -0000
Received: from unknown (HELO webmail12.prod.mesa1.secureserver.net) (64.202.189.49)
  by smtpout14-02.prod.mesa1.secureserver.net with SMTP; 27 Nov 2006 13:39:00 -0000
Received: (qmail 23129 invoked by uid 99); 27 Nov 2006 13:39:00 -0000
Date: Mon, 27 Nov 2006 06:39:00 -0700
Subject: New module XML::Pastor (autmatic Perl class generation with round-trip XML persistency from a W3C XSD Schema)
To: modules@perl.org
Message-ID: <20061127063900.04f295220c80ebefcf116bcb90fbdd3e.1ff505d2f7.wbe@email.secureserver.net>
MIME-Version: 1.0
Content-Type: TEXT/plain; CHARSET=US-ASCII
User-Agent: Web-Based Email 4.8.16
X-Originating-IP: 83.145.93.242
Approved: news@nntp.perl.org
From: dev@ulusoy.name

Hi,

I will be uploading a new module in a couple weeks. Basically, the
mdoule is very close to what CASTOR does in the java world, that is, it
reads a set of W3C XSD schemas and generates Perl classes from the type
definitions (simple or complex) in the schema. The classes that are
produced can be used as regular Perl classes with automatically
generated accessors for attributes and child elements. They also 'know'
how to convert themselves into XML DOM elements and attributes. This way
it's possible to read an XML file into DOM, convert it into a
schema-aware perl class (Pastor generated), read or modify data in it,
and write it back to XML DOM.

In a nut-shell, this module generates (before compile time, or at run
time) Perl classes that can do round-trip with XML persistency  all
this made possible by the existence of a W3C XSD Schema. 

I am proposing the name XML::Pastor for this new module. This sounds
like the Castor java equivalent a little bit. I know we should stay
away fromp cutesy names but in this case something like
XML::Class::Generator would be too cumbersome. 

Thank you in advance for your comments. 

Ayhan Ulusoy










