Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:85747
Return-Path: <apache@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 27355 invoked from network); 24 Apr 2013 15:54:27 -0000
Received: from x1.develooper.com (207.171.7.70)
  by x6.develooper.com with SMTP; 24 Apr 2013 15:54:27 -0000
Received: (qmail 1216 invoked by uid 225); 24 Apr 2013 15:54:27 -0000
Delivered-To: modules@perl.org
Received: (qmail 1211 invoked by alias); 24 Apr 2013 15:54:26 -0000
X-Spam-Status: No, hits=-2.9 required=8.0
	tests=ALL_TRUSTED,BAYES_00
X-Spam-Check-By: la.mx.develooper.com
Received: from pause2.develooper.com (HELO pause.perl.org) (207.171.7.119)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Wed, 24 Apr 2013 08:54:19 -0700
Received: by pause.perl.org (Postfix, from userid 48)
	id F34FE1F89A; Wed, 24 Apr 2013 15:54:14 +0000 (UTC)
Subject: Module submission Ruby::Collections
Reply-To: modules@perl.org
To: modules@perl.org
Message-ID: <20130424155414.F34FE1F89A@pause.perl.org>
Date: Wed, 24 Apr 2013 15:54:14 +0000 (UTC)
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Ruby::Collections
  DSLIP:       bdpr2
  description: Ruby collections implementation in Perl
  userid:      CLAIR (Clair Lee)
  chapterid:   6 (Data_Type_Utilities)
  communities:
    https://github.com/wnameless/ruby-collections-perl/wiki

  similar:

  rationale:

    To improve the productivity of Perl, we try to implement around 200
    methods inspired by Ruby collections for Perl array and hash.

    We build up those methods based on the Perl tie 'StdArray' and tie
    'StdHash' features. We call these implementations Ruby::Array and
    Ruby::Hash. We try to make these implementations can be treated as
    the ordinary Perl array and hash. All modules which are design for
    Perl array and hash can be used on Ruby::Array and Ruby::Hash as
    well.

    Furthermore, we made many improvements on the behaviors of
    Ruby::Array and Ruby::Hash. 1. We provide friendly api to build up
    Ruby::Array and Ruby::Hash quickly. For example: ra( 1, 2, 3 ) -> [
    1, 2, 3 ] ra( [ 1, 2, 3 ] ) -> [ 1, 2, 3 ] ra( ra( 1, 2, 3 ) ) -> [
    [ 1, 2, 3 ] ] rh( { 'a' => 1 } ) -> { 'a' => 1 } rh( 'a' => 1 ) -> {
    'a' => 1 } rh( 'a', 1 ) -> { 'a' => 1 }

    2. Ruby::Hash enumerates its values in the order that the
    corresponding keys were inserted. In other words, it becomes an
    ordered hash.

    3. When using array or hash to be the key of a Ruby::Hash, it
    automatically translates the data structure into string form. For
    example: rh( [ 1 , 2 ] => 3 ) -> { [ 1, 2 ] => 3 } instead of {
    ARRAY(0x7fa4320052b8) => 3 }

    4. Complex data structure comparison becomes mush easier. For
    example: ra( 1, { 2 => 3 } ) == [ 1, { 2 => 3 } ] # return 1

    5. Many operators are overloaded to make Ruby::Array and Ruby::Hash
    easier to use. For example: ra( 1, 2 ) << 3 -> [ 1, 2, 3 ] ra( 1, 2,
    3 ) - [ 3, 4 ] -> [ 1, 2 ] ...

    6. Fluent interface make code much easier to read and use. For
    example: rh( 1 => 2, 3 => 4 )->to_a->flatten->map( sub { $_[0] * 2 }
    ) -> [ 2, 4, 6, 8 ]

  enteredby:   CLAIR (Clair Lee)
  enteredon:   Wed Apr 24 15:54:14 2013 GMT

The resulting entry would be:

Ruby::
::Collections     bdpr2 Ruby collections implementation in Perl      CLAIR


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=26d00000_e919311e5465e05a&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=26d00000_e919311e5465e05a&SUBMIT_pause99_add_mod_insertit=1
Peek at the current permissions:
  https://pause.perl.org/pause/authenquery?pause99_peek_perms_by=me&pause99_peek_perms_query=Ruby%3A%3ACollections
