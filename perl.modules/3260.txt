Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:3260
Return-Path: <marcel@codewerk.com>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 19719 invoked from network); 1 Nov 2000 13:40:19 -0000
Received: from host83.studychoice.com (HELO saruman.localhost) (62.189.54.83)
  by tmtowtdi.perl.org with SMTP; 1 Nov 2000 13:40:19 -0000
Received: from codewerk.com (marcel@saruman [127.0.0.1])
	by saruman.localhost (8.9.3/8.9.3/Debian 8.9.3-21) with ESMTP id PAA08069
	for <modules@perl.org>; Wed, 1 Nov 2000 15:40:54 GMT
Message-ID: <200011011540.PAA08069@saruman.localhost>
X-Authentication-Warning: saruman.localhost: Host marcel@saruman [127.0.0.1] claimed to be codewerk.com
To: modules@perl.org
Subject: Registration as CPAN author
Date: Wed, 01 Nov 2000 15:40:52 +0000
Sender: marcel@codewerk.com
Approved: news@nntp.perl.org
From: marcel@codewerk.com ((Marcel Grunauer))


I'd like to register as a CPAN author.

    Name:     Marcel Grunauer
    Email:    marcel@codewerk.com
    Homepage: http://www.codewerk.com
    UserID:   MARCEL

I've got a few modules I'd like to contribute after discussing them on the
#perl and #london.pm IRC channels as well as Perl Monger mailing lists and,
of course, comp.lang.perl.modules.

There is Tie::Scalar::Timeout, a module for timing out scalar variables.
Then there is a family of modules implementing IO streams, much like Java
does. More modules are in the pipeline, to be done when I got some spare
time.

Tie::Scalar::Timeout's DSLI is 'abpr'. So far, Tie::Scalar::Timeout has
been briefly discussed on london.pm, but got a very good feedback.

If you need any more information, please let me know.


    NAME
	Tie::Scalar::Timeout - Scalar variables that time out

    SYNOPSIS
	    use Tie::Scalar::Timeout;

	    tie my $k, 'Tie::Scalar::Timeout', MAXAGE => 2;

	    $k = 123;
	    sleep(3);
	    # $k is now undef

    DESCRIPTION
	This module allows you to tie a scalar variable whose value will be
	reset to undef after a certain time. When tying, you can specify
	arguments in the form of a hash. Use `MAXAGE' to specify the number of
	seconds after which the value will be reset to zero. (Technically, the
	value will still be there, but the module's FETCH sub will return
	`undef'.) Using the `VALUE' hash key, you can specify an initial value.

	One possible application for this module might be to time out session
	variables in mod_perl programs.

    AUTHOR
	Marcel Gr&uuml;nauer <marcel@codewerk.com>

    SEE ALSO
	perl(1), Tie::Scalar(3pm).

Regards

Marcel Grunauer

