Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:24084
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 25201 invoked by uid 76); 20 Oct 2003 14:22:23 -0000
Received: from qmailr@one.develooper.com (HELO ran-out.mx.develooper.com) (64.81.84.115) by onion.perl.org (qpsmtpd/0.26) with SMTP; Mon, 20 Oct 2003 07:22:23 -0700
Received: (qmail 9720 invoked by uid 225); 20 Oct 2003 14:22:21 -0000
Delivered-To: modules@perl.org
Received: (qmail 9715 invoked by uid 507); 20 Oct 2003 14:22:21 -0000
Received: from pause.perl.org (HELO pause.perl.org) (212.40.160.59) by one.develooper.com (qpsmtpd/0.27-dev) with ESMTP; Mon, 20 Oct 2003 07:21:50 -0700
Received: from pause.perl.org (localhost [127.0.0.1])	by pause.perl.org (8.12.3/8.12.3/Debian-6.6) with ESMTP id h9KELC5c010655;	Mon, 20 Oct 2003 16:21:12 +0200
Received: (from nobody@localhost)	by pause.perl.org (8.12.3/8.12.3/Debian-6.6) id h9KELCYr010653;	Mon, 20 Oct 2003 16:21:12 +0200
Date: Mon, 20 Oct 2003 16:21:12 +0200
Message-ID: <200310201421.h9KELCYr010653@pause.perl.org>
Subject: Module submission Convert::Bencode::Iterative
Reply-To: modules@perl.org
To: modules@perl.org, giulienk@cpan.org
X-Spam-Check-By: one.develooper.com
X-Spam-Status: No, hits=1.1 required=7.0 tests=CARRIAGE_RETURNS,SPAM_PHRASE_00_01 version=2.44
X-SMTPD: qpsmtpd/0.26, http://develooper.com/code/qpsmtpd/
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Convert::Bencode::Iterative
  DSLIP:       adpfp
  description: Convert to/from bencoding (iterative way)
  userid:      GIULIENK (Giulio Motta)
  chapterid:   17 (Archiving_and_Compression)
  communities:

  similar:
    Convert::Bencode

  rationale:

    Convert::Bencode::Iterative gives an iterative solution to bencode
    and bdecode algorithms, usually expressed in a recursive way. As
    this functions could be used in a webserver tracker, an optimization
    of the algorithms lead to less load on the server. I don't think
    Convert::Bencode::Iterative should substitute Convert::Bencode even
    just cause Convert::Bencode algorithm is slower but nicer. For
    instance, Convert::Bencode::Iterative::bdecode function benchmarks
    to around 120 times faster than Convert::Bencode::bdecode, still I
    won't call the code pretty or easily understandable. Also I'd like
    to explore possible XS solutions in the future. The Bencoding
    serialization algorithm is described at
    http://bitconjurer.org/BitTorrent/protocol.html

  enteredby:   GIULIENK (Giulio Motta)
  enteredon:   Mon Oct 20 14:21:11 2003 GMT

The resulting entry would be:

Convert::Bencode::
::Iterative       adpfp Convert to/from bencoding (iterative way)    GIULIENK


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=db400000_f47bdca11ddd50cf&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=db400000_f47bdca11ddd50cf&SUBMIT_pause99_add_mod_insertit=1
