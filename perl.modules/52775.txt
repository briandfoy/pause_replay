Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:52775
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 8210 invoked from network); 26 Jan 2007 12:03:14 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 26 Jan 2007 12:03:14 -0000
Received: (qmail 19678 invoked by uid 225); 26 Jan 2007 12:03:14 -0000
Delivered-To: modules@perl.org
Received: (qmail 19644 invoked by alias); 26 Jan 2007 12:03:11 -0000
X-Spam-Status: No, hits=-2.5 required=8.0
	tests=BAYES_00,FORGED_RCVD_HELO
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
Received: from pause.fiz-chemie.de (HELO pause.perl.org) (195.149.117.110)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Fri, 26 Jan 2007 04:03:08 -0800
Received: from pause.perl.org (localhost.localdomain [127.0.0.1])
	by pause.perl.org (8.13.4/8.13.4/Debian-3sarge3) with ESMTP id l0QC2rrR021609;
	Fri, 26 Jan 2007 13:02:53 +0100
Received: (from nobody@localhost)
	by pause.perl.org (8.13.4/8.13.4/Submit) id l0QC2rgK021608;
	Fri, 26 Jan 2007 13:02:53 +0100
Date: Fri, 26 Jan 2007 13:02:53 +0100
Message-ID: <200701261202.l0QC2rgK021608@pause.perl.org>
Subject: Module submission File::Mirror
Reply-To: modules@perl.org
To: modules@perl.org, jwu@cpan.org
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       File::Mirror
  DSLIP:       adpOp
  description: Mapping one path and its contents to another
  userid:      JWU (Jianyuan Wu)
  chapterid:   10 (File_Names_Systems_Locking)
  communities:

  similar:
    File::Find File::Copy::Recursive

  rationale:

    Recursive directory operation is a very common task. However, it is
    hard to be generalized into one module. For example, recursive file
    copy can be done by File::Copy::Recusive, but what if the use want
    to copy and rewrite the file based on runtime info as well?

    Normally, people will use File::Find, and provide a wanted hook to
    do recursive directory operation. They can even call File::Copy to
    do recursive copy.

    But there is not an easy way to map the source filename to a
    different path. With File::Mirror, people can create a mirror
    between Path_A and Path_B, and then operate on each file with the
    mirrored path. An function reference can also be passed to provide
    customized operation on the file. Code sample: #Default recursive
    copy File::Mirror->new('Path_A', 'Path_B');

    #Custom operation File::Mirror->new('Path_A', 'Path_B', {...} );

  enteredby:   JWU (Jianyuan Wu)
  enteredon:   Fri Jan 26 12:02:53 2007 GMT

The resulting entry would be:

File::
::Mirror          adpOp Mapping one path and its contents to another JWU


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=b4e00000_6775d78051457bc2&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=b4e00000_6775d78051457bc2&SUBMIT_pause99_add_mod_insertit=1
