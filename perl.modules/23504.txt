Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:23504
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 56351 invoked by uid 76); 11 Sep 2003 18:59:49 -0000
Received: from qmailr@one.develooper.com (HELO ran-out.mx.develooper.com) (64.81.84.115) by onion.perl.org (qpsmtpd/0.26) with SMTP; Thu, 11 Sep 2003 11:59:49 -0700
Received: (qmail 19446 invoked by uid 225); 11 Sep 2003 18:59:41 -0000
Delivered-To: modules@perl.org
Received: (qmail 19441 invoked by uid 507); 11 Sep 2003 18:59:41 -0000
Received: from [212.40.160.59] (HELO pause.perl.org) (212.40.160.59) by one.develooper.com (qpsmtpd/0.27-dev) with ESMTP; Thu, 11 Sep 2003 11:59:40 -0700
Received: from pause.perl.org (localhost [127.0.0.1])	by pause.perl.org (8.12.3/8.12.3/Debian-6.4) with ESMTP id h8BIwjtc003445;	Thu, 11 Sep 2003 20:58:45 +0200
Received: (from nobody@localhost)	by pause.perl.org (8.12.3/8.12.3/Debian-6.4) id h8BIwjuY003443;	Thu, 11 Sep 2003 20:58:45 +0200
Date: Thu, 11 Sep 2003 20:58:45 +0200
Message-ID: <200309111858.h8BIwjuY003443@pause.perl.org>
Subject: Module submission Tie::Hash::Sorted
Reply-To: modules@perl.org
To: modules@perl.org, jgatcomb@cpan.org
X-Spam-Check-By: one.develooper.com
X-Spam-Status: No, hits=1.1 required=7.0 tests=CARRIAGE_RETURNS,SPAM_PHRASE_00_01 version=2.44
X-SMTPD: qpsmtpd/0.26, http://develooper.com/code/qpsmtpd/
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Tie::Hash::Sorted
  DSLIP:       bdphp
  description: Presents hashes in sorted order
  userid:      JGATCOMB (Joshua Gatcomb)
  chapterid:    6 (Data_Type_Utilities)
  communities:
    http://www.perlmonks.org/index.pl?node_id=289360

  similar:
    Tie::IxHash Tie::Hash::Array Tie::SortHash

  rationale:

    The name space was chosen because Tie::SortHash already exists. I
    believe it is descriptive as to what the module does.

    Comparisons to other modules
    -------------------------------------------------------- Tie::IxHash
    1. Preserves insertion order 2. Provides two sort routines,
    SortByKey & SortByValue, using textual compare

    Tie::Hash::Sorted 1. Order is maintained regardless of insertion
    order 2. Arbitrary sorting, may be changed at any time
    --------------------------------------------------------
    Tie::SortHash 1. Uses pseudo hashes (a deprecated perl feature) 2.
    Uses eval("...") for sorting 3. To generate the sorted list one
    time: Re-sort the list as many times as there are keys Loop over the
    hash as many times as there are keys, stopping on match Compare
    current key against last key (keys^2 + keys)/2 times Slow No support
    for lexical variables in sorting code Inflexible calling syntax

    Tie::Hash::Sorted 1. Uses no deprecated perl features (tested from
    5.004_3 .. 5.8.1) 2. Uses a proper code reference 3. To generate the
    sorted list one time: Potentially re-sort the list one time Add one
    to an iterator, and lookup the corresponding array element 4.
    Potentially slow but with opportunities for optimization 5. Supports
    lexicals, closures, etc 6. flexible/expandable calling syntax
    --------------------------------------------------------
    Tie::Hash::Array 1. Sorting is by textual comparison of key name

    Tie::Hash::Sorted 1. Arbitrary sorting, may be changed at any time
    --------------------------------------------------------

    I believe the module should be included because it provides
    functionality that the other modules do not, is flexible and
    expandable, and gives control to the user.

    Joshua Gatcomb JGATCOMB

  enteredby:   JGATCOMB (Joshua Gatcomb)
  enteredon:   Thu Sep 11 18:58:44 2003 GMT

The resulting entry would be:

Tie::Hash::
::Sorted          bdphp Presents hashes in sorted order              JGATCOMB


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=9a400000_2d17fa1c734979c0&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=9a400000_2d17fa1c734979c0&SUBMIT_pause99_add_mod_insertit=1
