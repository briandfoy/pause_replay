Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:47604
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 21026 invoked from network); 28 Feb 2006 09:27:00 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 28 Feb 2006 09:27:00 -0000
Received: (qmail 10697 invoked by uid 225); 28 Feb 2006 09:26:59 -0000
Delivered-To: modules@perl.org
Received: (qmail 10693 invoked by alias); 28 Feb 2006 09:26:59 -0000
X-Spam-Status: No, hits=-2.5 required=8.0
	tests=BAYES_00,FORGED_RCVD_HELO
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
Received: from pause.fiz-chemie.de (HELO pause.perl.org) (195.149.117.110)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Tue, 28 Feb 2006 01:26:56 -0800
Received: from pause.perl.org (localhost [127.0.0.1])
	by pause.perl.org (8.13.4/8.13.4/Debian-3) with ESMTP id k1S9QYnI026681;
	Tue, 28 Feb 2006 10:26:34 +0100
Received: (from nobody@localhost)
	by pause.perl.org (8.13.4/8.13.4/Submit) id k1S9QXct026678;
	Tue, 28 Feb 2006 10:26:34 +0100
Date: Tue, 28 Feb 2006 10:26:34 +0100
Message-ID: <200602280926.k1S9QXct026678@pause.perl.org>
Subject: Module submission Luka
Reply-To: modules@perl.org
To: modules@perl.org, tpg@cpan.org
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Luka
  DSLIP:       bdpOg
  description: Exception handling and reporting framework
  userid:      TPG (Toni Prug)
  chapterid:   20 (Control_Flow_Utilities)
  communities:
    RFC will be posted at
    http://london.pm.org/mailman/listinfo/london.pm

  similar:

  rationale:

    Luka comes from operational understanding of networks. It's useful
    to look at it as a special purpose event handling framework.
    Scenario that Luka is addressing is following: on a network with
    multiple hosts running multiple applications, it is very difficult
    to track operational status of all the functionality that those
    applications and hosts are meant to deliver. In order to make it
    easier, we decided to specify the error handling and reporting DATA
    MODEL that each component delivering functionality has to conform
    to. In most cases, component is a script, often run from cronjob, in
    some cases it is a class in an application. In all cases, a
    component has to successfully complete a task on which functionality
    of an application, or entire network, relies on. It is common
    practice that programmers choose their way of handling errors and
    reporting. Luka is an attempt to standardize that process. Its
    primary goal is to make it easier for smaller number of people to
    keep larger number of applications and networks running. Its heart
    are: a) event data model, b) set of principles (see README), most
    important one being that EACH time an error occurs following MUST be
    attempted: 1. Capture defined data set, 2. Log summary to the system
    log, 3. attempt delivery to defined end points. Luka package is
    first implementation of these principles.

  enteredby:   TPG (Toni Prug)
  enteredon:   Tue Feb 28 09:26:22 2006 GMT

The resulting entry would be:

Luka              bdpOg Exception handling and reporting framework   TPG


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=65c00000_f62742e8443e64ba&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=65c00000_f62742e8443e64ba&SUBMIT_pause99_add_mod_insertit=1
