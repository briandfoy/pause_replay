Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:17217
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 56443 invoked by uid 76); 20 Jan 2003 10:10:04 -0000
Received: from root@[212.40.160.59] (HELO pause.perl.org) (212.40.160.59) by onion.perl.org (qpsmtpd/0.20) with SMTP; 2003-01-20 10:10:04Z
Received: (from nobody@localhost)	by pause.perl.org (8.11.6/8.11.6) id h0KA9hg03482;	Mon, 20 Jan 2003 11:09:43 +0100
Date: Mon, 20 Jan 2003 11:09:43 +0100
Message-ID: <200301201009.h0KA9hg03482@pause.perl.org>
Reply-To: modules@perl.org
Subject: Module submission User::Identity
To: modules@perl.org, markov@cpan.org
X-SMTPD: qpsmtpd/0.20, http://develooper.com/code/qpsmtpd/
Approved: news@nntp.perl.org
From: upload@pause.x.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       User::Identity
  DSLIP:       idpOp
  description: User schizophrenia
  userid:      MARKOV (Mark Overmeer)
  chapterid:   12 (Opt_Arg_Param_Proc)
  communities:

  similar:
    User, AppConfig, MailTools

  rationale:

    [See related request for Mail::Identity name-space]

    A user's life on a system is growing more complex, and therefore,
    more powerful means of configuration are needed. As user, you have
    to remember passwords and loginnames for databases, imap folders,
    remote login. You have multiple email addresses, and use various
    languages where setttings should be different.

    In my development of Mail::Box, I have reached the point that the
    existing means of configuration are not sufficient anymore. Carying
    around info about a user in seperate values of an un-blessed hash is
    a hassle. Therefore, I need a nice object. I want to do it the nice
    way: not everything in the 'Mail' name space, but some in a 'User'
    area. It will be fully independent of Mail::Box.

    Planned classes: User::Identity Contains general info (defaults)
    for the user, like name etc. When you specify a fullname only, it
    tries to be smart and derived firstname, etc. Mail::Address does
    things like that. User::Identity::Postal Home-address, company's
    address, holiday address, each in a separate object.
    User::Identity::Collection Mail::Identity (*) Mail::Identity::IMAP
    Mail::Identity::Collection::Mutt ... maintain email alias files as
    User::Identity::Collection. Replaces Mail::Cap

    and so on... The need for Mail::Identity is urgent. For instance in
    my home situation, I use 10 e-mail address for different purposes.
    mailbox@overmeer.net for a mailinglist, website@craneveer.nl for a
    website of my town. For each of those, I have want to have a
    different 'From, 'Reply-To', footer, character encoding, etc. Of
    course, with a smart search and extendible interface.

    Small coding example: my $mail_id = $msg->sender; # a
    Mail::Identity my $user_id = User::Identity->from($mail_id); my
    $friends = User::Identity::Collection->file(...); $msg->delete
    unless $friends->find($user_id);

  enteredby:   MARKOV (Mark Overmeer)
  enteredon:   Mon Jan 20 10:09:43 2003 GMT

The resulting entry would be:

User::
::Identity        idpOp User schizophrenia                           MARKOV


Thanks for registering,
The Pause Team

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=7e100000_78cb707ee853d3e7&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=7e100000_78cb707ee853d3e7&SUBMIT_pause99_add_mod_insertit=1
