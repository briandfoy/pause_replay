Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:17289
Return-Path: <comdog@panix.com>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 18189 invoked by uid 76); 22 Jan 2003 00:33:02 -0000
Received: from sccrmhc03.attbi.com (HELO sccrmhc03.attbi.com) (204.127.202.63) by onion.perl.org (qpsmtpd/0.20) with SMTP; 2003-01-22 00:33:02Z
Received: from alexandria2-10.nyc.access.net (12-247-35-162.client.attbi.com[12.247.35.162])          by sccrmhc03.attbi.com (sccrmhc03) with SMTP          id <200301220032330030006gane>; Wed, 22 Jan 2003 00:32:33 +0000
Subject: Re: Module submission Object::BaseClass
Date: Tue, 21 Jan 2003 18:32:33 -0600
To: modules@perl.org
Cc: CORLISS@cpan.org
Organization: Perl Author's Upload SErver (PAUSE)
Reply-To: modules@perl.org
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-transfer-encoding: 8bit
References: <200301212237.h0LMbrM24658@pause.perl.org>
User-Agent: Thoth/1.5.9 (Carbon/OS X)
X-SMTPD: qpsmtpd/0.20, http://develooper.com/code/qpsmtpd/
Approved: news@nntp.perl.org
From: comdog@panix.com (_brian_d_foy)
Message-ID: <perl.modules-17289@nntp.perl.org>

In article <200301212237.h0LMbrM24658@pause.perl.org>, Perl Authors
Upload Server <upload@pause.x.perl.org> wrote:

> The following module was proposed for inclusion in the Module List:
> 
>   modid:       Object::BaseClass

should this be in Class::* ?

>   similar:
>     none that I'm aware of

how does this relate to the various modules in Class::, like

   Class::Classless
   Class::Object
   Class::Generate
   Class::Base
   Class::Fields
   Class::Accessor
   Class::Structured

>   rationale:

>     This provides an OO infrastructure similar to what other languages
>     have. The developer can define properties, state flags, w/rw/ro
>     property accessors and flag event handlers and the base class
>     provides the infrastructure to expose/manage all that automatically.

that sounds like Class::Accessor

>     In addition, it provides tracking of parent/child hierarchies, with
>     orderly termination of objects.

doesn't Perl already do this?

-- 
brian d foy (one of many PAUSE admins), http://pause.perl.org
please send all messages back to modules@perl.org
