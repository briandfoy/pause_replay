Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:9902
Return-Path: <gmaxia@mclink.it>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 65863 invoked by uid 76); 28 Jan 2002 08:32:27 -0000
Received: from net128-007.mclink.it (HELO mail.mclink.it) (195.110.128.7)
  by onion.perl.org (qpsmtpd/0.06) with SMTP; Mon Jan 28 08:32:27 2002 -0000
Received: from yuprid406 ([195.22.199.18])
	by mail.mclink.it (8.11.0/8.11.0) with SMTP id g0S8WKq01015;
	Mon, 28 Jan 2002 09:32:21 +0100 (CET)
To: modules@perl.org
Cc: Tim Bunce <Tim.Bunce@pobox.com>
Date: Mon, 28 Jan 2002 09:28:20 +0100
X-Priority: 3 (Normal)
Message-ID: <4ZTO9SPWRNHB1Y75NHA0E9ZTUPB9GC.3c550ba4@yuprid406>
Subject: Re: Module submission DBIx::Normalizer
MIME-Version: 1.0
Content-Type: text/plain; charset="us-ascii"
X-Mailer: Opera 6.0 build 1010
Approved: news@nntp.perl.org
From: gmaxia@mclink.it (Giuseppe Maxia)

31/12/2001 13:17:41, Tim Bunce <Tim.Bunce@pobox.com> wrote:

>Cool. But DBIx::* probably isn't the best place. DBIx:::* is intended
>more for modules that add a layer of functionality to the DBI API or
>that are similarly _very_ closely tied to it.
>
>It's not really a good place for application-level functionality.
>
>We also have an SQL::* namespace but that's not a good fit either.
>
>Maybe we need to open up something like a DbSchema::* category for
>modules related to the structure of database data. Then this one could
>be DbSchema::Normalizer.
>
>Any opinions from the team?

I was waiting for somebody more experienced to suggest something. However
Since mobody is making any proposal, here is mine:

DbSchema does not seem to be a bad choice, but what do we do with the existing
DBIx::DBSchema? Isn't a possible source of confusion?

To avoid such conflicts, I would use a different name, perhaps within  

DBIx::Applications
DBIx::Utils
DBIx::Admin
DBIx::Design
 
since these tasks are related to the design and adminstration of a DB.

Anyway, if there is no other choice, I would be glad to take DBSchema::Normalizer.

Thanks

Giuseppe

>
>Tim.
>
>
>On Mon, Dec 31, 2001 at 10:33:27AM +0100, Perl Authors Upload Server wrote:
>> 
>> The following module was proposed for inclusion in the Module List:
>> 
>>   modid:       DBIx::Normalizer
>>   DSLIP:       bdpOg
>>   description: 1st to 2nd normal form DB table converter
>>   userid:      GMAX (Giuseppe Maxia)
>>   chapterid:    7 (Database_Interfaces)
>>   communities:
>>     http://www.perlmonks.org/index.pl?node_id=132513
>> 
>>   similar:
>> 
>>   rationale:
>> 
>>     The Normalizer works with database tables, using the DBI as
>>     interface. Currently, it only works with MySQL tables, even though
>>     the algorithm is general, and it could be applied to other DBDs in
>>     future versions. Therefore I think that DBIx::Normalizer should be
>>     the most appropriate namespace. Moreover, being under DBIx, it will
>>     be easily separated from modules that deal with homonym functions
>>     for Unicode.
>> 
>>     The Normalizer is a OO module to help the Database Designer to
>>     convert database tables from 1st to 2nd Normal form. The algorithm
>>     is mostly SQL based, but the Perl interface makes the task much
>>     easier than manual coding. Using this module, fifteen lines of Perl
>>     are enough to accomplish most normalization tasks. Fine tuning of
>>     input/output is also available.
>> 
>>     Future versions will also include support for common tasks when
>>     converting from 0th to 1st normal form.
>> 
>>     There hasn't been any such utility available so far in the Free
>>     Software community.
>> 
>>     More details at this address
>>     http://gmax.oltrelinux.com/Normalizer.html
>> 
>>   enteredby:   GMAX (Giuseppe Maxia)
>>   enteredon:   Mon Dec 31 09:33:26 2001 GMT
>> 
>> The resulting entry would be:
>> 
>> DBIx::
>> ::Normalizer      bdpOg 1st to 2nd normal form DB table converter    GMAX
>> 
>> 
>> Thanks for registering,
>> The Pause Team
>> 
>> PS: The following links are only valid for module list maintainers:
>> 
>> Registration form with editing capabilities:
>>   https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=2b200000_8fee713050c4900e&SUBMIT_pause99_add_mod_preview=1
>> Immediate (one click) registration:
>>   https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=2b200000_8fee713050c4900e&SUBMIT_pause99_add_mod_insertit=1
>
>

  ____ ____  _____ _   _
 / _  |    \(____ ( \ / )
( (_| | | | / ___ |) X (
 \___ |_|_|_\_____(_/ \_)
(_____|





