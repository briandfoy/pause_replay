Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:10267
Return-Path: <stephen@unixtown.com>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 66309 invoked by uid 76); 18 Feb 2002 06:14:59 -0000
Received: from svr1.marketrends.net (HELO svr1.marketrends.net) (216.171.218.1)
  by onion.perl.org (qpsmtpd/0.06) with SMTP; Mon Feb 18 06:14:59 2002 -0000
Received: from laptopstephen (pcp878924pcs.sarast01.fl.comcast.net [68.56.66.90])
	by svr1.marketrends.net (8.11.3/8.9.3) with SMTP id g1I6F4g14809
	for <modules@perl.org>; Sun, 17 Feb 2002 22:15:05 -0800 (PST)
	(envelope-from stephen@unixtown.com)
To: <modules@perl.org>
Subject: Request to contribute
Date: Mon, 18 Feb 2002 01:19:01 -0500
Message-ID: <NEBBJKONOLIAIPFMFOMMOEMDMFAA.stephen@unixtown.com>
MIME-Version: 1.0
Content-Type: text/plain;
	charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
X-Priority: 3 (Normal)
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook IMO, Build 9.0.2416 (9.0.2910.0)
Importance: Normal
X-MimeOLE: Produced By Microsoft MimeOLE V5.50.4133.2400
Approved: news@nntp.perl.org
From: stephen@unixtown.com ("Stephen Martin")

Hello,
here are my details

Name 		: Stephen Martin

Email		: stephen@unixtown.com

Homepage	: http://www.unixtown.com/resume <-- about me
		: http://www.unixtown.com  <-- Unix resource search engine


Preferred id: UNIXTOWN

Description	:

SOAP::Payload

I have written a very short module that can take either an array_hashref,
string or array
and return an XML/SOAP envelope. This module is designed to interface with
DBI
and allow database result sets to be turned into SOAP envelopes.

Here is an example of the output..

<?xml version='1.0'?>
<s:Envelope
 xmlns:s="http://schemas.xmlsoap.org/soap/envelope/"
 xmlns:xsi="http://www.w3.org/1999/XMLSchema-instance"
 xmlns:xsd="http://www.w3.org/1999/XMLSchema">
<s:Header>
 <m:transaction xmlns:m="soap-transaction" s:mustUnderstand="true">
  <transactionID>23080</transactionID>
 </m:transaction>
</s:Header>
<s:Body>
 <m:sayHello xmlns:m='urn:XML_module'>
        <!-- XML Data Structure begins -->
        <DATA_STRUCTURE>
        <DATA coat_desc="B/Cards Hot Gloss" coat_id="1" />
        <DATA coat_desc="B/Cards Cool Satin" coat_id="2" />
        <DATA coat_desc="Postcards (Hot Gloss Only)" coat_id="3" />
        <DATA coat_desc="DL Cards (Hot Gloss Only)" coat_id="4" />
        <DATA coat_desc="A4 Brochures (No Coating)" coat_id="5" />
        </DATA_STRUCTURE>
        <!-- XML Data Structure ends -->
 </m:sayHello>
</s:Body>
</s:Envelope>

This was the result of feeding the module some results from a MYSQL
database.
I have verified the results in XMLwriter and with XML::Parser and the module
produces valid XML.

Some point in the near future I intend to add a method to capture the above
input and return it a form ready for use by an application or script.
But for the moment I'd like to see my initial idea publicly available.

Stephen



