Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:6635
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 34450 invoked from network); 18 Jul 2001 20:50:54 -0000
Received: from dubravka.kbx.de (HELO pause.perl.org) (root@212.40.160.59)
  by onion.valueclick.com with SMTP; 18 Jul 2001 20:50:54 -0000
Received: (from nobody@localhost)
	by pause.perl.org (8.9.3/8.9.3) id WAA04887;
	Wed, 18 Jul 2001 22:50:52 +0200
Date: Wed, 18 Jul 2001 22:50:52 +0200
Message-ID: <200107182050.WAA04887@pause.perl.org>
Reply-To: modules@perl.org
Subject: Module submission Async::Callback
To: modules@perl.org
X-Spam-Rating: onion.valueclick.com 1.6.2 0/1000/N
Approved: news@nntp.perl.org
From: upload@p11.speed-link.de ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Async::Callback
  DSLIP:       bdchp
  description: Asynchronous C callbacks for XS modules
  userid:      DMLLOYD (David Lloyd)
  chapterid:   20 (Control_Flow_Utilities)
  communities:
    Briefly on p5p, also per6-language

  similar:

  rationale:

    I chose Async::Callback mainly because Callback is taken. :-) I'm a
    bit hesitant to use this namespace since the other Async modules
    seem to have somewhat unrelated functionality. The idea is that you
    can do lots of things based on the Async::Callback module. For
    instance, the first module I will write based on this is
    Async::Callback::Select, which will asynchronously call a Perl
    function when a filehandle is ready. Any polling loop or event-based
    system can be easily implemented with this module. Also, threaded
    applications can take advantage of this interface to work with
    threads even if your Perl isn't threaded because the callback
    management functions are threadsafe when linked with pthreads. You
    could build profilers and debuggers too, without worrying about one
    module overriding another module's PL_runops assignment. So there
    could potentially be lots of Async::Callback::xxx floating around...
    maybe I should use a root namespace after all?

    If you have ideas for a better place than Async::Callback to put
    this, let me know... I'm flexible. :-)

    Have a nice day.

  enteredby:   DMLLOYD (David Lloyd)
  enteredon:   Wed Jul 18 20:50:52 2001 GMT

The resulting entry would be:

Async::
::Callback        bdchp Asynchronous C callbacks for XS modules      DMLLOYD


Thanks for registering,
The Pause Team

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=a3000000_8e5a7377f691a530&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=a3000000_8e5a7377f691a530&SUBMIT_pause99_add_mod_insertit=1
