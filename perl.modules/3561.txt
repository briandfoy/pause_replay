Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:3561
Return-Path: <avatar@deva.net>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 15625 invoked from network); 16 Nov 2000 06:32:13 -0000
Received: from asgard.deva.net (203.85.103.1)
  by tmtowtdi.perl.org with SMTP; 16 Nov 2000 06:32:13 -0000
Received: from glitnir.deva.net (glitnir.deva.net [192.168.1.8])
	by asgard.deva.net (8.10.0/8.10.0) with ESMTP id eAG6Zi009059
	for <modules@perl.org>; Thu, 16 Nov 2000 14:35:44 +0800
Received: (from avatar@localhost)
	by glitnir.deva.net (8.8.8/8.8.7) id OAA01837
	for modules@perl.org; Thu, 16 Nov 2000 14:32:09 +0800
Date: Thu, 16 Nov 2000 14:32:09 +0800
To: modules@perl.org
Subject: Re: Register module "IniFile" in the module list
Message-ID: <20001116143209.A439@glitnir.deva.net>
References: <20001115152029.A953@glitnir.deva.net> <m3k8a5ja8y.fsf@ak-71.mind.de>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.1.9i
In-Reply-To: <m3k8a5ja8y.fsf@ak-71.mind.de>; from andreas.koenig@anima.de on Wed, Nov 15, 2000 at 08:39:09PM +0100
Organization: Deva.net
Approved: news@nntp.perl.org
From: avatar@deva.net (Albert K T Hui)

On Wed, Nov 15, 2000 at 08:39:09PM +0100, Andreas J. Koenig wrote:
> But IniFile? Why not Win32::IniFile? Isn't it strictly speaking a
> Win32 module? Is there any standard associated with .ini nd .reg files
> tht make it likely or even possible that these file formats will be
> deployed outside Win32?

IniFile was written originally to support .ini file access on Unix
platforms (for the Linux port of Unreal Tournamet).  As more and more
Windows programs are being ported to Unices, there is a growing demand
for this kind of routines outside Win32, albeit still uncommon.  I think
that when a Unixer looks for tools to access .ini files, it is quite
unlikely for him to look in the Win32 tree as many of the Win32 modules
contain native codes (IniFile is Perl-only).  Moreover, Win32::Tie::Ini
already provides .ini access by issuing Win32 calls;  if I were to write
a Win32 program from scratch I would use Win32::Tie::Ini because it is
better to make use of native platform facilities.

That said, I would agree to changing it to Win32::IniFile.  Please tell
me what you think.  Thank you.

-- 
Avatar
