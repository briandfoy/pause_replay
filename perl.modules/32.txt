Newsgroups: perl.perl5.porters,perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.perl5.porters:2293 perl.modules:32
Return-Path: <mike808@my-deja.com>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 13276 invoked from network); 14 Oct 1999 15:29:53 -0000
Received: from mc-qout4.whowhere.com (209.185.123.18)
  by tmtowtdi.perl.org with SMTP; 14 Oct 1999 15:29:53 -0000
Received: from Unknown/Local ([?.?.?.?]) by my-deja.com; Thu Oct 14 08:29:13 1999
To: modules@perl.org
Date: Thu, 14 Oct 1999 08:29:13 -0700
Message-ID: <CGEEOHONIIJBAAAA@my-deja.com>
Mime-Version: 1.0
Cc: perl5-porters@perl.org
X-Sent-Mail: on
Reply-To: 
X-Mailer: MailCity Service
Subject: Re: NEW MODULE (pragma): import.pm 
X-Sender-Ip: 207.239.112.18
Organization: My Deja Email  (http://www.my-deja.com:80)
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Approved: news@nntp.perl.org
From: mike808@my-Deja.com ("Michael King")

On Mon, 11 Oct 1999 22:52:57   Tom Christiansen wrote:
>I'm also concerned about
>    use CGI;
>versus
>    use import 'CGI';
>versus
>    import CGI;
>I just don't see those as different enough.

The WHOLE POINT of the module/pragma is to make Really::Long::Namespaces::That::Programmers::Hate::To::Type *alot* easier to use without cluttering up their program with FQPNs. IMHO, it only adds noise to the code.

I don't recommend (ab)using the module/pragma in the above case. What exactly was your intent / reasoning for using the module in that code example? What did you need my module to do for you that just 'use CGI' didn't already do? I think the example is contrived, and therefore, the problematic results are contrived. It's not a problem I need to fix. (I address the module/directory both existing problem in another posting.)

I think the heart of this issue that Tom brings up(although the code example is bogus) is for accessing modules that either don't or won't export useful symbols into the caller's namespace. Also, many times, I *don't want* my namespace cluttered up by some other modules symbols. I just want a shorthand notation that makes my code cleaner, not more cluttered.

For a module that lets me pick and choose, I don't need 'import'. But when I've got 35 modules to import from some arbitrarily deep namespace, 'import' makes my life much easier, and my code easier to read and understand.

I plan to take these topics (as they are constructive) and incorporate them into the next revision of the documentation, if that makes anyone feel better.
Michael


--== Sent via Deja.com http://www.deja.com/ ==--
Share what you know. Learn what you don't.
