Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:15177
Return-Path: <chris@clotho.com>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 31583 invoked by uid 76); 11 Nov 2002 15:18:58 -0000
Received: from lachesis.clotho.com (HELO lachesis.clotho.com) (63.96.17.20) by onion.perl.org (qpsmtpd/0.12) with SMTP; 2002-11-11 15:18:58Z
Received: from clotho.com ([63.96.17.110])	by lachesis.clotho.com (8.11.6/8.11.6) with ESMTP id gABFItF04788	for <modules@perl.org>; Mon, 11 Nov 2002 09:18:55 -0600
Message-ID: <3DCFCA5F.9010802@clotho.com>
Date: Mon, 11 Nov 2002 09:18:55 -0600
Organization: Clotho Advanced Media
User-Agent: Mozilla/5.0 (Macintosh; U; PPC Mac OS X; en-US; rv:1.2b) Gecko/20021022
X-Accept-Language: en-us, en
MIME-Version: 1.0
To: modules@perl.org
Subject: Re: Module submission CAM::Template
References: <200211090151.gA91pGp14459@pause.perl.org> <20021110052741.BSZJ3205.sccrmhc03.attbi.com@10-0-1-2>
In-Reply-To: <20021110052741.BSZJ3205.sccrmhc03.attbi.com@10-0-1-2>
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
X-SMTPD: qpsmtpd/0.12, http://develooper.com/code/qpsmtpd/
Approved: news@nntp.perl.org
From: chris@clotho.com (Chris Dolan)

_brian_d_foy wrote:
> In article <200211090151.gA91pGp14459@pause.perl.org>, Perl Authors Upload Server <upload@p11.speed-link.de> wrote:
> 
> 
>>  modid:       CAM::Template
> 
> 
>>  similar:
>>    HTML::Template
>>
>>  rationale:
>>
>>    This module used to be proprietary code of Clotho Advanced Media
>>    ("CAM") but is now released under the GPL.
> 
> 
> CAM makes me think of "Computer Aided Modeling".  i don't think
> anyone is going to think "Clotho".
> 
> how is templating system different from the many others?
> 

You have a good point.  "Clotho" would perhaps be a more readable
prefix.  However, we have been using the "CAM" root namespace for a long
while, internally and on customer sites.  We would prefer to leave it as
"CAM", but will change it for public releases if there is strong objection.

From a public standpoint, the main advantage of our templating system
over HTML::Template is that ours supports an easily modifiable template
syntax.  I currently use CAM::Template to support two incompatible sets
of templates.

From a personal standpoint, the main advantage of CAM::Template is that
it supports the specific template syntaxes that are used in our projects
(selfish, I know).

Furthermore, the CAM::Template API is extended in a few subclasses that
we use internally (not yet publicly released): CAM::EmailTemplate
(sending templated email messages) and CAM::Template::Cache (storing the
 filled template in a MySQL cache).

Chris Dolan

