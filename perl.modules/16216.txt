Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:16216
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 60201 invoked by uid 76); 15 Dec 2002 17:13:08 -0000
Received: from root@[212.40.160.59] (HELO pause.perl.org) (212.40.160.59) by onion.perl.org (qpsmtpd/0.20) with SMTP; 2002-12-15 17:13:08Z
Received: (from nobody@localhost)	by pause.perl.org (8.11.6/8.11.6) id gBFHD4B10362;	Sun, 15 Dec 2002 18:13:04 +0100
Date: Sun, 15 Dec 2002 18:13:04 +0100
Message-ID: <200212151713.gBFHD4B10362@pause.perl.org>
Reply-To: modules@perl.org
Content-Type: Text/Plain; Charset=ISO-8859-1
Content-Transfer-Encoding: 8bit
MIME-Version: 1.0
Subject: Module submission Proc::Watchdog
To: modules@perl.org, luismunoz@cpan.org
X-SMTPD: qpsmtpd/0.20, http://develooper.com/code/qpsmtpd/
Approved: news@nntp.perl.org
From: upload@p11.speed-link.de ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Proc::Watchdog
  DSLIP:       RdpOp
  description: Reliably timeout operations without ALRM
  userid:      LUISMUNOZ (Luis Muñoz)
  chapterid:    4 (Operating_System_Interfaces)
  communities:

  similar:

  rationale:

    There are some scenarios (notably, DBD::Oracle) when traditional
    alarm() cannot be used to timeout from a blocked operation.
    Proc::Watchdog implements a service that allows the reliable
    detection of timeouts, even in cases where ALRM cannot be used.

    It contains the name 'Watchdog' because part of the use of this
    module, involves running a watchdog process in the background,
    looking for timeouts.

  enteredby:   LUISMUNOZ (Luis Muñoz)
  enteredon:   Sun Dec 15 17:13:04 2002 GMT

The resulting entry would be:

Proc::
::Watchdog        RdpOp Reliably timeout operations without ALRM     LUISMUNOZ


Thanks for registering,
The Pause Team

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=cf300000_e7e560f9dfd1ba46&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=cf300000_e7e560f9dfd1ba46&SUBMIT_pause99_add_mod_insertit=1
