Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:16195
Return-Path: <ed@halley.cc>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 75583 invoked by uid 76); 14 Dec 2002 15:29:03 -0000
Received: from ip68-9-30-215.ri.ri.cox.net (HELO localhost.localdomain) (68.9.30.215) by onion.perl.org (qpsmtpd/0.20) with SMTP; 2002-12-14 15:29:03Z
Received: from localhost.localdomain (halley9 [127.0.0.1])	by localhost.localdomain (8.12.5/8.12.5) with ESMTP id gBEFT5m0004137	for <modules@perl.org>; Sat, 14 Dec 2002 10:29:05 -0500
Received: (from halley@localhost)	by localhost.localdomain (8.12.5/8.12.5/Submit) id gBEFT5Us004135;	Sat, 14 Dec 2002 10:29:05 -0500
X-Authentication-Warning: localhost.localdomain: halley set sender to ed@halley.cc using -f
Subject: Namespace proposal Antic::* for an integrated suite of modeling	classes
To: modules@perl.org
Content-Type: text/plain
Content-Transfer-Encoding: 7bit
X-Mailer: Ximian Evolution 1.0.8 (1.0.8-10) 
Date: 14 Dec 2002 10:29:05 -0500
Message-ID: <1039879745.4038.13.camel@halley9>
Mime-Version: 1.0
X-SMTPD: qpsmtpd/0.20, http://develooper.com/code/qpsmtpd/
Approved: news@nntp.perl.org
From: ed@halley.cc (Ed Halley)


In the next couple of months, I'll be ready to add a small library of
modules which are useful for creating and managing a persistent and
evolving data model, and the dynamics of the interaction between objects
in that model.  It's alpha-functional now but it needs cleanup and
completeness.

The library is tightly integrated but may be useful to many
applications, either as an embedded solution or as the core engine of a
program.  I've considered its use in MUDs, AI bots, and self-directed
data mining agents, but have not yet implemented any of these on this
perl version.  Once the library is implemented, I'll start looking for
people interested in exploring those directions and seed the projects
with proofs of concept.

I've chosen the word 'Antic' to refer to this library.  (The word
'antic' refers to extravagant behaviors and actions, which this library
models.) 

Antic may belong under an established subtree (foo::Antic::*), but I
think it may belong at the top level due to its wide applicability to
different kinds of programs. 

The central four classes, OOP style, are named: 

   Antic::Item - a model of an independent interactive entity 
   Antic::Store - manage a set of items (extensions offer persistence) 
   Antic::Action - a model of a single element of behavior or action 
   Antic::Engine - process and distribute observed actions and reactions

As per the PAUSE guidelines, I'm looking for guidance on whether this
should not be a top-level library, and if not, how or why.  I'll then
proceed to register the 'Antic' namespace. 

-- 
[ e d @ h a l l e y . c c ]
