Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:1246
Return-Path: <ghutchis@wso.williams.edu>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 30320 invoked from network); 2 Mar 2000 21:21:46 -0000
Received: from wso.williams.edu (postfix@137.165.37.207)
  by tmtowtdi.perl.org with SMTP; 2 Mar 2000 21:21:46 -0000
Received: by wso.williams.edu (Postfix, from userid 603)
	id 9D4FF2E556; Thu,  2 Mar 2000 16:21:41 -0500 (EST)
Received: from localhost (localhost [127.0.0.1])
	by wso.williams.edu (Postfix) with ESMTP
	id 966452E552; Thu,  2 Mar 2000 16:21:41 -0500 (EST)
Date: Thu, 2 Mar 2000 16:21:41 -0500 (EST)
To: Matt Sergeant <matt@sergeant.org>
Cc: modules@perl.org, Perl-XML@lyris.activestate.com
Subject: Re: XML::Template
In-Reply-To: <00030220084403.12182@dougal.sergeant.org>
Message-ID: <Pine.LNX.4.10.10003021603580.27906-100000@wso.williams.edu>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Approved: news@nntp.perl.org
From: ghutchis@wso.williams.edu (Geoff Hutchison)
References: <00030220084403.12182@dougal.sergeant.org>


Matt,

Yes, I would like to join the mailing list, though I'm wearing a few too
many hats at once at the moment. So I may not do it immediately. :-(

I picked the name for two reasons:
1) I wished to differentiate the module from the already-existing Text::
and HTML:: variants on the same theme, which did not use legitimate XML
constructs.
2) While I wrote the parser as a quick-and-dirty hack, I intended to
reformulate it into an XML parser when I had the chance.

> noticed has nothing whatsoever to do with XML, except for using angle
> bracket tags for markup (but not using them in an XML compliant manner).

If the syntax is not using tags in an XML compliant manner, then please
let me know what's incorrect about the syntax (and chalk it up to
XML-novice mistake!). Yes, the parser does not force the the output to be
strict XML, but I suspect some people would debate how important this is.

> Should we as the Perl-XML community be "cracking down" on these modules and
> telling module authors (or CPAN maintainers) that they have no rights to
> use the term XML, and/or no rights to the XML namespace?

I certainly don't take any offense at the topic, in fact I think it's
quite important. As the author, I'd boil it down to one question:

Does the module need to enforce compliant XML, or is the only requirement
that the template language itself is XML?

A second (related) question would be whether a module of this type can
only process XML input, or whether other SGML or even text files are OK?

Cheers,
-Geoff Hutchison
Williams Students Online
http://wso.williams.edu/

