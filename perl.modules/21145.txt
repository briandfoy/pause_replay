Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:21145
Return-Path: <jgorman@webbysoft.com>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 69204 invoked by uid 76); 15 May 2003 13:06:21 -0000
Received: from qmailr@one.develooper.com (HELO ran-out.mx.develooper.com) (64.81.84.115) by onion.perl.org (qpsmtpd/0.26-dev) with SMTP; Thu, 15 May 2003 06:06:21 -0700
Received: (qmail 31310 invoked by uid 225); 15 May 2003 13:06:15 -0000
Delivered-To: modules@perl.org
Received: (qmail 31290 invoked by uid 507); 15 May 2003 13:06:07 -0000
Received: from nx.eastlink.ca (HELO mx2.eastlink.ca) (24.222.0.30) by one.develooper.com (qpsmtpd/0.26-dev) with SMTP; Thu, 15 May 2003 06:05:04 -0700
Received: from localhost.localdomain ([24.222.6.16]) by mx2.eastlink.ca (iPlanet Messaging Server 5.2 HotFix 1.12 (built Feb 13 2003)) with ESMTP id <0HEX008XOIU8JL@mx2.eastlink.ca> for modules@perl.org; Thu, 15 May 2003 10:01:20 -0300 (ADT)
Date: Thu, 15 May 2003 10:01:19 -0300
Subject: Re: Module submission DBIx::CodeKit
In-reply-to: <20030514204400.GC44573@dansat.data-plan.com>
To: Tim Bunce <Tim.Bunce@pobox.com>
Cc: Arthur Bergman <sky@nanisky.com>, modules@perl.org
Message-ID: <1053003680.8614.1584.camel@webian>
MIME-version: 1.0
X-Mailer: Ximian Evolution 1.0.5
Content-type: text/plain
Content-transfer-encoding: 7BIT
References: <659270BA-8620-11D7-B7C5-000393CB5BC4@nanisky.com> <1052939051.8615.1532.camel@webian> <20030514204400.GC44573@dansat.data-plan.com>
X-SMTPD: qpsmtpd/0.26-dev, http://develooper.com/code/qpsmtpd/
X-Spam-Check-By: one.develooper.com
X-Spam-Status: No, hits=-1.0 required=7.0 tests=CARRIAGE_RETURNS,IN_REP_TO,QUOTED_EMAIL_TEXT,REFERENCES,SPAM_PHRASE_00_01 version=2.44
X-SMTPD: qpsmtpd/0.26-dev, http://develooper.com/code/qpsmtpd/
Approved: news@nntp.perl.org
From: jgorman@webbysoft.com (John Gorman)

On Wed, 2003-05-14 at 17:44, Tim Bunce wrote:
> On Wed, May 14, 2003 at 04:04:11PM -0300, John Gorman wrote:
> > 
> > A universal code table (my term, I have never seen
> > this anywhere else) is where you create a single
> > database table that can hold any number of virtual
> > code tables like this:
> 
> I'd describe it as something like 'lookup table management'
> rather than 'universal code table' which means little to anyone
> as they've not seen the term elsewhere either.

Hi Tim

Hmm.  'lookup table'.  I have always called them
'code tables', perhaps because they are only used
to look up code descriptions and don't keep any
other related data as a general lookup table
often does .  In the general sense of a relational
join all RDBMS tables are lookup tables :-)

Perhaps 'code lookup table'?

I do like the 'universal' part of the name because
the idea of folding all code lookup tables into
a single physical table seems to be somewhat unique.
I have never seen this implemented or mentioned
anywhere.

How about:

CodeKit  - Universal Code Lookup Table
BabelKit - Universal Multilingual Code Lookup Table

BTW, thanks for all of your work over the years.

Cheers, John

