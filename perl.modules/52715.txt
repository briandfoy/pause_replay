Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:52715
Return-Path: <cpan@ali.as>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 14078 invoked from network); 22 Jan 2007 23:04:57 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 22 Jan 2007 23:04:57 -0000
Received: (qmail 24793 invoked by uid 225); 22 Jan 2007 23:04:56 -0000
Delivered-To: modules@perl.org
Received: (qmail 24760 invoked by alias); 22 Jan 2007 23:04:55 -0000
X-Spam-Status: No, hits=-4.4 required=8.0
	tests=ALL_TRUSTED,BAYES_00
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: neutral (x1.develooper.com: local policy)
Received: from x6.develooper.com (HELO lists.develooper.com) (63.251.223.186)
    by la.mx.develooper.com (qpsmtpd/0.28) with SMTP; Mon, 22 Jan 2007 15:04:53 -0800
Received: (qmail 14062 invoked by uid 515); 22 Jan 2007 23:04:49 -0000
Message-ID: <20070122230449.14061.qmail@lists.develooper.com>
To: modules@perl.org
Date: Tue, 23 Jan 2007 10:02:46 +1100
User-Agent: Thunderbird 1.5.0.9 (Windows/20061207)
MIME-Version: 1.0
Subject: Re: Module proposal questions
References: <45B41B6D.6010804@cpan.org>
In-Reply-To: <45B41B6D.6010804@cpan.org>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-Posted-By: 124.188.112.75
Approved: news@nntp.perl.org
From: cpan@ali.as (Adam Kennedy)

E. Sammer wrote:
> Adam Kennedy wrote:
>> What you are proposing falls into the "framework" class of modules.
> 
> Right.
> 
>> It's generally considered impossible to create a framework that can 
>> cover ALL classes of applications.
> 
> Right. That's why I was working on something new rather than trying to 
> contribute to something existing. I have a particular area in which I'm 
> building applications and what I have seems to be (at least the 
> beginning of) something that fits what I need, and hopefully others can 
> find it useful as well.
> 
>> For example, does your ORM layer block on database calls, by using DBI 
>> for example? If so, it's entirely useless for asynchronous programming 
>> of the type that the POE module provides.
> 
> ...and that's kind of my point. While POE seems extremely cool, it 
> solves a particular problem area I'm not focused on and has requirements 
> that I don't have. And, yes, the O/RM layer is synchronous. :)
> 
>> Unlike modules that are built up as single components (bottom up 
>> style) the frameworks define the scope of applications. In that sense, 
>> they limit the applications and work top down.
> 
> Right, or, to put it another way, frameworks make use of ideas like 
> Inversion of Control (IoC containers - 
> http://en.wikipedia.org/wiki/Inversion_of_Control).
> 
>> Because there are so many potential variations of these (tieing 
>> together lots of components) often it's preferable that the module go 
>> into the CPAN as a "branded" module.
>>
>> For example, Jifty, Catalyst et al for web frameworks.
>>
>> There's just so many different potential ways to make web apps, you 
>> can't get a module name such as Web::Application etc.
> 
> That's what I was thinking as well, but even these kinds of modules need 
> to be categorized within the CPAN directory, don't they? I'm just not 
> sure which category to select when I submit the namespace registration 
> form.

You may just have to make a judgement call on that...

Personally, I don't like the categories at all.

Adam K
