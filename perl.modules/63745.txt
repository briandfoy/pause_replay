Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:63745
Return-Path: <mlpalii@gmail.com>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Delivered-To: moderator for modules@perl.org
Received: (qmail 2548 invoked from network); 23 Dec 2008 06:33:32 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by x6.develooper.com with SMTP; 23 Dec 2008 06:33:32 -0000
Received: (qmail 927 invoked by uid 225); 23 Dec 2008 06:33:31 -0000
Delivered-To: modules@perl.org
Received: (qmail 917 invoked by alias); 23 Dec 2008 06:33:31 -0000
X-Spam-Status: No, hits=0.0 required=8.0
	tests=DK_SIGNED,HTML_MESSAGE,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received: from mail-gx0-f10.google.com (HELO mail-gx0-f10.google.com) (209.85.217.10)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Mon, 22 Dec 2008 22:33:28 -0800
Received: by gxk3 with SMTP id 3so1884160gxk.2
        for <modules@perl.org>; Mon, 22 Dec 2008 22:33:23 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=gamma;
        h=domainkey-signature:received:received:message-id:date:from:to
         :subject:in-reply-to:mime-version:content-type:references;
        bh=FQG196mh6itaIjQF3W6FQq0njtIuZrMFAMmVRn6NqPw=;
        b=uo6BSoUHerrcXKqdd7/LwaZLXk/rbE4YniOCe7Jm74qr/DpqrdsF9IHwFr8hHuTt+H
         aWSg3FLN/XltcncJ9+UHgYH8DaPrOqAgv/pDxgzUskIIR5Tc3kmHRoIevQWZVmdswPOn
         BJQ9+IwupRzffcTEU7/gLKsygO5IW7UoxBpFE=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=gamma;
        h=message-id:date:from:to:subject:in-reply-to:mime-version
         :content-type:references;
        b=RFW+9Kecd2i6PbrV7RB8NFyoC0ZdsEwVDvafKHLnvE1/iflmaXnu6jvnF5ak/QZf5H
         X2LuItiDll0QoIhRC6tThB1lUD1mytpaVMo1vEJ0olyp/7WZ3qEV2X7BeQa9CueBPssV
         NMuodTNEAQPru8jd41I+jv+42J8GbJ7IzLBO8=
Received: by 10.90.101.17 with SMTP id y17mr3683531agb.48.1230014003242;
        Mon, 22 Dec 2008 22:33:23 -0800 (PST)
Received: by 10.90.78.6 with HTTP; Mon, 22 Dec 2008 22:33:23 -0800 (PST)
Message-ID: <f90c93ad0812222233r4cc78ed8ycbaff37874f76390@mail.gmail.com>
Date: Tue, 23 Dec 2008 01:33:23 -0500
To: modules@perl.org
Subject: Re: Namespace suggestions?
In-Reply-To: <221220081903594157%brian.d.foy@gmail.com>
MIME-Version: 1.0
Content-Type: multipart/alternative; 
	boundary="----=_Part_70852_25320659.1230014003235"
References: <f90c93ad0812202151k3c11efacjb217c8e9245a417e@mail.gmail.com>
	 <221220081903594157%brian.d.foy@gmail.com>
Approved: news@nntp.perl.org
From: mlpalii@gmail.com ("Miorel L. Palii")

------=_Part_70852_25320659.1230014003235
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

Thanks for your reply.

I know of two PDB-related CPAN modules (where PDB is the Protein Data Bank).
They are Chemistry::File::PDB (which ignores most record types) and
Bio::Structure::IO::pdb in BioPerl. Both of these deal with files in the
Protein Data Bank's format, which is described at
http://www.wwpdb.org/docs.html

The module I'd like to contribute and call PDB interacts with the Protein
Data Bank's web services. Except for a few methods which needed extra
processing, it wraps calls to a SOAP::Lite instance. I did this because I
grew tired of writing code like
http://www.rcsb.org/robohelp/webservices/samples/perl_samples.htm each time.
The module additionally has methods for retrieving files in various formats
from the PDB archive. These can obviously be fed to either of the
aforementioned CPAN modules.

So it's true, this might go in BioPerl. Or maybe it should be WWW::PDB
because it deals with a web service. The reason I suggested straight-up PDB
is because I'm trying to think ahead to the next set of contributions I plan
to make. One of these would be a module to mount the PDB as a file system
with FUSE. Now THAT would make a strange addition to BioPerl (or maybe a
strange addition in principle). WWW::PDB::Fuse might possibly work, though
it's still rather weird. Another module I plan on contributing will read the
PDB's file format. Yes, it will reinvent some wheels, but I also think it
will be useful, though that's a story for another time. For starters I will
be contributing only one module (the one described above), but I suppose I'm
trying to prepare an umbrella for future Protein Data Bank modules. This
will at least localize confusion with the Perl debugger because there's
plenty of that already from all the Palm PDB modules.

Therefore I stand by my initial suggestion of using PDB as the namespace,
but I welcome better ideas. Plus I don't have any authority here, so I will
have to accept your judgement :)

------=_Part_70852_25320659.1230014003235
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

Thanks for your reply.<br><br>I know of two PDB-related CPAN modules (where PDB is the Protein Data Bank). They are Chemistry::File::PDB (which ignores most record types) and Bio::Structure::IO::pdb in BioPerl. Both of these deal with files in the Protein Data Bank&#39;s format, which is described at <a href="http://www.wwpdb.org/docs.html">http://www.wwpdb.org/docs.html</a><br>
<br>The module I&#39;d like to contribute and call PDB interacts with the Protein Data Bank&#39;s web services. Except for a few methods which needed extra processing, it wraps calls to a SOAP::Lite instance. I did this because I grew tired of writing code like <a href="http://www.rcsb.org/robohelp/webservices/samples/perl_samples.htm">http://www.rcsb.org/robohelp/webservices/samples/perl_samples.htm</a> each time. The module additionally has methods for retrieving files in various formats from the PDB archive. These can obviously be fed to either of the aforementioned CPAN modules.<br>
<br>So it&#39;s true, this might go in BioPerl. Or maybe it should be WWW::PDB because it deals with a web service. The reason I suggested straight-up PDB is because I&#39;m trying to think ahead to the next set of contributions I plan to make. One of these would be a module to mount the PDB as a file system with FUSE. Now THAT would make a strange addition to BioPerl (or maybe a strange addition in principle). WWW::PDB::Fuse might possibly work, though it&#39;s still rather weird. Another module I plan on contributing will read the PDB&#39;s file format. Yes, it will reinvent some wheels, but I also think it will be useful, though that&#39;s a story for another time. For starters I will be contributing only one module (the one described above), but I suppose I&#39;m
trying to prepare an umbrella for future Protein Data Bank modules. This will at least localize confusion with the Perl debugger because there&#39;s plenty of that already from all the Palm PDB modules.<br><br>Therefore I stand by my initial suggestion of using PDB as the namespace, but I welcome better ideas. Plus I don&#39;t have any authority here, so I will have to accept your judgement :)<br>

------=_Part_70852_25320659.1230014003235--
