Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:24610
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 80277 invoked by uid 76); 18 Nov 2003 14:02:04 -0000
Received: from qmailr@one.develooper.com (HELO ran-out.mx.develooper.com) (64.81.84.115) by onion.perl.org (qpsmtpd/0.26) with SMTP; Tue, 18 Nov 2003 06:02:04 -0800
Received: (qmail 21016 invoked by uid 225); 18 Nov 2003 14:02:03 -0000
Delivered-To: modules@perl.org
Received: (qmail 21011 invoked by uid 507); 18 Nov 2003 14:02:03 -0000
Received: from pause.perl.org (HELO pause.perl.org) (212.40.160.59) by one.develooper.com (qpsmtpd/0.27-dev) with ESMTP; Tue, 18 Nov 2003 06:01:31 -0800
Received: from pause.perl.org (localhost [127.0.0.1])	by pause.perl.org (8.12.3/8.12.3/Debian-6.6) with ESMTP id hAIE0m5c021413;	Tue, 18 Nov 2003 15:00:48 +0100
Received: (from nobody@localhost)	by pause.perl.org (8.12.3/8.12.3/Debian-6.6) id hAIE0mQC021411;	Tue, 18 Nov 2003 15:00:48 +0100
Date: Tue, 18 Nov 2003 15:00:48 +0100
Message-ID: <200311181400.hAIE0mQC021411@pause.perl.org>
Subject: Module submission DBIx::XMLServer
Reply-To: modules@perl.org
To: modules@perl.org, mjbright@cpan.org
X-Spam-Check-By: one.develooper.com
X-Spam-Status: No, hits=1.1 required=7.0 tests=CARRIAGE_RETURNS,SPAM_PHRASE_00_01 version=2.44
X-SMTPD: qpsmtpd/0.26, http://develooper.com/code/qpsmtpd/
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       DBIx::XMLServer
  DSLIP:       adpOp
  description: Serve data in XML following HTTP request
  userid:      MJBRIGHT (Martin Bright)
  chapterid:    7 (Database_Interfaces)
  communities:
    http://sourceforge.net/projects/dbix-xmlserver

  similar:
    XML::Generator::DBI

  rationale:

    This module makes it very easy to put together a script which will
    take an HTTP query, turn it into an SQL query, execute that query
    and turn the result into customised XML.

    From README:

    This module implements the whole process of generating an XML
    document from a database query, in response to an HTTP request. The
    mapping from the DBI database to an XML structure is defined in a
    template file, also in XML; this template is used not only to turn
    the data into XML, but also to parse the query string. To the user,
    the format of the query string is very natural in relation to the
    XML data which they will receive.

    How does this differ from existing modules?

    1. The mapping between database and XML is used not only to
    generate the XML, but also to parse the query. In principle, the
    step of generating XML could be accomplished by XML::Generator::DBI
    followed by XSLT; but this is only half of the process and not
    neatly separable.

    2. The end user has control over the XML produced: they can elect
    to receive only a fragment of each record.

    3. Because the transformations from query to SQL statement and from
    SQL data to XML data are performed by overloadable Perl functions,
    there is very much flexibility - more so that just using XSLT.

    Complete docs and source are already on CPAN.

  enteredby:   MJBRIGHT (Martin Bright)
  enteredon:   Tue Nov 18 14:00:47 2003 GMT

The resulting entry would be:

DBIx::
::XMLServer       adpOp Serve data in XML following HTTP request     MJBRIGHT


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=88500000_21e19c12776e737e&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=88500000_21e19c12776e737e&SUBMIT_pause99_add_mod_insertit=1
