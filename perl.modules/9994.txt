Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:9994
Return-Path: <gmaxia@mclink.it>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 41276 invoked by uid 76); 5 Feb 2002 10:40:34 -0000
Received: from net128-007.mclink.it (HELO mail.mclink.it) (195.110.128.7)
  by onion.perl.org (qpsmtpd/0.06) with SMTP; Tue Feb  5 10:40:34 2002 -0000
Received: from yuprid406 ([195.22.199.18])
	by mail.mclink.it (8.11.0/8.11.0) with SMTP id g15AeS621027
	for <modules@perl.org>; Tue, 5 Feb 2002 11:40:29 +0100 (CET)
To: modules@perl.org
Date: Tue, 05 Feb 2002 11:36:05 +0100
X-Priority: 3 (Normal)
In-Reply-To: <200202020932.KAA05662@pause.perl.org>
Message-ID: <HF845Y4WUHD1ZXRMQPCKFPLOLGFWS.3c5fb595@yuprid406>
Subject: [ANNOUNCE] DBSchema::Normalizer
MIME-Version: 1.0
Content-Type: text/plain; charset="iso-8859-1"
X-Mailer: Opera 6.0 build 1010
Approved: news@nntp.perl.org
From: gmaxia@mclink.it (Giuseppe Maxia)
References: <200202020932.KAA05662@pause.perl.org>

DBSchema::Normalizer 0.07 has been uploaded to CPAN.

    DBSchema::Normalizer is a Perl module to help you through the process of
    transforming a MySQL database table from 1st to 2nd (and eventually 3rd)
    normal form.

    It is a tool for the database designer, who is supposed to know what it
    has to be done. The Normalizer does not give you support for deciding
    which tables need to be normalized and which fields to move across
    tables.

    What you get from DBSchema::Normalizer is a quick way of performing the 
    operations you have identified as needed. You can also have a certain 
    degree of flexibility, since the Normalizer can also simulate the operation
    instead of executing it, giving you plenty of information to decide
    whether you want to go on or not.

    Thanks to DBSchema::Normalizer, tasks like normalizing a table could be
    highly simplified. less tha 30 lines of code can accomplish the task of
    creating two lookup tables and a normalized one from a source table in 1NF.

    The documentation explains in great details the principles involved and the
    algorithm used. 
    A detailed case study with sample database is included, so you can test to
    dummy data before trusting the module to your production database.


More details in the docs.
http://search.cpan.org/doc/GMAX/DBSchema-Normalizer-0.07/docs/Normalizer.html
http://search.cpan.org/doc/GMAX/DBSchema-Normalizer-0.07/README

Download the package from
http://www.cpan.org/authors/id/G/GM/GMAX/DBSchema-Normalizer-0.07.tgz

Comments are welcome.

  ____ ____  _____ _   _
 / _  |    \(____ ( \ / )
( (_| | | | / ___ |) X (
 \___ |_|_|_\_____(_/ \_)
(_____|



