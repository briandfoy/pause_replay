Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:89034
Return-Path: <apache@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 18953 invoked from network); 28 Jan 2014 14:52:28 -0000
Received: from x1.develooper.com (207.171.7.70)
  by x6.develooper.com with SMTP; 28 Jan 2014 14:52:28 -0000
Received: (qmail 8381 invoked by uid 225); 28 Jan 2014 14:52:29 -0000
Delivered-To: modules@perl.org
Received: (qmail 8377 invoked by alias); 28 Jan 2014 14:52:28 -0000
X-Spam-Status: No, hits=-1.9 required=8.0
	tests=BAYES_00,SPF_HELO_PASS,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received: from pause2.develooper.com (HELO pause.perl.org) (207.171.7.119)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Tue, 28 Jan 2014 06:52:23 -0800
Received: by pause.perl.org (Postfix, from userid 48)
	id 942E42418; Tue, 28 Jan 2014 14:52:19 +0000 (UTC)
MIME-Version: 1.0
Subject: Module submission File::BufferedInput
Content-Type: Text/Plain; Charset=UTF-8
Reply-To: modules@perl.org
To: modules@perl.org,mewsoft@cpan.org
Content-Transfer-Encoding: 8bit
Message-ID: <20140128145219.942E42418@pause.perl.org>
Date: Tue, 28 Jan 2014 14:52:19 +0000 (UTC)
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       File::BufferedInput
  DSLIP:       RdpOp
  description: Large and giant text file performance buffer
  userid:      MEWSOFT (Ahmed Amin Elsheshtawy احمد امين الششتاوى)
  chapterid:   21 (File_Handle_Input_Output)
  communities:
    http://www.mewsoft.com/forums/

  similar:

  rationale:

    This module solves the problem with reading large and huge text
    files in Perl for example on systems with low resources like shared
    hosts. It is designed to read only block by block as needed.

    It does not load the whole file into memory, it only reads one
    block at a time and once the last sequential line reached, it reads
    the next block from the file and frees the previous block from
    memory, so at all times only one block of the file is kept in
    memory.

    For example if you are reading a 2GB file, once you start reading
    lines from the file, the module reads the first block from the file
    on disk, while you loop through the lines, when you reach the line
    at the end of the read block, the module delete this block from
    memory and read the next block from the file on disk and parses it
    to lines and so on.

  enteredby:   MEWSOFT (Ahmed Amin Elsheshtawy احمد امين الششتاوى)
  enteredon:   Tue Jan 28 14:52:19 2014 UTC

The resulting entry would be:

File::
::BufferedInput   RdpOp Large and giant text file performance buffer MEWSOFT


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=54d00000_34497d32eb6c0e1e&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=54d00000_34497d32eb6c0e1e&SUBMIT_pause99_add_mod_insertit=1
Peek at the current permissions:
  https://pause.perl.org/pause/authenquery?pause99_peek_perms_by=me&pause99_peek_perms_query=File%3A%3ABufferedInput
