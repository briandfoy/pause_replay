Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:3240
Return-Path: <c.appel@t-online.net>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 12862 invoked from network); 27 Oct 2000 14:48:28 -0000
Received: from firewall.t-online.net (195.243.113.253)
  by tmtowtdi.perl.org with SMTP; 27 Oct 2000 14:48:28 -0000
Received: (from nobody@localhost)
	by firewall.t-online.net (8.9.3/8.9.3/Debian/GNU) id QAA11864
	for <modules@perl.org>; Fri, 27 Oct 2000 16:47:59 +0200
Received: from qeo01004.da.t-online.net(192.168.197.4) by firewall.t-online.net via smap (V2.1)
	id xma022397; Fri, 27 Oct 00 16:35:38 +0200
Received: from qeo01001.da.t-online.net ([192.168.197.61])
          by qeo01004.da.t-online.net (Netscape Messaging Server 3.62)
           with ESMTP id 359 for <modules@perl.org>;
          Fri, 27 Oct 2000 16:35:37 +0200
Received: from t-online.net ([192.168.17.223]) by qeo01001.da.t-online.net
          (Netscape Messaging Server 3.62)  with ESMTP id 709
          for <modules@perl.org>; Fri, 27 Oct 2000 16:35:37 +0200
Sender: cappel@firewall.t-online.net
Message-ID: <39F9AEC9.521A253@t-online.net>
Date: Fri, 27 Oct 2000 18:35:21 +0200
X-Mailer: Mozilla 4.73 [en] (X11; I; Linux 2.2.17 i686)
X-Accept-Language: en
MIME-Version: 1.0
To: modules@perl.org
Subject: Register at PAUSE
Content-Type: multipart/mixed;
 boundary="------------B46931FC909CC7570E2301BB"
Approved: news@nntp.perl.org
From: c.appel@t-online.net (Christoph Appel)

--------------B46931FC909CC7570E2301BB
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit

Hi there,

I have written a perl module, which I think to be probably useful also
to other people. Now following the registration how-to, for registering
you want to know:

My name: Christoph Appel
Email address: cappel@debis.com
Homepage: http://www.gsi.de/~appel
Preferred user-ID: APPEL or CAPPEL.
Contribution: Module Crypt::ECB
Description, long: This module is a Perl-only implementation of the ECB
crypting mode. In combination with a block cipher such as DES, IDEA or
Blowfish, you can encrypt and decrypt messages of arbitrarily long
length.  The encrypted messages are compatible with the encryption
format used by B<SSLeay>. There is a module Crypt::CBC on CPAN which
implements the CBC mode, but I haven't found an implementation of the
ECB mode. (To be precise: I have found a several years old
implementation in the Cryptix Crypt package, see www.cryptix.org, which
is obviously no longer maintained. Though this package didn't work, so I
wrote my own.)
Description, short: Mdph, ECB mode for Crypt::DES, Blowfish, etc.

I haven't discussed this module publicly, but nonetheless I guess that
it could be useful to many people. Anyone who wants to encode text using
a block cipher (such as DES, IDEA, Blowfish, ...) needs an
implementation of some crypting mode such as CBC, ECB or others (well,
if the text is longer than the supported block size, which is something
like 16 byte). Though CBC should for security reasons be preferred over
ECB, there may be other reasons why you have to use ECB mode. Then you
can use my module. As described above, I haven't found any other working
perl implementation of the ECB mode.

Included in the module is a thorough POD style documentation. I added a
README with installation instructions as well as a Makefile.PL, so the
standard 'perl Makefile.PL, make, make install' will do.


Regards,

Christoph Appel
--------------B46931FC909CC7570E2301BB
Content-Type: application/x-gzip;
 name="ECB-1.00.tar.gz"
Content-Transfer-Encoding: base64
Content-Disposition: inline;
 filename="ECB-1.00.tar.gz"

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
+Crjv2YN/jkAUAAA
--------------B46931FC909CC7570E2301BB--

