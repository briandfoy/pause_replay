Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:31
Return-Path: <jdporter@min.net>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 13218 invoked from network); 14 Oct 1999 15:28:12 -0000
Received: from min.net (jdporter@208.222.210.19)
  by tmtowtdi.perl.org with SMTP; 14 Oct 1999 15:28:12 -0000
Received: (from jdporter@localhost)
	by min.net (8.9.3/8.9.3) id LAA05262;
	Thu, 14 Oct 1999 11:28:07 -0400 (EDT)
Date: Thu, 14 Oct 1999 11:28:07 -0400
To: doctor jest <ix@maz.org>
Cc: modules@perl.org
Subject: Re: Properties class
Message-ID: <19991014112806.E25407@min.net>
References: <19991014102754.B25407@min.net> <Pine.LNX.4.10.9910140732360.29531-100000@uzi.jonezware.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Mailer: Mutt 0.95.1us
In-Reply-To: <Pine.LNX.4.10.9910140732360.29531-100000@uzi.jonezware.com>; from doctor jest on Thu, Oct 14, 1999 at 07:45:30AM -0700
Approved: news@nntp.perl.org
From: jdporter@min.net (John Porter)

doctor jest wrote:
> On Thu, 14 Oct 1999, John Porter wrote:
> 
> > 1. "Properties" is a lame name.  Says nothing about what this
> >     module is good for or how it works.
> 
> hm, no. sorry i wasnt clear enough. i wasnt asking if i
> should replace the name Properties, i was asking whether it
> should go in the main namespace, or under something like
> Data::.

Same diff.  Naming is naming.


> > 2. It should be compatible with Data::Dumper and any other
> >    serialization technique of the user's choice.  We don't need
> >    another one.
> 
> good idea. although the whole point of writing the class was
> to manage name/value pair files in the manner im used to
> when programming in java. and im not really interested in
> hearing 'we dont need another one', cos perl is all about
> doing things the way each individual prefers, not about The
> Mechanisms Officially Accepted By The Kremlin or some shit.
> 
> > 3. It would probably work well as a TIEHASH class.
> 
> perhaps it would, but im not willing to bind that tightly to
> a single data structure. it works quite well as is, thanks.
> 
> > This is what I envision:
> > 
> > use Tie::HashDefaults; # your module
> 
> cute. altho that will be _your_ module, not mine, cos i dont
> anticipate writing anything that looks like that. ive
> already got a class written that meets my goals with the
> interface i prefer. thats what im interested in adding to
> cpan.


I think, then, that it's safe to say that your module
should absolutely NOT have a top-level name, and the more
obscurely named, the better.  How about

	Java_Head::Properties

In any case, your class should not depend on any specific
serialization mechanism, even if you choose to provide
one with the module.

-- 
John Porter

