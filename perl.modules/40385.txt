Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:40385
Return-Path: <cpan@ali.as>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 23928 invoked from network); 14 May 2005 06:49:48 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 14 May 2005 06:49:48 -0000
Received: (qmail 30372 invoked by uid 225); 14 May 2005 06:49:48 -0000
Delivered-To: modules@perl.org
Received: (qmail 30367 invoked by alias); 14 May 2005 06:49:47 -0000
X-Spam-Status: No, hits=-5.9 required=8.0
	tests=ALL_TRUSTED,BAYES_00
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: neutral (x1.develooper.com: local policy)
Received: from x6.develooper.com (HELO lists.develooper.com) (63.251.223.186)
    by la.mx.develooper.com (qpsmtpd/0.28) with SMTP; Fri, 13 May 2005 23:49:45 -0700
Received: (qmail 23921 invoked by uid 515); 14 May 2005 06:49:42 -0000
Message-ID: <20050514064942.23920.qmail@lists.develooper.com>
To: modules@perl.org
Date: Sat, 14 May 2005 16:48:19 +1000
User-Agent: Mozilla Thunderbird 1.0 (Windows/20041206)
X-Accept-Language: en-us, en
MIME-Version: 1.0
Subject: Re: Module submission PCGI
References: <200505090006.j49068YZ014417@pause.perl.org> <090520051700427557%comdog@panix.com> <002901c554f2$47a98d00$0100a8c0@ondr>
In-Reply-To: <002901c554f2$47a98d00$0100a8c0@ondr>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-Posted-By: 202.90.48.125
Approved: news@nntp.perl.org
From: cpan@ali.as (Adam Kennedy)

> Can works with any size's of POST request safely.
> 
> I think it easy to prove in two ways: Or i am will draw reductive algorithm
> of this module works, or somebody check this by sending big and malformed(many elements, giant
> headers, etc..)
> requests to script based on this module.

Can you create a demonstration of unit test scripts to show this? Tests 
that pass for your module, but fail for current CGI.pm?

>>Do we need another one of these?
> 
> 
> Yes. Becouse it impossible to change Standard Perl install module for safely
> work with big requests(1 or more Mb).
> If needs arguments, i have arguments.

> pps: please, sorry my english..

That is OK :)

"PCGI" is probably also a bad name as well, as it is a root name.

Perhaps something more descriptive like CGI::LargeRequest, or CGI::Big, 
CGI::Huge or something that specifically conveys how useful it is for 
big things, while staying underneath CGI::*

Adam K
