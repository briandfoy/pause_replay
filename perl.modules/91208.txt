Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:91208
Return-Path: <apache@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 23353 invoked from network); 26 Aug 2014 01:49:39 -0000
Received: from x1.develooper.com (207.171.7.70)
  by x6.develooper.com with SMTP; 26 Aug 2014 01:49:39 -0000
Received: (qmail 26977 invoked by uid 225); 26 Aug 2014 01:49:37 -0000
Delivered-To: modules@perl.org
Received: (qmail 26973 invoked by alias); 26 Aug 2014 01:49:36 -0000
X-Spam-Status: No, hits=-1.9 required=8.0
	tests=BAYES_00,SPF_HELO_PASS,SPF_PASS,URIBL_BLOCKED
X-Spam-Check-By: la.mx.develooper.com
Received: from pause2.develooper.com (HELO pause.perl.org) (207.171.7.119)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Mon, 25 Aug 2014 18:49:34 -0700
Received: by pause.perl.org (Postfix, from userid 48)
	id 51DDE1A4A; Tue, 26 Aug 2014 01:49:31 +0000 (UTC)
Subject: Module submission Bloom::Scalable
Reply-To: modules@perl.org
To: modules@perl.org
Message-ID: <20140826014931.51DDE1A4A@pause.perl.org>
Date: Tue, 26 Aug 2014 01:49:31 +0000 (UTC)
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Bloom::Scalable
  DSLIP:       adpfp
  description: Pure Perl Scalable Bloom Filter
  userid:      SUBBU (Subhojit Banerjee)
  chapterid:   6 (Data_Type_Utilities)
  communities:

  similar:

  rationale:

    Scalable Bloom Filter is a result of the paper published by Paulo
    Sergio Almeida, Carlos Baquero, Nuno Preguica(Lancaster University)
    - "Scalable Bloom Filter" Their rationale was a Scalable Bloom
    Filter could be created by chaining together filters with decreasing
    error probabilities so that that the entire datastructure respects
    the predefined false positive probability agreement.

    - Murmur2 Hashing has been used in this module primarily for its
    speed.

    - The quality of the hashing has been further fine tuned by using
    the technique defined in the paper by Kirsch, Adam; Mitzenmacher,
    Michael (2006), "Less Hashing, Same Performance: Building a Better
    Bloom Filter"

    -Persisting the BloomFilter, using the Perl MultiCoreEngine are a
    couple of bells and whistles added for ease and performance.

  enteredby:   SUBBU (Subhojit Banerjee)
  enteredon:   Tue Aug 26 01:49:31 2014 UTC

The resulting entry would be:

Bloom::
::Scalable        adpfp Pure Perl Scalable Bloom Filter              SUBBU


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=98f00000_c9aace806bbca6c1&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=98f00000_c9aace806bbca6c1&SUBMIT_pause99_add_mod_insertit=1
Peek at the current permissions:
  https://pause.perl.org/pause/authenquery?pause99_peek_perms_by=me&pause99_peek_perms_query=Bloom%3A%3AScalable
