Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:33094
Return-Path: <gregg@bigpond.net.au>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 85390 invoked from network); 22 Jun 2004 11:53:58 -0000
Received: from x1.develooper.com (63.251.223.170)
  by onion.develooper.com with SMTP; 22 Jun 2004 11:53:58 -0000
Received: (qmail 24449 invoked by uid 225); 22 Jun 2004 11:53:56 -0000
Delivered-To: modules@perl.org
Received: (qmail 24440 invoked by alias); 22 Jun 2004 11:53:56 -0000
X-Spam-Status: No, hits=-4.7 required=8.0
	tests=BAYES_00,HTML_MESSAGE,RCVD_IN_SORBS
X-Spam-Check-By: la.mx.develooper.com
Received: from gizmo07bw.bigpond.com (HELO gizmo07bw.bigpond.com) (144.140.70.42)
  by la.mx.develooper.com (qpsmtpd/0.27.1) with SMTP; Tue, 22 Jun 2004 04:53:53 -0700
Received: (qmail 26948 invoked from network); 22 Jun 2004 11:53:40 -0000
Received: from unknown (HELO bwmam11.bigpond.com) (144.135.24.100)
  by gizmo07bw.bigpond.com with SMTP; 22 Jun 2004 11:53:40 -0000
Received: from cpe-138-217-11-107.vic.bigpond.net.au ([138.217.11.107]) by bwmam11.bigpond.com(MAM REL_3_4_2a 180/31259219) with SMTP id 31259219; Tue, 22 Jun 2004 21:53:41 +1000
Message-ID: <002c01c4584f$91196dc0$0402a8c0@pug>
Reply-To: "Greg George" <gregg@bigpond.net.au>
To: <modules@perl.org>
Subject: Proposed module File::Log
Date: Tue, 22 Jun 2004 21:53:38 +1000
MIME-Version: 1.0
Content-Type: multipart/alternative;
	boundary="----=_NextPart_000_0029_01C458A3.602CD180"
X-Priority: 3
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook Express 6.00.2800.1409
X-MIMEOLE: Produced By Microsoft MimeOLE V6.00.2800.1409
X-Virus-Checked: Checked
X-Spam-Rating: onion.develooper.com 1.6.2 0/1000/N
Approved: news@nntp.perl.org
From: gregg@bigpond.net.au ("Greg George")

------=_NextPart_000_0029_01C458A3.602CD180
Content-Type: text/plain;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable

I am proposing to upload a module File::Log
The start of the POD is below. =20
I have not been able to find anything like this on CPAN and believe that =
the name is appropriate however I would like some comment.

Regards
Greg George

----< POD Snip >----

=3Dhead1 NAME

Log - A simple Object Orientated Logger

=3Dhead1 SYNOPSIS

 use Log;

 # Pretty format, all the parameters
 my $log =3D Log->new({
   debug           =3D> 4,                   # Set the debug level
   logFileName     =3D> 'myLogFile.log',     # define the log filename
   logFileMode     =3D> '>',                 # '>>' Append or '>' =
overwrite
   dateTimeStamp   =3D> 1,                   # Timestamp log data =
entries
   stderrRedirect  =3D> 1,                   # Redirect STDERR to the =
log file
   defaultFile     =3D> 1,                   # Use the log file as the =
default filehandle
   logFileDateTime =3D> 1,                   # Timestamp the log =
filename
   appName         =3D> 'myApplicationName', # The name of the =
application
   PIDstamp        =3D> 1,                   # Stamp the log data with =
the Process ID
   storeExpText    =3D> 1,                   # Store internally all exp =
text
 });

 # Minimal instance, logfile name based on application name
 my $log =3D Log->new();

 # Typical usage, set the debug level and log filename (say from a =
config file)
 my $log =3D Log->new({ debug =3D> $debugLevel, logFileName =3D> =
$logFileName, });

 # Print message to the log file if the debug is >=3D 2
 $log->msg(2, "Add this to the log file if debug >=3D 2 \n");

 # Print an exception (error) message to the log file
 $log->exp("Something went wrong\n");

 # Close the log file (optional at exit)
 $log->close();

 # Change the debug level, capturing the old value
 $oldDebugValue     =3D $log->debugValue($newDebugValue);

 $currentDebugValue =3D $log->debugValue();

 # Get all the exceptions text (so you can do something with all the =
errors, eg email them)
 $allExceptions     =3D $log->getExpText();

 $numberErrors      =3D $log->expCnt();        # How many times has =
$log->exp been called

=3Dhead1 DESCRIPTION

I<Log> is a class providing methods to log data to a file.  There are a =
number
of parameters that can be passed to allow configuration of the logger.


------=_NextPart_000_0029_01C458A3.602CD180
Content-Type: text/html;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD>
<META http-equiv=3DContent-Type content=3D"text/html; =
charset=3Diso-8859-1">
<META content=3D"MSHTML 6.00.2800.1400" name=3DGENERATOR>
<STYLE></STYLE>
</HEAD>
<BODY bgColor=3D#ffffff>
<DIV><FONT face=3DArial size=3D2>I am proposing to upload a module=20
File::Log</FONT></DIV>
<DIV><FONT face=3DArial size=3D2>The start of the POD is below.&nbsp; =
</FONT></DIV>
<DIV><FONT face=3DArial size=3D2>I have not been able to find anything =
like this on=20
CPAN and believe that the name is appropriate however I would like some=20
comment.</FONT></DIV>
<DIV><FONT face=3DArial size=3D2></FONT>&nbsp;</DIV>
<DIV><FONT face=3DArial size=3D2>Regards</FONT></DIV>
<DIV><FONT face=3DArial size=3D2>Greg George</FONT></DIV>
<DIV><FONT face=3DArial size=3D2></FONT>&nbsp;</DIV>
<DIV><FONT face=3DArial size=3D2>----&lt; POD Snip &gt;----</FONT></DIV>
<DIV><FONT face=3DArial size=3D2></FONT>&nbsp;</DIV>
<DIV><FONT face=3DArial size=3D2>=3Dhead1 NAME</FONT></DIV>
<DIV>&nbsp;</DIV>
<DIV><FONT face=3DArial size=3D2>Log - A simple Object Orientated=20
Logger</FONT></DIV>
<DIV>&nbsp;</DIV>
<DIV><FONT face=3DArial size=3D2>=3Dhead1 SYNOPSIS</FONT></DIV>
<DIV>&nbsp;</DIV>
<DIV><FONT face=3DArial size=3D2>&nbsp;use Log;</FONT></DIV>
<DIV>&nbsp;</DIV>
<DIV><FONT face=3DArial size=3D2>&nbsp;# Pretty format, all the=20
parameters<BR>&nbsp;my $log =3D Log-&gt;new({<BR>&nbsp;&nbsp;=20
debug&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =
=3D&gt;=20
4,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
# Set the debug level<BR>&nbsp;&nbsp; =
logFileName&nbsp;&nbsp;&nbsp;&nbsp; =3D&gt;=20
'myLogFile.log',&nbsp;&nbsp;&nbsp;&nbsp; # define the log=20
filename<BR>&nbsp;&nbsp; logFileMode&nbsp;&nbsp;&nbsp;&nbsp; =3D&gt;=20
'&gt;',&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
# '&gt;&gt;' Append or '&gt;' overwrite<BR>&nbsp;&nbsp;=20
dateTimeStamp&nbsp;&nbsp; =3D&gt;=20
1,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
# Timestamp log data entries<BR>&nbsp;&nbsp; stderrRedirect&nbsp; =
=3D&gt;=20
1,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
# Redirect STDERR to the log file<BR>&nbsp;&nbsp;=20
defaultFile&nbsp;&nbsp;&nbsp;&nbsp; =3D&gt;=20
1,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
# Use the log file as the default filehandle<BR>&nbsp;&nbsp; =
logFileDateTime=20
=3D&gt;=20
1,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
# Timestamp the log filename<BR>&nbsp;&nbsp;=20
appName&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =3D&gt;=20
'myApplicationName', # The name of the application<BR>&nbsp;&nbsp;=20
PIDstamp&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =3D&gt;=20
1,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
# Stamp the log data with the Process ID<BR>&nbsp;&nbsp;=20
storeExpText&nbsp;&nbsp;&nbsp; =3D&gt;=20
1,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
# Store internally all exp text<BR>&nbsp;});</FONT></DIV>
<DIV>&nbsp;</DIV>
<DIV><FONT face=3DArial size=3D2>&nbsp;# Minimal instance, logfile name =
based on=20
application name<BR>&nbsp;my $log =3D Log-&gt;new();</FONT></DIV>
<DIV>&nbsp;</DIV>
<DIV><FONT face=3DArial size=3D2>&nbsp;# Typical usage, set the debug =
level and log=20
filename (say from a config file)<BR>&nbsp;my $log =3D Log-&gt;new({ =
debug =3D&gt;=20
$debugLevel, logFileName =3D&gt; $logFileName, });</FONT></DIV>
<DIV>&nbsp;</DIV>
<DIV><FONT face=3DArial size=3D2>&nbsp;# Print message to the log file =
if the debug=20
is &gt;=3D 2<BR>&nbsp;$log-&gt;msg(2, "Add this to the log file if debug =
&gt;=3D 2=20
\n");</FONT></DIV>
<DIV>&nbsp;</DIV>
<DIV><FONT face=3DArial size=3D2>&nbsp;# Print an exception (error) =
message to the=20
log file<BR>&nbsp;$log-&gt;exp("Something went wrong\n");</FONT></DIV>
<DIV>&nbsp;</DIV>
<DIV><FONT face=3DArial size=3D2>&nbsp;# Close the log file (optional at =

exit)<BR>&nbsp;$log-&gt;close();</FONT></DIV>
<DIV>&nbsp;</DIV>
<DIV><FONT face=3DArial size=3D2>&nbsp;# Change the debug level, =
capturing the old=20
value<BR>&nbsp;$oldDebugValue&nbsp;&nbsp;&nbsp;&nbsp; =3D=20
$log-&gt;debugValue($newDebugValue);</FONT></DIV>
<DIV>&nbsp;</DIV>
<DIV><FONT face=3DArial size=3D2>&nbsp;$currentDebugValue =3D=20
$log-&gt;debugValue();</FONT></DIV>
<DIV>&nbsp;</DIV>
<DIV><FONT face=3DArial size=3D2>&nbsp;# Get all the exceptions text (so =
you can do=20
something with all the errors, eg email=20
them)<BR>&nbsp;$allExceptions&nbsp;&nbsp;&nbsp;&nbsp; =3D=20
$log-&gt;getExpText();</FONT></DIV>
<DIV>&nbsp;</DIV>
<DIV><FONT face=3DArial =
size=3D2>&nbsp;$numberErrors&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =3D=20
$log-&gt;expCnt();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; # How many =
times=20
has $log-&gt;exp been called</FONT></DIV>
<DIV>&nbsp;</DIV>
<DIV><FONT face=3DArial size=3D2>=3Dhead1 DESCRIPTION</FONT></DIV>
<DIV>&nbsp;</DIV>
<DIV><FONT face=3DArial size=3D2>I&lt;Log&gt; is a class providing =
methods to log=20
data to a file.&nbsp; There are a number<BR>of parameters that can be =
passed to=20
allow configuration of the logger.</FONT></DIV>
<DIV>&nbsp;</DIV>
<DIV><FONT face=3DArial size=3D2></FONT>&nbsp;</DIV></BODY></HTML>

------=_NextPart_000_0029_01C458A3.602CD180--

