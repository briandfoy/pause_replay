Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:83052
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 13343 invoked from network); 2 Nov 2012 03:11:17 -0000
Received: from x1.develooper.com (207.171.7.70)
  by x6.develooper.com with SMTP; 2 Nov 2012 03:11:17 -0000
Received: (qmail 13696 invoked by uid 225); 2 Nov 2012 03:11:17 -0000
Delivered-To: modules@perl.org
Received: (qmail 13692 invoked by alias); 2 Nov 2012 03:11:17 -0000
X-Spam-Status: No, hits=-1.9 required=8.0
	tests=BAYES_00
X-Spam-Check-By: la.mx.develooper.com
Received: from pause.fiz-chemie.de (HELO pause.fiz-chemie.de) (195.37.231.65)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Thu, 01 Nov 2012 20:11:13 -0700
Received: from pause.fiz-chemie.de (localhost.localdomain [127.0.0.1])
	by pause.fiz-chemie.de (8.13.8/8.13.8/Debian-3) with ESMTP id qA23B8jM025328
	for <modules@perl.org>; Fri, 2 Nov 2012 04:11:08 +0100
Received: (from nobody@localhost)
	by pause.fiz-chemie.de (8.13.8/8.13.8/Submit) id qA23B8wb025327;
	Fri, 2 Nov 2012 04:11:08 +0100
Date: Fri, 2 Nov 2012 04:11:08 +0100
Message-ID: <201211020311.qA23B8wb025327@pause.fiz-chemie.de>
Subject: Module submission Test::Segment
Reply-To: modules@perl.org
To: modules@perl.org
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Test::Segment
  DSLIP:       adpOg
  description: Track and extract code segments for testing
  userid:      DCARVELL (David Carvell)
  chapterid:   3 (Development_Support)
  communities:

  similar:
    I'm not aware of any modules that do this. (That's why I wrote it.)

  rationale:

    I thought Test::Segment gives some hint as to what the module does
    and I've not found another namespace that conveys it. (Please feel
    free to correct me.)

    My approach facilitates the testing of hard-to-test code by
    allowing the user to extract code, eval it and examine the results.
    Of course the user will have to setup/fake whatever the code needs.
    The user specifies the code segments by line number ranges or
    labels. The segment specs can also store code to be inserted at
    specified points. When labels are used, the module tracks changes so
    that segments and code insertion points stay consistent.

    With the current emphasis on testing, I believe this could be a
    valuable tool, especially in situations involving older code-bases
    that were not written with testing in mind.

  enteredby:   DCARVELL (David Carvell)
  enteredon:   Fri Nov  2 03:11:07 2012 GMT

The resulting entry would be:

Test::
::Segment         adpOg Track and extract code segments for testing  DCARVELL


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=5fa00000_a02eaa98efbeecf9&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=5fa00000_a02eaa98efbeecf9&SUBMIT_pause99_add_mod_insertit=1
Peek at the current permissions:
  https://pause.perl.org/pause/authenquery?pause99_peek_perms_by=me&pause99_peek_perms_query=Test%3A%3ASegment
