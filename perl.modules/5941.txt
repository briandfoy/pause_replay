Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:5941
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 15304 invoked from network); 1 Jun 2001 09:36:59 -0000
Received: from dubravka.kbx.de (HELO pause.perl.org) (root@212.40.160.59)
  by onion.valueclick.com with SMTP; 1 Jun 2001 09:36:59 -0000
Received: (from nobody@localhost)
	by pause.perl.org (8.9.3/8.9.3) id LAA05291;
	Fri, 1 Jun 2001 11:36:56 +0200
Date: Fri, 1 Jun 2001 11:36:56 +0200
Message-ID: <200106010936.LAA05291@pause.perl.org>
Reply-To: modules@perl.org
Subject: Module submission Device::ParallelPort
To: modules@perl.org
X-Spam-Rating: onion.valueclick.com 1.6.2 0/1000/N
Approved: news@nntp.perl.org
From: upload@p11.speed-link.de ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Device::ParallelPort
  DSLIP:       cdpOg
  description: Low Level access to Parallel Port
  userid:      SCOTT (Scott Penrose)
  chapterid:    4 (Operating_System_Interfaces)
  communities:
    http://linux.dd.com.au/projects/parport for information

  similar:

  rationale:

    A totally abstracted library for parallel port access. There is no
    standard way in almost any language/operating system to access the
    parallel port for low level control (eg: to control specialised
    hardware, not printers).

    Linux has at least three methods, Winodws another, FreeBSD, BeOS,
    etc all differ. Unlike serial communications it is often necessary
    to control the parallel port at the single wire level, eg: switching
    one of the pins to input instead of output.

    This is not to control devices which would normally deserve a
    kernel driver (eg: ZIP drives) which need to be implemented on each
    operating system.

    This is for controlling watering systems, PIC programmers or the
    all famous coffee machine.

    The linux version (first being implemented) will have two drivers,
    one which accesses hardware directly using (probably c, hopefully
    not) outb, inb macros, and the other using /dev/parport via the
    parport module (kernel 2.2+).

    The knowledge and research into this project is also going to be
    used for development in at least one other language, possibly more.

  enteredby:   SCOTT (Scott Penrose)
  enteredon:   Fri Jun  1 09:36:56 2001 GMT

The resulting entry would be:

Device::
::ParallelPort    cdpOg Low Level access to Parallel Port            SCOTT


Thanks for registering,
The Pause Team

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=8a000000_55233a784fc5469d&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=8a000000_55233a784fc5469d&SUBMIT_pause99_add_mod_insertit=1
