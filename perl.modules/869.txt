Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:869
Return-Path: <tobiasb@funcom.com>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 5410 invoked from network); 12 Jan 2000 15:16:18 -0000
Received: from tobserve.funcom.com (root@193.71.101.145)
  by tmtowtdi.perl.org with SMTP; 12 Jan 2000 15:16:18 -0000
Received: (from tobiasb@localhost)
	by tobserve.funcom.com (8.8.7/8.8.7) id QAA13522;
	Wed, 12 Jan 2000 16:16:10 +0100
Date: Wed, 12 Jan 2000 16:16:10 +0100
Message-ID: <200001121516.QAA13522@tobserve.funcom.com>
X-Authentication-Warning: tobserve.funcom.com: tobiasb set sender to tobiasb@funcom.com using -f
To: modules@perl.org
Subject: CPAN identity wanted
Approved: news@nntp.perl.org
From: tobiasb@funcom.com (Tobias Brox)

I want to register as developer at CPAN, both of political (I'm
philosophically inspired by RMS, and would like my work to be used by
the community) and pragmatical (I think the quality of my work, both
hobby projects and work done for my employer, would benefit from
comments and patches from the public) reasons.

Information, as required from <URL:
http://www.perl.com/CPAN-local/modules/04pause.html >:

Name & email: Tobias Brox <tobix@irctos.org>

Homepage: <URL: http://www.td.org.uit.no/~tobias > (instable and not
updated for the time beeing)

Preffered user ID: TOBIX

Planned contributions: 

- At the moment DBIx::Access and DBIx::CGIAccess is the modules I
  mostly want to publish.  They seem to overlap DBIx::Recordset quite
  a bit, but I think I have a quite different philosophy and approach.

- I have a Bulletin Board System for creating web-based conference
  systems.  It's currently running as a script at www.funcom.com, but
  I have plans to split it up into CPAN modules and publish it.

- I have some scoring methods for sorting mail and news and injecting
  it into databases. I think it might be fit for publishing this as
  CPAN modules as well.

- I'm cooperating quite a bit with Jesse Vincent with his Request
  Tracker system and Knowledge Database (<URL:
  http://www.fsck.com/projects/ >).  The newer versions will be object
  oriented and probably also split out code into modules that might go
  into CPAN, among those DBIx::Easysearch which actually is some sort
  of a competitor to my system.  I don't know if Jesse has plans for
  distributing it to CPAN, but I think so.

- I'm quite inspired to the Store system developed at the university
  in Trondhjem, Norway.  This is a system for a networked distribution
  of applications, both source and platform-dependent code, written as
  an ugly hack collection in Perl4 code.  I'm considering starting at
  a similar project if I can find enough cooperative hackers/
  developers that think the idea itself is good.

Descriptions in module list format:
Name		DSLI	Description				     Info
---------	----	-------------------------------------------- -----
DBIx::
::Access	ampO	Access to database tables. Requires DBI.     TOBIX
::CGIAccess	ampO	Easy access to a database from a CGI.	     TOBIX
::TSQLData	adpO	File format w/ SQL and data, import/export   TOBIX
CGI::
::BBS		cmpO	A conference / bulletin board system	     TOBIX
Mail::
::Database      cmpO	Store mail in a DB (CGI::BBS compatible)     TOBIX
::Fetch		cmpO	Fetch mail from a DB			     TOBIX
::Score		cmpO	Mailsorting after scoring rules		     TOBIX
Store2		impf	Application/"package" distribution system    TOBIX


The mailing lists are not set up at the moment, but it might be done
any time.  Those marked as "alpha" works stable locally, but needs
some brushing and packaging before they can be released, and I also
guess the public might find a lot of "hidden" bugs.  All of the "in
construction" stuff is up and working, but should be rocked a bit
around before going into CPAN.

None of the above have been published nor discussed publically, the
only person I know have peeked at it is Jesse Vincent <jesse@fsck.com>
which characterized it as "interessting".  I thought the right order
of doing things would be to first get registered as a module
maintainer, then upload it to PAUSE, then ask people to have a peek at
it at the appropriate newsgroups.  I might be wrong :)

-- 
Hack of the week: Repaired the washing machine using two packages of epoxy
and three empty beer cans.
