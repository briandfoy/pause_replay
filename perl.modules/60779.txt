Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:60779
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 26637 invoked from network); 7 Jun 2008 22:49:29 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by x6.develooper.com with SMTP; 7 Jun 2008 22:49:29 -0000
Received: (qmail 18071 invoked by uid 225); 7 Jun 2008 22:49:28 -0000
Delivered-To: modules@perl.org
Received: (qmail 18064 invoked by alias); 7 Jun 2008 22:49:28 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00
X-Spam-Check-By: la.mx.develooper.com
Received: from pause.fiz-chemie.de (HELO pause.perl.org) (195.149.117.110)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Sat, 07 Jun 2008 15:49:24 -0700
Received: from pause.perl.org (localhost.localdomain [127.0.0.1])
	by pause.perl.org (8.13.8/8.13.8/Debian-3) with ESMTP id m57MnD0u023369;
	Sun, 8 Jun 2008 00:49:13 +0200
Received: (from nobody@localhost)
	by pause.perl.org (8.13.8/8.13.8/Submit) id m57MnCGm023368;
	Sun, 8 Jun 2008 00:49:12 +0200
Date: Sun, 8 Jun 2008 00:49:12 +0200
Message-ID: <200806072249.m57MnCGm023368@pause.perl.org>
Subject: Module submission POE::Component::Pool::DBI
Reply-To: modules@perl.org
To: modules@perl.org, tag@cpan.org
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       POE::Component::Pool::DBI
  DSLIP:       bdpOb
  description: Simplified DBI access through a pool for POE
  userid:      TAG (Scott McCoy)
  chapterid:   7 (Database_Interfaces)
  communities:
    irc://magnet/POE

  similar:
    POE::Component::DBIAgent POE::Component::LaDBI
    POE::Component::EasyDBI POE::Component::SimpleDBI
    POE::Component::MDBA

  rationale:

    As per the documentation:

    Why yet *another* DBI interface for POE? There are already about 6.
    But in looking for a solution for a high availability UDP server I
    was unable to find one which managed pooling effectively, and I
    always thought this would be a reasonable application of the partner
    component, POE::Component::Pool::Thread.

    In addition:

    Using threads means no need to use shmem, or serialize data over a
    pipe or wire. Similarly, using a thread-pool means limiting the
    number of concurrent connections to a database, and enqueuing
    operations. This provides an easier-to-scale mechanism for servers
    which need to scale their load, but also access a database.

    And while I was exercising my hubris, I realized "this should be
    easier" and wrote the only POE->DBI interface which has less than 10
    methods (it has 4, including the constructor and shutdown methods).
    I would have gone for the names EasyDBI or SimpleDBI, but they are
    already taken.

  enteredby:   TAG (Scott McCoy)
  enteredon:   Sat Jun  7 22:49:12 2008 GMT

The resulting entry would be:

POE::Component::Pool::
::DBI             bdpOb Simplified DBI access through a pool for POE TAG


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=2d410000_0444cd3421dbdb7c&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=2d410000_0444cd3421dbdb7c&SUBMIT_pause99_add_mod_insertit=1
