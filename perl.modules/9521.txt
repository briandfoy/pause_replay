Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:9521
Return-Path: <bits@csh.rit.edu>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 54820 invoked by uid 76); 3 Jan 2002 03:13:00 -0000
Received: from mcp.csh.rit.edu (HELO mcp.csh.rit.edu) (129.21.60.9)
  by onion.perl.org (qpsmtpd/0.05) with SMTP; Thu Jan  3 03:13:00 2002 -0000
Received: from fury.csh.rit.edu (fury.csh.rit.edu [129.21.60.5])
	by mcp.csh.rit.edu (Postfix) with ESMTP
	id DA097F9; Wed,  2 Jan 2002 22:12:57 -0500 (EST)
Date: Wed, 2 Jan 2002 22:12:57 -0500 (EST)
To: Tim Bunce <Tim.Bunce@pobox.com>
Cc: <modules@perl.org>
Subject: Re: Module submission DBIx::Loop
In-Reply-To: <20020103023513.O75939@dansat.data-plan.com>
Message-ID: <Pine.SOL.4.31.0201022212300.8592-100000@fury.csh.rit.edu>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Approved: news@nntp.perl.org
From: bits@csh.rit.edu (Brendan Fagan)
References: <20020103023513.O75939@dansat.data-plan.com>


Yeah, OK, I can live with that.

Since the last email, I've added the following:

$lph->is_first; - true if current record is first record
$lph->is_last;  - true if current record is last record

and

$lph->count; - current number of the record returned (starting at 1)

Do I need to resubmit for a namespace now?

- Brendan

On Thu, 3 Jan 2002, Tim Bunce wrote:

> Ah, cool, I'd call that 'break handling'.
>
> [It's been on my DBI to-do for years as "Add 'break handling' when
> field values change? Use two fbav's so 'previous record' is available.
> Define break fields and handlers. Call them via an alternate
> fetch_with_break method."]
>
> 'Loop' is a bit vague. How about...
>
> DBIx::
> ::FetchLoop       bdpOg Fetch with change detection and aggregates   BITS
>
> Tim.
>
>
> On Wed, Jan 02, 2002 at 12:02:16AM -0500, Brendan Fagan wrote:
> >
> > http://www.xray.mpe.mpg.de/mailing-lists/modules/2001-12/msg00405.html
> >
> > As I stated earlier, I could stand to elaborate more in the docs, but the
> > module is relatively straightforward (even if my one line description
> > needs work).
> >
> > Hope this will suffice.
> >
> > - Brendan
> >
> > On Tue, 1 Jan 2002, Tim Bunce wrote:
> >
> > > On Tue, Jan 01, 2002 at 11:17:18AM -0500, Brendan Fagan wrote:
> > > >
> > > > Tim,
> > > >
> > > > Thanks for resending the message, but I'm not clear as to why.   I did
> > > > already send the docs.
> > >
> > > I haven't seen them. Please repost them or a url.
> > >
> > > > How about "Supplemental DBI methods for looping, aggregation and
> > > > concatenation of data"?
> > >
> > > Too long :)
> > >
> > > > Happy new year!
> > >
> > > Thanks! And you.
> > >
> > > Tim.
> > >
> > > > - Brendan
> > > >
> > > > On Sat, 29 Dec 2001, Tim Bunce wrote:
> > > >
> > > > > On Sat, Dec 29, 2001 at 05:13:32PM +0100, Perl Authors Upload Server wrote:
> > > > > >
> > > > > > The following module was proposed for inclusion in the Module List:
> > > > > >
> > > > > >   modid:       DBIx::Loop
> > > > > >   DSLIP:       bdpOg
> > > > > >
> > > > > >     In following the other DBI extension modules, I choose the DBIx
> > > > > >     rootlevel namespace. Loop is fairly straightforward as it is a
> > > > > >     utility module for simplified looping logic.
> > > > > >
> > > > > > DBIx::
> > > > > > ::Loop            bdpOg Simple Looping routines for DBI              BITS
> > > > >
> > > > > Umm, "Simple Looping routines for DBI" doesn't really explain very much.
> > > > > Perhaps you could reply with the docs.
> > > > >
> > > > > Tim.
> > > > >
> > > >
> > >
> >
>

