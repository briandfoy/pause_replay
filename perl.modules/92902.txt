Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:92902
Return-Path: <neil.bowers@cogendo.com>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 14922 invoked from network); 26 Mar 2015 09:01:14 -0000
Received: from x1.develooper.com (207.171.7.70)
  by x6.develooper.com with SMTP; 26 Mar 2015 09:01:14 -0000
Received: (qmail 27983 invoked by uid 225); 26 Mar 2015 09:01:14 -0000
Delivered-To: modules@perl.org
Received: (qmail 27979 invoked by alias); 26 Mar 2015 09:01:14 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,HTML_MESSAGE,MIME_QP_LONG_LINE,RCVD_IN_DNSWL_LOW
X-Spam-Check-By: la.mx.develooper.com
Received: from mail-wi0-f176.google.com (HELO mail-wi0-f176.google.com) (209.85.212.176)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Thu, 26 Mar 2015 02:01:06 -0700
Received: by wibgn9 with SMTP id gn9so75242711wib.1
        for <modules@perl.org>; Thu, 26 Mar 2015 02:01:02 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20130820;
        h=x-gm-message-state:content-type:mime-version:subject:from
         :in-reply-to:date:cc:message-id:references:to;
        bh=A2nyvVK2edfkLbppKrRwJc1qb0cv8Bgwrb0b1zabjUo=;
        b=Ik1ZKLLVSSH64Z/yaCxx+sScyuJylvfmsi2M8lt7bbfobUwkQXPhVZmhpisSUnF683
         rgsuzul4uW9TQYbz1BrYFhjEB/lbJWsbSpZF+CDPEDTMIIP/73GrootOHpoDBQ7b6NBV
         sFio1T0F5ln5G/NSrhwJ4Re1OKi9Lg6gYHR5hPBfxxrqvlQtUM3xV//jliUC2wWVKeGB
         Nl2Zua/L1TrBlCbkZmTr80f9HjXpIGs2K0glXfNdMMYQJHwh5fPxDgGDWCVl83YwfPJg
         7PpV1KGHujf3BxxkiQDY/6F/3RS9NeUKGlxluaVKfsu5YBBwdNOwo2USttIMfa7oekKn
         Yr9Q==
X-Gm-Message-State: ALoCoQkkLBap4aLkZRvO8IDUqv10O2Yv5Hh02x2urZiQtyTyQN8nZOoS2iX1tx/TuLZeh2Epo2f+
X-Received: by 10.180.74.47 with SMTP id q15mr44884954wiv.90.1427360462009;
        Thu, 26 Mar 2015 02:01:02 -0700 (PDT)
Received: from [192.168.0.13] (cpc17-rdng20-2-0-cust59.15-3.cable.virginm.net. [82.8.77.60])
        by mx.google.com with ESMTPSA id fs8sm24311924wib.8.2015.03.26.02.01.00
        (version=TLSv1 cipher=ECDHE-RSA-RC4-SHA bits=128/128);
        Thu, 26 Mar 2015 02:01:01 -0700 (PDT)
Content-Type: multipart/alternative; boundary="Apple-Mail=_731C9AE2-8F68-423D-912D-037C1DCB7ABE"
Mime-Version: 1.0 (Mac OS X Mail 8.2 \(2070.6\))
Subject: Re: RFC: Auto::Log - a new perl module to log messages easily by redirecting STDOUT to a file
In-Reply-To: <CANhP0ZyV+EYXG1c25=BHYkojXEbL_cdz6X71q+EESBc4idyCOw@mail.gmail.com>
Date: Thu, 26 Mar 2015 09:00:59 +0000
Cc: modules@perl.org,
 Perl Module Authors List <module-authors@perl.org>
Message-ID: <AC424918-74B1-4236-97E0-591F6AC5A9E6@cogendo.com>
References: <CANhP0ZyV+EYXG1c25=BHYkojXEbL_cdz6X71q+EESBc4idyCOw@mail.gmail.com>
To: Balaji <balaji.ramasubramanian@gmail.com>
X-Mailer: Apple Mail (2.2070.6)
X-Virus-Checked: Checked
Approved: news@nntp.perl.org
From: neil.bowers@cogendo.com (Neil Bowers)

--Apple-Mail=_731C9AE2-8F68-423D-912D-037C1DCB7ABE
Content-Transfer-Encoding: quoted-printable
Content-Type: text/plain;
	charset=utf-8

Hi Balaji,

> I wanted your comments and some suggestions. I am planning on =
publishing a Perl module that I have written and successfully used for =
some time now. I hope it is useful to others as well.

There are a number of places where you can get feedback on module ideas:

http://prepan.org <http://prepan.org/> is a website where you can post =
an outline of your module, link to a github repo, and ask for feedback =
on the name and other aspects.
module-authors@perl.org <mailto:module-authors@perl.org> is a mailing =
list where CPAN authors can discuss any aspect of the module creation =
process.

I=E2=80=99ll add some quick comments as well.

> NAME
>=20
> Auto::Log - a simple Perl extension that allows messages to be =
redirected to a specific file

I wouldn=E2=80=99t put this in the =E2=80=9CAuto=E2=80=9D top-level =
namespace. If you look on MetaCPAN you=E2=80=99ll see a lot of modules =
in the Log:: namespace, some in Logfile::, and a small handful in =
Logger::

You might want to look at some of the existing modules, and see if =
there=E2=80=99s one that already provides the functionality that you =
have? If not, that might help you think about differentiating your =
module, both in the design / interface, and in the documentation. Doing =
such a mini review will also help you write the SEE ALSO section of your =
documentation :-)

> SYNOPSIS
>=20
>          use Auto::Log;
>=20
>          my $log =3D new Auto::Log "allmsg.log=E2=80=9D;

The indirect method notation should be avoided these days. This should =
be written as:

	my $log =3D Auto::Log->new(=E2=80=98allmsg.log=E2=80=99);

You can find various pages online explaining why you shouldn=E2=80=99t =
use the indirect notation; here=E2=80=99s one of them:

	=
http://modernperlbooks.com/mt/2009/08/the-problems-with-indirect-object-no=
tation.html

>          print "This will go into the log file.\n";
>          warn "This will also automatically go into the log file.\n"
>          $log->DESTROY;  # restores STDOUT and STDERR to original =
state

You shouldn=E2=80=99t call the DESTROY method explicitly. If you want to =
illustrate the action of the DESTROY handler, you could have it going =
out of scope, and have a comment. Something like:

   {
        my $log =3D Auto::Log->new('allmsg.log');
        # =E2=80=A6 do some stuff
    }
    # $log goes out of scope
    # The DESTROY method will restore STDOUT and STDERR

You may also want to take a look at IO::Capture, and link it in your SEE =
ALSO.

Cheers,
Neil



--Apple-Mail=_731C9AE2-8F68-423D-912D-037C1DCB7ABE
Content-Transfer-Encoding: quoted-printable
Content-Type: text/html;
	charset=utf-8

<html><head><meta http-equiv=3D"Content-Type" content=3D"text/html =
charset=3Dutf-8"></head><body style=3D"word-wrap: break-word; =
-webkit-nbsp-mode: space; -webkit-line-break: after-white-space;" =
class=3D"">Hi Balaji,<div class=3D""><br class=3D""><div><blockquote =
type=3D"cite" class=3D""><div class=3D""><span style=3D"font-family: =
'trebuchet ms', sans-serif; font-size: small;" class=3D"">I wanted your =
comments and some suggestions. I am planning on publishing a Perl module =
that I have written and successfully used for some time now. I hope it =
is useful to others as well.</span></div></blockquote><div><br =
class=3D""></div><div>There are a number of places where you can get =
feedback on module ideas:</div><div><br class=3D""></div><div><ul =
class=3D"MailOutline"><li class=3D""><a href=3D"http://prepan.org" =
class=3D"">http://prepan.org</a>&nbsp;is a website where you can post an =
outline of your module, link to a github repo, and ask for feedback on =
the name and other aspects.</li><li class=3D""><a =
href=3D"mailto:module-authors@perl.org" =
class=3D"">module-authors@perl.org</a>&nbsp;is a mailing list where CPAN =
authors can discuss any aspect of the module creation =
process.</li></ul></div><div><br class=3D""></div><div>I=E2=80=99ll add =
some quick comments as well.</div><br class=3D""><blockquote type=3D"cite"=
 class=3D""><div class=3D""><span style=3D"font-family: 'trebuchet ms', =
sans-serif; font-size: small;" class=3D"">NAME</span></div><div =
class=3D""><div dir=3D"ltr" class=3D""><div class=3D"gmail_default" =
style=3D"font-family:trebuchet ms,sans-serif;font-size:small"><br =
class=3D""></div><div class=3D"gmail_default" =
style=3D"font-family:trebuchet ms,sans-serif;font-size:small">Auto::Log =
- a simple Perl extension that allows messages to be redirected to a =
specific file</div></div></div></blockquote><div><br =
class=3D""></div><div>I wouldn=E2=80=99t put this in the =E2=80=9CAuto=E2=80=
=9D top-level namespace. If you look on MetaCPAN you=E2=80=99ll see a =
lot of modules in the Log:: namespace, some in Logfile::, and a small =
handful in Logger::</div><div><br class=3D""></div><div>You might want =
to look at some of the existing modules, and see if there=E2=80=99s one =
that already provides the functionality that you have? If not, that =
might help you think about differentiating your module, both in the =
design / interface, and in the documentation. Doing such a mini review =
will also help you write the SEE ALSO section of your documentation =
:-)</div><br class=3D""><blockquote type=3D"cite" class=3D""><div =
dir=3D"ltr" class=3D""><div class=3D"gmail_default" =
style=3D"font-family:trebuchet =
ms,sans-serif;font-size:small">SYNOPSIS</div><div class=3D"gmail_default" =
style=3D"font-family:trebuchet ms,sans-serif;font-size:small"><br =
class=3D""></div><div class=3D"gmail_default" =
style=3D"font-family:trebuchet ms,sans-serif;font-size:small">&nbsp; =
&nbsp; &nbsp; &nbsp; &nbsp;use Auto::Log;</div><div =
class=3D"gmail_default" style=3D"font-family:trebuchet =
ms,sans-serif;font-size:small"><br class=3D""></div><div =
class=3D"gmail_default" style=3D"font-family:trebuchet =
ms,sans-serif;font-size:small">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;my $log =
=3D new Auto::Log "allmsg.log=E2=80=9D;</div></div></blockquote><div><br =
class=3D""></div><div>The indirect method notation should be avoided =
these days. This should be written as:</div><div><br =
class=3D""></div><div><span class=3D"Apple-tab-span" =
style=3D"white-space:pre">	</span><font face=3D"Courier New" =
class=3D"">my $log =3D =
Auto::Log-&gt;new(=E2=80=98allmsg.log=E2=80=99);</font></div><div><br =
class=3D""></div><div>You can find various pages online explaining why =
you shouldn=E2=80=99t use the indirect notation; here=E2=80=99s one of =
them:</div><div><br class=3D""></div><div><span class=3D"Apple-tab-span" =
style=3D"white-space:pre">	</span><a =
href=3D"http://modernperlbooks.com/mt/2009/08/the-problems-with-indirect-o=
bject-notation.html" =
class=3D"">http://modernperlbooks.com/mt/2009/08/the-problems-with-indirec=
t-object-notation.html</a></div><br class=3D""><blockquote type=3D"cite" =
class=3D""><div dir=3D"ltr" class=3D""><div class=3D"gmail_default" =
style=3D"font-family:trebuchet ms,sans-serif;font-size:small">&nbsp; =
&nbsp; &nbsp; &nbsp; &nbsp;print "This will go into the log =
file.\n";</div><div class=3D"gmail_default" style=3D"font-family:trebuchet=
 ms,sans-serif;font-size:small">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;warn =
"This will also automatically go into the log file.\n"</div><div =
class=3D"gmail_default" style=3D"font-family:trebuchet =
ms,sans-serif;font-size:small">&nbsp; &nbsp; &nbsp; &nbsp; =
&nbsp;$log-&gt;DESTROY; &nbsp;# restores STDOUT and STDERR to original =
state</div></div></blockquote><div><br class=3D""></div><div>You =
shouldn=E2=80=99t call the DESTROY method explicitly. If you want to =
illustrate the action of the DESTROY handler, you could have it going =
out of scope, and have a comment. Something like:</div><div><br =
class=3D""></div><div><font face=3D"Courier New" class=3D""><font =
class=3D"">&nbsp; &nbsp;</font><font style=3D"font-size: 14px;" =
class=3D"">{</font></font></div><div><font face=3D"Courier New" =
class=3D""><span style=3D"font-size: 14px;" class=3D"">&nbsp; &nbsp; =
&nbsp; &nbsp; my $log =3D =
Auto::Log-&gt;new('allmsg.log');</span></font></div><div><font =
face=3D"Courier New" style=3D"font-size: 14px;" class=3D"">&nbsp; &nbsp; =
&nbsp; &nbsp; # =E2=80=A6 do some stuff</font></div><div><font =
face=3D"Courier New" style=3D"font-size: 14px;" class=3D"">&nbsp; &nbsp; =
}</font></div><div><font face=3D"Courier New" style=3D"font-size: 14px;" =
class=3D"">&nbsp; &nbsp; # $log goes out of scope</font></div><div><font =
face=3D"Courier New" style=3D"font-size: 14px;" class=3D"">&nbsp; &nbsp; =
# The DESTROY method will restore STDOUT and STDERR</font></div><br =
class=3D""></div><div>You may also want to take a look at IO::Capture, =
and link it in your SEE ALSO.</div><div><br =
class=3D""></div><div>Cheers,</div><div>Neil</div><div><br =
class=3D""></div><br class=3D""></div></body></html>=

--Apple-Mail=_731C9AE2-8F68-423D-912D-037C1DCB7ABE--
