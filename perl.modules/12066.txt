Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:12066
Return-Path: <andy@andyjohn.com>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 55400 invoked by uid 76); 10 Jun 2002 07:15:48 -0000
Received: from beholder.got.net (HELO got.net) (207.111.232.12)
  by onion.perl.org (qpsmtpd/0.07b) with SMTP; Mon Jun 10 07:15:48 2002 -0000
Received: (qmail 8997 invoked from network); 10 Jun 2002 07:08:23 -0000
Received: from unknown (HELO orca) (66.81.66.76)
  by mail.got.net with SMTP; 10 Jun 2002 07:08:23 -0000
Message-ID: <000701c2104d$fd2e9590$4c425142@orca>
To: <modules@perl.org>
Subject: new user registration
Date: Mon, 10 Jun 2002 00:11:05 -0700
MIME-Version: 1.0
Content-Type: text/plain;
	charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
X-Priority: 3
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook Express 5.50.4522.1200
X-MimeOLE: Produced By Microsoft MimeOLE V5.50.4522.1200
Approved: news@nntp.perl.org
From: andy@andyjohn.com ("Andy John")

Hello,
  I am in the process of writing a Perl module that will be used for
generating dynamic
html. It will based on the design for Enhydra's XMLC tool (I co-invented
it). The target
audience is Java engineers who already know XMLC, but are currently working
on
a Perl project.
  I would like to sign up on CPAN/PAUSE, so that when I get it ready to be
used
by others I can contribute it. May I get a username now, and upload later? I
would
like to get a good username while I can...

Name:  Andy John
Email:  pause@andyjohn.com
Home Page:  http://www.andyjohn.com/perl
Prefered ID: andyj
Desc: An object oriented module that acts as a factory. For each HTML file,
it
creates a new class that represents the file. The parsed tree is serialized.
A small
api is common to all of these classes, but most of the methods will be
determined
as the html is parsed via tags with IDs. At run time, a CGI script will ask
the factory
for a new instance of the page, call methods to fill in values, possibly do
node-level manipulations (like the dom), then call a method to return the
tweaked
HTML as a string. The CGI would just write that string out to the net. The
CGI
is still responsible for processing all parameters. This almost totally
decouples
the presentation layer from the business layer. Your set of static pages can
be a fully functional static site, and then used as input to this tool. It
decouples
the graphic artists from the engineers. The html is all 100% pure legal
html.
The artists can re-do the whole site,
as long as the same IDs are present, the code does not have to change. The
factory class, in time, will be intelligent and notice the modification
times, so
all you have to do is drop in new html and it's picked up immediatly
(recompiled).
And as I learn mod_perl, include multithreaded behaviour speed improvements.
All this is what XMLC users have now, in Java. I want to bring it to Perl
too.
(I'm a java engineer who is stuck on a perl project. It prints out the html
one
line at a time. Shudder).

So, that's my plan. I am going to use HTML::BuildTree and Dumper to do most
of the work. Should be pretty sweet when it's done, although it will have a
limited audience of people who have already "seen the light" with XMLC.
Maybe
if I have down time between projects I will do marketing for it....

I have spent a couple hours looking for this, and it seems like it doesn't
exist
in the modules. Yet...

Andy


