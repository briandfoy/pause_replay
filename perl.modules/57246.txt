Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:57246
Return-Path: <vivek@khera.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Delivered-To: moderator for modules@perl.org
Received: (qmail 14323 invoked from network); 18 Oct 2007 02:39:41 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 18 Oct 2007 02:39:41 -0000
Received: (qmail 17650 invoked by uid 225); 18 Oct 2007 02:39:40 -0000
Delivered-To: modules@perl.org
Received: (qmail 17643 invoked by alias); 18 Oct 2007 02:39:40 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00
X-Spam-Check-By: la.mx.develooper.com
Received: from thingy.kcilink.com (HELO yertle.kcilink.com) (74.92.149.59)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Wed, 17 Oct 2007 19:39:38 -0700
Received: from [192.168.135.95] (unknown [192.168.135.95])
	by yertle.kcilink.com (Postfix) with ESMTP id 608AAC943A
	for <modules@perl.org>; Wed, 17 Oct 2007 22:39:33 -0400 (EDT)
Mime-Version: 1.0 (Apple Message framework v752.2)
Content-Transfer-Encoding: 7bit
Message-ID: <B8486037-C7ED-413E-BD43-285A56474972@khera.org>
Content-Type: text/plain; charset=US-ASCII; delsp=yes; format=flowed
To: modules@perl.org
Subject: requesting guidance on module namespace
Date: Wed, 17 Oct 2007 22:39:34 -0400
X-Mailer: Apple Mail (2.752.2)
Approved: news@nntp.perl.org
From: vivek@khera.org (Vivek Khera)

I have written a pure-perl replacement for Paypal's (formerlay  
VeriSign's) PayFlowPro product based on their new HTTP based  
protocol.   The original perl module was distributed by Verisign and  
called PFProAPI and linked with a closed-source C library binary  
distribution.  My new version is currently called PayflowPro.

The whole interface consists of three exported functions, which make  
it a drop-in replacement for the old PFProAPI binary module making an  
upgrade nearly trivial for existing users of the old API.  This is  
important since the old API is not available for 64-bit architectures.

My research shows that the similar module for Authorize.net,  
"Authorizenet" is top-level.  There is also a whole set of modules  
for an abstracted payment API under Business::OnlinePayment. The  
existing Payflow plug-in there seems to be based on the old binary  
API distributed by Verisign.

What is your recommendation as to where to fit my new module into the  
CPAN?


=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
Vivek Khera, Ph.D.                Khera Communications, Inc.
Internet: khera@kciLink.com       Rockville, MD  +1-301-869-4449 x806


