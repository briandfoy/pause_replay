Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:78731
Return-Path: <david@autopragmatic.com>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 8708 invoked from network); 6 Dec 2011 16:23:12 -0000
Received: from x1.develooper.com (207.171.7.70)
  by x6.develooper.com with SMTP; 6 Dec 2011 16:23:12 -0000
Received: (qmail 25897 invoked by uid 225); 6 Dec 2011 16:23:12 -0000
Delivered-To: modules@perl.org
Received: (qmail 25893 invoked by alias); 6 Dec 2011 16:23:11 -0000
X-Spam-Status: No, hits=0.5 required=8.0
	tests=DKIM_ADSP_CUSTOM_MED,DKIM_SIGNED,DKIM_VALID,FREEMAIL_FROM,NML_ADSP_CUSTOM_MED,RCVD_IN_DNSWL_LOW
X-Spam-Check-By: la.mx.develooper.com
Received: from mail-lpp01m010-f41.google.com (HELO mail-lpp01m010-f41.google.com) (209.85.215.41)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Tue, 06 Dec 2011 08:23:06 -0800
Received: by lahi5 with SMTP id i5so3899770lah.14
        for <modules@perl.org>; Tue, 06 Dec 2011 08:23:01 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=autopragmatic.com; s=google;
        h=mime-version:sender:in-reply-to:references:from:date
         :x-google-sender-auth:message-id:subject:to:cc:content-type;
        bh=2S5bwC5cC9r9xkT6juasITp11Pk09FKVvvx7kMDAoWo=;
        b=D2kzGUL+MiflcYSafqutCda8MrWXnVC0Fm0WnAmIjmMMa+RxRHoLvQK4K/IHqOCrfj
         /igASn4H2C2SN7PmFqQxNLblhKfm3Yn4YQXvjY04n2K8Y28q6HSZIpSjndEp60rW7aP8
         8quw17ZXy9GSduseusERuWwNbL9ozR7CZtQ/Y=
Received: by 10.180.105.3 with SMTP id gi3mr18275751wib.36.1323188581164; Tue,
 06 Dec 2011 08:23:01 -0800 (PST)
MIME-Version: 1.0
Sender: david@autopragmatic.com
Received: by 10.180.85.231 with HTTP; Tue, 6 Dec 2011 08:22:40 -0800 (PST)
In-Reply-To: <4EDE38A8.1020800@cpan.org>
References: <4EDE38A8.1020800@cpan.org>
Date: Tue, 6 Dec 2011 11:22:40 -0500
X-Google-Sender-Auth: Vh9boyYxfZqZg16unbmCrAaOzPc
Message-ID: <CAOeq1c91FNd+=GXUmmH967-dkZMHB5nppOvckiKRo6-yi39dsA@mail.gmail.com>
Subject: Re: Burke module giveaway
To: "Sean M. Burke" <sburke@cpan.org>
Cc: modules@perl.org
Content-Type: text/plain; charset=UTF-8
Approved: news@nntp.perl.org
From: xdaveg@gmail.com (David Golden)

On Tue, Dec 6, 2011 at 10:45 AM, Sean M. Burke <sburke@cpan.org> wrote:
> I seek advice on software licenses!

Run and hide?

> In many cases, my modules' current documentation says, as copyright/license,
> simply "This library is free software; you can redistribute it and/or modify
> it under the same terms as Perl itself."
> But I'm told that modern practice involves explicitly making clearer (in
> docs and probably metadata) the choice between perlartistic and perlgpl,...
> or what are the other well-known options that I can use?

I haven't seen real shift.  Plenty of code still says "same terms as
Perl" as vague as that is.

Best place for license information is OSI:

http://www.opensource.org/licenses/category

Look at the popular category for options and ignore the rest.

> I'm not up on these things-- and I've recently been emailing with someone
> who wants me to have Unidecode be under GNU *Lesser* General Public License
> (the existence of which I was unaware of), because he wants it as part of a
> project that's MIT licensed, and that's a problem somehow-- so now I'm
> feeling like I should put actual thought into this now.

MIT license is one of the least restrictive.  Generally GPL/LGPL tend
to be some of the more restrictive licenses.  (Perl's Artistic license
is fairly liberal)

> Suggestions?

I personally favor the Apache 2.0 license.  I find it the clearest to
read, with the best defined terms, and includes clauses covering
contributions back to the original in whatever form (i.e. if someone
sends you a patch, it's licensed to you; if someone tells you verbally
about how to fix your code, it's licensed to you.)  I haven't seen any
other open source license that is so explicit about how contributions
are handled.

The license also specifies you can include a NOTICE file that must be
included or displayed in anything using your code, which I think
accomplishes your goal.  (I personally don't bother, but that's me.)

I don't know if that's sufficient for your MIT license using person,
but it's as permissive as I'd be willing to go with my own code
(except for things that are dual-life on CPAN and in the Perl core,
for which I license under the terms of Perl itself for simplicity).

-- David
