Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:61155
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 16171 invoked from network); 3 Jul 2008 17:59:46 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by x6.develooper.com with SMTP; 3 Jul 2008 17:59:46 -0000
Received: (qmail 20726 invoked by uid 225); 3 Jul 2008 17:59:46 -0000
Delivered-To: modules@perl.org
Received: (qmail 20719 invoked by alias); 3 Jul 2008 17:59:45 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00
X-Spam-Check-By: la.mx.develooper.com
Received: from pause.fiz-chemie.de (HELO pause.perl.org) (195.149.117.110)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Thu, 03 Jul 2008 10:56:50 -0700
Received: from pause.perl.org (localhost.localdomain [127.0.0.1])
	by pause.perl.org (8.13.8/8.13.8/Debian-3) with ESMTP id m63GJhxI019650
	for <modules@perl.org>; Thu, 3 Jul 2008 18:19:43 +0200
Received: (from nobody@localhost)
	by pause.perl.org (8.13.8/8.13.8/Submit) id m63GJhUk019649;
	Thu, 3 Jul 2008 18:19:43 +0200
Date: Thu, 3 Jul 2008 18:19:43 +0200
Message-ID: <200807031619.m63GJhUk019649@pause.perl.org>
Subject: Module submission Cache::CacheFactory
Reply-To: modules@perl.org
To: modules@perl.org
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Cache::CacheFactory
  DSLIP:       RdpOp
  description: Class factory for Cache::Cache-style modules
  userid:      SGRAHAM (Sam Graham)
  chapterid:   17 (Archiving_and_Compression)
  communities:

  similar:
    Cache::Cache Cache::AgainstFile

  rationale:

    From the README:

    Cache::CacheFactory provides a class factory for modules using the
    Cache::Cache API. You supply the combination of features you require
    regarding storage, pruning and validity policies and
    Cache::CacheFactory produces a cache object that behaves like an
    extended Cache::Cache object with the features you requested.

    Other than a slightly modified constructor Cache::CacheFactory can
    behave as a drop-in replacement for any existing
    Cache::Cache-compatibile cache.

    Policies are seperated into different modules, you no longer need
    to find or write a Cache::SizeAwareAgainstFileSharedMemoryCache.pm
    with the exact combination of features you're after.

    Cache::CacheFactory can also allows you to combine multiple
    policies, so you can have a cache that stores to both memory and
    disk, or one that that prunes the cache based on time, cache size
    and file last-modified times.

    If you're a module author you can create a Cache::CacheFactory
    object without knowing what cache policies are installed on the
    target system by using handy helper functions to choose the best
    match from a list of preferences, useful if you don't want to
    clutter them up with unwanted dependencies.

    Cache::CacheFactory also provides a 'lastmodified' pruning and
    validity policy allowing you to mark an entry as having a dependency
    chain of files, when any of the files in the chain are modified the
    cache entry is considered invalid.

    If any of the existing policies don't suit your needs, it's easy to
    write a new policy module to provide the behaviour you need, and it
    can then be used in combination with any of the existing policies
    with no further work. Further, any Cache::Cache-compatible module
    can most likely be used "as is" as a new storage policy.

  enteredby:   SGRAHAM (Sam Graham)
  enteredon:   Thu Jul  3 16:19:43 2008 GMT

The resulting entry would be:

Cache::
::CacheFactory    RdpOp Class factory for Cache::Cache-style modules SGRAHAM


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=7e210000_b3183b313c8e3c71&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=7e210000_b3183b313c8e3c71&SUBMIT_pause99_add_mod_insertit=1
