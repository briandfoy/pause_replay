Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:24897
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 21165 invoked by uid 76); 6 Dec 2003 07:03:35 -0000
Received: from qmailr@one.develooper.com (HELO ran-out.mx.develooper.com) (64.81.84.115) by onion.perl.org (qpsmtpd/0.26) with SMTP; Fri, 05 Dec 2003 23:03:35 -0800
Received: (qmail 21843 invoked by uid 225); 6 Dec 2003 07:03:34 -0000
Delivered-To: modules@perl.org
Received: (qmail 21838 invoked by uid 507); 6 Dec 2003 07:03:33 -0000
Received: from [195.149.117.110] (HELO pause.perl.org) (195.149.117.110) by one.develooper.com (qpsmtpd/0.27-dev) with ESMTP; Fri, 05 Dec 2003 23:03:02 -0800
Received: from pause.perl.org (localhost [127.0.0.1])	by pause.perl.org (8.12.3/8.12.3/Debian-6.6) with ESMTP id hB672Ocj015319;	Sat, 6 Dec 2003 08:02:24 +0100
Received: (from nobody@localhost)	by pause.perl.org (8.12.3/8.12.3/Debian-6.6) id hB672O8s015317;	Sat, 6 Dec 2003 08:02:24 +0100
Date: Sat, 6 Dec 2003 08:02:24 +0100
Message-ID: <200312060702.hB672O8s015317@pause.perl.org>
Subject: Module submission WWW::Nextbus
Reply-To: modules@perl.org
To: modules@perl.org, phli@cpan.org
X-Spam-Check-By: one.develooper.com
X-Spam-Status: No, hits=1.1 required=7.0 tests=CARRIAGE_RETURNS,SPAM_PHRASE_00_01 version=2.44
X-SMTPD: qpsmtpd/0.26, http://develooper.com/code/qpsmtpd/
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       WWW::Nextbus
  DSLIP:       cdpOr
  description: OO Interface to Nextbus public transit GPS
  userid:      PHLI (Peter H. Li)
  chapterid:   15 (World_Wide_Web_HTML_HTTP_CGI)
  communities:

  similar:

  rationale:

    *The Impetus Nextbus provides GPS solutions to public transit
    agencies. Access to their GPS and stop ETA times data is only
    available to freelance programmers through their website,
    www.nextbus.com.

    * The Program WWW::Nextbus would provide two major services: 1)
    Simple interface for getting the typical train/bus position and stop
    ETA data from the website given the correct GET arguments. 2) A
    stroll down the website tree of possible GET arguments for a
    particular agency, thus supplying the programmer with an object that
    knows how to make a particular query given information less formal
    than the actual GET arguments.

    For example, once the object had completed its stroll, it would be
    able to translate the names of stops like "Duboce and Fillmore" into
    the correct GET argument (which happens to be "DF" for the sf-muni
    agency).

    WWW::Nextbus would probably be a LWP::UserAgent. This would be able
    to get the pages and stroll through to parse the desired data.

    WWW::Nextbus::Agency is a helper class that implements the
    suggested stop decoding, etc., once it has been given the results of
    the GET stroll to store. Alternatively, Agency could be a
    WWW::Nextbus and get the data itself. Then WWW::Nextbus is basically
    just a superclass that is not really instantiated directly.

    I have also made WWW::Nextbus::Agency::SFMUNI, which ISA
    WWW::Nextbus::Agency. This is just a helpful subclass that already
    knows the GET stroll and other info relevant to the particular
    agency sf-muni. It is basically just a premade instance of Agency
    (but when the manual instantiation takes hundreds of lines that
    could be useful). This would provide an alternative for programmers:
    either use a hard coded helper subclass for the agency of interest,
    or instantiate Agency with just the name of the agency you want and
    send it to out inform itself.

    As people use Agency to build GET trees for other agencies, they
    could easily make up similar helper subclasses to help other people
    interested in that agency. I'm only interested in sf-muni for now...

    *The Progress Hope that's clear. Anyway I'm using the Agency and
    SFMUNI classes already to implement my AIM->Nextbus interface.
    Putting in the Nextbus superclass with some useful methods and an
    internal Agency object should be pretty simple, but may be time
    consuming. And then I have to learn POD. Maybe better to upload
    Agency first since that's almost done and pretty useful by itself.
    But should keep the Nextbus namespace open above it.

    *The Namespace I chose WWW because I see a few other similar
    website specific info grabbers in this root.

  enteredby:   PHLI (Peter H. Li)
  enteredon:   Sat Dec  6 07:02:24 2003 GMT

The resulting entry would be:

WWW::
::Nextbus         cdpOr OO Interface to Nextbus public transit GPS   PHLI


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=cf500000_f7d60f61f9aef0ea&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=cf500000_f7d60f61f9aef0ea&SUBMIT_pause99_add_mod_insertit=1
