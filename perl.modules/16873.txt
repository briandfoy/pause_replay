Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:16873
Return-Path: <jnatera@net-uno.net>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 64355 invoked by uid 76); 10 Jan 2003 19:16:16 -0000
Received: from mx-01.net-uno.net (HELO net-uno.net) (206.49.154.45) by onion.perl.org (qpsmtpd/0.20) with SMTP; 2003-01-10 19:16:16Z
Received: from [172.16.4.92] (HELO net-uno.net)  by net-uno.net (CommuniGate Pro SMTP 4.0.1)  with ESMTP id 19752329 for modules@perl.org; Fri, 10 Jan 2003 15:15:57 -0400
Message-ID: <3E1F1BED.80609@net-uno.net>
Date: Fri, 10 Jan 2003 15:15:57 -0400
User-Agent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.1) Gecko/20020826
X-Accept-Language: en-us, en
MIME-Version: 1.0
To:  modules@perl.org
Subject: Namespace request
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 8bit
X-SMTPD: qpsmtpd/0.20, http://develooper.com/code/qpsmtpd/
Approved: news@nntp.perl.org
From: jnatera@net-uno.net (Juan Natera)

Hello,

I have the first version of my module ready for release.

I named it ExpireForm, people at comp.lang.perl.modules suggested: 
CGI::Form::Expire and CGI::Form::Unique, From these 2, I think 
CGI::Form::Expire describes better the module funcionality.

This is an extract of the README file:

#####
ExpireForm is a Perl Module to make forms expire after they have
been successfully submitted, it relies on a simple hidden field on the
html form, It's not CGI.pm dependant so you can use it with whatever
framework you preffer, I do use CGI.pm though.

ExpireForm provides the same interface no matter what backend you use
to store the Form Expiration Data, drivers currently provided include:
CSV, MySQL and PostgreSQL. A driver for Colon Separated Values (ColonSV)
is provided as an example of a non DBI driver (and it´s used to run the
tests) but I advice you to use CSV instead of ColonSV for production
systems.

A simple example of how to use ExpireForm with CGI.pm could be:

   use ExpireForm;
   # Create the ExpireForm object and select the appropiate driver
   my $ef = ExpireForm->new(driver=>'CSV', options=>\@options);

   # On the form building part of you script
   print start_form(),
         textfield('name'),
         $ef->form_expirer, # this creates the hidden field
         submit(),
         end_form();

   # then do the check on the form processing part of your scripts
   my $fid = param('FID'); # Get the FID value
   if ($ef->form_found($fid) && $ef->form_not_submitted($fid)) {
     # If the form exists but it has not been submitted yet,
     # do some processing to the form
     ...
     # then mark it as submitted
     $ef->mark_as_sent($fid);
   } else {
     print p('this form has already expired!');
   }
#####

Best Regards,

Juan Jose Natera

