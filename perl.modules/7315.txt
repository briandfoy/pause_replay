Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:7315
Return-Path: <schwern@pobox.com>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 87484 invoked from network); 1 Sep 2001 21:46:50 -0000
Received: from ool-18ba90a1.dyn.optonline.net (HELO ool-18b93024.dyn.optonline.net) (24.186.144.161)
  by onion.valueclick.com with SMTP; 1 Sep 2001 21:46:50 -0000
Received: by ool-18b93024.dyn.optonline.net (Postfix, from userid 1000)
	id 431EC825D; Sat,  1 Sep 2001 17:46:49 -0400 (EDT)
Date: Sat, 1 Sep 2001 17:46:49 -0400
To: Graham Barr <gbarr@pobox.com>, kstar@cpan.org,
	Kirrily Robert <skud@infotrope.net>, modules@perl.org
Subject: Re: New interface styles
Message-ID: <20010901174649.V606@blackrider>
References: <20010830194241.P2318@blackrider> <E15cptx-000820-00@tanqueray.infotrope.net> <20010901080233.B29926@wolfetech.com> <20010901221907.O76062@pobox.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20010901221907.O76062@pobox.com>
User-Agent: Mutt/1.3.20i
X-Spam-Rating: onion.valueclick.com 1.6.2 0/1000/N
Approved: news@nntp.perl.org
From: schwern@pobox.com (Michael G Schwern)

On Sat, Sep 01, 2001 at 10:19:07PM +0100, Graham Barr wrote:
> > > >The second is 'o' for 'other'.  A lot of stuff just doesn't fit.
> > > >Test::Inline lets you put code in POD.  What the hell kind of
> > > >interface is that?
> > 
> >     I don't see how that affects what kind of interface it is.  It's
> > still functional, OO, declarative, procedural, whatever.
> 
> Yes, I agree with Kurt on bot points.

We already have an 'other'.  ' n - no interface at all (huh?)'.
Module authors are using it to mean 'other'.


Here are some common, troublesome modules.  Simply describing these as
'procedural' or 'object-oriented' doesn't tell you anything useful.

CPAN        Sure, it's got an OO interface in there somewhere.  But the
            shell interface is the real point of the module.

Text::Template      Simply describing these with O or f doesn't do
Embperl             justice to the fact that the *real* point is
HTML::Mason         the ability to embed code into other mediums.
Test::Inline
Inline::C

Maybe we need an 'e' for 'embedded code' and some classification for
modules which are actually programs.  's' for 'shell program'?


There's already confusion about this.  Looking at the Inline namespace...

Inline::
::CPR              adpn? C Perl Run - Embed Perl in C, ala Inline     INGY
::C                bdpn? Write Perl subroutines in C                  INGY
::CPP              bdpO? Easy implementation of C++ extensions        NEILW
::Python           adcO? Easy implementation of Python extensions     NEILW
::Tcl              adcf? Write Perl subroutines in Tcl                RRS

Let's see... two have "no interface", two are OO and one is
functional.

They ALL have the same basic interface!  Yet it's described three
different ways, depending on the author.  Obviously some confusion.


We also need 'b' for 'bundle'.

Bundle::
::Bugzilla         Rdon? Bundle to load modules for Bugzilla          ZLIPTON

Bundle::Bugzilla is listed as having 'no interface'.


So that's..

    p               pragma          (Perliaga, Coy, etc...)
    e               embedded code   (Inline, Mason, etc...)
    b               bundle          (Bundle::whatever)
    s (or maybe P)  shell program   (CPAN)
    o               other           replacement for 'no interface'

plus the existing ones, and discourage the use of 'n'.


That should do a better job of describing what's on CPAN.


-- 

Michael G. Schwern   <schwern@pobox.com>    http://www.pobox.com/~schwern/
Perl6 Quality Assurance     <perl-qa@perl.org>	     Kwalitee Is Job One
If you'll mount me, I'll let you bomb Canada until they swoon.
