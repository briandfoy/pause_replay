Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:24931
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 39653 invoked by uid 76); 8 Dec 2003 23:28:34 -0000
Received: from x1.develooper.com (HELO x1.develooper.com) (63.251.223.170) by onion.perl.org (qpsmtpd/0.26) with SMTP; Mon, 08 Dec 2003 15:28:34 -0800
Received: (qmail 19153 invoked by uid 225); 8 Dec 2003 23:28:33 -0000
Delivered-To: modules@perl.org
Received: (qmail 19149 invoked by alias); 8 Dec 2003 23:28:33 -0000
Received: from [195.149.117.110] (HELO pause.perl.org) (195.149.117.110) by la.mx.develooper.com (qpsmtpd/0.27-dev) with ESMTP; Mon, 08 Dec 2003 15:28:21 -0800
Received: from pause.perl.org (localhost [127.0.0.1])	by pause.perl.org (8.12.3/8.12.3/Debian-6.6) with ESMTP id hB8NS2cj022641;	Tue, 9 Dec 2003 00:28:02 +0100
Received: (from nobody@localhost)	by pause.perl.org (8.12.3/8.12.3/Debian-6.6) id hB8NS2T4022639;	Tue, 9 Dec 2003 00:28:02 +0100
Date: Tue, 9 Dec 2003 00:28:02 +0100
Message-ID: <200312082328.hB8NS2T4022639@pause.perl.org>
Subject: Module submission Parallel::ForkControl
Reply-To: modules@perl.org
To: modules@perl.org, blhotsky@cpan.org
X-Spam-Check-By: la.mx.develooper.com
X-Spam-Status: No, hits=1.1 required=7.0 tests=CARRIAGE_RETURNS,SPAM_PHRASE_00_01 version=2.44
X-SMTPD: qpsmtpd/0.26, http://develooper.com/code/qpsmtpd/
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Parallel::ForkControl
  DSLIP:       adpOp
  description: Abstracts forking code out of the program
  userid:      BLHOTSKY (Brad Lhotsky)
  chapterid:    5 (Networking_Devices_IPC)
  communities:

  similar:
    Parallel::ForkManager

  rationale:

    The goal of the module is to have a smart parent process that can
    stop forking processes when the machine comes under heavy load,
    either from the children, or other external programs. Additionally,
    it encapsulates the child program in a sub routine, making code look
    a little cleaner, and slightly more maintainable. As of right now,
    the code I have can only control the start of processes, eventually,
    I'd like to extend the module to be able to control children
    currently running, perhaps enabling the parent process to suspend or
    terminate children based on the health of the system. The interface
    is very generic at this point, it uses 'uptime' as a way to
    calculate the system load. As I get more feedback, I'd like to make
    the build process determine the best way to monitor processes. For
    instance, if /proc is available, I might have a /proc related
    process manager to utilize as opposed to shell commands or
    something. I'd like to give the developer more control over their
    child processes and remove all the fork logic from the program. The
    end result SHOULD be less fork bombed servers.

  enteredby:   BLHOTSKY (Brad Lhotsky)
  enteredon:   Mon Dec  8 23:28:01 2003 GMT

The resulting entry would be:

Parallel::
::ForkControl     adpOp Abstracts forking code out of the program    BLHOTSKY


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=b0600000_df1679cb399df7b1&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=b0600000_df1679cb399df7b1&SUBMIT_pause99_add_mod_insertit=1
