Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:11582
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 64300 invoked by uid 76); 8 May 2002 02:50:54 -0000
Received: from root@dubravka.kbx.de (HELO pause.perl.org) (212.40.160.59)
  by onion.perl.org (qpsmtpd/0.07) with SMTP; Wed May  8 02:50:54 2002 -0000
Received: (from nobody@localhost)
	by pause.perl.org (8.9.3/8.9.3) id EAA04897;
	Wed, 8 May 2002 04:50:51 +0200
Date: Wed, 8 May 2002 04:50:51 +0200
Message-ID: <200205080250.EAA04897@pause.perl.org>
Reply-To: modules@perl.org
Subject: Module submission String::LRC
To: modules@perl.org, whoelse@cpan.org
Approved: news@nntp.perl.org
From: upload@p11.speed-link.de ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       String::LRC
  DSLIP:       Rd+fa
  description: Longitudinal redundancy check generation
  userid:      WHOELSE (Ralph Padron)
  chapterid:   11 (String_Lang_Text_Proc)
  communities:

  similar:

  rationale:

    The Longitudinal Redundancy Check (LRC) is a one byte character
    commonly generated from a string or block of bytes as a form of
    error checking in data transmission (over analog systems or any
    line-by-line system where the data is enclosed in STX-ETX
    characters).

    Some uses are for TCP socket based communication for financial
    protocols that are currently in use (credit card, debit card, check
    and other electronic payments).

    I've found no module on CPAN that would provide the LRC of a string
    and although the routine is a fairly simple loop mechanism,
    hopefully, a pre-existing module on CPAN may assist other authors
    (not having to research the algorithm in books) by reducing their
    development times. Personal tests show the C routine in this version
    of my module may run in 1/20th the time a similar perl subroutine
    may take (supposing my calculation is logical).

    This is not to be confused with 7 data bit, Even Parity encoding
    methods for modems, which String::Parity may deal with (unless
    mistaken), it is a redundancy-check "byte".

  enteredby:   WHOELSE (Ralph Padron)
  enteredon:   Wed May  8 02:50:51 2002 GMT

The resulting entry would be:

String::
::LRC             Rd+fa Longitudinal redundancy check generation     WHOELSE


Thanks for registering,
The Pause Team

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=6a100000_26f1042d7078c6ae&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=6a100000_26f1042d7078c6ae&SUBMIT_pause99_add_mod_insertit=1
