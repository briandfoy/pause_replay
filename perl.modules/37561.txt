Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:37561
Return-Path: <sjs@sonic.net>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 29499 invoked from network); 9 Jan 2005 19:10:33 -0000
Received: from x1.develooper.com (63.251.223.170)
  by lists.develooper.com with SMTP; 9 Jan 2005 19:10:33 -0000
Received: (qmail 17116 invoked by uid 225); 9 Jan 2005 19:10:33 -0000
Delivered-To: modules@perl.org
Received: (qmail 17111 invoked by alias); 9 Jan 2005 19:10:32 -0000
X-Spam-Status: No, hits=-4.9 required=8.0
	tests=BAYES_00
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
Received: from b.mail.sonic.net (HELO b.mail.sonic.net) (64.142.19.5)
  by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Sun, 09 Jan 2005 11:10:29 -0800
Received: from bolt.sonic.net (bolt.sonic.net [208.201.242.18])
	by b.mail.sonic.net (8.12.11/8.12.11) with ESMTP id j09JARXF015601
	for <modules@perl.org>; Sun, 9 Jan 2005 11:10:27 -0800
Received: from bolt.sonic.net (IDENT:sjs@localhost [127.0.0.1])
	by bolt.sonic.net (8.12.10/8.12.1) with ESMTP id j09JARv5008886
	for <modules@perl.org>; Sun, 9 Jan 2005 11:10:27 -0800
Received: from localhost (sjs@localhost)
	by bolt.sonic.net (8.12.10/8.12.1/Submit) with ESMTP id j09JARFl008883
	for <modules@perl.org>; Sun, 9 Jan 2005 11:10:27 -0800
Date: Sun, 9 Jan 2005 11:10:27 -0800 (PST)
To: modules@perl.org
Subject: die in a test
Message-ID: <Pine.LNX.4.50L0.0501091057320.8007-100000@bolt.sonic.net>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Approved: news@nntp.perl.org
From: sjs@sonic.net (Steve Smith)

Hi All

I'm trying to implement a test using Test::More where I want
a subroutine to die and I want to catch the error to make
sure it's right.

I've checked the docs on Test::Simple, Test::More, and
Test::Tutorial and I can't seem to get this to work.

This must be something people do, but I can't seem to get it
to work.

I tried:
eval {
	call_sub()
};
if ($@...

and eval {
	local $SIG{__DIE__} = sub {print STDERR "Got die..."};
	call sub();
}
if ($@...

and these don't work.

I found the __DIE__ signal handeler in Test::Builder and
modified it to print the call stack to STDERR and find the
call to my subroutine in the stack and the call to
Test::Builder::__ANON__, but not the eval block.

I must be doing something foolish/ignorant/stupid here but
don't see what.

Suggestions please...

Thanks
Steve S.
