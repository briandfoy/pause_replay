Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:1409
Return-Path: <rabitd@coalescent.net>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 25898 invoked from network); 29 Mar 2000 01:56:28 -0000
Received: from asimov.coalescent.net (qmailr@216.18.20.131)
  by tmtowtdi.perl.org with SMTP; 29 Mar 2000 01:56:28 -0000
Received: (qmail 7079 invoked from network); 29 Mar 2000 02:04:18 -0000
Received: from lan.coalescent.net (HELO coalescent.net) (216.18.20.130)
  by asimov.coalescent.net with SMTP; 29 Mar 2000 02:04:18 -0000
Sender: davidl
Message-ID: <38E162BE.FD8E4B81@coalescent.net>
Date: Tue, 28 Mar 2000 17:56:16 -0800
X-Mailer: Mozilla 4.7 [en] (X11; I; Linux 2.2.5-15 i586)
X-Accept-Language: en
MIME-Version: 1.0
To: modules@perl.org
Subject: Some Advice on Module Names etc.
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Approved: news@nntp.perl.org
From: rabitd@coalescent.net (Dave)

I work for a development company and I've finally convinced the powers
that be
that releasing some of our in house developed modules might be a good
thing.  Nothing
really spectacular but, together our  modules facilitate rad cgi
development.

The problem is that some of the modules are interdependent, and some of
those
interdependancies are with modules that very nearly duplicate the
functionality,
(but differ interface wise) with some existing modules on CPAN.  These
modules
have been optimized for max speed as a suite, one complementing the
other.

As an example, we have a module that implements a Set class & another
that
implements graph manipulation, both of these are significantly less
functional
than their CPAN counterparts but are also significantly faster.

Another problem is that some of the modules don't seem to stand on their
own,
or at least are irrelevant or awkward without their sister modules.  As
an example
we have a template module that we use to describe our cgi output, and
one of its
routines imports and formats an array to hash ref.  We have another that
retrieves
just that format of data from a mysql database, and together those two
modules
enable a 5 line sql query -> html output.

Handy as  all heck, but the database module output is very awkward to
use  outside
the template module, too much typing!:
    eg. $data->[0]->{'huge_table_name.massive_field_name'}

What do you think we should do?  Should we contribute what modules we
have
that are easily categorized, eg. under the Text::   namespace?   Or
should we
group them together under some nested namespace?: like
CGI::SomethingDescriptive:: or is their another option?

Any advice you could give us would be much appreciated.  We've been
using
opensource software, perl and CPAN for some time now, and we feel it's
time we contributed something back, but where do we put it?



--
"Oh bother", said pooh, "Eeyore go get Ryan, every time I e-mail
tiggr it bounces".                            www.ryansfault.com
Because  even  a  poo bear  knows it's not his fault  its  Ryans



