Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:11245
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 13735 invoked by uid 76); 17 Apr 2002 11:14:48 -0000
Received: from root@dubravka.kbx.de (HELO pause.perl.org) (212.40.160.59)
  by onion.perl.org (qpsmtpd/0.06) with SMTP; Wed Apr 17 11:14:48 2002 -0000
Received: (from nobody@localhost)
	by pause.perl.org (8.9.3/8.9.3) id NAA13789;
	Wed, 17 Apr 2002 13:14:45 +0200
Date: Wed, 17 Apr 2002 13:14:45 +0200
Message-ID: <200204171114.NAA13789@pause.perl.org>
Reply-To: modules@perl.org
Subject: Module submission String::Interpolate
To: modules@perl.org, nobull@cpan.org
Approved: news@nntp.perl.org
From: upload@p11.speed-link.de ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       String::Interpolate
  DSLIP:       adphp
  description: Apply Perl's qq interpolation to strings
  userid:      NOBULL (Brian McCauley)
  chapterid:   11 (String_Lang_Text_Proc)
  communities:
    comp.lang.perl.modules

  similar:

  rationale:

    I think the choice of String::Interpolate is self-explanatory.

    I believe there is a widespread desire for a neat solution to
    applying Perl's inbuilt interpolation engine to values in scalars.
    (The question is asked about once a week in comp.lang.perl.*).

    At it's simplest:

    use String::Interpolate qw(interpolate); my $string =
    interpolate($template);

    Is the same as:

    chop ( my $string = eval "<<EOF\n$template\nEOF\n" ); die $@ if $@;

    The module also provides a lot more too.

    I note there is a nanny-state school of thought that believes that
    the above trick is too evil to tell the masses. At least by putting
    it in a module the module documentation can clearly explain the
    hazards.

  enteredby:   NOBULL (Brian McCauley)
  enteredon:   Wed Apr 17 11:14:45 2002 GMT

The resulting entry would be:

String::
::Interpolate     adphp Apply Perl's qq interpolation to strings     NOBULL


Thanks for registering,
The Pause Team

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=e4100000_4dff2c0cece61aa1&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=e4100000_4dff2c0cece61aa1&SUBMIT_pause99_add_mod_insertit=1
