Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:42498
Return-Path: <comdog@panix.com>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 12495 invoked from network); 10 Aug 2005 15:36:31 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 10 Aug 2005 15:36:31 -0000
Received: (qmail 20177 invoked by uid 225); 10 Aug 2005 15:36:31 -0000
Delivered-To: modules@perl.org
Received: (qmail 20150 invoked by alias); 10 Aug 2005 15:36:30 -0000
X-Spam-Status: No, hits=-5.9 required=8.0
	tests=ALL_TRUSTED,BAYES_00
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: neutral (x1.develooper.com: 63.251.223.186 is neither permitted nor denied by domain of comdog@panix.com)
Received: from x6.develooper.com (HELO lists.develooper.com) (63.251.223.186)
    by la.mx.develooper.com (qpsmtpd/0.28) with SMTP; Wed, 10 Aug 2005 08:36:28 -0700
Received: (qmail 12487 invoked by uid 515); 10 Aug 2005 15:36:25 -0000
To: modules@perl.org, gavin@openfusion.com.au (Gavin Carr)
Subject: Re: Module submission URI::Query
Date: Wed, 10 Aug 2005 10:36:25 -0500
Reply-To: modules@perl.org
Posted-And-Mailed: yes
Message-ID: <100820051036253926%comdog@panix.com>
References: <200508010520.j715KYOI018477@pause.perl.org> <010820050702132072%comdog@panix.com> <20050802230603.GB4413@openfusion.com.au>
Organization: Perl Author's Upload SErver (PAUSE)
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-transfer-encoding: 8bit
User-Agent: Thoth/1.5.9 (Carbon/OS X)
X-Posted-By: 24.12.70.36
Approved: news@nntp.perl.org
From: comdog@panix.com (_brian_d_foy)

[[ This message was both posted and mailed: see
   the "To," "Cc," and "Newsgroups" headers for details. ]]

In article <20050802230603.GB4413@openfusion.com.au>, Gavin Carr
<gavin@openfusion.com.au> wrote:


> My module is higher-level than the CGI params stuff (as well as being 
> lighter, of course). The main use case I use it for is for creating 
> links based on the current page but with a small number of parameters 
> changed (page navigation, sort links, etc.). With URI::Query you can do:
> 
>   my $qq = URI::Query->new($query_string_or_hash);
>   
>   # Previous page
>   my $prev_qs = $qq->replace(start => $start - $pagesize);
> 
>   # Next page
>   my $next_qs = $qq->replace(start => $start + $pagesize);
> 
>   # Revert to initial constructor state
>   $qq->revert;

CGI.pm can do all this too.


>   # Different orderings
>   my $price_qs = $qq->replace(order => 'price');
>   my $availability_qs = $qq->replace(order => 'availability');

I'm not sure what this does, so I'm not sure that CGI.pm
can do it.

-- 
brian d foy (one of many PAUSE admins), http://pause.perl.org
archives at http://www.xray.mpe.mpg.de/mailing-lists/modules
please send all messages back to modules@perl.org
