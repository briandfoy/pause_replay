Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:1949
Return-Path: <andreas.koenig@anima.de>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 17250 invoked from network); 22 May 2000 05:42:24 -0000
Received: from dubravka.in-berlin.de (HELO ak-71.mind.de) (0@193.175.21.65)
  by tmtowtdi.perl.org with SMTP; 22 May 2000 05:42:24 -0000
Received: (from k@localhost)
	by ak-71.mind.de (8.9.3/8.9.3) id HAA01337;
	Mon, 22 May 2000 07:42:16 +0200
X-Authentication-Warning: ak-71.mind.de: k set sender to andreas.koenig@anima.de using -f
Sender: k@ak-71.mind.de
To: "L.M.Orchard" <deus_x@ninjacode.com>
Cc: modules@perl.org
Subject: Re: Namespace request: IO::Filesystem
References: <Pine.LNX.4.21.0003210104070.5395-100000@ninjacode.com>
Date: 22 May 2000 07:42:16 +0200
In-Reply-To: "L.M.Orchard"'s message of "Tue, 21 Mar 2000 01:13:10 -0500 (EST)"
Message-ID: <m3ya539m4n.fsf@ak-71.mind.de>
Lines: 40
User-Agent: Gnus/5.0803 (Gnus v5.8.3) Emacs/20.6
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Approved: news@nntp.perl.org
From: andreas.koenig@anima.de ((Andreas J. Koenig))

>>>>> On Tue, 21 Mar 2000 01:13:10 -0500 (EST), "L.M.Orchard" <deus_x@ninjacode.com> said:

 > Greets.  Looking to register a namespace IO::Filesystem.
 > Name           DSLI  Description                                  Info
 > -------------  ----  -------------------------------------------- -----
 > IO::Filesystem cdpO  OO interface to a filesystem-like datasource DEUSX

 > Comments on this namespace or an alternate one for the above package would
 > be appreciated.  It's basically an abstract class presenting a set of
 > methods which roughly correspond to the set of standard operations
 > possible to a filesystem.  

 > Sounds silly since we already have those as functions.  But, it becomes
 > useful, for instance, when one creates a subclass which implements a
 > simulated filesystem interface to a MySQL database.  And then you may
 > uses it in such beasts as an FTPd, or a set of commands like cp, ls, rm,
 > etal...  Because IO::Filesystem::* classes would all present the same
 > interface, one is free to swap out various implementations, yet use the
 > same set of tools/apps.

I see, you haven't yet uploaded such a thing, so it may be of interest
to you to know that a Filesys:: namespace already exists:

Filesys::
::AFS             cdcO AFS Distributed File System interface        NOG
::Df              Rdpr Disk free based on Filesys::Statvfs          IGUTHRIE
::DiskFree        adpO OS independant parser of the df command      ABARCLAY
::SamFS           adcf Interface to SamFS API                       LUPE
::Statvfs         Rdcf Interface to the statvfs() system call       IGUTHRIE
::dfent           adpf By-name interface                            TOMC
::mntent          adpf By-name interface                            TOMC
::statfs          adpf By-name interface                            TOMC

I for one would rather expect a filesystem emulation layer in the
Filesys namespace than in IO. Maybe Filesys::Perl or Filesys::Base or
even Filesys::IO would seem natural. But maybe that's just me. Either
way, feel free to upload, do not wait until the light gets green.

-- 
andreas
