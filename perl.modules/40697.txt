Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:40697
Return-Path: <marvin@rectangular.com>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 19008 invoked from network); 30 May 2005 01:29:59 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 30 May 2005 01:29:59 -0000
Received: (qmail 8396 invoked by uid 225); 30 May 2005 01:29:59 -0000
Delivered-To: modules@perl.org
Received: (qmail 8391 invoked by alias); 30 May 2005 01:29:59 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
Received: from www.rectangular.com (HELO rectangular.com) (12.154.210.214)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Sun, 29 May 2005 18:29:56 -0700
Received: from c-24-21-47-23.hsd1.or.comcast.net ([24.21.47.23] helo=[10.0.1.3])
	by rectangular.com with esmtpa (Exim 4.44)
	id 1DcZAc-000OuS-EM
	for modules@perl.org; Sun, 29 May 2005 18:34:22 -0700
Mime-Version: 1.0 (Apple Message framework v730)
In-Reply-To: <290520052001310765%comdog@panix.com>
References: <200505290400.j4T40MOu026604@pause.perl.org> <290520052001310765%comdog@panix.com>
Content-Type: text/plain; charset=US-ASCII; delsp=yes; format=flowed
Message-ID: <1901CD85-9351-4786-A4DE-376D6A13A235@rectangular.com>
Content-Transfer-Encoding: 7bit
Subject: Re: Module submission Sort::MonsterSort
Date: Sun, 29 May 2005 18:29:50 -0700
To: modules@perl.org
X-Mailer: Apple Mail (2.730)
Approved: news@nntp.perl.org
From: marvin@rectangular.com (Marvin Humphrey)

On May 29, 2005, at 6:01 PM, _brian_d_foy wrote:

> Is "monster" meaningful or something that you chose?

The only reason that you would use this module is to sort "monster"  
collections -- lists which are too large to fit in memory.  In that  
sense it is meaningful, and that's why I chose it, but it doesn't  
come from prior art.  From the docs:

[code]

=head2 The monstersort algorithm

Cache sortable items in memory.  Every X items, sort the cache and  
empty it
into a temporary sortfile.  As sortfiles accumulate, consolidate them
periodically by interleaving their contents into larger sortfiles.  Use
caching during the interleaving process to minimize disk I/O.   
Complete the
sort by emptying the cache then interleaving the contents of all  
existing
sortfiles.

[/code]

You would never want to pay monstersort's penalty in disk I/O and  
repeated sort calculations except when sorting a list of monstrous size.

Another name under consideration was Sort::Monster.  However, that  
got nixed because there is already a commercial software product  
called SortMonster <http://www.sortmonster.com> (with a neato  
animated mascot!).  A few web searches for 'monstersort' turned up  
very little, so I figured it was safe.

Best,

-- 
Marvin Humphrey
Rectangular Research
http://www.rectangular.com/
