Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:46593
Return-Path: <cpan@ali.as>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 22416 invoked from network); 26 Dec 2005 02:17:14 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 26 Dec 2005 02:17:14 -0000
Received: (qmail 14463 invoked by uid 225); 26 Dec 2005 02:17:14 -0000
Delivered-To: modules@perl.org
Received: (qmail 14457 invoked by alias); 26 Dec 2005 02:17:14 -0000
X-Spam-Status: No, hits=-4.4 required=8.0
	tests=ALL_TRUSTED,BAYES_00
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: neutral (x1.develooper.com: local policy)
Received: from x6.develooper.com (HELO lists.develooper.com) (63.251.223.186)
    by la.mx.develooper.com (qpsmtpd/0.28) with SMTP; Sun, 25 Dec 2005 18:17:11 -0800
Received: (qmail 22409 invoked by uid 515); 26 Dec 2005 02:17:07 -0000
Message-ID: <20051226021707.22408.qmail@lists.develooper.com>
To: modules@perl.org
Date: Mon, 26 Dec 2005 13:15:16 +1100
User-Agent: Mozilla Thunderbird 1.0 (Windows/20041206)
X-Accept-Language: en-us, en
MIME-Version: 1.0
Subject: Re: Module submission Test::CPAN
References: <200512220118.jBM1I5Ks023025@pause.perl.org> <221220050919259657%comdog@panix.com> <20051222175705.GA4741@yi.org> <200512231731.jBNHV0W2057748@smtp8.activestate.com> <20051224014408.GA32711@yi.org>
In-Reply-To: <20051224014408.GA32711@yi.org>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-Posted-By: 202.90.48.125
Approved: news@nntp.perl.org
From: cpan@ali.as (Adam Kennedy)

Tyler MacDonald wrote:
>>> Actually, I just looked over Test::Prereq, and it does look like we
>>>are doing different things (albeit to check a similar result). The primary
>>>motivation behind Test::CPAN is to test distributions where the Makefile.PL
>>>(or Build.PL) itself depends on a package being installed;
>>
>>I'm not sure what that really means (perhaps an example would help), but
>>I don't think CPAN really matters for the problem (that just happens to
>>be where the modules are). 
> 
> 
> 	This is my overall goal for this module: Seeing how CPAN.pm reacts
> when it tries to unpack and build your module.
> 
> 	Right now, it just sees if your CPAN.pm manages to get to the point
> of making a "Makefile" to glean your dependancies. I would also like to add
> tests to see if it manages to get into a position to build at all, as well
> as create a cpan "simulator" script where you do something like:
> 
> 	cpanemu /path/to/my/module
> 
> 	Which would run the "distdir" action on your module and fool CPAN.pm
> into thinking it has just downloaded your module from CPAN and unpacked it
> there.
> 
> 	The important thing here is that it's testing CPAN's reaction to
> your module -- the important *task* I created this first really dirty alpha
> of it for, is to see if CPAN realizes that you depend on other modules. The
> important reason for that is the case where your Makefile.PL or Build.PL
> makes use of another module. In my case, I have a database module I want to
> release on CPAN, which provides a Module::Build subclass that installs
> schema files into the correct directory. I havent released it on CPAN yet,
> but I'd like to... but then, the Module::Build subclass will be used by
> other distributions that make use of my module, to install *their* schemas.
> So when me or anybody else releases a distribution with that behaviour, I'd
> like the Module::Build logic to find the appropriate subclass to be
> testable.
> 
> 
>>>From the name, I think Test::CPAN would test CPAN. You're testing
>>something else, though, so I think that should be in the name. :)
> 
> 
> 	So as you can see I'm testing CPAN :-) I understand your reluctance
> to allow the module to register since it's a pretty "core" sounding name,
> but I intend to flesh out its functionality further, and would love it of
> other people contributed as well.

But again, you aren't testing "the" Comprehensive Perl Archive 
Network... you are testing the CPAN.pm client library.

You are using "CPAN" in the module sense, and not the actual sense.

Adam K
