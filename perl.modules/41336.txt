Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:41336
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 8030 invoked from network); 30 Jun 2005 13:14:47 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 30 Jun 2005 13:14:47 -0000
Received: (qmail 5024 invoked by uid 225); 30 Jun 2005 13:14:47 -0000
Delivered-To: modules@perl.org
Received: (qmail 5019 invoked by alias); 30 Jun 2005 13:14:46 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
Received: from pause.fiz-chemie.de (HELO pause.perl.org) (195.149.117.110)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Thu, 30 Jun 2005 06:14:44 -0700
Received: from pause.perl.org (localhost [127.0.0.1])
	by pause.perl.org (8.12.3/8.12.3/Debian-7.1) with ESMTP id j5UDEUrd022205;
	Thu, 30 Jun 2005 15:14:30 +0200
Received: (from nobody@localhost)
	by pause.perl.org (8.12.3/8.12.3/Debian-7.1) id j5UDETZR022203;
	Thu, 30 Jun 2005 15:14:29 +0200
Date: Thu, 30 Jun 2005 15:14:29 +0200
Message-ID: <200506301314.j5UDETZR022203@pause.perl.org>
Subject: Module submission Tree::Node
Reply-To: modules@perl.org
To: modules@perl.org, rrwo@cpan.org
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Tree::Node
  DSLIP:       bdcOp
  description: Memory-efficient tree node implementation
  userid:      RRWO (Robert Rothenberg)
  chapterid:   6 (Data_Type_Utilities)
  communities:
    Module-authors list

  similar:
    various *::Node modules for various tree packages, most in Perl

  rationale:

    Implementing trees, linked lists and similar data structures in
    Pure perl is rather pointless, since the underlying list and hash
    implementation uses a lot of memory for individual nodes. It makes
    more sense to use a list of hash, perhaps with tied behaviour.

    However, that Perl lists and hashes use a lot of memory is bad for
    large collections. The speed tradeoff is lost.

    In such cases it's worthwhile to use one of the above data
    structures along with a memory-efficient node type.

  enteredby:   RRWO (Robert Rothenberg)
  enteredon:   Thu Jun 30 13:14:25 2005 GMT

The resulting entry would be:

Tree::
::Node            bdcOp Memory-efficient tree node implementation    RRWO


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=8bb00000_4a0d853f0d2a091c&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=8bb00000_4a0d853f0d2a091c&SUBMIT_pause99_add_mod_insertit=1
