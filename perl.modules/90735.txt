Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:90735
Return-Path: <apache@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 4334 invoked from network); 17 Jul 2014 15:00:59 -0000
Received: from x1.develooper.com (207.171.7.70)
  by x6.develooper.com with SMTP; 17 Jul 2014 15:00:59 -0000
Received: (qmail 25218 invoked by uid 225); 17 Jul 2014 15:00:59 -0000
Delivered-To: modules@perl.org
Received: (qmail 25214 invoked by alias); 17 Jul 2014 15:00:59 -0000
X-Spam-Status: No, hits=-1.9 required=8.0
	tests=BAYES_00,SPF_HELO_PASS,SPF_PASS,URIBL_BLOCKED
X-Spam-Check-By: la.mx.develooper.com
Received: from pause2.develooper.com (HELO pause.perl.org) (207.171.7.119)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Thu, 17 Jul 2014 08:00:56 -0700
Received: by pause.perl.org (Postfix, from userid 48)
	id BAB3D1836; Thu, 17 Jul 2014 15:00:53 +0000 (UTC)
Subject: Module submission App::Dest
Reply-To: modules@perl.org
To: modules@perl.org,gryphon@cpan.org
Message-ID: <20140717150053.BAB3D1836@pause.perl.org>
Date: Thu, 17 Jul 2014 15:00:53 +0000 (UTC)
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       App::Dest
  DSLIP:       bdpfp
  description: Deployment State Manager
  userid:      GRYPHON (Gryphon Shafer)
  chapterid:   3 (Development_Support)
  communities:
    irc.perl.org#dest

  similar:
    App::Sqitch

  rationale:

    App::Dest is a simple "deployment state" change management tool.
    Similar to what Sqitch is doing, but able to work on more than just
    databases. Let's say you're working with a group of other software
    engineers on a particular software project using your favorite
    revision control system. Let's also say that you have a database
    that undergoes schema changes as features are developed, and you
    have various system activities like the installation of libraries or
    other applications. Then let's also say the team braches, works on
    stuff, shares those branches, reverts, merges, etc. And also from
    time to time you want to go back in time a bit so you can reproduce
    a bug. Maintaining the database state and the state of the system
    across all that activity can be problematic. App::Dest tries to
    solve this in a very simple way, letting you be able to deploy,
    revert, and verify to any point in time in the development history.

  enteredby:   GRYPHON (Gryphon Shafer)
  enteredon:   Thu Jul 17 15:00:53 2014 UTC

The resulting entry would be:

App::
::Dest            bdpfp Deployment State Manager                     GRYPHON


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=28e00000_34b06ae091319534&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=28e00000_34b06ae091319534&SUBMIT_pause99_add_mod_insertit=1
Peek at the current permissions:
  https://pause.perl.org/pause/authenquery?pause99_peek_perms_by=me&pause99_peek_perms_query=App%3A%3ADest
