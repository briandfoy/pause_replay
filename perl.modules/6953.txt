Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:6953
Return-Path: <pschnell@touchpowder.com>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 18416 invoked from network); 10 Aug 2001 21:05:17 -0000
Received: from lycee.ns.uk.easynet.net (195.40.1.37)
  by onion.valueclick.com with SMTP; 10 Aug 2001 21:05:17 -0000
Received: from paul (tnt-2-83.easynet.co.uk [195.40.196.83])
	by lycee.ns.uk.easynet.net (Postfix) with SMTP
	id CB9FC9B4E; Fri, 10 Aug 2001 22:05:12 +0100 (BST)
Message-ID: <001101c121e0$b52b76c0$017ba8c0@touchpowder.com>
To: "Tim Bunce" <Tim.Bunce@pobox.com>, <modules@perl.org>
Cc: <pschnell@cpan.org>
References: <200108092224.AAA21159@pause.perl.org> <20010810175256.C29091@rad.ig.co.uk>
Subject: Re: Module submission HTML::Processor
Date: Fri, 10 Aug 2001 22:09:11 +0100
MIME-Version: 1.0
Content-Type: text/plain;
	charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
X-Priority: 3
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook Express 5.00.2919.6600
X-MimeOLE: Produced By Microsoft MimeOLE V5.00.2919.6600
X-Spam-Rating: onion.valueclick.com 1.6.2 0/1000/N
Approved: news@nntp.perl.org
From: pschnell@touchpowder.com ("Paul Schnell")


----- Original Message -----
From: "Tim Bunce" <Tim.Bunce@pobox.com>
To: <modules@perl.org>
Cc: <pschnell@cpan.org>
Sent: Friday, August 10, 2001 5:52 PM
Subject: Re: Module submission HTML::Processor


> How does it compare with the 57 other varieties of templating
> modules and why does the world need another one?
>
> Tim.

A simple and elegantly put question... I'll be happy if the world thinks it
doesn't!

My best reasoning comes out of having occasion to use something other than
one of those 57.
There are some great modules out there and I've used Template-Toolkit and
HTML::Mason
with great success.
My pre-requisites for this one were:
1. Distinct and simple HTML tag syntax
2. Clean and straight-forward OO Perl interface
3. Take the HTML out of the Perl
4. Don't put Perl into HTML
5. Relatively basic demands on data population and template parsing
including:
    - File includes
    - Optional content
    - If/Else blocks
    - Variable substitution
    - Nested Loops
        - Loop Optional content
        - Loop If/else blocks
    - Data sorting (columns)
6. De-bugging of template processing and Perl scripts
7. Due to the development environment I was working in a (questionable)
    need to use the module locally via 'require', warranting a pure Perl
    single-file solution.

Perhaps nothing really new here, but I couldn't find a solution which
adequately met
all of these requirements and it is for this reason that I propose (yet
another) solution,
perhaps there is someone out there in a similar situation to me.
Additionally, I hope to
benefit from its public scrutiny by getting feedback and making improvements
based
on the above methodology - I don't want this to become a 'Mason' or
'Template-Toolkit'
(and I'm sure to make use of them in the future) but I think there is a room
in the middle-ground
for other alternatives.

On a case-by-case comparison based on my pre-requisites:

HTML::Mason
    Larger scale, complex solution, too much Perl in the HTML

HTML::Embperl
    Embedded perl

HTML::EasyTemplate
    No loops, tags too similar to HTML

HTML::Template
    Probably the closest, in terms of functionality, does all and more that
my module does
    but becomes a litle more complex in Perl and has a tag syntax in HTML
which is too
    close to HTML itself

Template::*
    *Respect* - the godfather of functionality & separation of HTML from
Perl, but in terms
    of my pre-requisites has become too large & fragmented

Text::FastTemplate
    No loops, HTML tag syntax not simple and clear enough

Text::BasicTemplate
    No loops, a bit Perl-like in its tag syntax

Text::Tmpl
    Similar Perl interface, but too much C and tag syntax embedded in HTML
comments

Text::Micromason
    As with Mason, too much Perl in the HTML

Text::Templar
    Complex Perl interface, no simple looping functionality, complex tag
syntax

Text::Template
    Basically embedded Perl in HTML

Text::SimpleTemplate
    Embedded Perl, no loops

Text::ScriptTemplate
    Similar to the above

I may have missed a few but, for me, there was reason enough to write
another module, it
may not be the fastest or most comprehensive but I think there is a niche
for it. The above
comparison in no way takes away from what those mods do but, hopefully, in
some way
justifies my case. Any new template processor clearly comes up for criticsm,
which is
good, but highlights the fact that it is an area which has many, varied,
requirements and as
many or more proposed solutions. Its not for me to attempt to rationalise
all the proposals.
I respect those who have been around longer than me and from whom I continue
to learn,
the very nature of CPAN is what, for me, makes Perl great. If this this mod
is just one
too many, hey, I'll bow out gracefully.

Regards,
Paul Schnell



