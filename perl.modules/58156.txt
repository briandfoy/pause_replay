Newsgroups: perl.modules,perl.module-authors
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:58156 perl.module-authors:6123
Return-Path: <patg@patg.net>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Delivered-To: moderator for modules@perl.org
Received: (qmail 3176 invoked from network); 10 Dec 2007 14:54:46 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 10 Dec 2007 14:54:46 -0000
Received: (qmail 16096 invoked by uid 225); 10 Dec 2007 14:54:46 -0000
Delivered-To: modules@perl.org
Received: (qmail 16084 invoked by alias); 10 Dec 2007 14:54:45 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,SPF_HELO_PASS
X-Spam-Check-By: la.mx.develooper.com
Received: from cliff.nhwisp.com (HELO cliff.nhwisp.com) (208.50.112.2)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Mon, 10 Dec 2007 06:54:28 -0800
Received: from [192.168.1.102] (patg.net [208.50.112.90])
	by cliff.nhwisp.com (8.11.6/8.11.6) with ESMTP id lBAEs0T01888;
	Mon, 10 Dec 2007 09:54:00 -0500
Message-ID: <475D52E4.7010800@patg.net>
Date: Mon, 10 Dec 2007 09:53:24 -0500
User-Agent: Mozilla Thunderbird 1.0.7 (Macintosh/20050923)
X-Accept-Language: en-us, en
MIME-Version: 1.0
To: Tim Bunce <Tim.Bunce@pobox.com>
CC: module-authors@perl.org, modules@perl.org
Subject: Re: Naming convention for thin wrappers around C lib<foo>.so ?
References: <20071206221132.GB682@timac.local> <D2F46975-4C9A-48DD-B50C-D4CBD1C9FBC6@free.fr> <20071210110738.GD2856@timac.local>
In-Reply-To: <20071210110738.GD2856@timac.local>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 8bit
Approved: news@nntp.perl.org
From: patg@patg.net (Patrick Galbraith)

Tim Bunce wrote:

>On Sat, Dec 08, 2007 at 06:38:50PM +0100, Sébastien Aperghis-Tramoni wrote:
>  
>
>>Tim Bunce wrote:
>>
>>    
>>
>>>If there's a libfoo.so and I want to create a perl module/distribution
>>>that's just a very thin wrapper around libfoo, what should I call it?
>>>
>>>    LibFoo
>>>    Lib::Foo
>>>    Lib::foo
>>>    Lib::libfoo
>>>    libfoo
>>>    SomeCategory::Libfoo
>>>    ???
>>>      
>>>
>>Following the "Category::Foo" scheme:
>> [...]
>>
>>Following the top-level namespace "Foo" scheme:
>> [...]
>>    
>>
>
>It's clear the "Category::Foo" scheme has the greater number of distributions.
>It's also clear there's no firmly established best practice here.
>
>I wanted to discuss the issue in the abstract first because the actual
>library/module is in a category/namespace with it's own set of problems.
>
>I'm looking to build a very thin wrapper around libmemcached
>(http://tangent.org/552/libmemcached.html)
>a high-performance feature-rich interface to memcached.
>
>The natural category would be Cache:: but that namespace is a bit of a mess.
>There are two big distributions (Cache and Cache::Cache) that have
>different APIs. Each ships with a bunch of cache modules (Cache::Memory
>vs Cache::MemoryCache). Then there are lots of other Cache::*
>distributions and modules that may or may not conform to one or the
>other API.
>
>Since the extension I want to implement would not itself implement
>either the Cache or Cache::Cache API I'm reluctant to put it into the
>Cache:: namespace.
>
>I was thinking in terms of a low-level 'thin' extension called
>Lib::libmemcached with separate pure-perl modules implementing the Cache
>and Cache::Cache interfaces.
>
>So, here's the point: does anyone have any good objections to my
>establishing a new precident by using the Lib:: namespace for this?
>(Or perhaps CLib:: or SysLib:: or ...)
>
>Or should I just add to the general mess in the Cache:: namespace?
>
>Tim.
>  
>
Tim,

I guess another question to ask would be are there other 
instances/projectsd where this sort of structure "Lib::low-level-lib"  
would be usefull for other projects. I would think so and agree with 
this approach.

--Patrick

-- 
Patrick Galbraith, Senior Programmer 
Grazr - Easy feed grazing and sharing
http://www.grazr.com 

Satyam Eva Jayate - Truth Alone Triumphs
Mundaka Upanishad



