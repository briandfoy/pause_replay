Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:5818
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 36158 invoked from network); 25 May 2001 05:05:19 -0000
Received: from dubravka.kbx.de (HELO pause.perl.org) (root@212.40.160.59)
  by onion.valueclick.com with SMTP; 25 May 2001 05:05:19 -0000
Received: (from nobody@localhost)
	by pause.perl.org (8.9.3/8.9.3) id HAA06727;
	Fri, 25 May 2001 07:05:16 +0200
Date: Fri, 25 May 2001 07:05:16 +0200
Message-ID: <200105250505.HAA06727@pause.perl.org>
Reply-To: modules@perl.org
Subject: Module submission File::NFSLock
To: modules@perl.org, rhandom@cpan.org
X-Spam-Rating: onion.valueclick.com 1.6.2 0/1000/N
Approved: news@nntp.perl.org
From: upload@p11.speed-link.de ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       File::NFSLock
  DSLIP:       bdpOp
  description: NFS compatible (safe) locking utility
  userid:      RHANDOM (Paul T. Seamons)
  chapterid:   10 (File_Names_Systems_Locking)
  communities:
    In company (for past year). Possibly on perlmonks.org

  similar:

  rationale:

    There are currently interfaces to flock. However, they do nothing
    to provide for locking across NFS. File::NFSLock provides safe, fast
    locking across NFS with little overhead.

    Our company has been looking for a solution for over a year. We
    recently saw a note that said hard linking is atomic across NFS.
    That was all we needed.

    There is something in Mail::Box::Locker that tries to do something
    similar, but it doesn't seem to be generalized and it is not a
    finished solution.

    File::NFSLock currently supports blocking and nonblocking locks and
    will soon allow for shared locking as well.

  enteredby:   RHANDOM (Paul T. Seamons)
  enteredon:   Fri May 25 05:05:16 2001 GMT

The resulting entry would be:

File::
::NFSLock         bdpOp NFS compatible (safe) locking utility        RHANDOM


Thanks for registering,
The Pause Team

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=88000000_ab9b5bd4fb63cfe1&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=88000000_ab9b5bd4fb63cfe1&SUBMIT_pause99_add_mod_insertit=1
