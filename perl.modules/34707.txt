Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:34707
Return-Path: <tom@moertel.com>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 20072 invoked from network); 13 Sep 2004 02:56:52 -0000
Received: from x1.develooper.com (63.251.223.170)
  by lists.develooper.com with SMTP; 13 Sep 2004 02:56:52 -0000
Received: (qmail 24219 invoked by uid 225); 13 Sep 2004 02:56:52 -0000
Delivered-To: modules@perl.org
Received: (qmail 24212 invoked by alias); 13 Sep 2004 02:56:51 -0000
X-Spam-Status: No, hits=-4.9 required=8.0
	tests=BAYES_00
X-Spam-Check-By: la.mx.develooper.com
Received: from ns1.moertel.com (HELO tea.moertel.com) (64.205.222.66)
  by la.mx.develooper.com (qpsmtpd/0.27.1) with SMTP; Sun, 12 Sep 2004 19:56:50 -0700
Received: (qmail 22141 invoked from network); 13 Sep 2004 02:56:45 -0000
Received: from moertel.com (bifur.lab01.moertel.com [192.168.144.13])
  by oak.lab01.moertel.com ([192.168.144.178])
  with ESMTP via TCP; 13 Sep 2004 02:56:45 -0000
Message-ID: <41450C6A.5040904@moertel.com>
Date: Sun, 12 Sep 2004 22:56:42 -0400
Organization: Moertel Consulting
User-Agent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.6) Gecko/20040124
X-Accept-Language: en-us, en
MIME-Version: 1.0
To:  modules@perl.org
Subject: Re: Module submission Test::LectroTest
References: <200409092230.i89MUgPI004025@pause.perl.org> <120920041504588173%comdog@panix.com>
In-Reply-To: <120920041504588173%comdog@panix.com>
Content-Type: text/plain; charset=us-ascii; format=flowed
Content-Transfer-Encoding: 7bit
Approved: news@nntp.perl.org
From: tom@moertel.com (Tom Moertel)

_brian_d_foy wrote:
> Do we need to say "Test" twice [in Test::LectroTest]?
> Would Test::Lectro work too? :)

That's a good question.  In answer, no, we don't *need* to call the
module Test::LectroTest, but I'd like to.  I hope to someday have
implementations of LectroTest for other languages I use frequently.
While Test::Lectro works in the Perl world, it doesn't necessarily
work so well in other worlds.  I'd like to be consistent and keep the
name of the overall system as "LectroTest", just tucking that name
into the appropriate namespaces of each language for which there is
an implementation.

One could argue that I would be better off just calling the system
"Lectro" and using that name consistently, but that name already has
about 38_500 hits on Google, and there's even a company/brand by that
very name.  I'd rather not risk trademark issues and the like.
LectroTest, which is unclaimed save for my use, seems a safer choice.

For these reasons, I ask that we keep the name Test::LectroTest.

Cheers,
Tom
