Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:43468
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 11882 invoked from network); 1 Sep 2005 00:03:02 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 1 Sep 2005 00:03:02 -0000
Received: (qmail 18851 invoked by uid 225); 1 Sep 2005 00:03:02 -0000
Delivered-To: modules@perl.org
Received: (qmail 18837 invoked by alias); 1 Sep 2005 00:03:00 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
Received: from pause.fiz-chemie.de (HELO pause.perl.org) (195.149.117.110)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Wed, 31 Aug 2005 17:02:56 -0700
Received: from pause.perl.org (localhost [127.0.0.1])
	by pause.perl.org (8.12.3/8.12.3/Debian-7.1) with ESMTP id j8102brd010415;
	Thu, 1 Sep 2005 02:02:37 +0200
Received: (from nobody@localhost)
	by pause.perl.org (8.12.3/8.12.3/Debian-7.1) id j8102aZn010413;
	Thu, 1 Sep 2005 02:02:36 +0200
Date: Thu, 1 Sep 2005 02:02:36 +0200
Message-ID: <200509010002.j8102aZn010413@pause.perl.org>
Subject: Module submission Perl::Strongly::Typed
Reply-To: modules@perl.org
To: modules@perl.org, metzzo@cpan.org
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Perl::Strongly::Typed
  DSLIP:       bdppp
  description: Declare strongly typed variables
  userid:      METZZO (Mark Ethan Trostler)
  chapterid:   2 (Language_Extensions)
  communities:

  similar:
    Tie::Constraint

  rationale:

    Wanted ability to 'lock-down' variables to specific types (both
    primitive & object types) to minimize programmer error. Declarations
    look like: my $int_only_variable :TYPE('int'); # OR my $file_io_only
    :TYPE('IO::File'); # OR my @array_of_strings :TYPE('string'); # OR
    my $scalar_ref :TYPE('SCALAR'); # OR my @array_of_array_refs
    :TYPE('ARRAY'); # OR my %hash_of_hash_refs :TYPE('HASH'); # OR my
    %hash_of_xml_parsers :TYPE('XML::Parser'); #OR my $my_own_darn_type
    :TYPE(\&my_validation_function);

    Any variable (scalar, array, or hash) can be locked down to only
    contain a certain type of variable - besides the 'builtin' types
    ('int', 'string' (non-ref), 'SCALAR', 'HASH', 'ARRAY' (refs), and
    any object type (like 'XML::Parser' or whatever), users can roll
    their own by supplying a function ref which'll get called with the
    value of whatever is attempting to be assigned to that variable.
    Returning 1 means okay, returning 0 means no.

    If the assignment is refused Perl::Strongly::Typed croaks with an
    informative message about what went wrong...

    thanks! Mark

  enteredby:   METZZO (Mark Ethan Trostler)
  enteredon:   Thu Sep  1 00:02:36 2005 GMT

The resulting entry would be:

Perl::Strongly::
::Typed           bdppp Declare strongly typed variables             METZZO


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=1ca00000_8f5749e6dee4598b&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=1ca00000_8f5749e6dee4598b&SUBMIT_pause99_add_mod_insertit=1
