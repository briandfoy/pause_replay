Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:39565
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 29938 invoked from network); 9 Apr 2005 19:16:18 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 9 Apr 2005 19:16:18 -0000
Received: (qmail 15019 invoked by uid 225); 9 Apr 2005 19:16:18 -0000
Delivered-To: modules@perl.org
Received: (qmail 15014 invoked by alias); 9 Apr 2005 19:16:17 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: local policy)
Received: from pause.fiz-chemie.de (HELO pause.perl.org) (195.149.117.110)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Sat, 09 Apr 2005 12:16:15 -0700
Received: from pause.perl.org (localhost [127.0.0.1])
	by pause.perl.org (8.12.3/8.12.3/Debian-7.1) with ESMTP id j39JG364006487;
	Sat, 9 Apr 2005 21:16:03 +0200
Received: (from nobody@localhost)
	by pause.perl.org (8.12.3/8.12.3/Debian-7.1) id j39JG2Kv006485;
	Sat, 9 Apr 2005 21:16:02 +0200
Date: Sat, 9 Apr 2005 21:16:02 +0200
Message-ID: <200504091916.j39JG2Kv006485@pause.perl.org>
Subject: Module submission Class::AutoloadCAN
Reply-To: modules@perl.org
To: modules@perl.org, tilly@cpan.org
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Class::AutoloadCAN
  DSLIP:       Rdphp
  description: Write CAN instead of AUTOLOAD.
  userid:      TILLY (Ben Tilly)
  chapterid:   2 (Language_Extensions)
  communities:
    http://www.perlmonks.org/

  similar:
    UNIVERSAL::canAUTOLOAD

  rationale:

    This is a development extension allowing people to stop writing
    AUTOLOADs and instead write CAN handlers that say dynamically
    whether or not they wish to deal with a given method. An AUTOLOAD is
    then written for you that will do the right thing in the face of
    inheritance, and UNIVERSAL::can is taught how to tell what methods
    have been dynamically implemented in this manner.

    Anything that you can do with AUTOLOAD can be done this way, but
    regular AUTOLOADs don't cooperate with each other in the face of
    inheritance, and don't cooperate with can. Making them do so is very
    difficult, see http://www.perlmonks.org/?node_id=342804 for details.
    I therefore believe that this approach is an improvement on regular
    AUTOLOADs, and would like it listed to encourage people to use it
    instead.

    The existing UNIVERSAL::canAUTOLOAD attempts to teach
    UNIVERSAL::can that AUTOLOADs implement everything. Unfortunately
    many AUTOLOADs don't intend to. That also doesn't help AUTOLOADs in
    the same inheritance tree cooperate with each other.

  enteredby:   TILLY (Ben Tilly)
  enteredon:   Sat Apr  9 19:16:00 2005 GMT

The resulting entry would be:

Class::
::AutoloadCAN     Rdphp Write CAN instead of AUTOLOAD.               TILLY


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=63900000_f4c5f834b7b52065&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=63900000_f4c5f834b7b52065&SUBMIT_pause99_add_mod_insertit=1
