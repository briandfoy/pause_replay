Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:15010
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 3874 invoked by uid 76); 5 Nov 2002 11:02:30 -0000
Received: from root@[212.40.160.59] (HELO pause.perl.org) (212.40.160.59) by onion.perl.org (qpsmtpd/0.12) with SMTP; 2002-11-05 11:02:30Z
Received: (from nobody@localhost)	by pause.perl.org (8.11.6/8.11.6) id gA5B2QX02285;	Tue, 5 Nov 2002 12:02:26 +0100
Date: Tue, 5 Nov 2002 12:02:26 +0100
Message-ID: <200211051102.gA5B2QX02285@pause.perl.org>
Reply-To: modules@perl.org
Subject: Module submission Verilog::CodeGen
To: modules@perl.org, wvdb@cpan.org
X-SMTPD: qpsmtpd/0.12, http://develooper.com/code/qpsmtpd/
Approved: news@nntp.perl.org
From: upload@p11.speed-link.de ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Verilog::CodeGen
  DSLIP:       anphp
  description: Object-oriented Verilog code generator
  userid:      WVDB (Wim Vanderbauwhede)
  chapterid:    9 (Language_Interfaces)
  communities:

  similar:

  rationale:

    Verilog::CodeGen is a set of modules and scripts to generate
    Verilog code in a flexible way. I think it belongs in the Verilog::
    namespace because it's and interface to the Verilog language.
    Originally I called it DeviceLibs, but I think CodeGen better
    reflects the purpose.

    It is different from all other Verilog:: modules because it
    generates Verilog code, while the other modules work on existing
    Verilog code.

    The module offers a number of methods to create objects that
    generate the Verilog code based on the object's attributes. This
    makes it very easy to create completely parametrizable designs. I
    think the module is useful for designers doing non-standard Verilog
    designs, like asynchronous logic, or analog designs in VerilogA.

    A GUI to control the complete process of creating objects, adding
    them to the device library, and testing is provided, but the modules
    do not require the GUI.

  enteredby:   WVDB (Wim Vanderbauwhede)
  enteredon:   Tue Nov  5 11:02:23 2002 GMT

The resulting entry would be:

Verilog::
::CodeGen         anphp Object-oriented Verilog code generator       WVDB


Thanks for registering,
The Pause Team

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=e7300000_727b7370ee0280f1&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=e7300000_727b7370ee0280f1&SUBMIT_pause99_add_mod_insertit=1
