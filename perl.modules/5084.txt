Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:5084
Return-Path: <jvromans@squirrel.nl>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 6629 invoked from network); 14 Apr 2001 15:34:45 -0000
Received: from smtp1.xs4all.nl (194.109.127.131)
  by tmtowtdi.perl.org with SMTP; 14 Apr 2001 15:34:45 -0000
Received: from phoenix.squirrel.nl (jojan.xs4all.nl [213.84.56.213])
	by smtp1.xs4all.nl (8.9.3/8.9.3) with ESMTP id RAA24061;
	Sat, 14 Apr 2001 17:34:38 +0200 (CEST)
Received: by phoenix.squirrel.nl (Postfix, from userid 501)
	id E00CE57178; Sat, 14 Apr 2001 17:34:37 +0200 (CEST)
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Message-ID: <15064.28173.799060.340142@phoenix.squirrel.nl>
Date: Sat, 14 Apr 2001 17:34:37 +0200
To: Steve Traugott <stevegt@TerraLuna.Org>
Cc: modules@perl.org
Subject: Re: PAUSE Process Changes
References: <200104140546.WAA07570@roton.terraluna.org>
X-Mailer: VM 6.92 under Emacs 21.0.102.1
Sender: JVromans@squirrel.nl
Organisation: Squirrel Consultancy, Haarlem, The Netherlands
Approved: news@nntp.perl.org
From: JVromans@squirrel.nl ((Johan Vromans))

Hello Steve,

[Quoting Steve Traugott, on April 13 2001, 22:46, in "PAUSE Process Change"]
> Your expectations are sensible, I think, and I'd like to propose (or
> maybe you've proposed but I haven't seen it?) that the documentation 
> be revised to match them.  

Yes, this, and some tactical web forms, would be a big help.

What do we think would be the typical sequence of steps?

 1. A user wants to share a Perl module.

 2. Before sending the module to CPAN things like naming and API must
    be discussed. I think comp.lang.perl.modules should be used for
    this.

 3. The user applies for a CPAN id.

 4. To allow the people at c.l.p.m. access to the new module, it needs
    to be stored somewhere. CPAN would be great, but then we have a
    catch-22 situation.

 5. Upload and registration.

The user registration form would be the first thing to revise. Andreas
is already working out the possibility to make this process
semi-automatic.

I think that it is quite pointless to ask on the user registration
form what the user wants to contribute. Often, this is interpreted as
a request for module registration. 

One way to overcome the catch-22 situation a possibility is to provide
some kind of pre-registration. A pre-registration would reserve the
module name for the user, but also have a timeout value (of several
months, maybe). Preregistration would best be performed via a web form
and in theory could be dealt with automatically. A separate modules
list could be used to enumerate the 'tentative' registrations.

After some initial tries and testings the module would be officially
registered and stored in the module lists. This, again, would be a web
form but with a manual approvement (a one-click hyperlink of some
sort).

A nice side-effect is that modules in the 'idea' stage do not get
into the modules list.

> > I think this would be a good requirement anyway: only register
> > modules that have been uploaded and successfully unpacked and
> > indexex (see the recent email exchange with the search.perl.org
> > people).
> 
> I think this is a good idea -- perhaps even have the unpacking and
> indexing process trigger a default registration of some sort.

Hmm. That would also be nice!

If we can agree on a revised procedure, we can update the docs.

-- Johan
