Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:22562
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 61781 invoked by uid 76); 27 Jul 2003 21:44:05 -0000
Received: from qmailr@one.develooper.com (HELO ran-out.mx.develooper.com) (64.81.84.115) by onion.perl.org (qpsmtpd/0.26) with SMTP; Sun, 27 Jul 2003 14:44:05 -0700
Received: (qmail 5963 invoked by uid 225); 27 Jul 2003 21:44:04 -0000
Delivered-To: modules@perl.org
Received: (qmail 5958 invoked by uid 507); 27 Jul 2003 21:44:04 -0000
Received-SPF: unknown
Received: from pause.perl.org (HELO pause.perl.org) (212.40.160.59) by one.develooper.com (qpsmtpd/0.27-dev) with SMTP; Sun, 27 Jul 2003 14:44:03 -0700
Received: from pause.perl.org (localhost [127.0.0.1])	by pause.perl.org (8.12.3/8.12.3/Debian-6.4) with ESMTP id h6RLi0Od029688	for <modules@perl.org>; Sun, 27 Jul 2003 23:44:00 +0200
Received: (from nobody@localhost)	by pause.perl.org (8.12.3/8.12.3/Debian-6.4) id h6RLhx43029686;	Sun, 27 Jul 2003 23:43:59 +0200
Date: Sun, 27 Jul 2003 23:43:59 +0200
Message-ID: <200307272143.h6RLhx43029686@pause.perl.org>
Subject: PAUSE ID request (SMRZ; Otakar Smrz)
Reply-To: modules@perl.org
To: modules@perl.org
X-SMTPD: qpsmtpd/0.27-dev, http://develooper.com/code/qpsmtpd/
X-Spam-Check-By: one.develooper.com
X-Spam-Status: No, hits=1.1 required=7.0 tests=CARRIAGE_RETURNS,SPAM_PHRASE_00_01 version=2.44
X-SMTPD: qpsmtpd/0.26, http://develooper.com/code/qpsmtpd/
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")

Request to register new user

fullname: Otakar Smrz
  userid: SMRZ
    mail: CENSORED
homepage: http://ckl.mff.cuni.cz/smrz/
     why:

    In case Encode is polutable ;) Please, see the note on naming at
    the very end.

    Encode::Mapper - extension for intuitive, yet efficient
    construction of mappings for Encode - implementation touches
    theoretical studies such as Aho-Corasick and Boyer-Moore algorithms
    and finite automata with the restart operation - object-oriented API
    to be used in, but not limited to, the modules below

    Encode::Arabic - extension for encodings of Arabic, using
    Encode::Encoding - aimed at the Natural Language Processing
    community of IT

    Encode::Arabic::ArabTeX - extension for multi-purpose processing of
    the ArabTeX notation of Arabic - conversions into/from the Arabic
    script and/or phonetic transcriptions, highly configurable -
    non-trivial implementation relying on Encode::Mapper and suiting the
    Encode::Encoding interface

    Encode::Arabic::Buckwalter - extension for Tim Buckwalter's
    transliteration of Arabic - tr/// one-to-one mapping with the
    Encode::Encoding interface

    Encode::Korean - extension for encodings of Korean, using
    Encode::Encoding - aimed at the Natural Language Processing
    community of IT

    Encode::Korean::Literal - transliteration of Hangul, the Korean
    script - Unicode character decomposition, Encode::Mapper inverse -
    configurable to numerous transliteration standards

    Encode::Korean::Phonetic - extending the above with applicable
    phonetic changes - providing the Encode::Encoding interface as well

    NOTE:

    We propose the full names of **languages** these modules refer to,
    rather than the two-letter codes, since:

    - Encode::KR already exists in the internal structure of Encode,
    and is quite distant from what Encode::Korean does.

    - Encode::Arabic::ArabTeX may imply there will be similar modules
    working with the many ArabTeX notations in the future. The produced
    **script** may still be called Arabic (like Encode::Persian::ArabTeX
    or Encode::Urdu::ArabTeX), but need not (like
    Encode::Hebrew::ArabTeX). Recall that the rules for interpreting the
    transliteration depend on the **language**.

    - Finally, we think Encode::* is much more appropriate than
    Lingua::*, simply because the interfaces we use and provide were
    designed to fit exactly into Encode's philosophy


The following links are only valid for PAUSE maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_user&USERID=b5300000_b9007520a26858e1&SUBMIT_pause99_add_user_sub=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_user&USERID=b5300000_b9007520a26858e1&SUBMIT_pause99_add_user_Definitely=1
