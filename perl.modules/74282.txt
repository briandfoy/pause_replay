Newsgroups: perl.modules
Path: nntp.perl.org
Xref: nntp.perl.org perl.modules:74282
Return-Path: <nobody@pause.perl.org>
Mailing-List: contact modules-help@perl.org; run by ezmlm
Delivered-To: mailing list modules@perl.org
Received: (qmail 29842 invoked from network); 5 Jan 2011 21:26:57 -0000
Received: from x1.develooper.com (207.171.7.70)
  by x6.develooper.com with SMTP; 5 Jan 2011 21:26:57 -0000
Received: (qmail 10035 invoked by uid 225); 5 Jan 2011 21:26:57 -0000
Delivered-To: modules@perl.org
Received: (qmail 10031 invoked by alias); 5 Jan 2011 21:26:57 -0000
X-Spam-Status: No, hits=0.0 required=8.0
	tests=
X-Spam-Check-By: la.mx.develooper.com
Received: from pause.fiz-chemie.de (HELO pause.fiz-chemie.de) (195.37.231.65)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Wed, 05 Jan 2011 13:26:55 -0800
Received: from pause.fiz-chemie.de (localhost.localdomain [127.0.0.1])
	by pause.fiz-chemie.de (8.13.8/8.13.8/Debian-3) with ESMTP id p05LPr5r020972;
	Wed, 5 Jan 2011 22:25:53 +0100
Received: (from nobody@localhost)
	by pause.fiz-chemie.de (8.13.8/8.13.8/Submit) id p05LPqj3020971;
	Wed, 5 Jan 2011 22:25:52 +0100
Date: Wed, 5 Jan 2011 22:25:52 +0100
Message-ID: <201101052125.p05LPqj3020971@pause.fiz-chemie.de>
Subject: Module submission Sub::Chain
Reply-To: modules@perl.org
To: modules@perl.org, rwstauner@cpan.org
Approved: news@nntp.perl.org
From: upload@pause.perl.org ("Perl Authors Upload Server")


The following module was proposed for inclusion in the Module List:

  modid:       Sub::Chain
  DSLIP:       bdpOp
  description: Chain subs together and call in succession
  userid:      RWSTAUNER (Randy Stauner)
  chapterid:   3 (Development_Support)
  communities:

  similar:
    Sub::Pipeline Data::Transform Rule::Engine

  rationale:

    =head1 RATIONALE

    This module started out as C<Data::Transform::Named>, a named
    wrapper (like C<Sub::Chain::Named>) around L<Data::Transform> (and
    specifically L<Data::Transform::Map>).

    As the module was nearly finished I realized I was using very
    little of L<Data::Transform> (and its documentation suggested that I
    probably wouldn't want to use the only part that I I<was> using). I
    also found that the output was not always what I expected. I decided
    that it seemed reasonable according to the likely purpose of
    L<Data::Transform>, and this module simply needed to be different.

    So I attempted to think more abstractly and realized that the
    essence of the module was not tied to data transformation, but
    merely the succession of simple subroutine calls.

    I then found and considered L<Sub::Pipeline> but needed to be able
    to use the same named subroutine with different arguments in a
    single chain, so it seemed easier to me to stick with the code I had
    written and just rename it and abstract it a bit further.

    I also looked into L<Rule::Engine> which was beginning development
    at the time I was searching. However, like L<Data::Transform>, it
    seemed more complex than what I needed. When I saw that
    L<Rule::Engine> was using [the very excellent] L<Moose> I decided to
    pass since I was doing work on a number of very old machines with
    old distros and old perls and constrained resources. Again, it just
    seemed to be much more than what I was looking for.

  enteredby:   RWSTAUNER (Randy Stauner)
  enteredon:   Wed Jan  5 21:25:51 2011 GMT

The resulting entry would be:

Sub::
::Chain           bdpOp Chain subs together and call in succession   RWSTAUNER


Thanks for registering,
-- 
The PAUSE

PS: The following links are only valid for module list maintainers:

Registration form with editing capabilities:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=d2300000_604a9979457f4d23&SUBMIT_pause99_add_mod_preview=1
Immediate (one click) registration:
  https://pause.perl.org/pause/authenquery?ACTION=add_mod&USERID=d2300000_604a9979457f4d23&SUBMIT_pause99_add_mod_insertit=1
Peek at the current permissions:
  https://pause.perl.org/pause/authenquery?pause99_peek_perms_by=me&pause99_peek_perms_query=Sub%3A%3AChain
