{
   "data" : {
      "userid" : {
         "name" : "Benjamin Holzman",
         "id" : "BHOLZMAN"
      },
      "description" : "Interface to the Judy C library",
      "communities" : "Judy was briefly discussed on p5p several months ago.",
      "chapterid" : {
         "name" : "Data_Type_Utilities",
         "id" : "6"
      },
      "similar" : "",
      "DSLIP" : "idhOp",
      "modid" : "Array::Judy",
      "enteredon" : "Fri Nov  7 23:44:18 2003 GMT",
      "enteredby" : {
         "name" : "Benjamin Holzman",
         "id" : "BHOLZMAN"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "Judy arrays are extremely fast and memory efficient at virtually\n    all data sizes, beating even hashes. Essentially, they are digital\n    tries with a polymorphic structure; there are multiple storage\n    paradigms for each node in the tree, and each node is automatically\n    upgraded or downgraded according to how many children it has. The\n    JudyL data structure maps words to words/pointers. The JudySL data\n    structure (built of JudyLs) maps strings to words/pointers. Clearly\n    JudyL should have an array-like interface and JudySL should have a\n    hash-like interface. I plan to create a tied interface, but for\n    speed will also supply a light OO interface as well. There is also a\n    Judy1 array (maps word to bit), which could map to an array or hash\n    whose values are implicitly boolean, and extremely space efficient.\n\n    As an aside, I have used Judy arrays in an object database, and\n    have been extremely impressed with its performance. Before I used\n    Judy arrays, I had a hash table implementation (hash function stolen\n    from perl) and the Judy arrays blew the pants off of it!"
   },
   "meta" : {
      "message_id" : "200311072344.hA7NiQNM019489@pause.perl.org",
      "epoch" : 1068248666,
      "from" : "upload@pause.perl.org",
      "subject" : "Module submission Array::Judy",
      "file" : "24423.txt",
      "type" : "module_submission"
   }
}
