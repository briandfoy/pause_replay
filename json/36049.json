{
   "data" : {
      "userid" : {
         "name" : "Brian Duggan",
         "id" : "BDUGGAN"
      },
      "description" : "OO interface to spellcheck blocks of text",
      "communities" : "",
      "chapterid" : {
         "name" : "String_Lang_Text_Proc",
         "id" : "11"
      },
      "similar" : "Text::Spellcheck Text::Aspell Text::Ispell",
      "DSLIP" : "bdpOp",
      "modid" : "Text::SpellChecker",
      "enteredon" : "Mon Nov  1 19:19:36 2004 GMT",
      "enteredby" : {
         "name" : "Brian Duggan",
         "id" : "BDUGGAN"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "This module provides a simple way to iterate through a block of\n    text, finding misspelled words and replacing them. It uses\n    Text::Aspell which uses GNU's aspell library (and therefore doesn't\n    require forking any external processes).\n\n    Most of the existing spelling modules fork external process\n    (Lingua::Ispell (nÃ¨e Text::Ispell), Text::Spellcheck). And the\n    one that doesn't (Text::Aspell, nÃ¨e Text::Pspell) only provides\n    an interface for spell-checking words, not iterating through a block\n    of text, maintaining state (e.g. position within the text, the\n    current modified text).\n\n    Text::SpellChecker doesn't do any forking, iterates through just\n    the misspelled words, maintains the state of the text being\n    manipulated, and also provides a method for serializing the checker\n    object. These things make it useful in a mod_perl environment."
   },
   "meta" : {
      "message_id" : "200411011919.iA1JJbYd008096@pause.perl.org",
      "epoch" : 1099336777,
      "from" : "upload@pause.perl.org",
      "subject" : "Module submission Text::SpellChecker",
      "file" : "36049.txt",
      "type" : "module_submission"
   }
}
