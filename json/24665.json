{
   "data" : {
      "userid" : {
         "name" : "Earl Cahill",
         "id" : "EARL"
      },
      "description" : "fold various formats into a simple hash",
      "communities" : "a little on tt mailing list",
      "chapterid" : {
         "name" : "String_Lang_Text_Proc",
         "id" : "11"
      },
      "similar" : "Template::Plugin::Datafile",
      "DSLIP" : "adpOp",
      "modid" : "Template::Plugin::HashLoader",
      "enteredon" : "Fri Nov 21 17:36:40 2003 GMT",
      "enteredby" : {
         "name" : "Earl Cahill",
         "id" : "EARL"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "Template::Plugin::DataHash provides a simple way to turn conf\n    files, gathered from your INCLUDE_PATH into a single hash ref (no\n    support for non hashes). I walk the INCLUDE_PATH, tack on the\n    filename onto the end of each directory and this gives me the\n    full_path of the file I will check. If the file exists, I run all\n    the regexes in $self->{extension} (going in the order specified in\n    $self->{extension_order}), to see which $type of conf I have, and\n    then look for either a load_$type method or $self->{load_$type} (a\n    CODE ref) and run the appropriate method. Each load_$type method\n    takes a refence to $self and the full_path of the file, and returns\n    a hash ref.\n\n    For example\n\n    [% USE conf = DataHash %] [% hash = conf.conf('conf.yaml') %]\n\n    Would walk your INCLUDE_PATH in reverse, change all the conf.yaml\n    files it finds into hash refs and fold all the hash ref into a main\n    hash.\n\n    Thanks, Earl"
   },
   "meta" : {
      "message_id" : "200311211736.hALHafO4020004@pause.perl.org",
      "epoch" : 1069436201,
      "from" : "upload@pause.perl.org",
      "subject" : "Module submission Template::Plugin::HashLoader",
      "file" : "24665.txt",
      "type" : "module_submission"
   }
}
