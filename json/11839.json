{
   "data" : {
      "userid" : {
         "name" : "Adam Kennedy",
         "id" : "ADAMK"
      },
      "description" : "Static method calls use default object",
      "communities" : "",
      "chapterid" : {
         "name" : "Data_Type_Utilities",
         "id" : "6"
      },
      "similar" : "CGI.pm",
      "DSLIP" : "bdpOp",
      "modid" : "Class::Default",
      "enteredon" : "Sat May 25 16:32:14 2002 GMT",
      "enteredby" : {
         "name" : "Adam Kennedy",
         "id" : "ADAMK"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "Inheriting from this class will allow a class to have static method\n    applied to a default instantation of the class.\n\n    A good exising example of the technique is CGI.pm, with which you\n    can call CGI->header, and the call is made not on the class itself,\n    but on a default instantation.\n\n    In OO terminolgy, think a singleton you access through static\n    methods, but retaining the ability to create a seperate copy should\n    the need arise.\n\n    I use it a lot for thing like Factory classes"
   },
   "meta" : {
      "message_id" : "200205251632.SAA12110@pause.perl.org",
      "epoch" : 1022344335,
      "from" : "upload@p11.speed-link.de",
      "subject" : "Module submission Class::Default",
      "file" : "11839.txt",
      "type" : "module_submission"
   }
}
