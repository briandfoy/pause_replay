{
   "data" : {
      "userid" : {
         "name" : "Christopher Maloney",
         "id" : "KLORTHO"
      },
      "description" : "Manipulate physics units and dimensions.",
      "communities" : "",
      "chapterid" : {
         "name" : "Miscellaneous_Modules",
         "id" : "23"
      },
      "similar" : "Convert::Units, Data::Dimensions, Math::Units, Math::Calc::Units",
      "DSLIP" : "RdpOp",
      "modid" : "Physics::Unit",
      "enteredon" : "Wed Mar 19 16:12:32 2003 GMT",
      "enteredby" : {
         "name" : "Christopher Maloney",
         "id" : "KLORTHO"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "Though this is similar to a few other modules already on the CPAN,\n    we feel that this has significant new functionality, and definitely\n    does belong in the Physics::* namespace.\n\n    The related modules that we've investigated are: Convert::Units\n    Data::Dimensions Math::Units Math::Calc::Units\n\n    Each of these modules has unique and interesting features. However,\n    one big drawback of all of them is a severe lack of documentation.\n    I'm in the process of corresponding with each of the authors of\n    these modules, to talk about the possibility of merging them all\n    under the Physics::Unit module. All of these modules are somewhat\n    \"stale\"; i.e. they haven't been updated in quite a long time.\n\n    An alternative would be to update one of the above modules with the\n    new functionality of Physics::Unit. This is not a good idea, IMO,\n    because Physics::Unit is already more mature than any of the above\n    modules. The documentation and examples are quite thorough, and\n    quite a few tests are included (although they haven't as yet been\n    integrated in to the \"make test\" command. Right now the tests reside\n    in the eg/ directory.)\n\n    Also, I hope to convince you that the Physics::* namespace makes\n    more sense than any of the above, and that's another reason why my\n    new module should become the \"master\".\n\n    The objects of the Physics::Unit and related classes are designed\n    to hold data values that represent physical quantities.\n\n    They are not just for doing unit conversions; they can be used in\n    any program which simulates or models the real world. Hence the\n    Convert::* namespace is not appropriate.\n\n    The Data::Dimensions module is very similar in some respects to my\n    module. However, it lacks the nice unit expression parser that ours\n    has. We feel that the Data::* root namespace is too vague and\n    general for this module. The Data::Dimensions module itself is not\n    well-named. \"dimensions\" could refer to any number of things other\n    than physical units.\n\n    Finally, the Math::* root namespace is clearly not appropriate.\n    This module has very little to do with pure mathematics.\n    Furthermore, we would argue, that since there is a Math::* root\n    namespace, it only makes sense that there should be a Physics::*\n    root namespace as well. These are two realms of knowledge and\n    algorithms, that, for example, universities around the world\n    recognize as distinct.\n\n    Thanks for your consideration, and please let me know if you want\n    more information, or if there are any other hoops we need to jump\n    through to make this module see the glorious light of the CPAN\n    module lists!\n\n    In addition, I'd like to suggest a new category (chapter) in your\n    module list above: how about \"Real-world modelling / simulation\"?"
   },
   "meta" : {
      "message_id" : "200303191612.h2JGCdU28900@pause.perl.org",
      "epoch" : 1048090359,
      "from" : "upload@pause.x.perl.org",
      "subject" : "Module submission Physics::Unit",
      "file" : "19563.txt",
      "type" : "module_submission"
   }
}
