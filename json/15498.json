{
   "data" : {
      "userid" : {
         "name" : "Sam Tregar",
         "id" : "SAMTREGAR"
      },
      "description" : "use Apache format config files",
      "communities" : "none",
      "chapterid" : {
         "name" : "Opt_Arg_Param_Proc",
         "id" : "12"
      },
      "similar" : "Apache::ConfigFile, Apache::ConfigParser",
      "DSLIP" : "RdpOp",
      "modid" : "Config::ApacheFormat",
      "enteredon" : "Mon Nov 25 00:47:45 2002 GMT",
      "enteredby" : {
         "name" : "Sam Tregar",
         "id" : "SAMTREGAR"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "There are at least two other modules on CPAN that perform a similar\n    function to this one, L<Apache::ConfigFile|Apache::ConfigFile> and\n    L<Apache::ConfigParser|Apache::ConfigParser>. Although both are\n    close to what I need, neither is totally satisfactory.\n\n    Apache::ConfigFile suffers from a complete lack of tests and a\n    rather clumsy API. Also, it doesn't support quoted strings\n    correctly.\n\n    Apache::ConfigParser comes closer to my needs, but contains code\n    specific to parsing actual Apache configuration files. As such it is\n    unsuitable to parsing an application configuration file in Apache\n    format. Unlike Apache::ConfigFile, Apache::ConfigParser lacks\n    support for Include.\n\n    Additionally, neither module supports directive inheritence within\n    blocks. As this is the main benefit of Apache's block syntax I\n    decided I couldn't live without it.\n\n    In general, I see no problem with reinventing the wheel as long as\n    you're sure your version will really be better. I believe this is,\n    at least for my purposes."
   },
   "meta" : {
      "message_id" : "200211250047.gAP0lkl02868@pause.perl.org",
      "epoch" : 1038185266,
      "from" : "upload@p11.speed-link.de",
      "subject" : "Module submission Config::ApacheFormat",
      "file" : "15498.txt",
      "type" : "module_submission"
   }
}
