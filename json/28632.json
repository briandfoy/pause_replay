{
   "data" : {
      "userid" : {
         "name" : "Joshua I. Miller",
         "id" : "UNRTST"
      },
      "description" : "Simple OO interface to DBI",
      "communities" : "module-authors@perl.org",
      "chapterid" : {
         "name" : "Database_Interfaces",
         "id" : "7"
      },
      "similar" : "DBIx::Abstract DBIx::Simple",
      "DSLIP" : "RdpOp",
      "modid" : "DBIx::PDlib",
      "enteredon" : "Wed Feb 18 04:35:36 2004 GMT",
      "enteredby" : {
         "name" : "Joshua I. Miller",
         "id" : "UNRTST"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "There are many similar modules that attempt similar goals, some\n    abstracting DBI completely, some hardly at all, and some are only\n    appropriate for a few select uses. DBIx::PDlib sits in the middle,\n    providing an easy to use OO abstraction to DBI, that attempts to\n    maintain DBI's flexibility.\n\n    The existing modules that are out there can do the job, each with\n    their own strengths and weaknesses. They just didn't fit me, so I\n    wrote my own (DBIx::PDlib even borrows some features from some of\n    the others).\n\n    Many people I've passed this module around to have chose to use it,\n    and I'd like others to be able to find it via the module list. I've\n    asked whether it should be submitted on module-authors, and received\n    no response, so I'm assuming no response is a go ahead.\n\n    DBIx::PDlib provides a simplified way to interact with DBI. It\n    provides methods for SELECT, INSERT, UPDATE, and DELETE which result\n    in having to type less code to do the DBI queries. It does as little\n    as possible to make things easier.\n\n    What it doesn't do... It isn't trying to replace DBI. It's not\n    trying to completely abstract SQL statement building into some 100%\n    perllike syntax (though that is REALLY cool, and what I liked about\n    DBIx::Abstract).\n\n    The name: DBIx::Simple and DBIx::Abstract both exist already, along\n    with a lot of other DBIx:: modules. So, I stuck with out internal\n    name, and placed it in the correct namespace (DBIx)."
   },
   "meta" : {
      "message_id" : "200402180435.i1I4Za0S018141@pause.perl.org",
      "epoch" : 1077078936,
      "from" : "upload@pause.perl.org",
      "subject" : "Module submission DBIx::PDlib",
      "file" : "28632.txt",
      "type" : "module_submission"
   }
}
