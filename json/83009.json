{
   "data" : {
      "userid" : {
         "name" : "rns",
         "id" : "RNS"
      },
      "description" : "Simple and Powerful Parsing with Marpa::R2",
      "communities" : "https://groups.google.com/forum/#!forum/marpa-parser",
      "chapterid" : {
         "name" : "String_Lang_Text_Proc",
         "id" : "11"
      },
      "similar" : "MarpaX::Simple::Rules Marpa::Simple::Lexer Graph::Easy::Marpa",
      "DSLIP" : "adpOp",
      "modid" : "MarpaX::Parse",
      "enteredon" : "Thu Nov  1 09:32:56 2012 GMT",
      "enteredby" : {
         "name" : "rns",
         "id" : "RNS"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "Marpa::R2 parses anything that can be written in BNF.\n\n    This module is intended to move the use of Marpa::R2 even closer to\n    the definition of parsing given in [0] by providing:\n\n    (1) lexical analyzer (based on the grammar terminals) and thus the\n    ability to use a text (rather than symbol) string as an input;\n\n    (2) evaluation of Marpa::R2 parse results that represent parse\n    trees as Tree::Simple objects, XML string, S-Expression string, an\n    array of arrays, a hash of arrays, or a hash of hashes;\n\n    (3) textual (E)BNF with embedded actions;\n\n    (4) automatic handling of ambiguous tokens with (1) Marpa::R2 input\n    model or (2) by merging ambiguous tokens to the grammar; and more,\n    see [1].\n\n    A working example of (1) and (3) is in a GitHub repo [1]. This is\n    an adaptation of the \"reverse diff\" use case specified in\n    Parse::RecDescent tutorial [2]\n\n    The repo also contains working examples of (2), (4), and others as\n    shown in README.md [3]âthis is what I consider to be an alpha (all\n    tests pass) version of the module that was tentatively named\n    Marpa-Easy, discussed on marpa parser mailing list at [4], and after\n    some refactoring will become MarpaX::Parse. Or so I hope. :)\n\n    I deliberately avoided naming the module MarpaX::Parser as it is\n    not the parser, just an interface to it. The parser is Marpa::R2 [5]\n    by Jeffrey Kegler [6].\n\n    This rationale can be forked at Github [7].\n\n    [0]\n    http://search.cpan.org/~jkegl/Marpa-R2-2.023_008/pod/Vocabulary.pod\n\n    [1]\n    https://github.com/rns/Marpa-Easy-proof-of-concept/blob/master/t/09_reversing_diff_bnf.t\n\n    [2]\n    http://cpansearch.perl.org/src/JTBRAUN/Parse-RecDescent-1.967009/tutorial/tutorial.html\n\n    [3] https://github.com/rns/Marpa-Easy-proof-of-concept\n\n    [4]\n    https://groups.google.com/forum/#!topic/marpa-parser/diKu5kADtvU\n\n    [5] http://search.cpan.org/~jkegl/Marpa-R2-2.023_008/\n\n    [6] http://www.jeffreykegler.com/\n\n    [7]\n    https://github.com/rns/Marpa-Easy-proof-of-concept/blob/master/rationale.md"
   },
   "meta" : {
      "message_id" : "201211010932.qA19WvY5008107@pause.fiz-chemie.de",
      "epoch" : 1351762377,
      "from" : "upload@pause.perl.org",
      "subject" : "Module submission MarpaX::Parse",
      "file" : "83009.txt",
      "type" : "module_submission"
   }
}
