{
   "data" : {
      "userid" : {
         "name" : "Bron Gondwana",
         "id" : "BRONG"
      },
      "description" : "RFC 3028 Mail Filtering",
      "communities" : "squirrelmail-devel@lists.sourceforge.net",
      "chapterid" : {
         "name" : "Mail_and_Usenet_News",
         "id" : "19"
      },
      "similar" : "Mail::Audit",
      "DSLIP" : "cdpOp",
      "modid" : "Mail::Sieve",
      "enteredon" : "Mon Mar 11 12:44:06 2002 GMT",
      "enteredby" : {
         "name" : "Bron Gondwana",
         "id" : "BRONG"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "To repeat what I said last night, but with the module name spelled\n    correctly! ...\n\n    While there are a couple of different modules for filtering emails\n    (including Simon's great Mail::Audit, which I currently use), these\n    require the user to edit Perl code.\n\n    From the homepage at: http://www.cyrusoft.com/sieve/ Sieve (now\n    RFC3028) is - well, I'll quote the ABSTRACT:\n\n    [Sieve is] a language for filtering e-mail messages at time of\n    final delivery. It is designed to beimplementable on either a mail\n    client or mail server. It is meant to be extensible, simple, and\n    independent of access protocol, mail architecture, and operating\n    system. It is suitable for running on a mail server where users may\n    not be allowed to execute arbitrary programs, such as on black box\n    Internet Message Access Protocol (IMAP) servers, as it has no\n    variables, loops, or ability to shell out to external programs.\n\n    I can't find an implementation in Perl yet, and since my favourite\n    Webmail application, Squirrelmail (yes, I know it's in PHP -\n    http://www.squirrelmail.org/) now comes with a Sieve filter editor,\n    I'd like to be able to use that for filtering my incoming email.\n\n    I imagine I'll be using Mail::Audit for most of the grunt work, and\n    something else nice for defining the parser - this module will just\n    plug it all together, and come with a 'binary'[tm] which can be\n    called as the delivery agent by your friendly MTA, and will do all\n    the filtering and mailbox creation on the fly.\n\n    [ breaking news - I have a nearly complete parser in\n    Parse::RecDescent - just have to finish dealing with some niggling\n    '\\n' issues in text: bits. ]"
   },
   "meta" : {
      "message_id" : "200203111244.NAA10732@pause.perl.org",
      "epoch" : 1015850646,
      "from" : "upload@p11.speed-link.de",
      "subject" : "Module submission Mail::Sieve",
      "file" : "10550.txt",
      "type" : "module_submission"
   }
}
