{
   "data" : {
      "userid" : {
         "name" : "William G. Davis",
         "id" : "WGDAVIS"
      },
      "description" : "The Perl Gopher/Gopher+ client API",
      "communities" : "perlmonks.org",
      "chapterid" : {
         "name" : "Networking_Devices_IPC",
         "id" : "5"
      },
      "similar" : "Net::FTP, Net::SMTP, etc. LWP and HTTP::Response.",
      "DSLIP" : "adpOg",
      "modid" : "Net::Gopher",
      "enteredon" : "Sun Jul 20 10:50:25 2003 GMT",
      "enteredby" : {
         "name" : "William G. Davis",
         "id" : "WGDAVIS"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "I never got a \"yes\" or a \"no\" on my original submission.\n\n    Do I need to upload something first? If that's the case, here:\n    http://search.cpan.org/dist/Net-Gopher\n\n    As you can see, Net::Gopher is a Gopher/Gopher+ client API for\n    Perl.\n\n    Net::Gopher is really two modules: Net::Gopher and\n    Net::Gopher::Response.\n\n    The first module, Net::Gopher, is the class used for requesting\n    items from Gopher and Gopher+ severs. It supports two models of\n    communication: a connect(), request(), and disconnect() sequence, or\n    the URL based request_url() which connects, requests, and\n    disconnects for you using the URL you supply.\n\n    The second module, Net::Gopher::Response, is a class for\n    manipulating Gopher and Gopher+ responses. It has methods to\n    determine the success or failure of a request, to parse Gopher\n    menus, to parse Gopher+ attribute information blocks, to retrieve\n    the status line and status of a Gopher+ request, and much more.",
      "communication" : "a connect(), request(), and disconnect() sequence, or"
   },
   "meta" : {
      "message_id" : "200307201050.h6KAoQGT031153@pause.perl.org",
      "epoch" : 1058698226,
      "from" : "upload@pause.perl.org",
      "subject" : "Module submission Net::Gopher",
      "file" : "22441.txt",
      "type" : "module_submission"
   }
}
