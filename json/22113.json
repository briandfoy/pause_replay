{
   "data" : {
      "userid" : {
         "name" : "Miko O'Sullivan",
         "id" : "MIKO"
      },
      "description" : "Utility for editing files line-by-line",
      "communities" : "",
      "chapterid" : {
         "name" : "File_Names_Systems_Locking",
         "id" : "10"
      },
      "similar" : "File::Searcher, File::Data",
      "DSLIP" : "RdpOp",
      "modid" : "File::LineEdit",
      "enteredon" : "Sat Jun 28 20:59:16 2003 GMT",
      "enteredby" : {
         "name" : "Miko O'Sullivan",
         "id" : "MIKO"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "File/LineEdit version 1.00 ========================\n\n    NAME\n\n    File::LineEdit - Small utility for editing each line of a file\n\n    SYNOPSIS my $le = File::LineEdit->new('myfile.txt'); foreach my\n    $line (@{$le->{'lines'}}) { $line =~ s|foo|bar|; }\n\n    INSTALLATION\n\n    File::LineEdit can be installed with the usual routine:\n\n    perl Makefile.PL make make test make install\n\n    You can also just copy LineEdit.pm into the File/ directory of one\n    of your library trees.\n\n    DESCRIPTION\n\n    File::LineEdit is just a small utility to simplify modiyfying a\n    file line-by-line. It performs the boring tasks of slurping in the\n    file, chomping each line (if you want it to), and then, after\n    changes are made, writing the data back to the file.\n\n    The basic usage is quite simple: instantiate a File::LineEdit\n    object, loop through the $object->{'lines'} array, modifying each\n    line however your want. When the object falls out of scope, it\n    automatically writes the modified lines back to the file. Here's a\n    simple example (actually, the same example used in the synopsis\n    above, this time with a little more documentation):\n\n    # instantiate a File::LineEdit object, passing in # the path to the\n    file as the only required argument. my $le =\n    File::LineEdit->new('myfile.txt');\n\n    # loop through the lines array foreach my $line (@{$le->{'lines'}})\n    { # change the line in some way $line =~ s|foo|bar|;\n\n    } # The data is saved back to the file # automatically when the\n    object falls # out of scope. No need for an # explicit save.\n\n    There are a few variations on this theme.\n\n    EXPLICIT SAVE\n\n    By default, LineEdit objects save their line data back\n\n    If you just somehow don't trust the concept of saving on object\n    destruction, you can tell your LineEdit object to explicitly save:\n\n    $le->save;\n\n    If you don't want the object to automatically save on destruction,\n    add the \"autosave\" argument to the instantiation params:\n\n    my $le = File::LineEdit->new('myfile.txt', autosave=>0);\n\n    AUTOMATIC LINE CHOMPING\n\n    By default, LineEdit automatically chomps the end of each line when\n    it slurps in the data from the file. If you prefer to keep your\n    lines unchomped then add an \"autochomp\" argument to the\n    instantiation params:\n\n    my $le = File::LineEdit->new('myfile.txt', autochomp=>0);\n\n    SIMILAR MODULES\n\n    There are a couple modules on CPAN that provide similar\n    functionality. File::Searcher provides the ability to do regular\n    expression based search and replaces on groups of files. File::Data\n    provides several ways to slurp in, modify, and write files.\n    File::Data also uses regular expressions for searching and\n    replacing. Be sure to look at both of those modules if you are\n    interested in simplified modification of files.\n\n    File::LineEdit differs from File::Searcher and File::Data in that\n    File::LineEdit focusses on line-based edits. The object of\n    File::LineEdit is to provide a simplified manner for looking at and\n    modifying files one line at a time.\n\n    TERMS AND CONDITIONS\n\n    Copyright (c) 2003 by Miko O'Sullivan. All rights reserved. This\n    program is free software; you can redistribute it and/or modify it\n    under the same terms as Perl itself. This software comes with NO\n    WARRANTY of any kind.\n\n    AUTHORS\n\n    Miko O'Sullivan miko@idocs.com\n\n    VERSION\n\n    Version 1.00 June 27, 2003 Initial release"
   },
   "meta" : {
      "message_id" : "200306282059.h5SKxGY4028817@pause.perl.org",
      "epoch" : 1056833956,
      "from" : "upload@pause.x.perl.org",
      "subject" : "Module submission File::LineEdit",
      "file" : "22113.txt",
      "type" : "module_submission"
   }
}
