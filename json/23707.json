{
   "data" : {
      "userid" : {
         "name" : "Phillip Pollard",
         "id" : "BENNIE"
      },
      "description" : "Parse and analyze RCS files.",
      "communities" : "Email, IRC, work.",
      "chapterid" : {
         "name" : "Development_Support",
         "id" : "3"
      },
      "similar" : "Rcs Rcs::Agent VCS::Rcs::Parser",
      "DSLIP" : "adpOg",
      "modid" : "Rcs::Parser",
      "enteredon" : "Thu Sep 25 18:53:56 2003 GMT",
      "enteredby" : {
         "name" : "Phillip Pollard",
         "id" : "BENNIE"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "Rcs::Parser is designed to directly parse RCS files with the goal\n    to be able to perform analyzation of code via methods such as\n    notate() which is currently implemented.\n\n    Rcs, Rcs::Agent, and VCS::Rcs::Parser all attempt to emulate the\n    ability to retrieve data from RCS files. Rcs and Rcs::Agent rely\n    directly upon rcs binaries to do their work. VCS::Rcs::Parser uses\n    YaPP. In all cases the modules never directly parse the data or\n    allow any access to perform analyzation.\n\n    Since this module directly parses the Rcs data as opposed to giving\n    an interface similar to other binary utilities, I opted to call it\n    'Parser' as per the precedence set by other modules on CPAN. And Rcs\n    is the logical choice for tree location.\n\n    For reference, it is 'Rcs' and not 'RCS' because any directory\n    called 'RCS' stands a chance of being ignored by version control\n    software or other developer utilities."
   },
   "meta" : {
      "message_id" : "200309251853.h8PIrupW003871@pause.perl.org",
      "epoch" : 1064516036,
      "from" : "upload@pause.perl.org",
      "subject" : "Module submission Rcs::Parser",
      "file" : "23707.txt",
      "type" : "module_submission"
   }
}
