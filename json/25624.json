{
   "data" : {
      "userid" : {
         "name" : "Lincoln A Baxter",
         "id" : "LBAXTER"
      },
      "description" : "Access 2 sigaction: obj resets on destructio",
      "communities" : "Perl Module Authors List",
      "chapterid" : {
         "name" : "Operating_System_Interfaces",
         "id" : "4"
      },
      "similar" : "Sys::Signal",
      "DSLIP" : "bdpOp",
      "modid" : "Sys::SigAction",
      "enteredon" : "Sat Jan 17 04:47:13 2004 GMT",
      "enteredby" : {
         "name" : "Lincoln A Baxter",
         "id" : "LBAXTER"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "The relates to System signal handling. Hence Sys:: It provides easy\n    access to using POSIX::sigaction(), which is not well documented. It\n    provides backwards compatibility with $SIG{NAME} handling in perls <\n    5.8, so code can be portable accross perl versions.\n\n    It is different from Sys::Signal in that Sys::Signal is a little\n    bit of perl XS glue for manipulating perl's internal installation of\n    signal handlers, and resetting them. I borrowed the concept of\n    storing the old signal handler in a returned object, and resetting\n    the signal handler on destruction.\n\n    Sys::SigAction provides low level access to sigaction (on those\n    systems that have it), Sys::Signal does not."
   },
   "meta" : {
      "message_id" : "200401170447.i0H4lIo7024418@pause.perl.org",
      "epoch" : 1074314838,
      "from" : "upload@pause.perl.org",
      "subject" : "Module submission Sys::SigAction",
      "file" : "25624.txt",
      "type" : "module_submission"
   }
}
