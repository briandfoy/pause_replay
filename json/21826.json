{
   "data" : {
      "userid" : {
         "name" : "Ian Brayshaw",
         "id" : "IBB"
      },
      "description" : "Test whether references are blessed.",
      "communities" : "",
      "chapterid" : {
         "name" : "Perl_Core_Modules",
         "id" : "2"
      },
      "similar" : "",
      "DSLIP" : "Rdcfp",
      "modid" : "Acme::Holy",
      "enteredon" : "Mon Jun 16 02:31:03 2003 GMT",
      "enteredby" : {
         "name" : "Ian Brayshaw",
         "id" : "IBB"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "Acme::Holy provides a single routine, holy(), which returns the\n    name of the package an object has been blessed into, or undef, if\n    its first argument is not a blessed reference.\n\n    Isn't this what ref() does already? Yes, and no. If given a blessed\n    reference, ref() will return the name of the package the reference\n    has been blessed into. However, if ref() is passed an unblessed\n    reference, then it will return the type of reference (e.g. SCALAR,\n    HASH, CODEREF, etc). This means that a call to ref() by itself\n    cannot determine if a given reference is an object. holy() differs\n    from ref() by returning undef if its first argument is not a blessed\n    reference (even if it is a reference).\n\n    Can't we use UNIVERSAL::isa()? Yes, and no. If you already have an\n    object, then isa() will let you know if it inherits from a given\n    class. But what do we do if we know nothing of the inheritance tree\n    of the object's class? Also, if we don't have an object, just a\n    normal reference, then attempting to call isa() through it will\n    result in a run-time error.\n\n    holy() is a quick, single test to determine if a given scalar\n    represents an object (i.e. a blessed reference)."
   },
   "meta" : {
      "message_id" : "200306160231.h5G2V6do009559@pause.perl.org",
      "epoch" : 1055730666,
      "from" : "upload@pause.x.perl.org",
      "subject" : "Module submission Acme::Holy",
      "file" : "21826.txt",
      "type" : "module_submission"
   }
}
