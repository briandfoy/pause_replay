{
   "data" : {
      "userid" : {
         "name" : "Yves Orton",
         "id" : "YVES"
      },
      "description" : "Quotes strings so perl can eval them correct",
      "communities" : "Perlmonks",
      "chapterid" : {
         "name" : "String_Lang_Text_Proc",
         "id" : "11"
      },
      "similar" : "",
      "DSLIP" : "bdpOp",
      "modid" : "Text::Quote",
      "enteredon" : "Mon May  6 18:03:13 2002 GMT",
      "enteredby" : {
         "name" : "Yves Orton",
         "id" : "YVES"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "Many modules generate perl code (Data::Dumper Data::Dump to name\n    just two) this module knows how to correctly quote strings for this\n    purpose. In many ways I see it the opposite of Text::Balanced. Where\n    Text::Balanced can extract quoted structures from strings, this\n    module does the opposite.\n\n    Features:\n\n    1. quote_best -- determines the quoting symbol that results in the\n    least backslashes in the text 2. quote_key -- knows which hash keys\n    need quotes 3. quote -- can take an arbitrary scalar can quote it\n    using a variety of means, including transforming it into a different\n    representation (such as converting a binary string into a pack(\"H*\")\n    statement). 4. quote_regex -- knows how to correctly quote a qr// or\n    other regex pattern.\n\n    Derives from code contained in Data::Dump and Data::Dumper I wrote\n    this while developing Data::BFDump (Which im about to make a\n    namespace request for as well. :-)"
   },
   "meta" : {
      "message_id" : "200205061803.UAA23555@pause.perl.org",
      "epoch" : 1020708194,
      "from" : "upload@p11.speed-link.de",
      "subject" : "Module submission Text::Quote",
      "file" : "11552.txt",
      "type" : "module_submission"
   }
}
