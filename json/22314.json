{
   "data" : {
      "userid" : {
         "name" : "Eric J. Roode",
         "id" : "ROODE"
      },
      "description" : "Easy date/time parsing for fixed input fmts",
      "communities" : "comp.lang.perl.modules, RPI lily",
      "chapterid" : {
         "name" : "Data_Type_Utilities",
         "id" : "6"
      },
      "similar" : "Date::Parse, Time::ParseDate, Date::Manip",
      "DSLIP" : "idpfp",
      "modid" : "Time::Parse",
      "enteredon" : "Thu Jul 10 12:12:51 2003 GMT",
      "enteredby" : {
         "name" : "Eric J. Roode",
         "id" : "ROODE"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "The existing date/time parsing modules are very big hammers which\n    are probably overkill for many parsing needs. They're great if you\n    have no clue what the input format will be (for example, something\n    typed by a user); they attempt to parse a huge range of possible\n    input formats.\n\n    However, for most automated processing of known file formats, you\n    don't want a module to *guess* at the date format; you want to TELL\n    it that the month will be here, the day there, etc.\n\n    I propose a module which allows a programmer to specify a time/date\n    format template, using the same format codes as my Time::Format\n    module, and which parses a string using exactly that template.\n    Possibly the user would also be able to specify the template using\n    stftime's formatting codes.\n\n    I suspect this would be faster and more robust than the Do-It-All\n    parsing modules. I plan to start development; in the meantime, I\n    would like to reserve the currently-unused Time::Parse namespace.\n    Thanks."
   },
   "meta" : {
      "message_id" : "200307101212.h6ACCuMW021443@pause.perl.org",
      "epoch" : 1057839176,
      "from" : "upload@pause.x.perl.org",
      "subject" : "Module submission Time::Parse",
      "file" : "22314.txt",
      "type" : "module_submission"
   }
}
