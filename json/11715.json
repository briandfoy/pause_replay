{
   "data" : {
      "userid" : {
         "name" : "Sam Tregar",
         "id" : "SAMTREGAR"
      },
      "description" : "a Perl profiler compatible with dprofpp",
      "communities" : "none yet",
      "chapterid" : {
         "name" : "Development_Support",
         "id" : "3"
      },
      "similar" : "Devel::DProf, Devel::AutoProfiler",
      "DSLIP" : "adpfp",
      "modid" : "Devel::Profiler",
      "enteredon" : "Thu May 16 20:59:20 2002 GMT",
      "enteredby" : {
         "name" : "Sam Tregar",
         "id" : "SAMTREGAR"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "DESCRIPTION\n\n    This module implements a Perl profiler that outputs profiling data\n    in a format compatible with C<dprofpp>,\n    L<Devel::DProf|Devel::DProf>'s profile analysis tool. It is meant to\n    be a drop-in replacement for Devel::DProf.\n\n    RATIONAL\n\n    I created this module because I desperately needed a profiler to\n    optimize a large Apache/mod_perl application. Devel::DProf, however,\n    insisted on seg-faulting on every request. I spent many days trying\n    to fix Devel::DProf, but eventually I had to admit that I wasn't\n    going to be able to do it. Devel::DProf's virtuoso creater, Ilya\n    Zakharevich, was unable to spend the time to fix it. Game over.\n\n    My next stop brought me to Devel::AutoProfiler by Greg London. This\n    module is a pure-Perl profiler. Reading the code convinced me that\n    it was possible to write profiler without going the route that led\n    to Devel::DProf's extremely difficult code. Devel::AutoProfiler is a\n    good module but I found several problems.\n\n    First, Devel::AutoProfiler doesn't output data in the format used\n    by C<dprofpp>. I like C<dprofpp> - it has every option I could want\n    and the C<tmon.out> format is well designed and concise. In\n    contrast, Devel::AutoProfiler stores its profiling data in memory\n    and then dumps its data to STDOUT all in one go.\n\n    Second, Devel::AutoProfiler is a heavy user of memory. It creates\n    an entirely new code block with eval(STRING) for each subroutine it\n    instruments. Also, storing profile data in memory could result in\n    significant problems on long runs.\n\n    Finally, Devel::AutoProfiler has some (seemingly) arbitrary\n    limitations. It won't profile subroutines in Data::Dumper or\n    Time::HiRes and if a subroutine begins with \"__\" it won't be\n    profiled either.\n\n    Thus, Devel::Profiler was born - an attempt to create a\n    dprofpp-compatible profiler that avoids Devel::DProf's most\n    debilitating bugs."
   },
   "meta" : {
      "message_id" : "200205162059.WAA26222@pause.perl.org",
      "epoch" : 1021582762,
      "from" : "upload@p11.speed-link.de",
      "subject" : "Module submission Devel::Profiler",
      "file" : "11715.txt",
      "type" : "module_submission"
   }
}
