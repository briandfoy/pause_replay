{
   "data" : {
      "userid" : {
         "name" : "Tassilo von Parseval",
         "id" : "VPARSEVAL"
      },
      "description" : "Autoloads only registered methods",
      "communities" : "comp.lang.perl.modules",
      "chapterid" : {
         "name" : "Perl_Core_Modules",
         "id" : "2"
      },
      "similar" : "AutoSplit, SelfLoader",
      "DSLIP" : "Rdphp",
      "modid" : "AutoLoader::Register",
      "enteredon" : "Thu Mar  7 09:16:42 2002 GMT",
      "enteredby" : {
         "name" : "Tassilo von Parseval",
         "id" : "VPARSEVAL"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "AutoLoader::Register takes via import() method-names along with\n    either closures or stringified anonymous subs and makes itself a\n    superclass of the class use()ing it. Calls to any of the registered\n    methods will compile the code and mungle it into the caller's\n    namespace so that further calls to the methods wont trigger the\n    AutoLoader::Register::AUTOLOADER again. Apart from that it allows\n    for custom exception-handling if an unknown method has been called.\n    More to it, you can have AutoLoader::Register import arbitrary\n    methods from arbitrary classes into your own class without the\n    necessity of setting up an inheritance-relation. It provides its own\n    can()-method so that even autoloaded methods will be correctly\n    reported (as opposed to UNIVERSAL::can)"
   },
   "meta" : {
      "message_id" : "200203070916.KAA01786@pause.perl.org",
      "epoch" : 1015492603,
      "from" : "upload@p11.speed-link.de",
      "subject" : "Module submission AutoLoader::Register",
      "file" : "10507.txt",
      "type" : "module_submission"
   }
}
