{
   "data" : {
      "userid" : {
         "name" : "John Clyman",
         "id" : "JCLYMAN"
      },
      "description" : "Centralize app's fixed/dynamic text strings",
      "communities" : "Perlmonks; namespace proposed on c.l.p.m and modules@perl.org",
      "chapterid" : {
         "name" : "String_Lang_Text_Proc",
         "id" : "11"
      },
      "similar" : "",
      "DSLIP" : "bdpOa",
      "modid" : "Text::MessageLibrary",
      "enteredon" : "Wed Oct 30 20:44:20 2002 GMT",
      "enteredby" : {
         "name" : "John Clyman",
         "id" : "JCLYMAN"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "Larger apps can benefit from a way to manage text strings to avoid\n    string literals scattered throughout code. This module implements a\n    mechanism for creating lists of text strings (either fixed or with\n    placeholders filled in at calling time) and wraps it in a nice OO\n    interface that lets you make calls like this:\n\n    print $my_messages->file_open_failed($input_file);\n\n    (You never actually define a \"file_open_failed\" method; an AUTOLOAD\n    sub generates one for you and performs a lookup to construct the\n    appropriate string.)\n\n    You can find a more detailed discussion of the rationale, and\n    feedback from others in the community, here:\n    http://www.perlmonks.org/index.pl?node_id=136715 and here:\n    http://www.perlmonks.org/index.pl?node_id=136784\n\n    I propose the name Text::MessageLibrary because this is basically a\n    way for managing the text strings in your application. It's not\n    language-specific, so Lingua::* seems inappropriate. String::* would\n    be a possibility but my sense is that most of those modules are\n    lower-level string-manipulation functions. (This is probably closer\n    to some of the text-templating functions under Text::*.) brian d foy\n    suggested Class::*, but the OO-ness of this solution is really\n    incidental (it's for the syntactic convenience of the caller).\n\n    Also, Text::* was where I first looked in CPAN when I was initially\n    searching for a solution to this problem."
   },
   "meta" : {
      "message_id" : "200210302044.g9UKiLG02065@pause.perl.org",
      "epoch" : 1036010661,
      "from" : "upload@p11.speed-link.de",
      "subject" : "Module submission Text::MessageLibrary",
      "file" : "14874.txt",
      "type" : "module_submission"
   }
}
