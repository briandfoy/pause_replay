{
   "data" : {
      "userid" : {
         "name" : "Stepan Riha",
         "id" : "SRIHA"
      },
      "description" : "Encrypted session data in CGI applications",
      "communities" : "comp.lang.perl.modules",
      "chapterid" : {
         "name" : "World_Wide_Web_HTML_HTTP_CGI",
         "id" : "15"
      },
      "similar" : "CGI::Session",
      "DSLIP" : "bdpOp",
      "modid" : "CGI::Session::Encrypted",
      "enteredon" : "Fri Apr  9 15:28:30 2004 GMT",
      "enteredby" : {
         "name" : "Stepan Riha",
         "id" : "SRIHA"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "I'm extending CGI::Session to allow for encrypting the data\n    persisted on the server. The module works as a drop-in replacement\n    for CGI::Session.\n\n    The CGI::Session::Encrypted module bundles additional sub-modules\n    that hand the actual encryption (i.e.\n    CGI::Session::Encrypted::Crypt::CBC) and ancryption key generation\n    (i.e. CGI::Session::Encrypted::Key::MD5). My module lets\n    CGI::Session and its drivers do most of the work.\n\n    Here's the documentation for the main module:\n\n    NAME CGI::Session::Encrypted - encrypted session data in CGI\n    applications\n\n    SYNOPSIS # Object initialization: use CGI::Session::Encrypted;\n\n    my $session = new CGI::Session(\"driver:File;crypt:Ceasar\", undef,\n    {Directory=>'/tmp'});\n\n    # getting the effective session id: my $CGISESSID = $session->id();\n\n    ...\n\n    # delete the session for good $session->delete();\n\n    DESCRIPTION CGI::Session::Encrypted is a Perl5 library that\n    provides easy to use encryption for persisted data manged with the\n    CGI::Session manpage. It is intended for situations where you do not\n    want the session data stored on the server to be readable by\n    unauthorised users or processes.\n\n    The session data is encrypted with a configurable cipher and a\n    random key - the default cipher is DES using a 128 bit key.\n\n    The SSID generated by this module contains both the session id,\n    which identifies the persisted session data on the server, as well\n    as the encryption key, which allows the session data to be\n    decrypted.\n\n    WEAKNESSES If you pass the SSID as part of the URL (as opposed to\n    using cookies or passing it as POST data), your web-server log will\n    contain the encryption key information.\n\n    To avoid this vulnerability, you should avoid passing the SSID as\n    part of the GET URI.\n\n    And of course, you should use SSL if you are concerned about the\n    traffic between the browser and the server.\n\n    METHODS The CGI::Session::Encrypted module extends the\n    functionality of the CGI::Session manpage. Following is the overview\n    of features added by CGI::Session::Encrypted. For additional\n    documentation, please see the CGI::Session manpage.\n\n    \"new( DSN, SID, HASHREF )\" Requires three arguments as described in\n    the CGI::Session manpage. The DSN may specify which encryption and\n    key negeration modules to use. The HASHREF may contain addition\n    configuration for these modules. If no \"crypt\" or \"key\" is specified\n    in the DSN, the module defaults to \"crypt:CBC;key:MD5\".\n\n    Examples:\n\n    $session = new CGI::Session::Encrypted(undef, undef, undef);\n    $session = new\n    CGI::Session::Encrypted(\"crypt:Ceasar;serializer:Storable\", undef,\n    {Directory=>'/tmp'}) $session = new\n    CGI::Session::Encrypted(\"crypt:CBC\", undef, { KeySize=>32,\n    cipher=>'Blowfish'})\n\n    Following data source variables are supported by this module:\n\n    * \"crypt\" - crypt module to be used to encrypt serialized data\n    before saving and to decrypt serialized data after loading.\n    Available crypt modules are \"CBC\" and \"Ceasar\". Default is \"CBC\".\n\n    * \"key\" - random key generator to used to generate the encryption\n    key when new session is to be created. Available key generator is\n    \"MD5\". Default is \"MD5\".\n\n    \"id()\" Returns effective ID for a session. Since effective ID and\n    claimed ID can differ, valid session id should always be retrieved\n    using this method.\n\n    The ID returned by this method consists of both the encryption key\n    as well as the session ID used to identify the session data on disk.\n\n    PERSISTED DATA The serialized session data is encrypted with the\n    specified encryption module using the session's key. The encrypted\n    data is then stored as a hex string and is thus binary safe.\n\n    DISTRIBUTION CGI::Session::Encrypted consists of several modular\n    components such as encryption modules and key generators. This\n    section lists what is available.\n\n    ENCRYPTION MODULES\n\n    Following encryption modules are included in the standard\n    distribution:\n\n    * \"CBC\" - default encryption module using the Crypt::CBC manpage.\n    Requires the Crypt::CBC manpage and a corresponding cipher module,\n    such as the Crypt::DES manpage. Full name: the\n    CGI::Session::Encrypted::Crypt::CBC manpage\n\n    * \"Caesar\" - encryption module which uses a (weak) Ceasar cipher\n    for encryption. Full name: the\n    CGI::Session::Encrypted::Crypt::Caesar manpage\n\n    KEY GENERATORS\n\n    Following key generators are available:\n\n    * \"MD5\" - default key generator which uses standard the Digest::MD5\n    manpage for generating keys. Full name: the\n    CGI::Session::Encrypted::Key::MD5 manpage.\n\n    COPYRIGHT Copyright (C) 2004 Stepan Riha. All rights reserved.\n\n    This library is free software. You can modify and or distribute it\n    under the same terms as Perl itself.\n\n    AUTHOR Stepan Riha <sriha@cpan.org>. Feedbacks, suggestions are\n    welcome.\n\n    SEE ALSO * the CGI::Session manpage - the CGI::Session\n    documentation. Detailed information for session management.\n\n    * the CGI::Session::Encrypted::Crypt::CBC manpage - Crypt::CBC\n    based encryption\n\n    * the CGI::Session::Encrypted::Crypt::Ceasar manpage - Ceasar\n    cipher encryption\n\n    * the CGI::Session::Encrypted::Key::MD5 manpage - Digest::MD5 based\n    key genration\n\n    * the Crypt::CBC manpage - encrypting data with Cipher Block\n    Chaining Mode\n\n    * the Crypt::DES manpage - DES encryption module"
   },
   "meta" : {
      "message_id" : "200404091528.i39FSVJZ013269@pause.perl.org",
      "epoch" : 1081524511,
      "from" : "upload@pause.perl.org",
      "subject" : "Module submission CGI::Session::Encrypted",
      "file" : "30611.txt",
      "type" : "module_submission"
   }
}
