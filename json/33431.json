{
   "data" : {
      "userid" : {
         "name" : "Ivor Williams",
         "id" : "IVORW"
      },
      "description" : "Enhanced glob processing",
      "communities" : "http://london.pm.org/pipermail/london.pm/Week-of-Mon-20040621/thread.html#27605",
      "chapterid" : {
         "name" : "File_Names_Systems_Locking",
         "id" : "10"
      },
      "similar" : "File::Find File::Find::Rule File::Glob",
      "DSLIP" : "adpOp",
      "modid" : "File::Wildcard",
      "enteredon" : "Thu Jul  8 06:23:21 2004 GMT",
      "enteredby" : {
         "name" : "Ivor Williams",
         "id" : "IVORW"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "Using a regexp for pattern matching a list of files is not a new\n    idea. However, this is not something that the built in functionality\n    of glob provides, nor existing File:: modules. File::Wildcard has\n    another slant, by way of using the captures ($1, R2, etc.) from the\n    pattern match to construct new filenames. See the POD and london.pm\n    RFC for more on this.\n\n    Also note that a File::Wildcard object is a native iterator. This\n    is in contrast to File::Find, where the application work takes place\n    in a callback. File::Find on the other hand provides a 'next'\n    method, which returns the next matching file (and any derived\n    filenames). It does this without unduly tying up machine resources\n    or slurping whole directory tree contents.\n\n    I believe that this module belongs in the File:: namespace\n    alongside File::Find and File::Glob."
   },
   "meta" : {
      "message_id" : "200407080623.i686NQjJ012684@pause.perl.org",
      "epoch" : 1089267806,
      "from" : "upload@pause.perl.org",
      "subject" : "Module submission File::Wildcard",
      "file" : "33431.txt",
      "type" : "module_submission"
   }
}
