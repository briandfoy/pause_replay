{
   "data" : {
      "userid" : {
         "name" : "Matt S Trout",
         "id" : "MSTROUT"
      },
      "description" : "Easily add filters to accessor-based classes",
      "communities" : "",
      "chapterid" : {
         "name" : "Data_Type_Utilities",
         "id" : "6"
      },
      "similar" : "Hook::LexWrap Class::Wrap Class::Wrapper",
      "DSLIP" : "adpOp",
      "modid" : "Class::MethodFilter",
      "enteredon" : "Thu Jul 22 19:16:03 2004 GMT",
      "enteredby" : {
         "name" : "Matt S Trout",
         "id" : "MSTROUT"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "The module is built as a simple means to add a filtered version of\n    an accessor-style method (i.e. equivalent behaviour to a\n    Class::Accessor-generated accessor) named accessor_filtered, for\n    example for a web forum engine where the post body is filtered\n    before display but the raw body is accessed for editing.\n\n    It's main point of interest is its ability to detect the presence\n    of accessor_filtered already and to use that as a caching accessor\n    for the result (wrapping the main accessor to update the filtered\n    result as it is called) so that e.g. when using Class::DBI, caching\n    in the db can be implemented simply by adding a column_filtered\n    column to the table and updating the Class::DBI class definition\n    appropriately.\n\n    Also, Class::MethodFilter provides a simple, repeatable resulting\n    API in the class using it and a DWIMish filter installation\n    mechanism in order to save as much hassle as possible for its users.\n\n    Modules such as Class::Wrap[per] and Hook::LexWrap provide more\n    general means of filtering and wrapping output, where\n    Class::MethodFilter addresses an interface need rather than a\n    mechanism need."
   },
   "meta" : {
      "message_id" : "200407221916.i6MJGDLI004992@pause.perl.org",
      "epoch" : 1090523773,
      "from" : "upload@pause.perl.org",
      "subject" : "Module submission Class::MethodFilter",
      "file" : "33705.txt",
      "type" : "module_submission"
   }
}
