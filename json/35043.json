{
   "data" : {
      "userid" : {
         "name" : "Darren Duncan",
         "id" : "DUNCAND"
      },
      "description" : "Specify all database tasks with SQL routines",
      "communities" : "dbi-dev, dbi-users, poop-group, dbdi-dev, modules@perl.org,\n    victoria-pm, sqlite-users@sqlite.org",
      "chapterid" : {
         "name" : "String_Lang_Text_Proc",
         "id" : "11"
      },
      "similar" : "SQL::Statement SQL::Translator SQL::YASP SQL::Generator SQL::Schema\n    SQL::Abstract SQL::Snippet SQL::Catalog DB::Ent DBIx::Abstract\n    DBIx::AnyDBD DBIx::DBSchema DBIx::Namespace DBIx::SearchBuilder\n    TripleStore",
      "DSLIP" : "cdpOg",
      "modid" : "SQL::Routine",
      "enteredon" : "Tue Sep 21 05:28:42 2004 GMT",
      "enteredby" : {
         "name" : "Darren Duncan",
         "id" : "DUNCAND"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "See the previous few days' discussion about SQL::SyntaxModel, which\n    is the old name for this module. But I explain it quite differently\n    below.\n\n    SQL::Routine is conceptually similar to SQL::Statement but that my\n    module is a lot more capable than that one is.\n\n    SQL::Routine is a container object that allows you to create\n    specifications for any type of database task or activity (eg:\n    queries, DML, DDL, connection management) that look like SQL stored\n    procedures or functions.\n\n    Third party code that uses SQL::Routine can choose to either\n    generate actual SQL stored procedures from them, as the RDBMS in\n    question supports, or generate client-executed individual SQL\n    statements wrapped by Perl code instead.\n\n    Third party code can also choose to use SQL::Routine objects as an\n    intermediate representation of SQL that it is translating from one\n    RDBMS to another, or it can be used by applications or database\n    systems that don't want to use SQL strings, in place of such\n    strings.\n\n    SQL::Routine was created in the hindsight of the SQL-2003 standard\n    and supports most of its important features. The module should be\n    useable with any SQL-supporting database, plus some that are not."
   },
   "meta" : {
      "message_id" : "200409210528.i8L5Sh0p005397@pause.perl.org",
      "epoch" : 1095744523,
      "from" : "upload@pause.perl.org",
      "subject" : "Module submission SQL::Routine",
      "file" : "35043.txt",
      "type" : "module_submission"
   }
}
