{
   "data" : {
      "userid" : {
         "name" : "Dusty Wilson",
         "id" : "WILSOND"
      },
      "description" : "Object interface to client/server socket IO",
      "communities" : "Has been discussed at #hey.nu on irc.hey.nu, plans to add a\n    discussion board - URL unknown.",
      "chapterid" : {
         "name" : "File_Handle_Input_Output",
         "id" : "21"
      },
      "similar" : "IO::NonBlocking IO::Multiplex",
      "DSLIP" : "adpOa",
      "modid" : "IO::Transceiver",
      "enteredon" : "Sun Sep 28 00:10:10 2003 GMT",
      "enteredby" : {
         "name" : "Dusty Wilson",
         "id" : "WILSOND"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "A 'transceiver' is a transmitter and receiver in one package. A CB\n    radio would be a good example, as would a cellular telephone. This\n    name was chosen because the module does just that, allows\n    communication as both a client and a server.\n\n    This module was originally named \"hey::Transponder\", but the root\n    namespace \"hey\" is obviously inappropriate for contribution and the\n    term \"Transponder\" shows too strict of specialization of\n    communication. The module makes IO::Socket objects, leaving open\n    quite a few possibilities for communication.\n\n    The purpose of the module itself is to allow easy creation of\n    non-blocking, multiplexing servers and clients through an object\n    interface. The programmer would create the new client or server and\n    assign a callback function to this new client or server connection.\n    The programmer using this code would not need to deal with the\n    network wiring to make use of multiple clients and servers in their\n    code."
   },
   "meta" : {
      "message_id" : "200309280010.h8S0ABYh015264@pause.perl.org",
      "epoch" : 1064707811,
      "from" : "upload@pause.perl.org",
      "subject" : "Module submission IO::Transceiver",
      "file" : "23748.txt",
      "type" : "module_submission"
   }
}
