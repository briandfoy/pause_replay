{
   "data" : {
      "userid" : {
         "name" : "masahji",
         "id" : "MASAHJI"
      },
      "description" : "Extract and analyze database metadata.",
      "communities" : "",
      "chapterid" : {
         "name" : "Database_Interfaces",
         "id" : "7"
      },
      "similar" : "",
      "DSLIP" : "adpOp",
      "modid" : "DB::Introspector",
      "enteredon" : "Sun Nov  2 21:14:43 2003 GMT",
      "enteredby" : {
         "name" : "masahji",
         "id" : "MASAHJI"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "DB::Introspector looks into database metadata and derives detailed\n    table level and foreign key information in a way that conforms to a\n    collection of common interfaces across all dbs.\n\n    The DB::Introspector::Utils::* classes provide a collection of\n    algorithms, which carry out relationship traversal and SQL\n    generation algorithms (like finding the column level and table level\n    mappings between two indirectly related tables and generating DDL\n    code). Because the DB::Introspector::Utils algorithms take advantage\n    of the DB::Introspector's database independent metadata classes,\n    these traversal algorithms can be performed on any database for\n    which there exists an introspector (eg DB::Introspector::Oracle and\n    DB::Introspector::PostgresSQL)."
   },
   "meta" : {
      "message_id" : "200311022114.hA2LEhiY030386@pause.perl.org",
      "epoch" : 1067807683,
      "from" : "upload@pause.perl.org",
      "subject" : "Module submission DB::Introspector",
      "file" : "24334.txt",
      "type" : "module_submission"
   }
}
