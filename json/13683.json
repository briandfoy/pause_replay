{
   "data" : {
      "userid" : {
         "name" : "Benoit Beausejour",
         "id" : "BBEAUSEJ"
      },
      "description" : "Data Structure Persistence API",
      "communities" : "#perl",
      "chapterid" : {
         "name" : "Data_Type_Utilities",
         "id" : "6"
      },
      "similar" : "Tie::Persistent, Persistence::Object",
      "DSLIP" : "adpOp",
      "modid" : "Persistent::Hash",
      "enteredon" : "Mon Sep  9 20:30:32 2002 GMT",
      "enteredby" : {
         "name" : "Benoit Beausejour",
         "id" : "BBEAUSEJ"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "Persistent::Hash is a base class that implements a hash persistence\n    framework for Perl. The Persistent::Hash class implements a TIE\n    mechanism to transform a standard hash into a storable object. It\n    also includes standard method to load and save the object. A\n    Persistent::Hash basically has the same behaviour a normal hash\n    would, but has additionnal methods pertaining to persistence.\n\n    The base class uses \"storage modules\" to know how to save a\n    specific object to storage container and how to reload it, so the\n    whole \"storage\" part of the implementation is completely modular. A\n    Persistent::Hash can be saved in two chunk, data and index. The\n    \"data\" chunk is saved as a blob while the \"index\" chunk is saved in\n    a properly indexed table to take advantage of native database\n    implementations."
   },
   "meta" : {
      "message_id" : "200209092030.g89KUXa07088@pause.perl.org",
      "epoch" : 1031603433,
      "from" : "upload@p11.speed-link.de",
      "subject" : "Module submission Persistent::Hash",
      "file" : "13683.txt",
      "type" : "module_submission"
   }
}
