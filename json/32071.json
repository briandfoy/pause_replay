{
   "data" : {
      "userid" : {
         "name" : "Christopher Nehren",
         "id" : "APEIRON"
      },
      "description" : "Unix units(1) style time conversions",
      "communities" : "comp.lang.perl.modules",
      "chapterid" : {
         "name" : "Miscellaneous_Modules",
         "id" : "23"
      },
      "similar" : "None known.",
      "DSLIP" : "bdphp",
      "modid" : "Convert::TimeUnits",
      "enteredon" : "Thu May 20 01:32:22 2004 GMT",
      "enteredby" : {
         "name" : "Christopher Nehren",
         "id" : "APEIRON"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "Some date manipulation functions and other uses for Perl return\n    units of time as a raw number (the example which inspired me to\n    write this module is the uptime() function of Sys::Load). This is\n    fine if you're just going to dump the number somewhere, or base\n    further calculations on it. But for formatting that number so that\n    multiples of 60 seconds are converted to minutes, etc., nothing\n    beats the power and flexibility of the units(1) program.\n    Unfortunately, it has come to my attention that Windows systems and\n    many Unix (e.g. many common Linux distributions) systems by default\n    lack this program. Hence I wrote Convert::TimeUnits (I also didn't\n    want to deal with `` or qx). Convert::TimeUnits the module fills\n    this software gap for units of time. Convert::TimeUnits the name was\n    chosen because at the very basic level, this module converts things.\n    It converts units of time to their equivalent values as expressed by\n    other units."
   },
   "meta" : {
      "message_id" : "200405200132.i4K1WQ96009599@pause.perl.org",
      "epoch" : 1085016746,
      "from" : "upload@pause.perl.org",
      "subject" : "Module submission Convert::TimeUnits",
      "file" : "32071.txt",
      "type" : "module_submission"
   }
}
