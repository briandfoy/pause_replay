{
   "data" : {
      "userid" : {
         "name" : "Xavier Noria",
         "id" : "FXN"
      },
      "description" : "hashes whose keys can be multiple",
      "communities" : "module-authors@perl.org,comp.lang.perl.modules,freenode#Perl",
      "chapterid" : {
         "name" : "Data_Type_Utilities",
         "id" : "6"
      },
      "similar" : "Tie::ListKeyedHash",
      "DSLIP" : "bdprp",
      "modid" : "Hash::MultiKey",
      "enteredon" : "Sun Mar  9 20:46:40 2003 GMT",
      "enteredby" : {
         "name" : "Xavier Noria",
         "id" : "FXN"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "Rationale for name: On the one hand I'd seach for \"multikey\" myself\n    if I was looking for such a module. On the other hand I see Tie:: as\n    putting an implementation detail in the name. I prefer the name of\n    my module just suggests what is about. But this can of course be\n    discussed to conform to any naming policy in CPAN.\n\n    Rationale for approach: Tie::ListKeyedHash uses a hard-coded nested\n    hash created with eval() when needed behind the scenes. As a\n    consequence you cannot set $hash{'foo'} = 1 and $hash{'foo','bar'} =\n    3, because perl tries to assign the key 'bar' to the hashref '1',\n    which results in an error.\n\n    In Hash::MultiKey keys can be truly multiple. For instance, in\n\n    $hash{foo} = 1; $hash{\"foo\", \"bar\"} = [0..7];\n    $hash{\"foo\",\"bar\",\"baz\",\"zoo\"} = { key => \"value\" };\n\n    %hash has just three keys. It also accepts arrayrefs for a better\n    performance and to allow keys containing $;.\n\n    Since values in the internal structure are just a slot in the\n    corresponding tree node, the last example does NOT result in a new\n    key [\"foo\",\"bar\",\"baz\",\"zoo\", \"key\"], %hash is standard in that\n    regard, it just assigns multiple-keys to scalars, as usual.\n\n    Best regards to all!\n\n    -- fxn"
   },
   "meta" : {
      "message_id" : "200303092046.h29Kke925725@pause.perl.org",
      "epoch" : 1047242800,
      "from" : "upload@pause.x.perl.org",
      "subject" : "Module submission Hash::MultiKey",
      "file" : "19341.txt",
      "type" : "module_submission"
   }
}
