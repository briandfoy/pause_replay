{
   "data" : {
      "userid" : {
         "name" : "Martin Bright",
         "id" : "MJBRIGHT"
      },
      "description" : "Serve data in XML following HTTP request",
      "communities" : "http://sourceforge.net/projects/dbix-xmlserver",
      "chapterid" : {
         "name" : "Database_Interfaces",
         "id" : "7"
      },
      "similar" : "XML::Generator::DBI",
      "DSLIP" : "adpOp",
      "modid" : "DBIx::XMLServer",
      "enteredon" : "Tue Nov 18 14:00:47 2003 GMT",
      "enteredby" : {
         "name" : "Martin Bright",
         "id" : "MJBRIGHT"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "This module makes it very easy to put together a script which will\n    take an HTTP query, turn it into an SQL query, execute that query\n    and turn the result into customised XML.\n\n    From README:\n\n    This module implements the whole process of generating an XML\n    document from a database query, in response to an HTTP request. The\n    mapping from the DBI database to an XML structure is defined in a\n    template file, also in XML; this template is used not only to turn\n    the data into XML, but also to parse the query string. To the user,\n    the format of the query string is very natural in relation to the\n    XML data which they will receive.\n\n    How does this differ from existing modules?\n\n    1. The mapping between database and XML is used not only to\n    generate the XML, but also to parse the query. In principle, the\n    step of generating XML could be accomplished by XML::Generator::DBI\n    followed by XSLT; but this is only half of the process and not\n    neatly separable.\n\n    2. The end user has control over the XML produced: they can elect\n    to receive only a fragment of each record.\n\n    3. Because the transformations from query to SQL statement and from\n    SQL data to XML data are performed by overloadable Perl functions,\n    there is very much flexibility - more so that just using XSLT.\n\n    Complete docs and source are already on CPAN."
   },
   "meta" : {
      "message_id" : "200311181400.hAIE0mQC021411@pause.perl.org",
      "epoch" : 1069164048,
      "from" : "upload@pause.perl.org",
      "subject" : "Module submission DBIx::XMLServer",
      "file" : "24610.txt",
      "type" : "module_submission"
   }
}
