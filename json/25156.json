{
   "data" : {
      "userid" : {
         "name" : "Christopher Charles Cavnor",
         "id" : "CCAVNOR"
      },
      "description" : "Transparent object persistence to database.",
      "communities" : "",
      "chapterid" : {
         "name" : "Data_Type_Utilities",
         "id" : "6"
      },
      "similar" : "Class::MethodMaker",
      "DSLIP" : "adpOp",
      "modid" : "Class::Auto",
      "enteredon" : "Fri Dec 19 00:16:57 2003 GMT",
      "enteredby" : {
         "name" : "Christopher Charles Cavnor",
         "id" : "CCAVNOR"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "three packages that work together to provide: transparent object\n    persistence\n\n    AutoArgs => argument list processing that normalizes argument lists\n    (so that I can say: -this=>that, or --this=>that)\n\n    AutoClass => similar to Class::MakeMethods, provides support for\n    automatically generating get/set methods and allows for default\n    value initilaization. Also will call first constructor found for any\n    class which ISA AutoClass, and calls init_self on these.\n\n    AutoDB => creates registries in the database (currently, only mysql\n    is supported) and transparently stores and updates collections in\n    those registries\n\n    Class::MethodMaker provides similar functionality to\n    Class::Auto::AutoClass. However, AutoClass is tightly linked to\n    Class::Auto::AutoDB functionality. I will try to get MethodMaker to\n    replace AutoClass in the future."
   },
   "meta" : {
      "message_id" : "200312190016.hBJ0GwFT029705@pause.perl.org",
      "epoch" : 1071793018,
      "from" : "upload@pause.perl.org",
      "subject" : "Module submission Class::Auto",
      "file" : "25156.txt",
      "type" : "module_submission"
   }
}
