{
   "data" : {
      "userid" : {
         "name" : "Giulio Motta",
         "id" : "GIULIENK"
      },
      "description" : "Convert to/from bencoding (iterative way)",
      "communities" : "",
      "chapterid" : {
         "name" : "Archiving_and_Compression",
         "id" : "17"
      },
      "similar" : "Convert::Bencode",
      "DSLIP" : "adpfp",
      "modid" : "Convert::Bencode::Iterative",
      "enteredon" : "Mon Oct 20 14:21:11 2003 GMT",
      "enteredby" : {
         "name" : "Giulio Motta",
         "id" : "GIULIENK"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "Convert::Bencode::Iterative gives an iterative solution to bencode\n    and bdecode algorithms, usually expressed in a recursive way. As\n    this functions could be used in a webserver tracker, an optimization\n    of the algorithms lead to less load on the server. I don't think\n    Convert::Bencode::Iterative should substitute Convert::Bencode even\n    just cause Convert::Bencode algorithm is slower but nicer. For\n    instance, Convert::Bencode::Iterative::bdecode function benchmarks\n    to around 120 times faster than Convert::Bencode::bdecode, still I\n    won't call the code pretty or easily understandable. Also I'd like\n    to explore possible XS solutions in the future. The Bencoding\n    serialization algorithm is described at\n    http://bitconjurer.org/BitTorrent/protocol.html"
   },
   "meta" : {
      "message_id" : "200310201421.h9KELCYr010653@pause.perl.org",
      "epoch" : 1066659672,
      "from" : "upload@pause.perl.org",
      "subject" : "Module submission Convert::Bencode::Iterative",
      "file" : "24084.txt",
      "type" : "module_submission"
   }
}
