{
   "data" : {
      "userid" : {
         "name" : "Robin Barker",
         "id" : "RMBARKER"
      },
      "description" : "Methods to read and resolve symbolic links",
      "communities" : "",
      "chapterid" : {
         "name" : "File_Names_Systems_Locking",
         "id" : "10"
      },
      "similar" : "",
      "DSLIP" : "bdpOp",
      "modid" : "File::Spec::Link",
      "enteredon" : "Wed May  7 11:09:27 2003 GMT",
      "enteredby" : {
         "name" : "Robin Barker",
         "id" : "RMBARKER"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "The methods in File::Spec::Link are based on File::Spec and extend\n    that class. I wanted to create a script that could replace a link by\n    a copy of the target of the link (for editing perl source files\n    created by ./Configure -Dmksymlinks). This is implemented in\n    File::Copy::Link\n\n    There seemed to be no existing modules that would take a link and\n    return the name of the linked file, i.e. readlink followed by\n    relative to the link's directory. The functionality existing in\n    File::Find as PathCombine($AbsName,readlink($AbsName))\n\n    Both File::Spec::Link and File::Copy::Link are in the distribution\n    File-Copy-Link-0.02.tar.gz"
   },
   "meta" : {
      "message_id" : "200305071109.h47B9SIT011009@pause.perl.org",
      "epoch" : 1052305768,
      "from" : "upload@pause.x.perl.org",
      "subject" : "Module submission File::Spec::Link",
      "file" : "20914.txt",
      "type" : "module_submission"
   }
}
