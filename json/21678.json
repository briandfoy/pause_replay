{
   "data" : {
      "homepage" : "",
      "userid" : "ALPO",
      "fullname" : "Alexander Pourmirzayouf",
      "why" : "I wrote a package which allows simple DBI interactions and also\n    implements a unified interface for common DBDs, there are some\n    packages that approach a similar goal, but I haven't seen one\n    allowing code short and simple as this:\n\n    use DBIx::Simple;\n\n    my $mysql_cons = new DBIx::Simple('mysql');\n\n    # attempt to connect to the MySql database # also prepare and\n    execute the given SQL statement. $mysql_cons->exec( \"databasename\",\n    \"DELETE from somename where i=1\", \"username\", \"password\");\n\n    # use the already created handle, prepare and execute the SQL #\n    statement and return the results as array. my @results =\n    $mysql_cons->exec(\"databasename\",\"SELECT ..\");\n\n    $mysql_cons->disconnect_all;\n\n    'connect', 'prepare', 'execute', 'fetchrow_' are handled within the\n    modules subroutine \"exec\" which also checks for a reusable\n    connection and returns an array of values for SELECTs.",
      "mail" : "CENSORED"
   },
   "meta" : {
      "message_id" : "200306101958.h5AJweuV003266@pause.perl.org",
      "epoch" : 1055275120,
      "from" : "upload@pause.x.perl.org",
      "subject" : "PAUSE ID request (ALPO; Alexander Pourmirzayouf)",
      "file" : "21678.txt",
      "type" : "pause_id_request"
   }
}
