{
   "data" : {
      "userid" : {
         "name" : "Miko O'Sullivan",
         "id" : "MIKO"
      },
      "description" : "Redirect STDERR to web page for debugging",
      "communities" : "",
      "chapterid" : {
         "name" : "World_Wide_Web_HTML_HTTP_CGI",
         "id" : "15"
      },
      "similar" : "",
      "DSLIP" : "RdpOp",
      "modid" : "CGI::ShowWarnings",
      "enteredon" : "Tue Feb 26 14:49:35 2002 GMT",
      "enteredby" : {
         "name" : "Miko O'Sullivan",
         "id" : "MIKO"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "When writing CGI's I frequently find it cumbersome to run a test of\n    a CGI, then check my error logs for any warnings. Even if I keep an\n    SSH session open and tail -r errorlog, I still have to alt-tab back\n    and forth between the browser and the SSH window, then figure out\n    which of the errors were caused by the latest run of the CGI.\n\n    CGI::ShowWarnings gets rids of most of that issue by displaying the\n    warnings directly in the web page. CGI::ShowWarnings is very simple\n    to use:\n\n    use CGI::ShowWarnings; my $warnings = CGI::ShowWarnings->new();\n\n    When the $warnings object grabs STDERR and stores up everything\n    sent to STDERR. When $warnings drops out of scope it returns STDERR\n    to its normal functionality. It then checks if anything was actually\n    sent to STDERR during its reign. If anything was, then the object\n    outputs all the errors to STDOUT (ie, to the web browser) in a nice\n    neat <PRE> box.\n\n    -Miko"
   },
   "meta" : {
      "message_id" : "200202261449.PAA17214@pause.perl.org",
      "epoch" : 1014734975,
      "from" : "upload@p11.speed-link.de",
      "subject" : "Module submission CGI::ShowWarnings",
      "file" : "10358.txt",
      "type" : "module_submission"
   }
}
