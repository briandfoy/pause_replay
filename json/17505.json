{
   "data" : {
      "userid" : {
         "name" : "Matt Luker",
         "id" : "MLUKER"
      },
      "description" : "Module to make any perl code HTTP accessible",
      "communities" : "web-snapon-list@redstarhackers.com",
      "chapterid" : {
         "name" : "Server_and_Daemon_Utilities",
         "id" : "16"
      },
      "similar" : "HTTP::Daemon",
      "DSLIP" : "bdpOl",
      "modid" : "Web::Snapon",
      "enteredon" : "Thu Jan 30 19:40:28 2003 GMT",
      "enteredby" : {
         "name" : "Matt Luker",
         "id" : "MLUKER"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "Well, I am open to any suggestions on the namespace. I currently\n    develop it under RSH::Web::Snapon to prevent name-class or name\n    polution. If you believe the application is to specialized, I'm\n    willing to keep it there (but it would require an addition of RSH to\n    the top namespaces).\n\n    Basically, I have been asked repeatedly, \"Gee, is there some way to\n    access the script via a web browser?\" or \"Is there anyway to\n    interact with the script from another machine--like with a web\n    browser?\"\n\n    These questions reflect two needs/ideas: using a web browser as a\n    UI and the easy creation and management of remote \"perl daemons\".\n    Now, HTTP::Daemon does almost all the hard work for you by making\n    the creation of a HTTP capable daemon fairly straight forward. But\n    then comes the next part--which is often repetitive--hooking in your\n    code to respond to the requests.\n\n    My module basically wraps all the HTTP::Daemon and request handling\n    (even setting up the CGI environment) and provides a script for\n    firing it off. The user of the module then creates a mapping by\n    subclassing the mapping class--associating urls with code. So,\n    hooking up a script to an HTTP daemon is a matter of writing one\n    function in a subclass.\n\n    I think this is handy--and I thought others might as well. That's\n    why I'd like to put it into CPAN. If it isn't as nifty as I think, I\n    am willing to just distribute it via my own website--but it wouldn't\n    be nearly as cool as getting it into CPAN ;-)"
   },
   "meta" : {
      "message_id" : "200301301940.h0UJeSM20590@pause.perl.org",
      "epoch" : 1043955628,
      "from" : "upload@pause.x.perl.org",
      "subject" : "Module submission Web::Snapon",
      "file" : "17505.txt",
      "type" : "module_submission"
   }
}
