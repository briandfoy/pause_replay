{
   "data" : {
      "userid" : {
         "name" : "Claus A. Färber",
         "id" : "CFAERBER"
      },
      "description" : "Encoding/Decoding of IDNs",
      "communities" : "",
      "chapterid" : {
         "name" : "Internationalization_Locale",
         "id" : "13"
      },
      "similar" : "Net::LibIDN, IDNA::Punycode",
      "DSLIP" : "adpfp",
      "modid" : "Net::IDN::Encode",
      "enteredon" : "Sun May 30 19:31:41 2004 GMT",
      "enteredby" : {
         "name" : "Claus A. Färber",
         "id" : "CFAERBER"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "The \"Net::IDN::Encode\" module provides an easy-to-use interface for\n    Internationalized Domain Names (IDNs).\n\n    While IDNA::Punycode and Net::IDN::Nameprep implement all the basic\n    algorithms needed for IDNs, they do not provide functions which can\n    do all of the work necessary to encode or decode domain names with a\n    single function call.\n\n    \"Net::IDN::Encode\" also handles email addresses as-is, extracting\n    the domain name as necessary. It is planned to handle the local-part\n    in the future (when there is a standard for i18nized local-parts).\n\n    The handling of other types of names or addresses which use an\n    ASCII-compatible encoding similar (or identical?) to IDNA's or which\n    embed domain names (e.g. newsgroup names, LDAP common names) is also\n    planned.\n\n    The functionality provided by domain_to_ascii and domain_to_unicode\n    is similar to \"Net::LibIDN\"'s idn_to_ascii and idn_to_unicode\n    functions. However, Net::IDN::Encode does not rely on an external\n    library and integrates better with perl's Unicode/UTF-8 support."
   },
   "meta" : {
      "message_id" : "200405301931.i4UJVg1N024191@pause.perl.org",
      "epoch" : 1085945502,
      "from" : "upload@pause.perl.org",
      "subject" : "Module submission Net::IDN::Encode",
      "file" : "32407.txt",
      "type" : "module_submission"
   }
}
