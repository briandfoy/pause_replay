{
   "data" : {
      "userid" : {
         "name" : "×××× ×§××'××",
         "id" : "NUFFIN"
      },
      "description" : "Implementation of modular classless objects",
      "communities" : "http://sourceforge.net/projects/frytunes",
      "chapterid" : {
         "name" : "Development_Support",
         "id" : "3"
      },
      "similar" : "Class::Classless, Class::Object",
      "DSLIP" : "adpOp",
      "modid" : "Object::Meta::Plugin",
      "enteredon" : "Sat Nov 29 15:18:07 2003 GMT",
      "enteredby" : {
         "name" : "×××× ×§××'××",
         "id" : "NUFFIN"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "Class::Classless, Class::Object provide a mechanism to edit one\n    method at a time. It's oriented towards one heap of methods. I\n    wanted something that is made of parts. Somewhat like many classes,\n    with inheritance and so forth, within an object.\n\n    I'm going to use this to develop a large application which needs\n    modulability (drop in replacements, easy runtime modification,\n    multiplicity of these so called plugins) which Class::Classless et\n    al cannot and don't aim to offer.\n\n    The stupid name: I don't think this qualifies as a class\n    implementation, because it has a real, extensible, and integral\n    class. The class simply makes up with the plugins. Hence it was not\n    Class::Meta::Plugin."
   },
   "meta" : {
      "message_id" : "200311291518.hATFIBxm030788@pause.perl.org",
      "epoch" : 1070119091,
      "from" : "upload@pause.perl.org",
      "subject" : "Module submission Object::Meta::Plugin",
      "file" : "24794.txt",
      "type" : "module_submission"
   }
}
