{
   "data" : {
      "userid" : {
         "name" : "Ian Brayshaw",
         "id" : "IBB"
      },
      "description" : "Class::Declare method types using attributes",
      "communities" : "comp.lang.perl.misc",
      "chapterid" : {
         "name" : "Data_Type_Utilities",
         "id" : "6"
      },
      "similar" : "Attribute::Handlers Attribute::Protected",
      "DSLIP" : "RdpOp",
      "modid" : "Class::Declare::Attributes",
      "enteredon" : "Fri Jun  6 14:55:52 2003 GMT",
      "enteredby" : {
         "name" : "Ian Brayshaw",
         "id" : "IBB"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "Class::Declare::Attributes is designed to simplify the\n    specification of object interfaces when using the Class::Declare\n    framework. It provides attributes that may be used to specify a\n    method's access restrictions. From the README:\n\n    NAME Class::Declare::Attributes - Class::Declare method types using\n    Perl attributes.\n\n    SYNOPSIS package My::Class;\n\n    use 5.006; use strict; use warnings;\n\n    use base qw( Class::Declare::Attributes );\n\n    # declare the class/instance attributes __PACKAGE__->declare( ...\n    );\n\n    # # declare class/static/restricted/etc methods of this package #\n\n    sub my_class : class { ... } sub my_static : static { ... } sub\n    my_restricted : restricted { ... } sub my_public : public { ... }\n    sub my_private : private { ... } sub my_protected : protected { ...\n    }\n\n    DESCRIPTION Class::Declare::Attributes extends Class::Declare by\n    adding support for Perl attributes for specifying class method\n    types. This extension was inspired by Damian Conway's\n    Attribute::Handlers module, and Tatsuhiko Miyagawa's\n    Attribute::Protected module.\n\n    The addition of Perl attribute support (not to be confused with\n    object attributes, which are entirely different, and also supported\n    by Class::Declare) greatly simplifies the specification of\n    Class::Declare-derived class and instance methods. This should aid\n    in the porting of existing code (Perl, Java and C++) to a\n    Class::Declare framework, as well as simplify the development of new\n    modules.\n\n    With the addition of Perl attributes, Class::Declare methods can\n    now be written as\n\n    sub method : public { my $self = shift; ... }\n\n    instead of\n\n    sub method { my $self = __PACKAGE__->public( shift ); ... }"
   },
   "meta" : {
      "message_id" : "200306061455.h56EtqHG016421@pause.perl.org",
      "epoch" : 1054911352,
      "from" : "upload@pause.x.perl.org",
      "subject" : "Module submission Class::Declare::Attributes",
      "file" : "21601.txt",
      "type" : "module_submission"
   }
}
