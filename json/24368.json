{
   "data" : {
      "userid" : {
         "name" : "Brad Lhotsky",
         "id" : "BLHOTSKY"
      },
      "description" : "OO Parallel Process Management",
      "communities" : "",
      "chapterid" : {
         "name" : "Operating_System_Interfaces",
         "id" : "4"
      },
      "similar" : "Parallel::ForkManager",
      "DSLIP" : "cdpOp",
      "modid" : "Linux::ForkController",
      "enteredon" : "Wed Nov  5 17:15:43 2003 GMT",
      "enteredby" : {
         "name" : "Brad Lhotsky",
         "id" : "BLHOTSKY"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "I plan on utilizing information contained in the /proc filesystem\n    to allow the module to mediate the child processes based on\n    constraints which may affect over all system performance. The goal\n    of the module is to have a smart parent process that can stop\n    forking processes when the machine comes under heavy load, either\n    from the children, or other external programs. Additionally, it\n    encapsulates the child program in a sub routine, making code look a\n    little cleaner, and slightly more maintainable. As of right now, the\n    code I have can only control the start of processes, eventually, I'd\n    like to extend the module to be able to control children currently\n    running, perhaps enabling the parent process to suspend or terminate\n    children based on the health of the system."
   },
   "meta" : {
      "message_id" : "200311051715.hA5HFhwT012445@pause.perl.org",
      "epoch" : 1068052543,
      "from" : "upload@pause.perl.org",
      "subject" : "Module submission Linux::ForkController",
      "file" : "24368.txt",
      "type" : "module_submission"
   }
}
