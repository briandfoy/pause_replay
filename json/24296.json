{
   "data" : {
      "userid" : {
         "name" : "Kit DeKat",
         "id" : "KITDEKAT"
      },
      "description" : "Multiple Timers for debugging code portions",
      "communities" : "",
      "chapterid" : {
         "name" : "Development_Support",
         "id" : "3"
      },
      "similar" : "Benchmark Benchmark::Timer Time::Stopwatch",
      "DSLIP" : "bdpOp",
      "modid" : "Perf::Stopwatch",
      "enteredon" : "Fri Oct 31 01:05:23 2003 GMT",
      "enteredby" : {
         "name" : "Kit DeKat",
         "id" : "KITDEKAT"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "This was created to be inserted quickly into any script as a\n    reference, since it requires very little modification of the\n    original code that is being developed, and is just as easy to remove\n    when code is put into production. It is not designed for\n    benchmarking or serious calculations since the module code itself is\n    particularly optimized. As an example, a simple loop takes about 5\n    microseconds to just start and stop a batch-type Stopwatch on my\n    test systems.\n\n    There are three types of Stopwatches available; normal, lap, and\n    burst.\n\n    NORMAL has only start() and stop() abilities and getTime() returns\n    the difference between these two times.\n\n    LAP uses start() and lap() to mark intervals in the overall time.\n    This is useful for getting statistics on getMinLap(), getMaxLap(),\n    and average loop times so you can determine best-case, worst-case,\n    and average-runs on sections of code.\n\n    BURST uses the start() and stop() as well, but does not reset the\n    time with every call, but keeps a cumulative time difference. Such\n    as stop1-start1 + stop2-start2 + ... = final. This is useful for\n    measuring a part of the loop without calculating the overall time of\n    the loop, as in NORMAL and LAP, thus allowing you to diagnose which\n    portion of the loop is causing the slowdown."
   },
   "meta" : {
      "message_id" : "200310310105.h9V15OqB021840@pause.perl.org",
      "epoch" : 1067562324,
      "from" : "upload@pause.perl.org",
      "subject" : "Module submission Perf::Stopwatch",
      "file" : "24296.txt",
      "type" : "module_submission"
   }
}
