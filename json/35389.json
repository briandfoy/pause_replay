{
   "data" : {
      "userid" : {
         "name" : "Paul Golds",
         "id" : "MOLT"
      },
      "description" : "Enforces restrictions on variables' contents",
      "communities" : "Perlmonks",
      "chapterid" : {
         "name" : "Data_Type_Utilities",
         "id" : "6"
      },
      "similar" : "",
      "DSLIP" : "adpOp",
      "modid" : "Tie::Assert",
      "enteredon" : "Mon Oct  4 11:07:03 2004 GMT",
      "enteredby" : {
         "name" : "Paul Golds",
         "id" : "MOLT"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "It's something I've not seen done before, using Tie() to guarantee\n    a variable cannot be set to invalid values. It's useful both during\n    development (It was originally build to find where a variable was\n    becoming invalid, it can also be used for logging variable change),\n    and also providing an added level of security to programs.\n\n    The original name was to be Tie::TypeSafe, or Tie::TypeCheck, but a\n    number of the Perlmonks Chatterbox people seemed to think\n    Tie::Assert was a better name, referring to the use of Assert() in\n    C/C++, and also fitting in better with the other *::Assert modules\n    on CPAN."
   },
   "meta" : {
      "message_id" : "200410041107.i94B7Arb030600@pause.perl.org",
      "epoch" : 1096888030,
      "from" : "upload@pause.perl.org",
      "subject" : "Module submission Tie::Assert",
      "file" : "35389.txt",
      "type" : "module_submission"
   }
}
