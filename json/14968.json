{
   "data" : {
      "userid" : {
         "name" : "Jan Krynicky",
         "id" : "JENDA"
      },
      "description" : "simplify creating windows services",
      "communities" : "beginners@perl.org, Perl-Win32-Users@listserv.ActiveState.com",
      "chapterid" : {
         "name" : "Microsoft_Windows_Modules",
         "id" : "22"
      },
      "P.S." : "Maybe it should also be linked from \"16) Server and Daemon",
      "similar" : "Win32::Daemon, PerlSvc",
      "DSLIP" : "bdprp",
      "modid" : "Win32::Daemon::Simple",
      "enteredon" : "Sun Nov  3 22:12:27 2002 GMT",
      "enteredby" : {
         "name" : "Jan Krynicky",
         "id" : "JENDA"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "The module is based on Win32::Daemon. It takes care of the module\n    instalation/deinstalation, storing/fetching parameters from the\n    registry, logging and processing the ServiceManager requests.\n\n    It kind of competes with ActiveState's PerlSvc, but since it's\n    plain Perl it's easier to extend or steal from. The biggest\n    difference is that for PerlSvc you define several EventHandler()s,\n    while with Win32::Daemon::Simple you either define a procedure you\n    want called at specified intervals and call\n    ServiceLoop(\\&theProcedure); or loop yourself and from time to time\n    call DoEvents( \\&PauseHandler, \\&UnpauseHandler, \\&StopHandler) or\n    even combine these two approaches.\n\n    P.S.: Maybe it should also be linked from \"16) Server and Daemon\n    Utilities\""
   },
   "meta" : {
      "message_id" : "200211032212.gA3MCSn16354@pause.perl.org",
      "epoch" : 1036361548,
      "from" : "upload@p11.speed-link.de",
      "subject" : "Module submission Win32::Daemon::Simple",
      "file" : "14968.txt",
      "type" : "module_submission"
   }
}
