{
   "data" : {
      "userid" : {
         "name" : "Stephen D. Wells",
         "id" : "YXES"
      },
      "description" : "regex search/replace in complex data structs",
      "communities" : "",
      "chapterid" : {
         "name" : "Data_Type_Utilities",
         "id" : "6"
      },
      "similar" : "",
      "DSLIP" : "bdphp",
      "modid" : "Data::SearchReplace",
      "enteredon" : "Sat May 31 16:03:35 2003 GMT",
      "enteredby" : {
         "name" : "Stephen D. Wells",
         "id" : "YXES"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "Data::SearchReplace - Working on complex data structures, this pure\n    Perl module peforms search and replace functions for each value\n    within the structure. It is accessible using a simple attribute call\n    such as:\n\n    use Data::SearchReplace qw(sr); sr({SEARCH=>'foo', REPLACE=>'bar'},\n    \\$complex_var);\n\n    or OO...\n\n    $sr = Data::SearchReplace->new( {SEARCH=>'foo',REPLACE=>'bar'});\n    $sr->sr(\\$complex_var);\n\n    You can (of course) pass a full regex as well.\n\n    sr({REGEX => 's/(\\w+).*/$1/g'}, \\$complex_var);\n\n    With the use of templates (ie Template-Toolkit and HTML::Template)\n    on the rise and the fact that they utilize complex data structures\n    the usefulness of such a function goes up dramatically. Many times\n    there are situations where you might to need to escape a character\n    or alter that data just before it is sent to a template module and\n    this function makes it easy to do that in one line."
   },
   "meta" : {
      "message_id" : "200305311603.h4VG3a2Q000499@pause.perl.org",
      "epoch" : 1054397016,
      "from" : "upload@pause.x.perl.org",
      "subject" : "Module submission Data::SearchReplace",
      "file" : "21413.txt",
      "type" : "module_submission"
   }
}
