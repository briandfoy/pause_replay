{
   "data" : {
      "userid" : {
         "name" : "Sean O'Rourke",
         "id" : "SEANO"
      },
      "description" : "some STL data structures",
      "communities" : "",
      "chapterid" : {
         "name" : "Data_Type_Utilities",
         "id" : "6"
      },
      "similar" : "Heap::*, Tree::*",
      "DSLIP" : "ad+Op",
      "modid" : "STL",
      "enteredon" : "Thu May 30 06:57:23 2002 GMT",
      "enteredby" : {
         "name" : "Sean O'Rourke",
         "id" : "SEANO"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "While hashes, arrays, and judicious use of sort cover most cases,\n    sometimes I feel Perl lacks adequate support for sorted containers.\n    The existing Perl versions are too slow (compared to the\n    C-implemented built-ins) to be useful in many common cases. The C++\n    Standard Template Library provides good, standard implementations of\n    red-black trees and priority queues, which I have bound to Perl.\n    With the impending release of Inline::CPP 0.24, it will be possible\n    to build these modules with the generally-available version.\n\n    I'm thinking of putting the module in as STL in the top level,\n    unless someone can think of a better place (Data::STL?\n    Algorithm::STL? blech.)\n\n    /s"
   },
   "meta" : {
      "message_id" : "200205300657.IAA26581@pause.perl.org",
      "epoch" : 1022741846,
      "from" : "upload@p11.speed-link.de",
      "subject" : "Module submission STL",
      "file" : "11900.txt",
      "type" : "module_submission"
   }
}
