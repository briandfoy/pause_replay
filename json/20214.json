{
   "data" : {
      "userid" : {
         "name" : "David James",
         "id" : "SPLICE"
      },
      "description" : "Export class methods as regular subroutines",
      "communities" : "Mailinglists",
      "chapterid" : {
         "name" : "Data_Type_Utilities",
         "id" : "6"
      },
      "similar" : "Exporter::Lite",
      "DSLIP" : "Rdphp",
      "modid" : "Object::Exporter",
      "enteredon" : "Sat Apr  5 21:05:04 2003 GMT",
      "enteredby" : {
         "name" : "David James",
         "id" : "SPLICE"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "This package allows you to export object methods as regular\n    subroutines. It supports C<import()>, C<@EXPORT> and C<@EXPORT_OK>\n    and not a whole lot else. Each package into which your object\n    methods are imported gets its own instance of the object. This\n    ensures that there are no interaction effects between multiple\n    packages that use your object.\n\n    This module makes it much easier to set up a hybrid interface ala\n    CGI.pm. You can take any old module that has an object-oriented\n    interface and convert it to have a hybrid interface by simply adding\n    \"use base 'Object::Exporter'\" to your code.\n\n    Here's the SYNOPSIS: package MagicNumber; use base\n    'Object::Exporter';\n\n    # Export object-oriented methods! @EXPORT_OK = qw(magic_number);\n\n    sub new { my $class = shift; bless { magic_number=>3, @_ }, $class\n    } sub magic_number { my $self = shift; @_ and $self->{magic_number}\n    = shift; $self->{magic_number} }\n\n    # Meanwhile, in another piece of code! package Bar; use\n    MagicNumber; # exports magic_number print magic_number; # prints 3\n    magic_number(7); print magic_number; # prints 7 # Each package gets\n    its own instance of the object. This ensures that # two packages\n    both using your module via import semantics don't mess # with each\n    other. package Baz; use MagicNumber; # exports magic_number print\n    magic_number; # prints 3!\n\n    Most of the code and documentation was borrowed from\n    Exporter::Lite. Exporter::Lite was written by Michael G Schwern\n    <schwern@pobox.com>"
   },
   "meta" : {
      "message_id" : "200304052105.h35L54Sm003058@pause.perl.org",
      "epoch" : 1049576704,
      "from" : "upload@pause.x.perl.org",
      "subject" : "Module submission Object::Exporter",
      "file" : "20214.txt",
      "type" : "module_submission"
   }
}
