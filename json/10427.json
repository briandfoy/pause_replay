{
   "data" : {
      "userid" : {
         "name" : "Dan Goldwater",
         "id" : "DGOLD"
      },
      "description" : "Reliable subprocess management, many options",
      "communities" : "",
      "chapterid" : {
         "name" : "Operating_System_Interfaces",
         "id" : "4"
      },
      "similar" : "Proc::Short",
      "DSLIP" : "RdpOp",
      "modid" : "Proc::Reliable",
      "enteredon" : "Thu Feb 28 21:54:20 2002 GMT",
      "enteredby" : {
         "name" : "Dan Goldwater",
         "id" : "DGOLD"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "The core functionality of Proc::Reliable is to execute subprocesses\n    with a timeout and configurable termination conditions, while\n    collecting all output produced by the subprocess. When writing\n    high-reliability software, it is essential to have this\n    functionality when running subprocesses in order to manage 'problem'\n    subprocesses which are likely to fail, hang or behave badly. <p>\n    Proc::Reliable implements a convenient and easy-to-use interface\n    which includes all the functionality of the backticks operator and\n    system() functions, plus many common uses of fork() and exec(),\n    open2() and open3(). Proc::Reliable incorporates a number of\n    options, including sending data to the subprocess on STDIN,\n    collecting STDOUT and STDERR separately or together, killing hung\n    processes, timouts and automatic retries. <p> Proc::Reliable module\n    is an enhancement and rewrite of the well-intentioned but not well\n    implemented Proc::Short. <p> Thanks! <p>\n    http://www.zblob.com/software/proc_reliable_docs.html <p>\n    dgold@zblob.com <p>"
   },
   "meta" : {
      "message_id" : "200202282154.WAA06925@pause.perl.org",
      "epoch" : 1014933263,
      "from" : "upload@p11.speed-link.de",
      "subject" : "Module submission Proc::Reliable",
      "file" : "10427.txt",
      "type" : "module_submission"
   }
}
