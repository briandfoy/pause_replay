{
   "data" : {
      "userid" : {
         "name" : "Miko O'Sullivan",
         "id" : "MIKO"
      },
      "description" : "Prefer case-sensitive allow case-insensitive",
      "communities" : "",
      "chapterid" : {
         "name" : "Data_Type_Utilities",
         "id" : "6"
      },
      "similar" : "",
      "DSLIP" : "bdprp",
      "modid" : "Tie::CsPrefHash",
      "enteredon" : "Mon Aug 12 22:07:09 2002 GMT",
      "enteredby" : {
         "name" : "Miko O'Sullivan",
         "id" : "MIKO"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "NAME\n\n    Tie::CsPrefHash - Prefers case-sensitive, allows case-insensitive\n\n    SYNOPSIS use Tie::CsPrefHash; my (%hash);\n\n    tie %hash, 'Tie::CsPrefHash';\n\n    # put several elements in using # different case variations of\n    \"Fred\" $hash{'Fred'} = 'Title'; $hash{'fred'} = 'lower';\n    $hash{'FRED'} = 'UPPER';\n\n    # output \"UPPER\" print 'FRED: ', $hash{'FRED'}, \"\\n\";\n\n    # output one of the Fred variations # no promises on which one\n    print 'frED: ', $hash{'frED'}, \"\\n\";\n\n    # output all three elements while (my($key, $val) = each(%hash))\n    {print $key, ': ', $val, \"\\n\"}\n\n    DESCRIPTION\n\n    Tie::CsPrefHash creates a hash that compromises between\n    case-sensitive and case-insensitive. In most regards, CsPrefHash\n    creates a normal hash: elements are stored using case-sensitive\n    keys. If you put an element in and pull it back out using exactly\n    the same key, you'll get exactly the same value. Keys that are\n    different only in their upper/lowercase configuration are still\n    considered different keys.\n\n    Where Tie::CsPrefHash is different than regular hashes is that if\n    an element is requested using a key that does not exist\n    case-sensitively but does exist case-insensitively, then the\n    existing element is returned. If more than one element matches on a\n    case-insensitive basis, then one of them is arbitrarily chosen and\n    returned."
   },
   "meta" : {
      "message_id" : "200208122207.g7CM79r16743@pause.perl.org",
      "epoch" : 1029190029,
      "from" : "upload@p11.speed-link.de",
      "subject" : "Module submission Tie::CsPrefHash",
      "file" : "13170.txt",
      "type" : "module_submission"
   }
}
