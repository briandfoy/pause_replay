{
   "data" : {
      "userid" : {
         "name" : "Brian Koontz",
         "id" : "BAK"
      },
      "description" : "Run-time INI file searching and caching",
      "supported" : "A global name (currently global.ini) and name based upon",
      "communities" : "Personal correspondence",
      "chapterid" : {
         "name" : "Perl_Core_Modules",
         "id" : "2"
      },
      "similar" : "Config::IniHash (no search capability)",
      "DSLIP" : "adpOp",
      "modid" : "Config::IniSearch",
      "enteredon" : "Thu Jun 26 08:34:34 2003 GMT",
      "enteredby" : {
         "name" : "Brian Koontz",
         "id" : "BAK"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "This module is intended as a \"wrapper\" module for Config::IniHash\n    to allow for run-time searching of INI files. This functionality\n    allows \"local\" INI files to temporarily take precedence over\n    \"global\" INI files, at the discretion of the script user. Three\n    levels of search precedence are currently supported: cwd, script\n    basedir, and /etc. In addition, two naming conventions are\n    supported: A global name (currently global.ini) and name based upon\n    INI section.\n\n    For example, a script named foobar.pl would have an associated ini\n    section called \"foobar\". At runtime, the following search sequence\n    would be performed to load the most \"local\" INI file:\n\n    cwd/foobar.ini <most local> cwd/global.ini basedir/foobar.ini\n    basedir/global.ini /etc/foobar.ini /etc/global.ini <most global>\n\n    This would allow the overriding of \"more global\" INI params with\n    \"more local\" params at runtime, without the need to modify\n    system-wide INI params."
   },
   "meta" : {
      "message_id" : "200306260834.h5Q8YYjG004059@pause.perl.org",
      "epoch" : 1056616474,
      "from" : "upload@pause.x.perl.org",
      "subject" : "Module submission Config::IniSearch",
      "file" : "22051.txt",
      "type" : "module_submission"
   }
}
