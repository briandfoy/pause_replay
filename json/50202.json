{
   "data" : {
      "userid" : {
         "name" : "Ĝan Ŭesli Starling",
         "id" : "APLONIS"
      },
      "description" : "Generate EPS and PNG graphs",
      "communities" : "",
      "chapterid" : {
         "name" : "Images_Pixmaps_Bitmaps",
         "id" : "18"
      },
      "similar" : "GD::Graph",
      "DSLIP" : "RdpOp",
      "modid" : "Chart::EPSgraph",
      "enteredon" : "Tue Aug  8 00:39:00 2006 GMT",
      "enteredby" : {
         "name" : "Ĝan Ŭesli Starling",
         "id" : "APLONIS"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "This is to be my first CPAN module. I think I'm asking for the\n    right thing.\n\n    I read in the docs that Larry says a module does not have to\n    inherit from above. My EPSgraph.pm will not inherit from CHART:: but\n    it should be comfortable hanging out with the other offerings\n    domeciled there.\n\n    My module (heretofore privately named GUS::PSGraph.pm) I am\n    proposing to upload as CHART::EPSgraph. That is to say I think my\n    module would be best re-named EPSgraph.pm and housed under the\n    CHART::* heirarchy.\n\n    It seemed to me that all the Graph::* modules were by the same\n    author and inter-related whereas many a Chart::* module were\n    standalone. My own module is standalone.\n\n    My module writes very pretty XY and XYY graphs from data, and does\n    a prettier job of XYY (currrently, anyway) than does GD::Graph\n    (which often mangles the Y2 tickmarks).\n\n    My module is really just a re-work of a PostScript program I wrote\n    back in 1992. When I couldn't get GD::Graph to do XYY graphs how I\n    liked, I dragged out my old PostScript program, hacked it appart,\n    and married the pieces to Perl. Perl is the interface and the EPS\n    bits are stored in strings. Perl pieces an EPS together out of these\n    strings and embeding the data directly into the EPS.\n\n    In addition I put in a method which interfaces with Ghostscript\n    and/or GV to display the resulting EPS graph and to even export a\n    newly written EPS file to PNG (via Ghostscript).\n\n    I have tested it several different ways on both NetBSD and WinXP."
   },
   "meta" : {
      "message_id" : "200608080039.k780d1Tc018595@pause.perl.org",
      "epoch" : 1154997541,
      "from" : "upload@pause.perl.org",
      "subject" : "Module submission Chart::EPSgraph",
      "file" : "50202.txt",
      "type" : "module_submission"
   }
}
