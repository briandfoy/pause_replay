{
   "data" : {
      "userid" : {
         "name" : "Josh Rabinowitz",
         "id" : "JOSHR"
      },
      "description" : "Configurable sleep and priority access.",
      "appropriate" : "at its core this module makes use of time() and",
      "communities" : "personal mailing lists, friends",
      "chapterid" : {
         "name" : "Operating_System_Interfaces",
         "id" : "4"
      },
      "similar" : "Time::HiRes",
      "DSLIP" : "bmpfp",
      "modid" : "Proc::NiceSleep",
      "enteredon" : "Tue Feb 19 19:11:20 2002 GMT",
      "enteredby" : {
         "name" : "Josh Rabinowitz",
         "id" : "JOSHR"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "There are times when being 'nice' isn't enough -- in some\n    situations that might not yield the system as much as you want. This\n    perl module is a rewrite of some code used to keep a long-running\n    script from slamming a server.\n\n    Simple system priorities may not yield the system enough when the\n    real system hog is a behind-the-scenes database (perhaps from\n    inefficient database queries). In my experience this might occur\n    when the program is prone to bottleneck at the disk -- perhaps\n    because of extensive random seeks, or because the program trying to\n    write to the file system faster than the disk can handle, or for\n    many other reasons.\n\n    This perl module allows a flexible and easy-to-understand mechanism\n    to have a process 'sleep' in a configurable and judicious manner, so\n    as to allow other processes less-obstructed use of the system.\n\n    As written, this module attempts to load Time::HiRes, and uses that\n    module's time() and sleep() replacements whereever possible. This\n    module is _not_ dependent on Time::HiRes. I had originally intended\n    to call this module Time::SmartSleep but decided that the current\n    proposed name (Proc::NiceSleep) was more descriptive and\n    appropriate: at its core this module makes use of time() and\n    sleep()-like behavior heavily. It additionally provides an easy,\n    fault-tolerant setpriority() wrapper called nice(). I believe that\n    this module should be included in the module list because it offers\n    a simple, well understood and tolerant wrapper to setpriority()\n    (called nice()), because it will, if used appropriately, contribute\n    to the more gentle operation of perl scripts on computers all across\n    the land, and because it offers an easy way to retro-fit an existing\n    loop-based script to use sleep() in a quasi-intelligent and, (if\n    Time::HiRes is loaded and supports it), fine-grained manner.\n\n    In the spirit of release early, release often, the current beta\n    version can be found at http://cpan.perl.org/authors/id/J/JO/JOSHR/\n    .\n\n    I look forward to hearing comments about the API, namespace use, or\n    features the module should or shouldn't have. Thanks in advance,\n    Josh 'joshr' Rabinowitz a"
   },
   "meta" : {
      "message_id" : "200202191911.UAA08264@pause.perl.org",
      "epoch" : 1014145881,
      "from" : "upload@p11.speed-link.de",
      "subject" : "Module submission Proc::NiceSleep",
      "file" : "10281.txt",
      "type" : "module_submission"
   }
}
