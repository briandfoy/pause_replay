{
   "data" : {
      "userid" : {
         "name" : "Eric J. Roode",
         "id" : "ROODE"
      },
      "description" : "Create read-only scalars, arrays, hashes.",
      "communities" : "RPI lily",
      "chapterid" : {
         "name" : "Perl_Core_Modules",
         "id" : "2"
      },
      "similar" : "constant.pm",
      "DSLIP" : "bdprp",
      "modid" : "Readonly",
      "enteredon" : "Fri Mar 15 18:44:36 2002 GMT",
      "enteredby" : {
         "name" : "Eric J. Roode",
         "id" : "ROODE"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "The built-in \"use constant\" pragma creates only scalars and lists;\n    creates variables that have no leading $ or @ characters; creates\n    only global variables. The variables it creates cannot be used as\n    perl variable work-alikes in many ways (cannot be interpolated into\n    strings; cannot take a reference to them). Also, it works only at\n    compile time.\n\n    Readonly.pm, by contrast, creates scalars, arrays, and hashes;\n    these can be global or lexical; can be initialized at runtime; can\n    be used as any other perl variables (except that they cannot be\n    modified).\n\n    Readonly.pm uses tied variables, so there is a performance penalty\n    as compared to \"use constant,\" but I believe it makes a useful\n    complement to the pragma."
   },
   "meta" : {
      "message_id" : "200203151844.TAA17837@pause.perl.org",
      "epoch" : 1016217877,
      "from" : "upload@p11.speed-link.de",
      "subject" : "Module submission Readonly",
      "file" : "10654.txt",
      "type" : "module_submission"
   }
}
