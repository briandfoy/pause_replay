{
   "data" : {
      "userid" : {
         "name" : "Stanisław Klekot",
         "id" : "DOZZIE"
      },
      "description" : "structured messages that stringify to JSON",
      "communities" : "comp.lang.perl.modules",
      "chapterid" : {
         "name" : "Data_Type_Utilities",
         "id" : "6"
      },
      "similar" : "Log::Message::Structured",
      "DSLIP" : "Rdphp",
      "modid" : "Log::Message::JSON",
      "enteredon" : "Sat Dec 29 00:51:40 2012 GMT",
      "enteredby" : {
         "name" : "Stanisław Klekot",
         "id" : "DOZZIE"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "Log::Message::JSON is a container that used in string context\n    instantly converts itself to JSON document, while can be used as\n    normal hash(ref) at the same time.\n\n    Main use for such a container is to feed with a single log message\n    (the message contains an internal structure, i.e. fields with\n    values) different appenders in Log::Log4perl framework: ones that\n    operate on strings (e.g. flat file output) and ones that operate on\n    a structured message (e.g. Fluentd, logstash or GELF/Graylog2\n    output).\n\n    As an additional profit, flat-string logs get better parseability\n    when events were created with this module.\n\n    Compared to Log::Message::Structured, this module has much less\n    dependencies and requires no preparation (like creating own\n    subclass) before using."
   },
   "meta" : {
      "message_id" : "201212290051.qBT0peVs010113@pause.fiz-chemie.de",
      "epoch" : 1356742300,
      "from" : "upload@pause.perl.org",
      "subject" : "Module submission Log::Message::JSON",
      "file" : "83945.txt",
      "type" : "module_submission"
   }
}
