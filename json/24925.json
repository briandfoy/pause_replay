{
   "data" : {
      "userid" : {
         "name" : "John Millaway",
         "id" : "MILLAWAY"
      },
      "description" : "Treat a scalar as a ring buffer iterator.",
      "communities" : "",
      "chapterid" : {
         "name" : "Data_Type_Utilities",
         "id" : "6"
      },
      "similar" : "Tie::Array::Iterable",
      "DSLIP" : "bdprp",
      "modid" : "Tie::Scalar::RingBuffer",
      "enteredon" : "Mon Dec  8 19:38:54 2003 GMT",
      "enteredby" : {
         "name" : "John Millaway",
         "id" : "MILLAWAY"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "The interface for this module is much simpler than the C++ style OO\n    interator interface of Tie::Array::Iterable, which is not designed\n    for ring buffers anyway.\n\n    With this module, you don't have to call methods on the iterator,\n    like $iterator->next() -- you just access the $iterator itself or\n    assign to the $iterator.\n\n    I've found it useful for endlessly, and carelessly cycling through\n    elements of a set, such as CSS classes for alternating the shading\n    of rows in an HTML table:\n\n    <tr class=\"$row_shade\"> ... </tr> <tr class=\"$row_shade\"> ... </tr>\n    <tr class=\"$row_shade\"> ... </tr>"
   },
   "meta" : {
      "message_id" : "200312081938.hB8JctNC018813@pause.perl.org",
      "epoch" : 1070912335,
      "from" : "upload@pause.perl.org",
      "subject" : "Module submission Tie::Scalar::RingBuffer",
      "file" : "24925.txt",
      "type" : "module_submission"
   }
}
