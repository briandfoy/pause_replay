{
   "data" : {
      "homepage" : "www.redhawk.org,gwc.sourceforge.net",
      "userid" : "WELTYJJ",
      "fullname" : "Jeffrey J. Welty",
      "why" : "There is a simple music format, called ABC. It lets you enter text\n    very simply in a simple ASCII format. There are numerous renderers\n    to convert the ascii to publishable quality postcript. See:\n\n    http://www.gre.ac.uk/~walshaw/abc/index.html\n\n    for more details.\n\n    I built a website with a perl frontend that parses out those ABC\n    song files, so there is a nice user interface:\n\n    http://www2.redhawk.org/irish/index.pl -- While at Tom\n    Christianson's Intermediate Perl course, I showed the instructor\n    (paul@kooros.com) the site, and he encouraged me to develop perl\n    modules for the ABC music archive files.\n\n    And so here I am. I propose 2 perl modules (which I have up and\n    running, mostly POD-ed.\n\n    Music::ABC::Song -- object oriented module to encapsulate\n    information for a song.\n\n    Music::ABC::Archive -- object oriented module which handled the\n    archive files themselves, dependent on Music::ABC::Song.\n\n    These 2 modules provide \"read-only\" access to ABC archive files.\n    There are a couple of places where I need to tighten up the error\n    trapping, but the modules are 95% complete.\n\n    I eventually plan to write a Music::ABC::Render module, but that\n    depends on an external C program, and it will have to wait :-)\n\n    Cheers, Jeff Welty",
      "mail" : "CENSORED"
   },
   "meta" : {
      "message_id" : "200310091744.h99HiTbx008793@pause.perl.org",
      "epoch" : 1065721469,
      "from" : "upload@pause.perl.org",
      "subject" : "PAUSE ID request (WELTYJJ; Jeffrey J. Welty)",
      "file" : "23934.txt",
      "type" : "pause_id_request"
   }
}
