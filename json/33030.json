{
   "data" : {
      "homepage" : "",
      "userid" : "GNG",
      "fullname" : "Greg George",
      "why" : "I have two modules to contribute. The first is File::Log. This is a\n    module that I have been using for quite a while now and have not\n    been able to find another module that does quite what this one\n    allows. Here is some of the POD\n\n    NAME Log - A simple Object Orientated Logger\n\n    SYNOPSIS use Log;\n\n    # With all the arguments my $log = Log->new({ debug => 4, # Set the\n    debug level logFileName => 'myLogFile.log', # define the log\n    filename logFileMode => '>', # '>>' Append or '>' overwrite\n    dateTimeStamp => 1, # Timestamp log data entries stderrRedirect =>\n    1, # Redirect STDERR to the log file defaultFile => 1, # Use the log\n    file as the default filehandle logFileDateTime => 1, # Timestamp the\n    log filename appName => 'myApplicationName', # The name of the\n    application PIDstamp => 1, # Stamp the log data with the Process ID\n    storeExpText => 1, # Store internally all exp text });\n\n    # Or with the bare minimum my $log = Log->new();\n\n    # Log this message if debug is 2 or greater $log->msg(2, \"Add this\n    to the log file if debug >= 2 \\n\");\n\n    # Log an exception (ie error) $log->exp(\"Something went wrong\\n\");\n\n    $log->close();\n\n    $oldDebugValue = $log->debugValue($newDebugValue);\n    $currentDebugValue = $log->debugValue();\n\n    $allExceptions = $log->getExpText(); $numberErrors =\n    $log->expCnt(); # How many times has $log->exp been called\n\n    The second module is is SAP::DIME which is used to generate DIME\n    Excel spreadsheets for loading into SAP using the DIME utility",
      "mail" : "CENSORED"
   },
   "meta" : {
      "message_id" : "200406190720.i5J7Kg4E027064@pause.perl.org",
      "epoch" : 1087629642,
      "from" : "upload@pause.perl.org",
      "subject" : "PAUSE ID request (GNG; Greg George)",
      "file" : "33030.txt",
      "type" : "pause_id_request"
   }
}
