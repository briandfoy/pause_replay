{
   "data" : {
      "userid" : {
         "name" : "William G. Davis",
         "id" : "WGDAVIS"
      },
      "description" : "The Perl RTSP client API",
      "communities" : "perlmonks.com",
      "chapterid" : {
         "name" : "Networking_Devices_IPC",
         "id" : "5"
      },
      "similar" : "RTSP::Lite",
      "DSLIP" : "adpOg",
      "modid" : "Net::RTSP",
      "enteredon" : "Fri Apr 23 00:24:47 2004 GMT",
      "enteredby" : {
         "name" : "William G. Davis",
         "id" : "WGDAVIS"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "RTSP is the Real Time Streaming Protocol (RFC 2326). The Real Time\n    Streaming Protocol is a text-based client/server protocol used to\n    control the delivery of real-time streams (delivered via another\n    transport protocol). It's used by applications such as RealPlayer\n    and Windows Media Player to play, pause, and otherwise manage\n    streaming audio and video.\n\n    Net::RTSP will *fully* implement the client-side of the Real Time\n    Streaming Protocol, and it will do so with a powerful, flexible, and\n    optionally simple, OO interface. It has classes to manipulate RTSP\n    requests, responses, and sessions, for example.\n\n    At the moment, the only other module I could find that supports\n    RTSP is RTSP::Lite. As the name implies, it provides only a partial\n    implementation of the protocol. It's really just a slightly modified\n    HTTP::Lite.\n\n    A true RTSP implementation has to support:\n\n    1) Bidirectional communication.\n\n    RTSP allows servers to make requests of the client, so a procedural\n    connect->write->read->disconnect interface often wont suffice.\n\n    2) Communication via TCP as well as UDP.\n\n    RTSP maintains state using session IDs and ensures proper message\n    ordering using sequence numbers, so UDP alternately be used instead\n    of TCP for added performance.\n\n    3) Multiple simultaneous connections.\n\n    It's not uncommon to have one RTSP session handle a video stream\n    and another handle an accompanying audio stream, so multiple\n    connections are a must\n\n    RTSP::Lite supports none of those, but Net::RTSP will. Net::RTSP\n    offers both a simple, linear OO interface (connecting, then sending\n    a request, then receiving a response, etc.) or an asynchronous OO\n    interface that's completely event-driven, implemented using an event\n    loop and select()."
   },
   "meta" : {
      "message_id" : "200404230024.i3N0OmqJ015142@pause.perl.org",
      "epoch" : 1082679888,
      "from" : "upload@pause.perl.org",
      "subject" : "Module submission Net::RTSP",
      "file" : "31094.txt",
      "type" : "module_submission"
   }
}
