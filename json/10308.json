{
   "data" : {
      "userid" : {
         "name" : "Thomas Klausner",
         "id" : "DOMM"
      },
      "description" : "Translucent Inheritable Nonpollut ClassData",
      "communities" : "vienna perl mongers, privat mail to Michael G. Schwern",
      "chapterid" : {
         "name" : "Data_Type_Utilities",
         "id" : "6"
      },
      "similar" : "Class::Data::Inheritable",
      "DSLIP" : "bdphp",
      "modid" : "Class::Data::TIN",
      "enteredon" : "Fri Feb 22 11:21:27 2002 GMT",
      "enteredby" : {
         "name" : "Thomas Klausner",
         "id" : "DOMM"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "Class::Data::Inheritable generates a lot of accessor methods in\n    your namespace.\n\n    Class::Data::TIN works around this \"problem\" by storing the Class\n    Data in its own namespace (mirroring the namespace and @ISA\n    hierarchies of the modules using it) and supplying the using\n    packages with (at this time) three meta-accessors called\n    C<get_classdata> (or just C<get>), C<set_classdata> (C<set>) and\n    C<append_classdata> (C<append>). It achieves this with some black\n    magic (namespace munging & evaling).\n\n    You can preview it at:\n    http://domm.zsi.at/source_code/modules/Class-Data-TIN-0.02.tar.gz"
   },
   "meta" : {
      "message_id" : "200202221121.MAA10800@pause.perl.org",
      "epoch" : 1014376888,
      "from" : "upload@p11.speed-link.de",
      "subject" : "Module submission Class::Data::TIN",
      "file" : "10308.txt",
      "type" : "module_submission"
   }
}
