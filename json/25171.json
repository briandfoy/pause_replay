{
   "data" : {
      "userid" : {
         "name" : "Dr. James Freeman",
         "id" : "JFREEMAN"
      },
      "description" : "32 bit int hashing using Jenkins Algorithm",
      "communities" : "",
      "chapterid" : {
         "name" : "Security_and_Encryption",
         "id" : "14"
      },
      "similar" : "Digest::Foo-Bar-Baz",
      "DSLIP" : "Rdcfp",
      "modid" : "Digest::JHash",
      "enteredon" : "Sat Dec 20 03:59:48 2003 GMT",
      "enteredby" : {
         "name" : "Dr. James Freeman",
         "id" : "JFREEMAN"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "Although MD5 and co are of course very good and fast hashing\n    algorithms, from time to time a shorter hash may be appropriate. The\n    Jenkins hash fills this niche and shows very good dispersion within\n    its range - 32 bits (unsigned int)\n\n    It is implemented in C with an XS interface and is about 2-3 times\n    faster than using say Digest::MD5 with substr or unpack to get a 32\n    bit hash.\n\n    Here is a link to the algorithm details:\n\n    http://burtleburtle.net/bob/hash/doobs.html\n\n    There is an extensive discussion there of the merits of various\n    algorithms in different situations including this one."
   },
   "meta" : {
      "message_id" : "200312200359.hBK3xmKs016608@pause.perl.org",
      "epoch" : 1071892788,
      "from" : "upload@pause.perl.org",
      "subject" : "Module submission Digest::JHash",
      "file" : "25171.txt",
      "type" : "module_submission"
   }
}
