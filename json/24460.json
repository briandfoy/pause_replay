{
   "data" : {
      "userid" : {
         "name" : "Leo Cacciari",
         "id" : "HOBBIT"
      },
      "description" : "Add regex parsed input to filehandles",
      "communities" : "mongers@perl.it (italian language) and the clpm newsgroup",
      "chapterid" : {
         "name" : "File_Handle_Input_Output",
         "id" : "21"
      },
      "similar" : "Parse::Lex, Parse::Flex",
      "DSLIP" : "adphp",
      "modid" : "IO::Tokenized",
      "enteredon" : "Mon Nov 10 13:00:06 2003 GMT",
      "enteredby" : {
         "name" : "Leo Cacciari",
         "id" : "HOBBIT"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "Lexical analysis, which is a fundamental step in all parsing,\n    mainly consists in decomposing an input stream into smal chunks\n    called tokens. The tokens are in turn defined by regular\n    expressions.\n\n    As Perl is good at handling regular expressions, one should expects\n    that writing lexical analyser in Perl should be easy. In truth it is\n    not, and tools like lex or flex are even been ported to Perl. There\n    are also a whole lot of ad-hoc lexers for different parsing\n    modules/programmes.\n\n    Now, approaches to lexical analysis like those underlying\n    Parse::Lex and Parse::Flex are general but fairly complexes to use,\n    while ad-hoc solutions are obviously, well... ad-hoc.\n\n    What I'd always sought was a way to tell to a file handle: \"well,\n    that is how the chunks I'm interested are. Please, found them in\n    your input stream\". It seems a simple thingh enough, but I could not\n    found a module doing it.\n\n    IO::Tokenized and its compagnon IO::Tokenized::File are the result\n    of my attempt to produce such a module."
   },
   "meta" : {
      "message_id" : "200311101300.hAAD073p022067@pause.perl.org",
      "epoch" : 1068469207,
      "from" : "upload@pause.perl.org",
      "subject" : "Module submission IO::Tokenized",
      "file" : "24460.txt",
      "type" : "module_submission"
   }
}
