{
   "data" : {
      "userid" : {
         "name" : "Rohit Mishra",
         "id" : "ROHITM"
      },
      "description" : "Get info on Verilog design",
      "communities" : "Mailinglists,newsgroups",
      "chapterid" : {
         "name" : "Language_Interfaces",
         "id" : "9"
      },
      "similar" : "Verilog::Parser Verilog::Netlist",
      "DSLIP" : "cdpOp",
      "modid" : "Verilog::GetInfo",
      "enteredon" : "Wed Dec  8 08:15:09 2004 GMT",
      "enteredby" : {
         "name" : "Rohit Mishra",
         "id" : "ROHITM"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "This module is a very effective database generator for a hardware\n    design written in Verilog HDL ( IEEE 1364 ).\n\n    Unlike other similar perl modules this module is capable of\n    reading/parsing/processing more than one verilog file at a time.\n    While parsing the design files it creates an extremely rich\n    database, with all the information about the whole design. It\n    creates the design hierarchy by itself, including information about\n    each level of each of the verilog modules present in the design.\n\n    Apart from the design files, this module is capable of parsing the\n    verilog standard cells library models. It supports verilog like \"-y\"\n    option to specify the library directory to be \"cached\".\n\n    A very robust `ifdef...`else...`endif ( including nested `ifdefs )\n    parsing is supported to incorporate the run time parsing of the\n    options. Run time parsing of `define and `include is also supported\n    for compatibility with any standard Verilog HDL compiler.\n\n    Most of the standard verilog options are supported e.g -f, +incdir+\n    etc.\n\n    After parsing the verilog file list, the module returns a handle to\n    the database hash. Commonly used information e.g port list,\n    input/output list etc. can be retrived using the handle to the\n    database simply by calling a method e.g\n\n    @portlist = $handle->Getports( $module );\n\n    This module can be very usefull for chip netlist integration\n    purposes and for debugging a design with a huge database."
   },
   "meta" : {
      "message_id" : "200412080815.iB88FK0W026395@pause.perl.org",
      "epoch" : 1102493721,
      "from" : "upload@pause.perl.org",
      "subject" : "Module submission Verilog::GetInfo",
      "file" : "36933.txt",
      "type" : "module_submission"
   }
}
