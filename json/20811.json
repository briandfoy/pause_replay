{
   "data" : {
      "userid" : {
         "name" : "Wilhelm Haager",
         "id" : "WIHAA"
      },
      "description" : "Creation of Encapsulated Postscript images",
      "communities" : "",
      "chapterid" : {
         "name" : "Images_Pixmaps_Bitmaps",
         "id" : "18"
      },
      "similar" : "similar to GD, but produces images as vector graphics",
      "DSLIP" : "RdpOp",
      "modid" : "EPS",
      "enteredon" : "Thu May  1 12:48:09 2003 GMT",
      "enteredby" : {
         "name" : "Wilhelm Haager",
         "id" : "WIHAA"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "The package EPS, which allows the easy generation of Encapsulated\n    Postscript images, is intended to be a base package for other\n    packages like XYplot (which is currently under development) which\n    generates various kinds of plots consisting of lines, various\n    symbols, bars etc. For that reason the proposal for a root-level\n    namespace. (As EPS always produces ENCAPSULATED Postscript Files, it\n    would not suite very well into the Postscript-namespace).\n\n    EPS (which is object oriented) has not only a similar functionality\n    like GD or Image::Magick (drawing of lines, shapes, text, color\n    gradients); beyond that, it can be used as a very general interface\n    to the Postscript language: all Postscript commands can be performed\n    as an object-method (via AUTOLOAD).\n\n    Contrary to GD and Image::Magick, EPS produces vector graphics,\n    which can easily be translated into PDF-Files (using epstopdf)."
   },
   "meta" : {
      "message_id" : "200305011248.h41CmAd6008718@pause.perl.org",
      "epoch" : 1051793290,
      "from" : "upload@pause.x.perl.org",
      "subject" : "Module submission EPS",
      "file" : "20811.txt",
      "type" : "module_submission"
   }
}
