{
   "data" : {
      "userid" : {
         "name" : "Kwindla Hultman Kramer",
         "id" : "KWINDLA"
      },
      "description" : "Toolkit for managing large \"doc\" collections",
      "communities" : "comma@xml-comma.org, perlmonks",
      "chapterid" : {
         "name" : "String_Lang_Text_Proc",
         "id" : "11"
      },
      "similar" : "SPOPS Alzabo XML::Parser XML::Simple Axkit Bricolage",
      "DSLIP" : "RmpOg",
      "modid" : "XML::Comma",
      "enteredon" : "Wed Apr  3 20:15:37 2002 GMT",
      "enteredby" : {
         "name" : "Kwindla Hultman Kramer",
         "id" : "KWINDLA"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "XML::Comma provides abstractions for manipulating collections of\n    structured documents, and generally is configured to use XML as its\n    normative storage format. Several large websites\n    (http://www.democrats.org, http://allafrica.com) use XML::Comma as a\n    back-end platform, managing information such as user profiles,\n    article and photo archives, mailing list data and threaded\n    discussion posts.\n\n    XML::Comma is GPL'ed, and we'd like to make it available on CPAN.\n    We chose the XML::Comma name based on the \"concrete category +\n    abstract emotive name\" pattern, somewhat influenced by HTML::Mason\n    (which Comma was originally written to sit \"under.\")\n\n    Comma functionality overlaps with that of many other modules. Comma\n    is, in part, a framework for treating perl objects as persistent,\n    searchable, indexable things, so we're fellow travelers with\n    object-persistence modules such as SPOPS and Alzabo (and watch their\n    development with great interest). Because XML manipulation is so\n    important to Comma, some of the other XML-family modules are\n    frequently used in conjunction with the platform. Comma comes with\n    two parsers of its own (one in pure perl, one in Inline'd C), and\n    can also be configured to use XML::Parser. Finally, Comma is very\n    often used as an \"Application Server\" in a web development context.\n    Other app server and content management systems -- such as Axkit and\n    Bricolage -- are different takes on solving some of the same\n    problems.\n\n    The complete XML::Comma distribution totals roughly 10,000 lines of\n    code, mostly Perl with a few optional Inline::C extensions.\n\n    This is the third time I've submitted this request for the\n    XML::Comma namespace (first in late January, then again in late\n    February). I did not hear back either of the previous times. I\n    apologize for the re-submission -- please let me know if I'm going\n    about this the wrong way.\n\n    Documentation (and download) of XML::Comma is available from\n    http://xml-comma.org\n\n    Kwindla"
   },
   "meta" : {
      "message_id" : "200204032015.WAA05621@pause.perl.org",
      "epoch" : 1017864938,
      "from" : "upload@p11.speed-link.de",
      "subject" : "Module submission XML::Comma",
      "file" : "11000.txt",
      "type" : "module_submission"
   }
}
