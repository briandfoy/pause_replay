{
   "data" : {
      "userid" : {
         "name" : "עידו רוזן (Ido Rosen",
         "id" : "IDO"
      },
      "description" : "For automated handling of sensitive data.",
      "communities" : "",
      "chapterid" : {
         "name" : "Security_and_Encryption",
         "id" : "14"
      },
      "similar" : "Tie::EncryptedHash",
      "DSLIP" : "cdpOp",
      "modid" : "Crypt::ProtectedString",
      "enteredon" : "Sun Sep 24 20:09:42 2006 GMT",
      "enteredby" : {
         "name" : "עידו רוזן (Ido Rosen",
         "id" : "IDO"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "Steve Friedl's \"A Proposal for Secure Storage of Credit Card Data\"\n    sparked this idea. (Available here for your viewing pleasure:\n    http://www.unixwiz.net/techtips/secure-cc.html ). His idea seemed to\n    be the only actually secure one, and he seemed to have thought of\n    the problem correctly, whereas most simply provide false confidence\n    by \"encrypting the database.\"\n\n    In short, certain data such as credit card numbers must be\n    displayed differently to different interfaces. For example, a user's\n    credit card number should be an empty string to other users, the\n    last four digits only to the user owning the credit card, and the\n    full unprotected credit card number to the credit card processing\n    gateway. I am implementing this protected format in the form of a\n    Protected String. Internally, it is stored as a hash. Externally,\n    AS_STRING provides the display version only, while a decryption key\n    or function must be provided to the object in order for it to know\n    how to decrypt its ciphertext representation into the full plaintext\n    sensitive data.\n\n    Module defaults to RSA encryption.\n\n    More effort will probably be spent in documenting the code than in\n    writing it, because it's actually a straight-forward and simple\n    thing to code. ETA for the module is 2 weeks, conservatively."
   },
   "meta" : {
      "message_id" : "200609242009.k8OK9gHJ009919@pause.perl.org",
      "epoch" : 1159128582,
      "from" : "upload@pause.perl.org",
      "subject" : "Module submission Crypt::ProtectedString",
      "file" : "51036.txt",
      "type" : "module_submission"
   }
}
