{
   "data" : {
      "userid" : {
         "name" : "Dr. James Freeman",
         "id" : "JFREEMAN"
      },
      "description" : "Compare similarity of strings and arrays",
      "communities" : "",
      "chapterid" : {
         "name" : "Data_Type_Utilities",
         "id" : "6"
      },
      "similar" : "String::Approx Text::Levensthein",
      "DSLIP" : "Rdpfp",
      "modid" : "Algorithm::HowSimilar",
      "enteredon" : "Wed Dec 31 03:07:21 2003 GMT",
      "enteredby" : {
         "name" : "Dr. James Freeman",
         "id" : "JFREEMAN"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "=head1 DESCRIPTION\n\n    This module leverages Algorithm::Diff to let you compare the degree\n    of sameness of arrays or strings. It returns a result set that\n    defines exactly how similar these things are.\n\n    =head1 METHODS\n\n    =head2 compare( ARG1, ARG2, OPTIONAL_CALLBACK )\n\n    You can call compare with either two strings compare( $str1, $str2\n    ):\n\n    my ( $av_similarity, $sim_str1_to_str2, $sim_str2_to_str1,\n    $matches, $in_str1_but_not_str2, $in_str2_but_not_str1 ) = compare(\n    'this is a string-a', 'this is a string bbb' );\n\n    Note that the mathematical similarities of one string to another\n    will be different unless the strings have the same length. The first\n    result returned is the average similarity. Totally dissimilar\n    strings will return 0. Identical strings will return 1. The degree\n    of similarity therefore ranges from 0-1 and is reported as the\n    biggest float your OS/Perl can manage.\n\n    You can also compare two array refs compare( \\@ary1, \\@ary2 ):\n\n    my ( $av_similarity, $sim_ary1_to_ary2, $sim_ary2_to_ary1,\n    $ref_ary_matches, $ref_ary_in_ary1_but_not_ary2,\n    $ref_ary_in_ary2_but_not_ary1 ) = compare( [ 1,2,3,4 ], [ 3,4,5,6,7\n    ] );\n\n    [snip]"
   },
   "meta" : {
      "message_id" : "200312310307.hBV37NZd001024@pause.perl.org",
      "epoch" : 1072840043,
      "from" : "upload@pause.perl.org",
      "subject" : "Module submission Algorithm::HowSimilar",
      "file" : "25318.txt",
      "type" : "module_submission"
   }
}
