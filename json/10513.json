{
   "data" : {
      "userid" : {
         "name" : "Eric J. Roode",
         "id" : "ROODE"
      },
      "description" : "Create read-only scalars, arrays, hashes.",
      "communities" : "RPI lily server",
      "chapterid" : {
         "name" : "Perl_Core_Modules",
         "id" : "2"
      },
      "similar" : "\"use constant\" pragma",
      "DSLIP" : "bdprp",
      "modid" : "Constant::",
      "enteredon" : "Thu Mar  7 20:03:19 2002 GMT",
      "Constant:" : "bdprp Create read-only scalars, arrays, hashes.    ROODE",
      "enteredby" : {
         "name" : "Eric J. Roode",
         "id" : "ROODE"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "Perl's built-in pragma creates only scalars and lists, creates\n    variables that have no leading $ character, and which cannot be\n    interpolated into strings. Also, it works only at compile time.\n\n    Constant.pm, on the other hand, will work with global variables and\n    with lexical (\"my\") variables. It will create scalars, arrays, or\n    hashes, all of which look and work like normal, non-constant Perl\n    variables.\n\n    Constant.pm uses tied variables, so it has a performance penalty as\n    compared to \"use constant\", but I believe it makes a valuable\n    complement to the pragma."
   },
   "meta" : {
      "message_id" : "200203072003.VAA05968@pause.perl.org",
      "epoch" : 1015531400,
      "from" : "upload@p11.speed-link.de",
      "subject" : "Module submission Constant::",
      "file" : "10513.txt",
      "type" : "module_submission"
   }
}
