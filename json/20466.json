{
   "data" : {
      "userid" : {
         "name" : "David James",
         "id" : "SPLICE"
      },
      "description" : "Export class methods as regular subroutines",
      "communities" : "Newsgroups",
      "chapterid" : {
         "name" : "Data_Type_Utilities",
         "id" : "6"
      },
      "NOTE" : "This module replaces Object::Exporter! Object::Exporter was",
      "similar" : "",
      "DSLIP" : "Rdphp",
      "modid" : "Class::Exporter",
      "enteredon" : "Fri Apr 18 03:31:18 2003 GMT",
      "enteredby" : {
         "name" : "David James",
         "id" : "SPLICE"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "NOTE: This module replaces Object::Exporter! Object::Exporter was\n    renamed to Class::Exporter because the Class namespace is more\n    appropriate for this module.\n\n    This module makes it much easier to make a module have a hybrid\n    object/method interface similar to the one of CGI.pm. You can take\n    any old module that has an object-oriented interface and convert it\n    to have a hybrid interface by simply adding \"use base\n    'Class::Exporter'\" to your code.\n\n    This package allows you to export object methods. It supports\n    C<import()>, C<@EXPORT> and C<@EXPORT_OK> and not a whole lot else.\n    Each package into which your object methods are imported gets its\n    own instance of the object. This ensures that there are no\n    interaction effects between multiple packages that use your object."
   },
   "meta" : {
      "message_id" : "200304180331.h3I3VIeC031586@pause.perl.org",
      "epoch" : 1050636678,
      "from" : "upload@pause.x.perl.org",
      "subject" : "Module submission Class::Exporter",
      "file" : "20466.txt",
      "type" : "module_submission"
   }
}
