{
   "data" : {
      "userid" : {
         "name" : "Chris Thorman",
         "id" : "CHTHORMAN"
      },
      "description" : "Read, write, manipulate tabular data",
      "communities" : "",
      "chapterid" : {
         "name" : "Data_Type_Utilities",
         "id" : "6"
      },
      "similar" : "Data::Table",
      "DSLIP" : "MnpOp",
      "modid" : "Data::CTable",
      "enteredon" : "Sun May  5 10:58:50 2002 GMT",
      "enteredby" : {
         "name" : "Chris Thorman",
         "id" : "CHTHORMAN"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "Data::CTable is like Data::Table, but uses a more efficient and\n    accessible underlying data representation and also has many more\n    features designed to make data interchange extremely convenient. It\n    is highly factored to allow very easy and powerful lightweight\n    subclasses. It also comes with a number of sample subclasses and\n    utilities. It can also cache data files using Storable. It is a new\n    and complete rewrite of a module that I have been using for\n    real-world projects for over 6 years; hence I designated it \"mature\"\n    although this is the first public release.\n\n    The module has a home page at:\n\n    http://christhorman.com/projects/perl/Data-CTable/\n\n    ... you can view full docs & source, etc. there.\n\n    Some passages from the docs:\n\n    Data::CTable is a comprehensive utility for reading, writing,\n    manipulating, cleaning and otherwise transforming tabular data. The\n    distribution includes several illustrative subclasses and utility\n    scripts.\n\n    A Columnar Table represents a table as a hash of data columns,\n    making it easy to do data cleanup, formatting, searching,\n    calculations, joins, or other complex operations.\n\n    The object's hash keys are the field names and the hash values hold\n    the data columns (as array references).\n\n    ...snip...\n\n    Data::CTable reads and writes any tabular text file format\n    including Merge, CSV, Tab-delimited, and variants. It transparently\n    detects, reads, and preserves Unix, Mac, and/or DOS line endings and\n    tab or comma field delimiters -- regardless of the runtime platform.\n\n    In addition to reading data files, CTable is a good way to gather,\n    store, and operate on tabular data in memory, and to export data to\n    delimited text files to be read by other programs or interactive\n    productivity applications.\n\n    ...snip...\n\n    Similar / related modules on CPAN\n\n    The Data::Table module by Yingyao Zhou & Guangzhou Zou offers\n    similar functionality, but uses a different underlying data\n    representation (2-dimensional array), and has a somewhat different\n    feature set. Check it out. Maybe you will prefer it for your\n    application.\n\n    http://search.cpan.org/search?mode=module&query=Data::Table\n\n    The Data::ShowTable module renders tables in various viewable\n    formats. CTable relies on ShowTable's ShowBoxTable method to\n    implement its own format() and out() methods.\n\n    http://search.cpan.org/search?mode=module&query=Data::ShowTable\n\n    ........."
   },
   "meta" : {
      "message_id" : "200205051058.MAA10736@pause.perl.org",
      "epoch" : 1020596331,
      "from" : "upload@p11.speed-link.de",
      "subject" : "Module submission Data::CTable",
      "file" : "11528.txt",
      "type" : "module_submission"
   }
}
