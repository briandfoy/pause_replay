{
   "data" : {
      "userid" : {
         "name" : "Hans Oesterholt-Dijkema",
         "id" : "OESTERHOL"
      },
      "description" : "Various methods of \"gettext\" through same IF",
      "communities" : "module-authors@cpan.org",
      "chapterid" : {
         "name" : "Internationalization_Locale",
         "id" : "13"
      },
      "similar" : "Locale::gettext, Locale::I18N, etc.",
      "DSLIP" : "RdpOl",
      "modid" : "Locale::Framework",
      "enteredon" : "Fri Apr  2 07:49:06 2004 GMT",
      "enteredby" : {
         "name" : "Hans Oesterholt-Dijkema",
         "id" : "OESTERHOL"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "What makes this module worth listing?\n\n    1. This module provides *one* external interface for multiple\n    locale backends. 2. It provides a very simple way of translating\n    your application. 3. If one uses a backend that can be dynamically\n    written, it will record all strings of your programm while your\n    programm is running. See e.g. the SQL backend.\n\n    The namespace:\n\n    I first called it Lang (as I like short names), but a CPAN tester\n    suggested I should choose an other one, because this module might be\n    interesting to list.\n\n    So I choose Locale::Framework, indicating that this could be a way\n    to have access to localization methods like I18N, GNU Gettext,\n    wxLocale, etc."
   },
   "meta" : {
      "message_id" : "200404020749.i327n9XI011482@pause.perl.org",
      "epoch" : 1080892149,
      "from" : "upload@pause.perl.org",
      "subject" : "Module submission Locale::Framework",
      "file" : "30368.txt",
      "type" : "module_submission"
   }
}
