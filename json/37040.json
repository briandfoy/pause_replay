{
   "data" : {
      "userid" : {
         "name" : "Richard Sonnen",
         "id" : "SONNEN"
      },
      "description" : "Lightweight data validation and untainting",
      "communities" : "",
      "chapterid" : {
         "name" : "Data_Type_Utilities",
         "id" : "6"
      },
      "similar" : "Data::FormValidator CGI::Validate Attribute::Params::Validate",
      "DSLIP" : "bdphp",
      "modid" : "Data::Validate",
      "enteredon" : "Mon Dec 13 23:14:02 2004 GMT",
      "enteredby" : {
         "name" : "Richard Sonnen",
         "id" : "SONNEN"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "While quite a number of data validation toolkits have been\n    contributed to CPAN, most are either very narrowly focused (only\n    validating email addresses, for example), or are very task-specific\n    (eg CGI::Validate). The goal with Data::Validate is to provide a\n    lightweigh, extensible set of validation functions that can be used\n    in any application.\n\n    The base module (Data::Validate) contains some very general\n    validation tools (is_numeric, is_printable, etc.). Modules below the\n    base will hold more specialized tools. As an example,\n    Data::Validate::Email holds email-specific functions like is_email,\n    and is_domain. Data::Validate::IP will have functions like is_ipv4\n    and is_ipv6.\n\n    These sub modules are what provide the extensibility I'm going for.\n    I can add new modules to cover specialized areas without making any\n    one module unnecessarily heavy or complex. Other authors can also\n    add to the heirachy without colliding with each other.\n\n    Thanks, Richard Sonnen"
   },
   "meta" : {
      "message_id" : "200412132314.iBDNE4ON010610@pause.perl.org",
      "epoch" : 1102979644,
      "from" : "upload@pause.perl.org",
      "subject" : "Module submission Data::Validate",
      "file" : "37040.txt",
      "type" : "module_submission"
   }
}
