{
   "data" : {
      "userid" : {
         "name" : "Igor Plisco",
         "id" : "PLISCO"
      },
      "description" : "Composing and executing of SQL statements",
      "communities" : "",
      "chapterid" : {
         "name" : "Database_Interfaces",
         "id" : "7"
      },
      "similar" : "",
      "DSLIP" : "adpOp",
      "modid" : "DBIx::Composer",
      "enteredon" : "Wed Oct 29 12:06:26 2003 GMT",
      "enteredby" : {
         "name" : "Igor Plisco",
         "id" : "PLISCO"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "Module DBIx::Composer composes SQL statements from parts (table\n    name, field list, 'where' clause etc.). Then it can execute these\n    statements. It makes SQL command composing more clear and convenient\n    for common cases.\n\n    Name DBIx::Composer is appropriate because 1) it deals with\n    database and SQL, so should be under DBIx namespace, 2) its main\n    task is _composing_ SQL statements from parts.\n\n    Usage of module is like following:\n\n    $cmd = new DBIx::Composer; $cmd->table = 'table1'; $cmd->fields =\n    'field1, field2'; $cmd->where = 'where field3 > 0'; @out =\n    $cmd->selectrow_array;"
   },
   "meta" : {
      "message_id" : "200310291206.h9TC6RgQ026417@pause.perl.org",
      "epoch" : 1067429187,
      "from" : "upload@pause.perl.org",
      "subject" : "Module submission DBIx::Composer",
      "file" : "24261.txt",
      "type" : "module_submission"
   }
}
