{
   "data" : {
      "userid" : {
         "name" : "Andrew Sterling Hanenkamp",
         "id" : "HANENKAMP"
      },
      "description" : "An object-orient wrapper for hashes.",
      "communities" : "",
      "chapterid" : {
         "name" : "Data_Type_Utilities",
         "id" : "6"
      },
      "similar" : "Class::Struct",
      "DSLIP" : "adpOp",
      "modid" : "Class::Hash",
      "enteredon" : "Mon Aug 18 05:19:11 2003 GMT",
      "enteredby" : {
         "name" : "Andrew Sterling Hanenkamp",
         "id" : "HANENKAMP"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "Essentially, I've just wrapped a hash in an object-orient\n    interface. There is no type checking as can be found with\n    Class::Struct or its relatives. I have also provided the option of\n    using many of the hash function (like keys, each, etc.) and a\n    selection of functions based on the hash tie interface (like fetch,\n    clear, etc.) as explicit functions. I was a little surprised to find\n    that no one had done such a thing before--perhaps I've done\n    something redundant and haven't been able to find something that\n    should be obvious.\n\n    Anyway, Class::Hash seemed like the most obvious name for the\n    module and seems to match up with the types of modules one would\n    expect under Class::."
   },
   "meta" : {
      "message_id" : "200308180519.h7I5JBMw017607@pause.perl.org",
      "epoch" : 1061183951,
      "from" : "upload@pause.perl.org",
      "subject" : "Module submission Class::Hash",
      "file" : "22922.txt",
      "type" : "module_submission"
   }
}
