{
   "data" : {
      "userid" : {
         "name" : "Thomas Widmann",
         "id" : "TWID"
      },
      "description" : "Transcribe texts in natural languages.",
      "communities" : "Mentioned on c.l.p.m., but there were no follow-ups.",
      "chapterid" : {
         "name" : "String_Lang_Text_Proc",
         "id" : "11"
      },
      "similar" : "Convert::Translit",
      "DSLIP" : "bdpOp",
      "modid" : "Convert::Transcribe",
      "enteredon" : "Fri Apr  4 15:39:00 2003 GMT",
      "enteredby" : {
         "name" : "Thomas Widmann",
         "id" : "TWID"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "The existing module Convert::Translit is more or less an extended\n    tr/// -- it performs a one-to-one mapping, but very efficiently.\n\n    Convert::Transcribe, on the other hand, is meant for transcription\n    of natural languages, where it is common to have rules such as\n    \"transcribe Russian 'e' as 'ye' word-initially and after vowels, and\n    by 'e' in all other positions\". It is rather slow, but convenient.\n\n    Convert::Transcribe creates Perl code based on the user's\n    transcription definition, and this code can then either be eval'ed\n    or passed to the user (thus enabling optimisation).\n\n    I believe the Convert:: namespace is appropriate as the\n    functionality of the two modules are so similar.\n\n    It is hoped it will be useful for people who need to transcribe\n    things but who would rather not write a series of Perl regexps\n    themselves."
   },
   "meta" : {
      "message_id" : "200304041539.h34Fd3xv012752@pause.perl.org",
      "epoch" : 1049470743,
      "from" : "upload@pause.x.perl.org",
      "subject" : "Module submission Convert::Transcribe",
      "file" : "20187.txt",
      "type" : "module_submission"
   }
}
