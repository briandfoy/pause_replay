{
   "data" : {
      "userid" : {
         "name" : "David Wheeler",
         "id" : "DWHEELER"
      },
      "description" : "Class automation, introspection, validation",
      "communities" : "bricolage-devel@lists.sourceforge.net",
      "chapterid" : {
         "name" : "Data_Type_Utilities",
         "id" : "6"
      },
      "similar" : "Class::Accessor, Params::Validate, Class::Tangram, Class::Contract",
      "DSLIP" : "bdpOp",
      "modid" : "Class::Meta",
      "enteredon" : "Sat Jan 17 01:22:15 2004 GMT",
      "enteredby" : {
         "name" : "David Wheeler",
         "id" : "DWHEELER"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "Class::Meta provides an interface for automating the creation of\n    Perl classes with attribute data type validation. It differs from\n    other such modules in that it includes an introspection API that can\n    be used as a unified interface for all Class::Meta-generated\n    classes. In this sense, it is an implementation of the \"Facade\"\n    design pattern.\n\n    I chose the name space because it's a succinct description of the\n    module and what it does. Not only does it provide an interface for\n    generating constructors and attribute accessors, like other modules\n    in the Class:: namespace, it also provides metadata about the\n    classes it generates. This metadata is available via the\n    introspection API, in which objects describe the classes, their\n    constructors, attributes, and methods."
   },
   "meta" : {
      "message_id" : "200401170122.i0H1MFin022535@pause.perl.org",
      "epoch" : 1074302536,
      "from" : "upload@pause.perl.org",
      "subject" : "Module submission Class::Meta",
      "file" : "25621.txt",
      "type" : "module_submission"
   }
}
