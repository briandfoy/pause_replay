{
   "data" : {
      "userid" : {
         "name" : "Jaap Karssenberg",
         "id" : "PARDUS"
      },
      "description" : "a posix command language interpreter",
      "communities" : "both mailing list and cvs -\n    <http://sourceforge.net/projects/zoidberg/>",
      "chapterid" : {
         "name" : "Operating_System_Interfaces",
         "id" : "4"
      },
      "similar" : "",
      "DSLIP" : "cmpOa",
      "modid" : "Shell::POSIX",
      "enteredon" : "Wed Feb 12 19:02:16 2003 GMT",
      "enteredby" : {
         "name" : "Jaap Karssenberg",
         "id" : "PARDUS"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "We (myself and RLZWART) are currently working on a posix command\n    language interpreter module. It should be able to parse and execute\n    shell (bash/sh) scripts following the posix standard for the shell\n    command language. Possibly there will be subclasses for several\n    language extensions, like those implemented by bash. We try to\n    follow the posix 1003.1-2001 standard as closely as possible, not\n    only in the parsing of script syntax, but also in the implementation\n    of pipelines and jobs.\n\n    This module would provide a compatibility layer, allowing perl\n    programs to interact and use shell scripts, and creating bindings\n    between the perl and shell script languages. One could for example\n    make the \"export\" built-in in a shell script export variables to the\n    perl program sourcing it. The use of this module while creating a\n    shell like perl program should be obvious.\n\n    Although there are some perl shell projects, none of them supplies\n    real compatibility with shell script. This module is being developed\n    within the Zoidberg project to create a general purpose perl shell,\n    but it's interface will be independent of this project. It should be\n    perfectly useable for other shell projects or interactive programs.\n\n    The Shell::POSIX namespace seems logical to me for a implementation\n    of a posix command language interpreter and AFAIK there isn't yet a\n    module which is able to run shell script natively. Also I believe it\n    provides a functionality with a general use, so it belongs in the\n    module list.\n\n    Regards, PARDUS"
   },
   "meta" : {
      "message_id" : "200302121902.h1CJ2G615617@pause.perl.org",
      "epoch" : 1045076536,
      "from" : "upload@pause.x.perl.org",
      "subject" : "Module submission Shell::POSIX",
      "file" : "17795.txt",
      "type" : "module_submission"
   }
}
