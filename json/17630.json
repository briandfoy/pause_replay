{
   "data" : {
      "userid" : {
         "name" : "Wolfgang Hommel",
         "id" : "WHOM"
      },
      "description" : "Communication with chipcard terminals",
      "communities" : "comp.lang.perl.modules",
      "chapterid" : {
         "name" : "Operating_System_Interfaces",
         "id" : "4"
      },
      "similar" : "PCSC::Lite",
      "DSLIP" : "RdhOp",
      "modid" : "Chipcard::CTAPI",
      "enteredon" : "Fri Feb  7 16:19:49 2003 GMT",
      "enteredby" : {
         "name" : "Wolfgang Hommel",
         "id" : "WHOM"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "This is a request for the approval of a new root namespace,\n    \"Chipcard\".\n\n    My recently released perl module, Chipcard::CTAPI, available as\n    $CPAN/modules/by-authors/id/W/WH/WHOM/Chipcard-CTAPI-0.1.tar.gz\n    provides access to chipcard terminals based on the standardized\n    CTAPI library, which is available for most, if not all, chipcard\n    readers. There are various C libraries and frameworks available for\n    accessing card terminals, the most popular platform-independed ones\n    being CTAPI and PC/SC.\n\n    Comparing PC/SC with CTAPI is a bit like comparing ODBC with\n    vendor-specific database drivers: like ODBC, PC/SC comes from the\n    Windows world, requires some work under UNIX-like OS to set up and\n    has certain overhead like an always running pcscd-daemon. CTAPI on\n    the other hand provides a standardized interface through a\n    vendor-specific C library which is easy to set up and has no runtime\n    overhead.\n\n    For natively accessing smartcards from Perl, there so far was only\n    one module available, PCSC::Lite, which, as the name implies, goes\n    the PC/SC way. There are several issues about PCSC::Lite I would\n    like to mention ahead of the further discussion:\n\n    1. The root namespace PCSC was never registered, according to the\n    archives, registration was requested on 2002/02/02 without\n    follow-ups.\n\n    2. The PCSC::Lite module does not seem to be actively maintained on\n    CPAN anymore. The latest version there, as well as on the website\n    specified with the CPAN account, is 1.0.8, but on the author's\n    homepage, there's a version 1.1.3 available:\n    http://ludovic.rousseau.free.fr/softwares/pcsc-perl/pcsc-perl.html\n\n    3. There are no other modules available below the PCSC rootlevel\n    namespace I'm avare of currently but PCSC::Lite.\n\n    Furthermore, except the PCSC-tools, by the same author as\n    PCSC::Lite, hardly any Perl program seems to use PCSC::Lite. In\n    fact, searching for chipcard-related Perl applications reveals that\n    almost all of them use external command line tools (like 'smartcard'\n    0.1.8), which are written in C and based on CTAPI, for their\n    communication with card terminals. I believe that this is not\n    because of PCSC::Lite, but because the PC/SC framework in general is\n    rather unattractive to home users due to its overhead, whereas the\n    lightweight CTAPI is much easier to get to work.\n\n    That, by the way, was also the reason for writing and releasing a\n    CTAPI-related Perl module, as it hopefully enables Perl programms to\n    communicate with card terminals directly and easily without having\n    to run external programs for doing so, or demanding from the end\n    user to install and configure PC/SC first.\n\n    Back to the namespace issue, here's my point of view regarding the\n    \"Chipcard\" root namespace:\n\n    1. I've browsed the module list from top to bottom and back to top\n    and didn't find an existing registered namespace where it would\n    really fit. Obviously, Perl has not been used too much for chipcard\n    programming yet, that's something with a definitive potential to\n    change, as card readers and blank card become cheaper and security\n    applications get more into mainstream. Also, it obviously does not\n    fit into the (not registered) PCSC namespace, as CTAPI and PCSC are\n    like apples and pears. If the module list maintainers know a better\n    place where the module would fit but a new root namespace, I'll\n    gladly change my implementation to fit any deliberate suggestions.\n\n    2. \"Chipcard\" is a relatively neutral name, as it applies to both\n    memory cards and processor cards, whereas \"Smartcard\" would only be\n    an alias for \"processor cards\" (although in public, \"smartcard\" is\n    often used erroneously for both types of cards).\n\n    3. A \"Chipcard\" rootlevel namespace could become home of both the\n    CTAPI and the PCSC module. About the PCSC module, this a) should not\n    be too big of a problem, because, as discussed above, there seem not\n    to be many applications using it. b) depends on whether its author\n    still wants his module on CPAN at all, see the version 1.0.8 <->\n    1.1.3 issue discussed above. Furthermore, such a common rootlevel\n    namespace could also be used by modules build on top of either CTAPI\n    or PCSC, for example drivers for various smartcard types with\n    specific features which are not covered yet."
   },
   "meta" : {
      "message_id" : "200302071619.h17GJnL08666@pause.perl.org",
      "epoch" : 1044634789,
      "from" : "upload@pause.x.perl.org",
      "subject" : "Module submission Chipcard::CTAPI",
      "file" : "17630.txt",
      "type" : "module_submission"
   }
}
