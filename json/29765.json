{
   "data" : {
      "userid" : {
         "name" : "Steven Hilton",
         "id" : "MSHILTONJ"
      },
      "description" : "Ordered list of objects",
      "communities" : "Mailinglists",
      "chapterid" : {
         "name" : "Data_Type_Utilities",
         "id" : "6"
      },
      "similar" : "Set::Object, Array, Class::MethdMaker",
      "DSLIP" : "cdpOp",
      "modid" : "List::Object",
      "enteredon" : "Mon Mar 22 12:49:42 2004 GMT",
      "enteredby" : {
         "name" : "Steven Hilton",
         "id" : "MSHILTONJ"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "List::Object - Ordered list of objects with array methods and\n    iterator methods, enforces types of list members.\n\n    List::Object was inspired by several other modules: Array for\n    having an object-oriented interface to perl's array functions.\n    Class::MethodMaker for its auto-generated methods that do that same\n    thing with its object_list functionality (hence the name of this\n    package), as well as the fact that it enforces the declared datatype\n    on its members. And I like the generic Iterator interface for\n    working with lists.\n\n    In a nutshell, List::Object has three main features:\n\n    * Object-oriented interface to perl's array methods\n\n    * Implements the Iterator interface for the list\n\n    * Enforces datatypes of list members\n\n    Rough, working-state (with lots of typos) documentation of proposed\n    module is temporarily located at:\n\n    http://mshiltonj.com/projects/List-Object.html"
   },
   "meta" : {
      "message_id" : "200403221249.i2MCnjgl027588@pause.perl.org",
      "epoch" : 1079959785,
      "from" : "upload@pause.perl.org",
      "subject" : "Module submission List::Object",
      "file" : "29765.txt",
      "type" : "module_submission"
   }
}
