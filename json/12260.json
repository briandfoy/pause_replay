{
   "data" : {
      "userid" : {
         "name" : "Erwan Lemonnier",
         "id" : "ERWAN"
      },
      "description" : "interface for building IDMEF messages",
      "communities" : "",
      "chapterid" : {
         "name" : "String_Lang_Text_Proc",
         "id" : "11"
      },
      "similar" : "",
      "DSLIP" : "bdpOb",
      "modid" : "XML::IDMEF",
      "enteredon" : "Wed Jun 19 13:38:35 2002 GMT",
      "enteredby" : {
         "name" : "Erwan Lemonnier",
         "id" : "ERWAN"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "IDMEF stands for Intrusion Detection Message Exchange Format and is\n    defined in a new rfc (http://www.silicondefense.com/idwg/). It is an\n    XML based message format, and about to become a widespread standard\n    for encoding alerts from security products.\n\n    There are already a couple of apis written in C and java to easily\n    build IDMEF messages, but non in perl, hence this new module.\n\n    IDMEF.pm is a wrapper around an XML::Simple hash, and is\n    implemented as a generic XML DTD parser, creating api calls based on\n    the DTD parsed at module load time. It sounds hence natural to put\n    it in the XML namespace. I did not see any subcategory of XML that\n    could include IDMEF, so I assume XML::IDMEF is a reasonable\n    choice...\n\n    This module is going to be especially usefull to people who are\n    developing quick scripts to export log data from a security software\n    to some database or managed security service monitoring tool. For\n    better spreading, I would of course prefer to list it in the module\n    list, but I leave it up to you to decide if it is indeed worth it!\n\n    Best regards,\n\n    /erwan in the module list!"
   },
   "meta" : {
      "message_id" : "200206191338.g5JDcca19305@pause.perl.org",
      "epoch" : 1024493918,
      "from" : "upload@p11.speed-link.de",
      "subject" : "Module submission XML::IDMEF",
      "file" : "12260.txt",
      "type" : "module_submission"
   }
}
