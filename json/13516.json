{
   "data" : {
      "userid" : {
         "name" : "Jochen Stenzel",
         "id" : "JSTENZEL"
      },
      "description" : "Presentation slide / doc generator framework",
      "communities" : "perlpoint@perl.org (see\n    http://archive.develooper.com/perlpoint@perl.org/),\n    http://sourceforge.net/projects/perlpoint/",
      "chapterid" : {
         "name" : "String_Lang_Text_Proc",
         "id" : "11"
      },
      "similar" : "PPresenter, Tk::SlideShow, SlideShow, XML::Handler::AxPoint, sdf",
      "DSLIP" : "MmpOa",
      "modid" : "PerlPoint::Package",
      "enteredon" : "Sat Aug 31 07:54:49 2002 GMT",
      "enteredby" : {
         "name" : "Jochen Stenzel",
         "id" : "JSTENZEL"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "PerlPoint is available on CPAN for years now, I just realized that\n    it is not registered yet. It is also made a sourceforge project.\n\n    Namespace choice ----------------\n\n    PerlPoint and its name were originally designed by Tom\n    Christiansen. When we decided to publish our new implementation and\n    got his permission to use the name, there was no \"Presentation\" root\n    namespace, so we decided just to use the tools/language name for it.\n    (Similar to PPresenter and SlideShow.) Even if there would have been\n    such a category, PerlPoint would not perfectly fit in as it is not\n    only designed to generate presentation slides but can be used for\n    various purposes.\n\n    PerlPoint was presented to the German Perl Workshop 2001 and YAPC\n    2001 and became the Workshop's officially recommended slide\n    generator software. In 2001, PerlPoint won a Workshop award for best\n    utility. In 2002, the PerlPoint application PerlPointCD was used to\n    produce the Workshop CD.\n\n    As the name and tool are well established now, I ask to register\n    the root namespace PerlPoint.\n\n    PerlPoint intro ---------------\n\n    PerlPoint allows to generate presentation slides, documentations,\n    handouts, training materials etc. in various formats from one or\n    more text files in an easy to learn, easy to extend, paragraph\n    oriented language. It supports unlimited document nesting and makes\n    it easy to maintain a document a distributed way, which means to\n    compose it from partial documents (which may be used standalone as\n    well). By embedding Perl code it is possible to \"write\" slides/docs\n    automatically while the source is processed. More common, it is\n    possible to write PerlPoint \"applications\".\n\n    For further informations and details online see the YAPC 2001\n    proceedings(http://www.yapc.org/Europe/2001/proceedings/15/doc/,\n    various *-slides/frame_set.html pages there, article at\n    PP-Article/frame_set.html).\n\n    Relation to other modules (as listed above)\n    -------------------------------------------\n\n    In short: PerlPoint is partially similar in purpose, but supports\n    various output formats. Therefore it might be used as a common\n    frontend of ones preferred presenter as well as a document\n    processor.\n\n    In more detail: PerlPoint was designed to support *various*\n    presentation formats. This means that there is no \"PerlPoint\n    presentation format\" (although HTML is the traditional and currently\n    most supported slide format).\n\n    So like the tools/modules listed above, PerlPoint can be used to\n    generate slides.\n\n    Different to them (as I know), it is not fixed to a certain output\n    format, backends can be written for various formats, including the\n    input formats of the listed tools. (A PPresenter backend already\n    exists.) So it well cooperates with other tools.\n\n    While some of the tools prefer XML or Perl as their input format,\n    which are powerful but need special knowledge, PerlPoint tries to\n    provide an interface language that is very easy to start with, very\n    close to writing a simple text like this.\n\n    PerlPoint::Package ------------------\n\n    Do I need to register every module of the PerlPoint toolset?\n    Currently there are two distributions with various modules: the\n    PerlPoint::Package module which provides the frontend parser, a\n    framework to write backends and a reference backend to SDF, and\n    PerlPoint::Converters by Lorenz Domke (LDOMKE) with converters to\n    HTML and LaTeX.\n\n    If it is possible, please register the PerlPoint::Converters\n    package as well (Lorenz is not informed of this request but I'm sure\n    he will agree ;-).\n\n    Please let me know if I need to register not only the packages but\n    also every single module within.\n\n    Greetings and thanks in advance\n\n    Jochen Stenzel"
   },
   "meta" : {
      "message_id" : "200208310754.g7V7ssA32418@pause.perl.org",
      "epoch" : 1030780494,
      "from" : "upload@p11.speed-link.de",
      "subject" : "Module submission PerlPoint::Package",
      "file" : "13516.txt",
      "type" : "module_submission"
   }
}
