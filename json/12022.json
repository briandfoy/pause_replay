{
   "data" : {
      "userid" : {
         "name" : "Aaron Straup Cope",
         "id" : "ASCOPE"
      },
      "description" : "Massage the dimensions and type of an image",
      "communities" : "",
      "chapterid" : {
         "name" : "Images_Pixmaps_Bitmaps",
         "id" : "18"
      },
      "similar" : "Image::Magick Image::Magick::Thumbnail",
      "DSLIP" : "bdpOp",
      "modid" : "Image::Shoehorn",
      "enteredon" : "Fri Jun  7 12:34:37 2002 GMT",
      "enteredby" : {
         "name" : "Aaron Straup Cope",
         "id" : "ASCOPE"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "Description :\n\n    Image::Shoehorn will massage the dimensions and filetype of an\n    image, optionally creating one or more \"scaled\" images.\n\n    It uses Image::Magick to do the heavy lifting and provides a single\n    \"import\" objet method to hide a number of tasks from the user.\n\n    Rationale :\n\n    Just before I decided to send this message, I noticed that Lee\n    Goddard had just released Image::Magick::Thumbnail. Although there\n    is a certain amount of overlap, creating thumbnails is only a part\n    of the functionality of Image::Shoehorn.\n\n    Image::Shoehorn is designed for taking a single image, optionally\n    converting it's file type and resizing it, and then creating one or\n    more \"scaled\" versions of the (modified) image.\n\n    One example would be a photo-gallery application where the gallery\n    may define (n) number of scaled versions. In a mod_perl context, if\n    the scaled image had not already been created, the application might\n    create the requested image for the request and then register a\n    cleanup handler to create the remaining \"scaled\" versions.\n    Additionally, scaled images may be defined as \"25%\", \"x50\", \"200x\"\n    or \"25x75\" (Apache::Image::Shoehorn is next...)\n\n    Shoehorn?! :\n\n    This package started life as internal library named Image::Import;\n    designed to slurp and munge images into a database. It's not a very\n    exciting name and, further, is a bit ambiguous.\n\n    So, I started fishing around for a better name and for a while I\n    was thinking about Image::Tailor - a module for taking in the \"hem\"\n    of an image, of fussing and making an image fit properly.\n\n    When I asked the Dict servers for a definition of \"tailor\", it\n    returned a WordNet entry \"make fit for a specific purpose [syn:\n    {shoehorn}]\" and that was that."
   },
   "meta" : {
      "message_id" : "200206071234.g57CYd302085@pause.perl.org",
      "epoch" : 1023453279,
      "from" : "upload@p11.speed-link.de",
      "subject" : "Module submission Image::Shoehorn",
      "file" : "12022.txt",
      "type" : "module_submission"
   }
}
