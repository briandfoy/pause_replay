{
   "data" : {
      "userid" : {
         "name" : "David R. Baird",
         "id" : "DAVEBAIRD"
      },
      "Tree:" : "is OK, and is relevant, but the primary task of the module is",
      "description" : "hierarchical groups-based permissions system",
      "communities" : "module-authors@perl.org",
      "chapterid" : {
         "name" : "Security_and_Encryption",
         "id" : "14"
      },
      "similar" : "Data::ACL",
      "DSLIP" : "cdpOp",
      "modid" : "Tree::Authz",
      "enteredon" : "Mon Aug 23 21:31:56 2004 GMT",
      "enteredby" : {
         "name" : "David R. Baird",
         "id" : "DAVEBAIRD"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "In Tree::Authz, a user is placed in a single group. That group can\n    contain subgroups, in a tree-like structure. The user queries the\n    group object to see if the user is permitted to carry out certain\n    operations. The user can do anything her group, or any subgroup, is\n    permitted to do. Users can only belong to a single group.\n\n    The aim is to provide a structure that can model the hierarchical\n    structure of real organisations. The group model is not like Unix\n    groups, where a user can be a member of multiple groups. I could\n    never get my head round that anyway.\n\n    The other main feature of the module is that code can be associated\n    with the nodes (groups) of the tree, either as coderefs, or as\n    package names. So the groups can contain all the code to carry out\n    their own tasks. I think that will work well, but I haven't used it\n    in anger yet.\n\n    Data::ACL uses a similar hierarchical structure to manage\n    permissions, but doesn't seem to be complete, and doesn't feature\n    the code management aspects of my module. It uses a different method\n    of modelling the tree.\n\n    I've struggled to find a suitable top level namespace for this.\n    Tree:: is OK, and is relevant, but the primary task of the module is\n    authorization, not modelling trees. It would have been nice if it\n    could have gone in Authz::, something like Authz::Inherit or\n    Authz::Tree. There's a big Authen:: namespace, I'd suggest it should\n    be accompanied by an Authz:: namespace. Any takers?\n\n    Best wishes,\n\n    David."
   },
   "meta" : {
      "message_id" : "200408232131.i7NLVvlg030414@pause.perl.org",
      "epoch" : 1093296717,
      "from" : "upload@pause.perl.org",
      "subject" : "Module submission Tree::Authz",
      "file" : "34316.txt",
      "type" : "module_submission"
   }
}
