{
   "data" : {
      "userid" : {
         "name" : "Steve Simms",
         "id" : "SSIMMS"
      },
      "description" : "Query a SQL database with very little code",
      "communities" : "Not yet. Suggestions welcome.",
      "chapterid" : {
         "name" : "Database_Interfaces",
         "id" : "7"
      },
      "similar" : "DBIx::DWIW",
      "DSLIP" : "cdphp",
      "modid" : "DBIx::SimpleQuery",
      "enteredon" : "Sun Oct 17 00:07:41 2004 GMT",
      "enteredby" : {
         "name" : "Steve Simms",
         "id" : "SSIMMS"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "This module is similar in concept to DBIx::DWIW, but differs\n    significantly in implementation, especially in how values are\n    returned.\n\n    The rationale is to get rid of as much of the work involved with\n    querying databases as possible. It was inspired by Damian Conway's\n    \"Sufficiently Advanced Technologies\" talk at OSCON 2004.\n\n    The result is that I can do queries like the following:\n\n    use DBIx::SimpleQuery; # Fetch a scalar my $name = query \"SELECT\n    name FROM users WHERE user_id = $user_id\";\n\n    # Fetch an array of scalars my @user_ids = query \"SELECT user_id\n    FROM users\";\n\n    # Fetch an array of hashrefs foreach my $row (query \"SELECT * FROM\n    users\") { ... }\n\n    # Returns true or false in boolean context if (query \"SELECT * FROM\n    users WHERE user_id = $user_id\") { ... }\n\n    # As well as others, always using just the one function (or\n    method).\n\n    The query function generally returns an object with overloaded\n    stringify and other operators, so that you don't have to explicitly\n    cast as an array or shift to get the first value, for example.\n\n    The database setup can be done in a number of ways: using\n    environment variables, a set_defaults() call, arguments to new()\n    (resulting in an object than can then be queried), or arguments to\n    the query() function itself. When developing in mod_perl, I just set\n    the environment variables once in httpd.conf and never have to worry\n    about it again.\n\n    The code for the first release is finished, but the documentation\n    and tests are not yet."
   },
   "meta" : {
      "message_id" : "200410170007.i9H07lBk017226@pause.perl.org",
      "epoch" : 1097971667,
      "from" : "upload@pause.perl.org",
      "subject" : "Module submission DBIx::SimpleQuery",
      "file" : "35692.txt",
      "type" : "module_submission"
   }
}
