{
   "data" : {
      "userid" : {
         "name" : "Toby Ovod-Everett",
         "id" : "TEVERETT"
      },
      "description" : "Security manipulation for Win32 objects",
      "communities" : "",
      "chapterid" : {
         "name" : "Microsoft_Windows_Modules",
         "id" : "22"
      },
      "similar" : "Win32::Perms, Win32::FileSecurity",
      "DSLIP" : "cdpOp",
      "modid" : "Win32::Security",
      "enteredon" : "Mon Sep  8 18:23:03 2003 GMT",
      "enteredby" : {
         "name" : "Toby Ovod-Everett",
         "id" : "TEVERETT"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "I feel a bit bold staking out this namespace, but I feel\n    comfortable that the code I am currently working on will provide\n    sorely needed support for Security manipulation on Win32 platforms.\n\n    My current approach is based upon using Win32::API to access the\n    underlying APIs, which means the module will be written entirely in\n    Perl. As much as possible, I have tried to keep the interfaces\n    exposed at multiple levels in order to avoid the \"Monolithic Black\n    Box\" problem If other users don't like the interfaces I have\n    developed, I want it to be easy for them to develop their own\n    without having to reinvent the entire wheel. I have made use of\n    memoization to improve the efficiency of the code when doing large\n    scale permissions examination and manipulation.\n\n    At the base level is Win32::Security::Raw, which provides\n    minimalist wrappers around the Win32 API calls that have proved\n    necessary. Win32::Security::SID provides for interaction with SIDs,\n    conversion between string and binary forms and trustee names.\n\n    The next level is Win32::Security::ACE and Win32::Security::ACL,\n    which provide object-oriented interfaces to interacting with Access\n    Control Entries and Access Control Lists.\n    Win32::Security::NamedObjects provides an object-oriented interface\n    for retrieving and setting permissions and ownership of NamedObjects\n    (currently only FILE access is supported, but the code is\n    architected to support all forms of NamedObjects).\n\n    Finally, Win32::Security::Recursor provides support for recursing\n    through hierarchical trees of NamedObjects (i.e. directory trees:)\n    and examining and manipulating permissions.\n\n    I look forward to releasing the code when it is in good shape:).\n\n    --Toby Ovod-Everett"
   },
   "meta" : {
      "message_id" : "200309081823.h88IN4oL012134@pause.perl.org",
      "epoch" : 1063045384,
      "from" : "upload@pause.perl.org",
      "subject" : "Module submission Win32::Security",
      "file" : "23423.txt",
      "type" : "module_submission"
   }
}
