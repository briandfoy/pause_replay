{
   "data" : {
      "userid" : {
         "name" : "David Golden",
         "id" : "DAGOLDEN"
      },
      "description" : "Test absolute difference between numbers",
      "communities" : "modules@perl.org -- under the prior submission Test::Float",
      "chapterid" : {
         "name" : "Development_Support",
         "id" : "3"
      },
      "similar" : "",
      "DSLIP" : "Rdpfp",
      "modid" : "Test::Number::Delta",
      "enteredon" : "Tue Jan  4 05:17:42 2005 GMT",
      "enteredby" : {
         "name" : "David Golden",
         "id" : "DAGOLDEN"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "Rationale for namespace has been extensively discussed on\n    modules@perl.org.\n\n    Rationale for module is as follows:\n\n    Most programmers at one time or another are confronted with the\n    issue of comparing floating-point numbers for equality. The\n    canonical idiom is to test if the absolute value of the difference\n    of the numbers is within a desired precision. This module provides\n    such a function for use with Test::Harness. Usage is similar to\n    other test functions described in Test::More. Semantically, the\n    \"delta_within\" function replaces this kind of construct:\n\n    ok ( abs($p - $q) <= $precision, â$p is equal to $qâ ) or diag\n    \"$p is not equal to $q to within $precision\";\n\n    While thereâs nothing wrong with that construct, itâs a pain to\n    type it repeatedly in a test script. This module does the same thing\n    with a single function call. The \"delta_ok\" function is similar, but\n    uses a global default precision so even the precision need not be\n    specified repeatedly."
   },
   "meta" : {
      "message_id" : "200501040517.j045HhEC009387@pause.perl.org",
      "epoch" : 1104815864,
      "from" : "upload@pause.perl.org",
      "subject" : "Module submission Test::Number::Delta",
      "file" : "37413.txt",
      "type" : "module_submission"
   }
}
