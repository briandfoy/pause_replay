{
   "data" : {
      "userid" : {
         "name" : "Αριστοτέλης Παγκαλτζής",
         "id" : "ARISTOTLE"
      },
      "description" : "A simpe and intuitive interface to fork()",
      "communities" : "rt.cpan.org",
      "chapterid" : {
         "name" : "Operating_System_Interfaces",
         "id" : "4"
      },
      "similar" : "Proc::Forkfunc",
      "DSLIP" : "Rdpfp",
      "modid" : "Proc::Fork",
      "enteredon" : "Sun Apr 24 07:16:10 2005 GMT",
      "enteredby" : {
         "name" : "Αριστοτέλης Παγκαλτζής",
         "id" : "ARISTOTLE"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "Proc::Forkfunc is the only module that is similar in scope, but it\n    has a slightly different approach and far less .\n\n    All the many other fork()-related modules seem to assume a parent\n    process that forks many children and concentrate on offering\n    facilities to simplify regulating such a scenario.\n\n    The Proc::Fork interface only abstracts a single fork() call,\n    aiming for syntactic sugar that increases readability.\n\n    The choice of name is simply natural. Note that it's not my call;\n    the module has been on CPAN for several years, I am just the new\n    maintainer. But it's hard to imagine a better, or even just a\n    different name."
   },
   "meta" : {
      "message_id" : "200504240716.j3O7GHvx003474@pause.perl.org",
      "epoch" : 1114326979,
      "from" : "upload@pause.perl.org",
      "subject" : "Module submission Proc::Fork",
      "file" : "39899.txt",
      "type" : "module_submission"
   }
}
