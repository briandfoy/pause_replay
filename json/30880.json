{
   "data" : {
      "userid" : {
         "name" : "Levon Barker",
         "id" : "LEVONB"
      },
      "description" : "Auto class generation which mirror tables.",
      "communities" : "dbobjects@yahoogroups.com",
      "chapterid" : {
         "name" : "Database_Interfaces",
         "id" : "7"
      },
      "similar" : "AutoSql DBIx::DBSchema::Table Class::AutoDB",
      "DSLIP" : "ampOa",
      "modid" : "DBObjects",
      "enteredon" : "Fri Apr 16 12:02:23 2004 GMT",
      "enteredby" : {
         "name" : "Levon Barker",
         "id" : "LEVONB"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "I am suggesting the namespace DBObjects as it is exactly what this\n    module allows you to do.\n\n    From one model file, (which is just a perl hash) the modules\n    (DBObjects::DBClass, DBObjects::DBConnection, maybe more...) will\n    auto generate a class for each table. The programmer then interacts\n    with the database using objects to represent tuples in the database.\n\n    example:\n\n    my %model = ( Person => { Packacge => 'My::Person', Table =>\n    'person', PrimaryKey => 'person_id', Sequence => 'person_seq',\n    Relationships => { etc... );\n    DBObjects::DBClass::create_classes_from_model( \\%model );\n\n    my $person = My::Person->new( $dbConnection ); $person->retrieveOn(\n    name => 'Sally' ); $person->age( 45 ); $person->update;"
   },
   "meta" : {
      "message_id" : "200404161202.i3GC2OUr014995@pause.perl.org",
      "epoch" : 1082116944,
      "from" : "upload@pause.perl.org",
      "subject" : "Module submission DBObjects",
      "file" : "30880.txt",
      "type" : "module_submission"
   }
}
