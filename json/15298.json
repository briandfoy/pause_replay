{
   "data" : {
      "userid" : {
         "name" : "Miko O'Sullivan",
         "id" : "MIKO"
      },
      "description" : "Middle-tier object wrapper for DBI",
      "communities" : "",
      "chapterid" : {
         "name" : "Database_Interfaces",
         "id" : "7"
      },
      "similar" : "DBIx::Table",
      "DSLIP" : "adpOp",
      "modid" : "DBIx::Record",
      "enteredon" : "Wed Nov 13 20:51:20 2002 GMT",
      "enteredby" : {
         "name" : "Miko O'Sullivan",
         "id" : "MIKO"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "NAME DBIx::Record - Middle tier system for representing database\n    records as objects.\n\n    SYNOPSIS use Hospital; # class that implements DBIx::Record my\n    ($login, $patient); # get object that holds the database connection\n    $login = Hospital->get_login; # Instantiate object representing the\n    patient record # that has primary key 1000. Change the record's #\n    name_last field. Then save the record. $patient =\n    Hospital::Patient->new($login, 1000, fields=>['name_last']);\n    $patient->{'f'}->{'name_last'} = 'Smith'; $patient->save;\n\n    # Instantiate object representing a patient record # that doesn't\n    exist yet. Set the name_last field, save, # and output the primary\n    key of the new record $patient = Hospital::Patient->new($login, -1);\n    $patient->{'f'}->{'name_last'} = 'Smith'; $patient->save; print\n    'primary key: ', $patient->{'pk'}, \"\\n\";"
   },
   "meta" : {
      "message_id" : "200211132051.gADKpMh07151@pause.perl.org",
      "epoch" : 1037220682,
      "from" : "upload@p11.speed-link.de",
      "subject" : "Module submission DBIx::Record",
      "file" : "15298.txt",
      "type" : "module_submission"
   }
}
