{
   "data" : {
      "userid" : {
         "name" : "Chad Granum",
         "id" : "EXODIST"
      },
      "description" : "Largest common sub string in string array",
      "communities" : "",
      "chapterid" : {
         "name" : "String_Lang_Text_Proc",
         "id" : "11"
      },
      "similar" : "Algorithm-LCSS-0.01.tar.gz String-LCSS-0.12.tar.gz",
      "DSLIP" : "bdpfl",
      "modid" : "String::lcse",
      "enteredon" : "Sun Dec  5 22:40:13 2004 GMT",
      "enteredby" : {
         "name" : "Chad Granum",
         "id" : "EXODIST"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "String::LCSS will only take 2 strings at a time, then both\n    String:LCSS and Algorithm::LCSS do not seem to offer a choice on\n    search, My approach is to first allow the developer to strip\n    characters they do not wish to count, then they can also choose to\n    fivide the string however they wish, by Word or character, or even\n    an alternative they create. As well whitespace can be ignored, It\n    can find a common string that matches a specific percentage and/or\n    length, it can also take an array of strings as apposed to 2 strings\n    only."
   },
   "meta" : {
      "message_id" : "200412052240.iB5MeGMY031744@pause.perl.org",
      "epoch" : 1102286416,
      "from" : "upload@pause.perl.org",
      "subject" : "Module submission String::lcse",
      "file" : "36848.txt",
      "type" : "module_submission"
   }
}
