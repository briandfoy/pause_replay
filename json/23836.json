{
   "data" : {
      "userid" : {
         "name" : "Philip Crow",
         "id" : "PHILCROW"
      },
      "description" : "Makes objects from colon delimited files",
      "communities" : "",
      "chapterid" : {
         "name" : "Data_Type_Utilities",
         "id" : "6"
      },
      "similar" : "DBD::CSV Class::DBI::mysql",
      "DSLIP" : "bdpOp",
      "modid" : "Class::Colon",
      "enteredon" : "Fri Oct  3 19:12:33 2003 GMT",
      "enteredby" : {
         "name" : "Philip Crow",
         "id" : "PHILCROW"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "Class::Colon converts colon delimited files into lists of objects.\n    This is similar in spirit to what Class::DBI::mysql does for mysql\n    tables. DBD::CSV could probably be used in place of Class::Colon,\n    but at the cost of extra developer time. It is based on SQL, which\n    is far richer than a colon delimited file can really use.\n\n    Simply say:\n\n    use Class::Colon SomeClass => [ qw(field names here) ] my $records\n    = SomeClass->READ_FILE(\"input.dat\");\n\n    $records is an anonymous array of objects, one for each row in\n    input.dat. Each object has three attributes: field, names, and here."
   },
   "meta" : {
      "message_id" : "200310031912.h93JCX6M012073@pause.perl.org",
      "epoch" : 1065208353,
      "from" : "upload@pause.perl.org",
      "subject" : "Module submission Class::Colon",
      "file" : "23836.txt",
      "type" : "module_submission"
   }
}
