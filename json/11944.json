{
   "data" : {
      "userid" : {
         "name" : "Jean-Michel Vilomet",
         "id" : "JMVILOMET"
      },
      "description" : "ANSI based windows management for Perl",
      "communities" : "perlmonks.org",
      "chapterid" : {
         "name" : "User_Interfaces",
         "id" : "8"
      },
      "similar" : "Term::ANSIScreen",
      "DSLIP" : "bdpOp",
      "modid" : "Term::WinConsole",
      "enteredon" : "Sun Jun  2 18:58:27 2002 GMT",
      "enteredby" : {
         "name" : "Jean-Michel Vilomet",
         "id" : "JMVILOMET"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "I chose the \"Term\" namespace because my module acts like already\n    existing modules in it, such as Term::ANSIScreen and\n    Term::ANSIColor. Like these modules, WinConsole builds ANSI\n    compliant strings you can send on a terminal and get the expected\n    color changes et cursor moves. My module improves these\n    functionalities on two points: screen management and transmitted\n    data optimisation. Screen management is done via an object-oriented\n    interface that allows you to create what I call 'miniwins' i.e.\n    rectangular areas with their own content (color, text and cursor\n    attribute). A Z-buffer management is also done to allow windows\n    overlapping. Data optimisation is done by using a back buffer for\n    all drawing operations and a diff algorithm enabling you to only\n    send to a text terminal the minimal operations required to match the\n    new screen content."
   },
   "meta" : {
      "message_id" : "200206021858.UAA16766@pause.perl.org",
      "epoch" : 1023044311,
      "from" : "upload@p11.speed-link.de",
      "subject" : "Module submission Term::WinConsole",
      "file" : "11944.txt",
      "type" : "module_submission"
   }
}
