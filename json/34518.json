{
   "data" : {
      "userid" : {
         "name" : "Gary Gurevich",
         "id" : "GGUREVICH"
      },
      "constant.pm" : "declares constants, but they are not global",
      "description" : "Use this pragma to define global constants",
      "communities" : "perlmonks.org",
      "chapterid" : {
         "name" : "Perl_Core_Modules",
         "id" : "2"
      },
      "similar" : "constant.pm: declares constants, but they are not global",
      "DSLIP" : "Rdppp",
      "modid" : "define",
      "enteredon" : "Sat Sep  4 04:03:11 2004 GMT",
      "enteredby" : {
         "name" : "Gary Gurevich",
         "id" : "GGUREVICH"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "define.pm can be thought of as doing exactly the same thing as\n    constant.pm, but with global scope. Alternatively, you can think of\n    it as a Perlish version of C's #define directive.\n\n    The original motivation for the define pragma was to get\n    compile-time constant optimizations on a global basis for debugging\n    statements. Since one usually desires to enable or disable\n    compilation of debugging statements for the entire program, the need\n    for a globally accessible constant was indicated.\n\n    define.pm can also ensure consistency of values. Unlike\n    constant.pm, you canÃ¢ÂÂt have two different values for PI in the\n    same program with define.pm.\n\n    define.pm also makes it easy to create global objects. For\n    instance, things like POEÃ¢ÂÂs kernel could be defined as a global\n    constant Ã¢ÂÂKERNELÃ¢ÂÂ, and not need to be passed explicitly as a\n    parameter to every handler.\n\n    While the obvious and well-known problems with clashing names\n    present themselves, the documentation makes it clear that modules,\n    as a rule, should not set their own constants, rather they should\n    import constants that are defined in the main body of a program."
   },
   "meta" : {
      "message_id" : "200409040403.i8443CKp023315@pause.perl.org",
      "epoch" : 1094270592,
      "from" : "upload@pause.perl.org",
      "subject" : "Module submission define",
      "file" : "34518.txt",
      "type" : "module_submission"
   }
}
