{
   "data" : {
      "userid" : {
         "name" : "Steffen Müller",
         "id" : "SMUELLER"
      },
      "description" : "Functional languages' Pattern Matching",
      "communities" : "",
      "chapterid" : {
         "name" : "Development_Support",
         "id" : "3"
      },
      "similar" : "Params::Validate",
      "DSLIP" : "Rdpfp",
      "modid" : "Sub::PatternMatching",
      "enteredon" : "Tue Mar 23 16:13:30 2004 GMT",
      "enteredby" : {
         "name" : "Steffen Müller",
         "id" : "SMUELLER"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "Sub::PatternMatching implements \"Pattern Matching,\" a programming\n    idiom often found in functional languages like Haskell or OCaml.\n    Pattern Matching refers to functions that do different things for\n    different arguments. It is often referred to as polymorphism as\n    well.\n\n    The syntax is currently a bit convoluted taking away much from the\n    benefit of readability by replacing nested if-else constructs with\n    pattern matching. This is supposed to be fixed in a later release,\n    but maintaining backward-compatibility."
   },
   "meta" : {
      "message_id" : "200403231613.i2NGDV6B022897@pause.perl.org",
      "epoch" : 1080058411,
      "from" : "upload@pause.perl.org",
      "subject" : "Module submission Sub::PatternMatching",
      "file" : "29837.txt",
      "type" : "module_submission"
   }
}
