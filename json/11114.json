{
   "data" : {
      "userid" : {
         "name" : "Marcel Grunauer",
         "id" : "MARCEL"
      },
      "description" : "Efficiently match IP addrs against IP ranges",
      "communities" : "london.pm",
      "chapterid" : {
         "name" : "Networking_Devices_IPC",
         "id" : "5"
      },
      "similar" : "Net::Netmask",
      "DSLIP" : "Rdpfp",
      "modid" : "Net::IP::Match",
      "enteredon" : "Wed Apr 10 21:52:03 2002 GMT",
      "enteredby" : {
         "name" : "Marcel Grunauer",
         "id" : "MARCEL"
      },
      "PS" : "The following links are only valid for module list maintainers:",
      "rationale" : "This module provides you with an efficient way to match an IP\n    address against one or more IP ranges. Speed is the key issue here.\n    If you have to check several million IP addresses, as can happen\n    with big logs, every millisecond counts. If your way to check an\n    address involves a method call and some temporary variables, a lot\n    of time is burnt. In such a time-critical loop you don't want to\n    make subroutine calls at all, as they involve stack operations.\n\n    So the approach we take here is that of a macro, preprocessed\n    through Perl's source filter mechanism."
   },
   "meta" : {
      "message_id" : "200204102152.XAA09943@pause.perl.org",
      "epoch" : 1018475523,
      "from" : "upload@p11.speed-link.de",
      "subject" : "Module submission Net::IP::Match",
      "file" : "11114.txt",
      "type" : "module_submission"
   }
}
